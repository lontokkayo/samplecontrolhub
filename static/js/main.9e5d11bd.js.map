{"version":3,"file":"static/js/main.9e5d11bd.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdminComponents/ParseCSV.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/QrCodeScanner/QrCodeScanner.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Spinner,\n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition,\n  Item,\n  Label\n} from \"native-base\";\nimport { useNavigation } from '@react-navigation/core';\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigate } from 'react-router-dom';\n\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\n\n\n\n\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [emailCredential, setEmailCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = React.useState(false);\n  const [errorShow, setErrorShow] = React.useState(false);\n  const [resetShow, setResetShow] = React.useState(false);\n  const [errorTitle, setErrorTitle] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  // const navigation = useNavigation();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        // navigation.replace(\"Checkpoint\")\n        navigate('/Checkpoint');\n\n      }\n\n    })\n\n    return unsubscribe\n  }, [])\n\n\n  const ErrorLoginShow = () => {\n    return <Box w=\"100%\" alignItems=\"center\">\n      <PresenceTransition visible={errorShow} initial={{\n        opacity: 0,\n        scale: 0,\n      }} animate={{\n        opacity: 1,\n        scale: 1,\n        transition: {\n          duration: 200\n        }\n      }} >\n        {/* <Collapse isOpen={errorShow}> */}\n        <Alert maxW=\"400\" status=\"error\">\n          <VStack space={1} flexShrink={1} w=\"100%\">\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\n                <Alert.Icon />\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\n                  color: \"coolGray.800\"\n                }}>\n                  {errorTitle}\n                </Text>\n              </HStack>\n            </HStack>\n            <Box pl=\"6\" _dark={{\n              _text: {\n                color: \"coolGray.600\"\n              }\n            }}>\n              {errorMessage}\n            </Box>\n          </VStack>\n        </Alert>\n        {/* </Collapse> */}\n      </PresenceTransition>\n\n    </Box>;\n\n  };\n\n  const updateFieldData = async (documentId, fieldName, newValue) => {\n    const userRef = doc(db, 'accounts', documentId);\n\n    try {\n      await updateDoc(userRef, {\n        [fieldName]: newValue\n      });\n    } catch (error) {\n      console.error('Error updating field data:', error);\n    }\n  };\n\n\n  const handleSignIn = () => {\n    setIsLoading(true);\n    setIsDisabled(true);\n    setTimeout(() => {\n      // Reset loading and disabled state\n      setIsLoading(false);\n      setIsDisabled(false);\n    }, 2000); // Replace with your actual async operation\n    setErrorShow(false);\n    signInWithEmailAndPassword(auth, email.trim(), password)\n      .then((re) => {\n        const documentId = email;\n        const fieldName = 'pass';\n        const newValue = password;\n\n        updateFieldData(documentId, fieldName, newValue);\n        // navigation.navigate('Checkpoint');\n        navigate('/Checkpoint');\n\n\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n        setIsLoading(false);\n        setIsDisabled(false);\n        setErrorShow(true);\n        if (errorCode === 'auth/user-not-found') {\n          console.log('Please use a valid email or check for misspellings.☹️');\n          setErrorTitle('Email do not exist!');\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\n          <ErrorLoginShow />\n        } else if (errorCode === 'auth/wrong-password') {\n          console.log('Password is incorrect, please try again. ☹️');\n          setErrorTitle('Incorrect password');\n          setErrorMessage('Password is incorrect, please try again. ☹️');\n          <ErrorLoginShow />\n        } else if (errorCode === 'auth/missing-password') {\n          console.log('Please enter a password. ☹️');\n          setErrorTitle('Password is empty!');\n          setErrorMessage('Please enter a password. ☹️');\n          <ErrorLoginShow />\n        }\n        else if (errorCode === 'auth/invalid-email') {\n          console.log('Email is invalid. ☹️');\n          setErrorTitle('Invalid email!');\n          setErrorMessage('Please enter a valid email. ☹️');\n          <ErrorLoginShow />\n        }\n        else if (errorCode === 'auth/user-disabled') {\n          console.log('User is disabled. ☹️');\n          setErrorTitle('Account is disabled!');\n          setErrorMessage('Please contact the administrator. ☹️');\n          <ErrorLoginShow />\n        }\n      })\n  };\n\n  const handleChange = text => setEmail(text);\n\n\n\n  useEffect(() => {\n    if (email.length > 1) {\n      setErrorShow(false)\n    }\n  }, [email])\n\n  const handleEmailOnChangeText = (text) => {\n    setEmail(text)\n    setErrorShow(false)\n  };\n\n  const handlePasswordOnChangeText = text => setPassword(text);\n\n  useEffect(() => {\n    if (password.length > 1) {\n      setErrorShow(false)\n    }\n  }, [password])\n\n\n  // const handleReset = () => {\n  //   navigation.navigate('ResetPassword');\n  // };\n  return (\n    <NativeBaseProvider>\n\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\n        <ErrorLoginShow />\n        <Center flex={1}>\n          <Center px=\"3\">\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\n              <Image source={{\n                uri: logo\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\n            </Box>\n            {/* <LoginForm /> */}\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\n\n              <Input w={{\n                base: \"90%\",\n                md: \"90%\",\n                sm: \"90%\",\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\n              <Input w={{\n                base: \"90%\",\n                md: \"90%\",\n                sm: \"90%\",\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\n              <HStack space={1} justifyContent=\"center\">\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\n                  base: 130,\n                  md: 130,\n                  sm: 130,\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\n                  base: 130,\n                  md: 130,\n                  sm: 130,\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\n\n              </HStack>\n\n            </Stack>\n\n          </Center>\n\n\n        </Center>\n\n\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n});\n","import React, { lazy, Suspense } from 'react';\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\n// Create a loading component to display while the screen is loading\nconst Loading = () => (\n\n\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\n\n    <Center flex={1}>\n      <Center px=\"3\">\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\n          <Image source={{\n            uri: logo\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\n        </Box>\n        {/* <LoginForm /> */}\n\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\n          <HStack space={1} justifyContent=\"center\">\n            <Spinner color='white' size='lg' />\n          </HStack>\n        </Stack>\n\n      </Center>\n\n\n    </Center>\n\n\n  </Box>\n);\n\nconst LazyScreen = (props) => {\n  // Dynamically import the component using React.lazy\n  const LazyComponent = lazy(props.importFunc);\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default LazyScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Button, View, Text, FlatList } from 'react-native';\nimport Papa from 'papaparse';\nimport Encoding from 'encoding-japanese';\n\n\n\n\nconst data = [\n    {\n        \"仕入No.\": 2024030011,\n        \"排気量\": 1400,\n    },\n    // {\n    //     \"仕入No.\": 2024030011,\n    //     \"状況\": \"在庫\",\n    //     \"車名\": \"ベルタ\",\n    //     \"グレード\": \"1.3G 1.3G\",\n    //     \"色\": \"Silver\",\n    //     \"型式\": \"DBA-SCP92\",\n    //     \"年式\": \"H18/09\",\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\n    //     \"排気量\": 1300,\n    //     \"ミッション\": null,\n    //     \"エンジン区分\": \"ガソリン\",\n    //     \"車台番号\": \"SCP92-1022093\",\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Power Steering・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Alloy Wheels・Power Door Locks・Power Mirrors・No accidents・Non-smoker\",\n    //     \"車輌用途\": null,\n    //     \"車検\": null,\n    //     \"走行距離\": 57817,\n    //     \"長さ\": 4300,\n    //     \"幅\": 1690,\n    //     \"高さ \": 1460,\n    //     \"仕入日\": \"04/03/2024\",\n    //     \"仕入区分\": \"ＡＡ\",\n    //     \"仕入先\": \"TAA兵庫\",\n    //     \"仕入担当\": \"北村祐亮\",\n    //     \"仕入店舗\": \"書類未入庫\",\n    //     \"仕入価格(税込)\": 235400,\n    //     \"仕入価格(税抜)\": 214000,\n    //     \"経費計\": 15950,\n    //     \"加修費計\": 0,\n    //     \"輸出検査料\": 0,\n    //     \"課税仕入額\": 228500,\n    //     \"消費税額\": 22850, \n    //     \"仕入合計金額\": 251350,\n    //     \"自動車税\": 0,\n    //     \"リサイクル料\": 10280,\n    //     \"展示場所\": \"輸出(神戸）\",\n    //     \"販売担当\": \"y.kitamura\",\n    // },\n    // {\n    //     \"仕入No.\": 2024030019,\n    //     \"状況\": \"在庫\",\n    //     \"車名\": \"カローラアクシオ\",\n    //     \"グレード\": \"G 1.5 G\",\n    //     \"色\": \"Gold\",\n    //     \"型式\": \"DBA-NZE141\",\n    //     \"年式\": \"H23/07\",\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\n    //     \"排気量\": 1500,\n    //     \"ミッション\": null,\n    //     \"エンジン区分\": \"ガソリン\",\n    //     \"車台番号\": \"NZE141-3003061\",\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Navigation System・Power Steering・Remote Keyless Entry・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Power Door Locks・Power Mirrors・No accidents・One owner・Non-smoker\", \"車輌用途\": null, \"車検\": null, \"走行距離\": 9851, \"長さ\": 4410, \"幅\": 1695, \"高さ \": 1460,\n    //     \"仕入日\": \"04/03/2024\",\n    //     \"仕入区分\": \"ＡＡ\",\n    //     \"仕入先\": \"JU東京\",\n    //     \"仕入担当\": \"森川\",\n    //     \"仕入店舗\": \"書類未入庫\",\n    //     \"仕入価格(税込)\": 396000,\n    //     \"仕入価格(税抜)\": 360000,\n    //     \"経費計\": 19635,\n    //     \"加修費計\": 0,\n    //     \"輸出検査料\": 0,\n    //     \"課税仕入額\": 377850,\n    //     \"消費税額\": 37785,\n    //     \"仕入合計金額\": 415635,\n    //     \"自動車税\": 0,\n    //     \"リサイクル料\": 10620,\n    //     \"展示場所\": \"輸出（横浜）\",\n    //     \"販売担当\": \"y.kitamura\"\n    // }\n]\n\n\n\n\nconst ParseCSV = () => {\n    const [csvData, setCsvData] = useState([]);\n    const [data, setData] = useState([]);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (!file) {\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const codes = new Uint8Array(e.target.result);\n            // Convert from SHIFT_JIS to UNICODE\n            const unicodeString = Encoding.codeToString(Encoding.convert(codes, 'UNICODE', 'SJIS'));\n            // Parse CSV using PapaParse\n            Papa.parse(unicodeString, {\n                header: true,\n                dynamicTyping: true,\n                complete: async function (results) {\n                    console.log('Parsed results:', results);\n                    setCsvData(results.data);\n\n                    // Iterate over each row and add to the server\n                    results.data.forEach(async (row) => {\n                        try {\n                            const documentId = row['仕入No.']; // Get the value of 仕入No. field\n                            const response = await fetch('http://192.168.24.126:7000/addVehicleData', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    'username': 'rmj-marc',\n                                    'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\n                                },\n                                body: JSON.stringify({\n                                    documentId: documentId,\n                                    documentData: row,\n                                }) // Include documentId in the request body\n                            });\n                            if (response.ok) {\n                                console.log('Data added successfully:', row);\n                            } else {\n                                console.error('Failed to add data:', response.status);\n                            }\n                        } catch (error) {\n                            console.error('Error adding data:', error);\n                        }\n                    });\n\n                }\n            });\n        };\n        reader.readAsArrayBuffer(file);\n    };\n\n    const convertToFirestoreDocument = (row) => {\n        // Define the mapping of CSV keys to Firestore keys\n        const mapping = {\n            '仕入No.': 'documentId',\n            '状況': 'status',\n            '車名': 'carName',\n            'グレード': 'grade',\n            '色': 'color',\n            '型式': 'model',\n            '年式': 'year',\n            'ボディ形状': 'bodyShape',\n            '排気量': 'displacement',\n            'ミッション': 'transmission',\n            'エンジン区分': 'engineType',\n            '車台番号': 'chassisNumber',\n            '装備': 'equipment',\n            '車輌用途': 'vehiclePurpose',\n            '車検': 'inspection',\n            '走行距離': 'mileage',\n            '長さ': 'length',\n            '幅': 'width',\n            '高さ ': 'height',\n            '仕入日': 'purchaseDate',\n            '仕入区分': 'purchaseCategory',\n            '仕入先': 'purchaseSource',\n            '仕入担当': 'purchaseContact',\n            '仕入店舗': 'purchaseStore',\n            '仕入価格(税込)': 'purchasePriceInclusiveTax',\n            '仕入価格(税抜)': 'purchasePriceExclusiveTax',\n            '経費計': 'expenseTotal',\n            '加修費計': 'repairCostTotal',\n            '輸出検査料': 'exportInspectionFee',\n            '課税仕入額': 'taxablePurchaseAmount',\n            '消費税額': 'consumptionTaxAmount',\n            '仕入合計金額': 'totalPurchaseAmount',\n            '自動車税': 'automobileTax',\n            'リサイクル料': 'recycleFee',\n            '展示場所': 'exhibitionPlace',\n            '販売担当': 'salesContact'\n        };\n        // Create the Firestore document object\n        const firestoreDocument = {};\n        for (const [csvKey, firestoreKey] of Object.entries(mapping)) {\n            if (row[csvKey]) {\n                // Special handling for numeric values\n                if (csvKey === '仕入No.') {\n                    firestoreDocument[firestoreKey] = parseInt(row[csvKey]);\n                } else if (csvKey === '車検') {\n                    // Handle 'null' values for Firestore\n                    firestoreDocument[firestoreKey] = row[csvKey] === 'null' ? null : row[csvKey];\n                } else {\n                    firestoreDocument[firestoreKey] = row[csvKey];\n                }\n            }\n        }\n\n        return firestoreDocument;\n    };\n\n    const handlePressUpdate = async () => {\n\n        data.forEach(async (row) => {\n            try {\n                const documentId = row['仕入No.']; // Get the value of 仕入No. field\n                const response = await fetch('http://192.168.24.126:7000/updateVehicleData', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'username': 'rmj-marc',\n                        'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\n                    },\n                    body: JSON.stringify({\n                        documentId: documentId,\n                        documentData: row,\n                    }) // Include documentId in the request body\n                });\n                if (response.ok) {\n                    console.log('Data updated successfully:', row);\n                } else {\n                    console.error('Failed to update data:', response.status);\n                }\n            } catch (error) {\n                console.error('Error updating data:', error);\n            }\n        });\n\n    }\n\n\n    // useEffect(async () => {\n    //     try {\n    //         await fetch('http://localhost:7000');\n    //         // await fetch('http://rmj-api.duckdns.org:7000');\n    //         // const jsonData = await response.json();\n    //         // setData(jsonData);\n    //     } catch (error) {\n    //         console.error('Error fetching data: ', error);\n    //     }\n    // }, []);\n\n\n    const sendData = async () => {\n        // const response = await fetch('http://rmj-api.duckdns.org:7000', {\n        const response = await fetch('http://localhost:7000/', {\n            method: 'POST',\n            headers: {\n                // 'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                // \"tokenkey\": \"0iXRkSCDfNwO\",\n                action_cd: \"update\",\n                stock_id: \"179924\",\n                status: \"Sold\",\n                reference_no: \"Y2023080140A-21\",\n                m_as_maker_id: \"59\",\n                m_as_model_id: \"1343\",\n                grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\n                model_code: \"GH-UF16\",\n                frame_number: \"WBAUF12060PZ31920\",\n                model_number: \"15016\",\n                devision_number: \"0001\",\n                registration_year: \"2006\",\n                registration_month: \"08\",\n                manufacture_year: \"\",\n                manufacture_month: \"\",\n                m_as_bodytype_id: \"5\",\n                m_bodystyle_sub_id: \"\",\n                length: \"4240\",\n                width: \"1750\",\n                height: \"1430\",\n                displacement: \"1600\",\n                mileage_odometer_cd: \"0\",\n                mileage: \"73255\",\n                m_as_fueltype_id: \"1\",\n                m_as_transmission_id: \"1\",\n                m_as_steering_id: \"2\",\n                m_as_drivetype_id: \"2\",\n                number_of_passengers: \"5\",\n                door_cnt: \"5\",\n                exterior_color_cd: \"22\",\n                interior_color_cd: \"\",\n                option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\n                condition_cd: \"0\",\n                accident_flg: \"0\",\n                sales_person_charge_id: \"42\",\n                storage_yard_cd: \"4\",\n                site_sales_pr_text: \"\",\n                fob_ask_flg: \"0\",\n                fob_regular_price: \"120000\",\n                fob_price: \"120000\",\n                display_site_cds: \"[RMJ,RMZ]\",\n                tcv_flg: \"1\",\n                m_tcv_maker_id: \"23\",\n                m_tcv_model_id: \"5355\",\n                memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\n                stock_no: \"2023080140\",\n                stock_price: \"60000\",\n                car_condition_file: \"179924-vehicle_state.jpg\"\n            })\n        });\n\n        if (response.ok) {\n            let responseData;\n            responseData = await response.json();\n            console.log('Success:', responseData);\n\n        } else {\n            console.log('HTTP-Error:', response.status);\n            try {\n                const errorResponse = await response.text();\n                console.log('Error response:', errorResponse);\n            } catch (error) {\n                console.log('Error reading error response:', error);\n            }\n        }\n    };\n\n\n\n    const YOUR_SERVER_ENDPOINT = 'http://rmj-api.duckdns.org:7000';\n\n    const callApiR02 = async (json_data, msg, exec_time) => {\n        try {\n            const data_post = JSON.parse(json_data); // Assuming json_data is a valid JSON string\n\n            const response = await fetch(YOUR_SERVER_ENDPOINT, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: json_data, // sending raw JSON string\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json(); // Assuming the server responds with JSON\n\n            // Check if 'ret_text' is undefined before calling replace()\n            let ret_text = data.ret_text ? data.ret_text.replace(/\\n/g, '\\n') : 'No return text provided';\n            let ret = data.ret === true ? 'Success\\n' : 'Error\\n';\n\n            return ret + ret_text;\n\n        } catch (error) {\n            console.error('API call failed:', error);\n            return 'Error: ' + error.message; // In a real app, you might want to update state with this message\n        }\n    };\n\n    const jsonData = JSON.stringify({\n        // \"tokenkey\": \"0iXRkSCDfNwO\",\n        action_cd: \"update\",\n        stock_id: \"179924\",\n        status: \"Sold\",\n        reference_no: \"Y2023080140A-21\",\n        m_as_maker_id: \"59\",\n        m_as_model_id: \"1343\",\n        grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\n        model_code: \"GH-UF16\",\n        frame_number: \"WBAUF12060PZ31920\",\n        model_number: \"15016\",\n        devision_number: \"0001\",\n        registration_year: \"2006\",\n        registration_month: \"08\",\n        manufacture_year: \"\",\n        manufacture_month: \"\",\n        m_as_bodytype_id: \"5\",\n        m_bodystyle_sub_id: \"\",\n        length: \"4240\",\n        width: \"1750\",\n        height: \"1430\",\n        displacement: \"1600\",\n        mileage_odometer_cd: \"0\",\n        mileage: \"73255\",\n        m_as_fueltype_id: \"1\",\n        m_as_transmission_id: \"1\",\n        m_as_steering_id: \"2\",\n        m_as_drivetype_id: \"2\",\n        number_of_passengers: \"5\",\n        door_cnt: \"5\",\n        exterior_color_cd: \"22\",\n        interior_color_cd: \"\",\n        option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\n        condition_cd: \"0\",\n        accident_flg: \"0\",\n        sales_person_charge_id: \"42\",\n        storage_yard_cd: \"4\",\n        site_sales_pr_text: \"\",\n        fob_ask_flg: \"0\",\n        fob_regular_price: \"120000\",\n        fob_price: \"120000\",\n        display_site_cds: \"[RMJ,RMZ]\",\n        tcv_flg: \"1\",\n        m_tcv_maker_id: \"23\",\n        m_tcv_model_id: \"5355\",\n        memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\n        stock_no: \"2023080140\",\n        stock_price: \"60000\",\n        car_condition_file: \"179924-vehicle_state.jpg\"\n    })\n\n    const handleCallApi = async () => {\n        const result = await callApiR02(jsonData, '...', '...');\n    }\n\n    const appendDataToCSV = async () => {\n        try {\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-sales-info', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: 'jackall',\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\n                    data: { id: '2023090267', stock_system_id: '177521' }, // Adjust based on your CSV structure\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Success', 'Data appended successfully to CSV.');\n            } else {\n                console.log('Error', 'Failed to append data to CSV.');\n            }\n        } catch (error) {\n            console.error(error);\n            console.log('Error', 'An error occurred.');\n        }\n    };\n\n\n    const appendClientsDataToCSV = async () => {\n        try {\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-clients', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: 'jackall',\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\n                    data: { id: '24000001', client_name: 'Marc Van' }, // Adjust based on your CSV structure\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Success', 'Data appended successfully to CSV.');\n            } else {\n                console.log('Error', 'Failed to append data to CSV.');\n            }\n        } catch (error) {\n            console.error(error);\n            console.log('Error', 'An error occurred.');\n        }\n    };\n    const handleClearCsv = async () => {\n        try {\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/reset-csv-sales-info', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: 'jackall',\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c='\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Success', 'CSV contents have been cleared.');\n            } else {\n                console.log('Error', 'Failed to clear CSV contents.');\n            }\n        } catch (error) {\n            console.error(error);\n            console.log('Error', 'An error occurred.');\n        }\n    };\n\n    const handleClearClientsCsv = async () => {\n        try {\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/reset-csv-clients', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: 'jackall',\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c='\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Success', 'CSV contents have been cleared.');\n            } else {\n                console.log('Error', 'Failed to clear CSV contents.');\n            }\n        } catch (error) {\n            console.error(error);\n            console.log('Error', 'An error occurred.');\n        }\n    };\n\n\n    return (\n\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={handleFileChange}\n                style={{ marginBottom: 20 }}\n            />\n\n            <View>\n                {csvData.map((row, index) => (\n                    <Text key={index}>\n                        {JSON.stringify(row)}\n                    </Text>\n                ))}\n            </View>\n\n            <Button\n                style={{ width: 100 }}\n                // onPress={handlePressUpdate}\n                onPress={sendData}\n            // onPress={handleCallApi}\n            >\n\n            </Button>\n\n            <Button title=\"Append Data to CSV\" onPress={appendDataToCSV} />\n\n            <Button title=\"Append Clients Data to CSV\" onPress={appendClientsDataToCSV} />\n\n\n\n            <Button title=\"Reset CSV\" onPress={handleClearCsv}/>\n\n            <Button title=\"Reset Clients CSV\" onPress={handleClearClientsCsv}/>\n\n            <View>\n                <FlatList\n                    data={data}\n                    keyExtractor={(item, index) => index.toString()}\n                    renderItem={({ item }) => (\n                        <View>\n                            <Text>{item.columnName}</Text> {/* Replace columnName with actual data column name */}\n                        </View>\n                    )}\n                />\n            </View>\n        </View>\n\n\n    );\n};\n\nexport default ParseCSV;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  PresenceTransition,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  Container,\n  Header,\n  Left,\n  Body,\n  Title,\n  Content,\n  Text,\n  Heading,\n  Flex,\n  VStack,\n  ScrollView,\n  SectionList,\n  useBreakpointValue,\n  Spinner,\n  Modal,\n  Divider\n} from \"native-base\";\nimport {\n  FontAwesome,\n  Entypo,\n  MaterialIcons,\n  Ionicons,\n  Fontisto,\n  EvilIcons,\n  AntDesign,\n  MaterialCommunityIcons,\n  Feather,\n  FontAwesome5Brands\n} from 'react-native-vector-icons';\nimport 'react-native-gesture-handler';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\nimport { useNavigation } from '@react-navigation/core'\nimport './style.css';\nimport { debounce } from 'lodash';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\n\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\n\nimport AddAccount from './DevAdminComponents/AddAccount';\nimport Logs from './DevAdminComponents/Logs';\nimport AccountList from './DevAdminComponents/AccountList';\nimport AddVehicle from './DevAdminComponents/AddVehicle';\nimport VehicleList from './DevAdminComponents/VehicleList';\nimport Freight from './DevAdminComponents/Freight';\nimport ChatMessages from './DevAdminComponents/ChatMessages';\nimport ParseCSV from './DevAdminComponents/ParseCSV';\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst StackNavigator = createNativeStackNavigator();\n\n\nconst { width, height } = Dimensions.get('window');\nconst windowHeight = Dimensions.get('window').height;\n\nconst firestore = getFirestore();\nconst getEmailOfCurrentUser = () => {\n  const user = auth.currentUser;\n  if (user) {\n    const email = user.email;\n    return email;\n  } else {\n    console.log('No user is currently authenticated');\n    return null;\n  }\n};\n\n// const Drawer = createDrawerNavigator();\n\n\nexport default function Top({ navigation }) {\n  const [drawerVisible, setDrawerVisible] = useState(false);\n  const [email, setEmail] = useState('');\n  const [type, setType] = useState('');\n  const loginAccountType = useSelector((state) => state.loginAccountType);\n  const Drawer = createDrawerNavigator();\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const ChatMessagesComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\n  );\n\n  const LogsComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\n  );\n\n  const FreightComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\n  );\n\n  const VehicleListComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\n  );\n\n  const AccountListComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\n  );\n\n  const AddVehicleComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\n  );\n\n  const AddAccountComponent = () => (\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\n  );\n\n  // useEffect(() => {\n  //   const unsubscribe = navigation.addListener('state', () => {\n  //     // Close the drawer on navigation change\n  //     setDrawerVisible(false);\n  //   });\n\n  //   return unsubscribe;\n  // }, [navigation]);\n\n  useEffect(() => {\n    // Initially hide the drawer\n    setDrawerVisible(false);\n  }, []);\n\n\n  const handleDocumentChange = (snapshot) => {\n    if (snapshot.exists()) {\n      const data = snapshot.data();\n      const isActive = data.active;\n\n      if (!isActive) {\n        signOut(auth)\n          .then(() => {\n            // navigation.navigate('Login');\n            navigate('/Login');\n          })\n          .catch((error) => {\n            console.error('Error signing out:', error);\n          });\n      }\n    } else {\n      signOut(auth)\n        .then(() => {\n          // navigation.navigate('Login');\n          navigate('/Login');\n        })\n        .catch((error) => {\n          console.error('Error signing out:', error);\n        });\n    }\n  };\n\n  const subscribeToFieldChange = () => {\n    const userId = auth.currentUser?.email;\n    if (userId) {\n      const userRef = doc(firestore, 'accounts', userId);\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n      return unsubscribe;\n    } else {\n      // Return a no-op function if there's no user\n      return () => {\n        navigate(\"/login\")\n      };\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = subscribeToFieldChange();\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const getRandomDelay = () => {\n    const minDelay = 100; // Minimum delay in milliseconds\n    const maxDelay = 200; // Maximum delay in milliseconds\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\n  };\n\n  useEffect(() => {\n    const currentUserEmail = getEmailOfCurrentUser();\n    if (currentUserEmail) {\n      getFieldValueByEmail(currentUserEmail);\n      setEmail(currentUserEmail)\n    }\n  }, []);\n\n\n  const getFieldValueByEmail = async (email) => {\n    try {\n      const accountDocRef = doc(firestore, 'accounts', email);\n\n      onSnapshot(accountDocRef, (docSnapshot) => {\n        if (docSnapshot.exists()) {\n          const data = docSnapshot.data();\n          const fieldType = data.type;\n          const fieldName = data.name;\n\n          if (data.active === true) {\n            setType(fieldType);\n            dispatch(setLoginAccountType(fieldType));\n            // console.log('Account Type: ', fieldType);\n            dispatch(setLoginName(fieldName));\n            const delay = getRandomDelay();\n            // setTimeout(() => {\n            // navigation.replace(fieldType);\n            // navigate(`/top`)\n            // }, delay);\n          }\n          else {\n            signOut(auth)\n              .then(() => {\n                // navigation.navigate('Login');\n                navigate('/Login');\n              })\n              .catch((error) => {\n                console.error('Error signing out:', error);\n              });\n          }\n        } else {\n          // Handle the case where the document does not exist\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching field value:', error);\n    }\n\n  };\n\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\n  };\n\n\n  const style = document.createElement('style');\n  style.textContent = `\n  body, html {\n    overscroll-behavior-x: none;\n    overscroll-behavior-y: none;\n  }\n`;\n\n  document.head.append(style);\n\n  return (\n\n\n    // <Drawer.Navigator\n    //   // useLegacyImplementation\n    //   screenOptions={{\n    //     headerShown: false,\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\n    //     drawerContentOptions: {\n    //       activeTintColor: '#7B9CFF',\n    //       inactiveTintColor: '#7B9CFF',\n    //       activeLabelStyle: { color: '#7B9CFF' },\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\n    //     },\n    //   }}\n    // >\n\n    //   <Drawer.Screen\n    //     name=\"CHAT MESSAGES\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n    // <Drawer.Screen\n    //   name=\"LOGS\"\n    //   component={() => (\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\n    //   )}\n    //   options={{ unmountOnBlur: true }}\n    // />\n\n    //   <Drawer.Screen\n    //     name=\"FREIGHT\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n    //   <Drawer.Screen\n    //     name=\"VEHICLE LIST\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n    //   <Drawer.Screen\n    //     name=\"ACCOUNT LIST\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n\n    //   <Drawer.Screen\n    //     name=\"ADD NEW VEHICLE\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n    //   <Drawer.Screen\n    //     name=\"ADD C-HUB ACCOUNT\"\n    //     component={() => (\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\n    //     )}\n    //     options={{ unmountOnBlur: true }}\n    //   />\n    // </Drawer.Navigator>\n\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\n\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\n\n    // </StackNavigator.Navigator>\n    <NativeBaseProvider>\n      <Routes>\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\n        <Route path=\"parse-csv\" element={<ParseCSV />} />\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\n        <Route path=\"freight\" element={<FreightComponent />} />\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\n        <Route path=\"logs\" element={<LogsComponent />} />\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\n        <Route path=\"account-list\" element={<AccountListComponent />} />\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\n        {/* Add additional nested routes as needed */}\n      </Routes>\n    </NativeBaseProvider>\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\n    //   headerShown: false,\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\n    //   drawerContentOptions: {\n    //     activeTintColor: 'white',\n    //     inactiveTintColor: 'white',\n    //     activeLabelStyle: { color: 'white' },\n    //     inactiveLabelStyle: { color: 'white' }\n    //   }\n    // }} >  \n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\n\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\n\n\n    // </Drawer.Navigator>\n\n\n    //  <NativeBaseProvider>\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\n\n    //       </StackNavigator.Navigator>\n\n    //     </NativeBaseProvider>\n\n  );\n}\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Spinner,\n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition\n} from \"native-base\";\nimport { useNavigation } from '@react-navigation/core'\nimport { useNavigate } from 'react-router-dom';\n\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  setLoginAccountType,\n  // setModelData,\n  setLoginEmail,\n  setLoginName\n} from './DevAdminComponents/redux/store'\n\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\nconst firestore = getFirestore();\n\nconst getEmailOfCurrentUser = () => {\n  const user = auth.currentUser;\n  if (user) {\n    const email = user.email;\n    return email;\n  } else {\n    console.log('No user is currently authenticated');\n    return null;\n  }\n};\n\n\n\n\n\n\nexport default function Checkpoint() {\n  const dispatch = useDispatch();\n  const loginEmail = useSelector((state) => state.loginEmail);\n  const loginName = useSelector((state) => state.loginName);\n  const loginAccountType = useSelector((state) => state.loginAccountType);\n\n  const [email, setEmail] = useState('');\n  const [type, setType] = useState('');\n  const [emailCredential, setEmailCredential] = React.useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = React.useState(false);\n  const [errorShow, setErrorShow] = React.useState(false);\n  const [errorTitle, setErrorTitle] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\n\n  // const navigation = useNavigation()\n  const navigate = useNavigate();\n\n\n  // const handleDocumentChange = (snapshot) => {\n  //   if (!snapshot.exists()) {\n  //     signOut(auth)\n  //       .then(() => {\n  //         navigation.navigate('Login');\n  //       })\n  //       .catch((error) => {\n  //         console.error('Error signing out:', error);\n  //       });\n  //   }\n  // };\n\n\n  const handleDocumentChange = (snapshot) => {\n    if (snapshot.exists()) {\n      const data = snapshot.data();\n      const isActive = data.active;\n\n      if (!isActive) {\n        signOut(auth)\n          .then(() => {\n            // navigation.navigate('Login');\n            navigate('/Login');\n          })\n          .catch((error) => {\n            console.error('Error signing out:', error);\n          });\n      }\n    } else {\n      signOut(auth)\n        .then(() => {\n          // navigation.navigate('Login');\n          navigate('/Login');\n        })\n        .catch((error) => {\n          console.error('Error signing out:', error);\n        });\n    }\n  };\n\n  const subscribeToFieldChange = () => {\n    const userId = auth.currentUser?.email;\n    if (userId) {\n      const userRef = doc(firestore, 'accounts', userId);\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n      return unsubscribe;\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = subscribeToFieldChange();\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const getRandomDelay = () => {\n    const minDelay = 100; // Minimum delay in milliseconds\n    const maxDelay = 200; // Maximum delay in milliseconds\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\n  };\n\n  useEffect(() => {\n    const currentUserEmail = getEmailOfCurrentUser();\n    if (currentUserEmail) {\n      getFieldValueByEmail(currentUserEmail);\n      setEmail(currentUserEmail)\n    }\n  }, []);\n\n\n  const getFieldValueByEmail = async (email) => {\n    try {\n      const accountDocRef = doc(firestore, 'accounts', email);\n\n      // if (loginAccountType !== '') {\n      const delay = getRandomDelay();\n      setTimeout(() => {\n        // navigation.replace(fieldType);\n        navigate(`/top`)\n      }, delay);\n      // navigate(`/top`)\n      // }\n      // else {\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\n      //     if (docSnapshot.exists()) {\n      //       const data = docSnapshot.data();\n      //       const fieldType = data.type;\n      //       const fieldName = data.name;\n\n      //       if (data.active === true) {\n      //         setType(fieldType);\n      //         dispatch(setLoginAccountType(fieldType));\n      //         dispatch(setLoginName(fieldName));\n      //         const delay = getRandomDelay();\n      //         // setTimeout(() => {\n      //         // navigation.replace(fieldType);\n      //         navigate(`/top`)\n      //         // }, delay);\n      //       }\n      //       else {\n      //         signOut(auth)\n      //           .then(() => {\n      //             // navigation.navigate('Login');\n      //             navigate('/Login');\n      //           })\n      //           .catch((error) => {\n      //             console.error('Error signing out:', error);\n      //           });\n      //       }\n      //     } else {\n      //       // Handle the case where the document does not exist\n      //     }\n      //   });\n      // }\n\n    } catch (error) {\n      console.error('Error fetching field value:', error);\n    }\n\n  };\n\n  // const getFieldValueByEmail = (email, navigation) => {\n\n\n  //   try {\n  //     const accountDocRef = doc(firestore, 'accounts', email);\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\n  //       if (accountDocSnapshot.exists()) {\n  //         const data = accountDocSnapshot.data();\n  //         const fieldType = data.type;\n  //         const fieldName = data.name;\n\n  //         if (data.active === true) {\n  //           dispatch(setLoginName(fieldName));\n  //           const delay = getRandomDelay();\n  //           setTimeout(() => {\n  //             navigation.replace(fieldType);\n  //           }, delay);\n  //         } else {\n  //           signOut(auth)\n  //             .then(() => {\n  //               navigation.navigate('Login');\n  //             })\n  //             .catch((error) => {\n  //               console.error('Error signing out:', error);\n  //             });\n  //         }\n  //       } else {\n  //         console.log('Document does not exist');\n  //       }\n  //     });\n\n  //     // Return the unsubscribe function to stop listening when necessary\n  //     return unsubscribe;\n  //   } catch (error) {\n  //     console.error('Error fetching field value:', error);\n  //   }\n  // };\n\n\n\n\n  return (\n\n    <NativeBaseProvider>\n\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\n\n        <Center flex={1}>\n          <Center px=\"3\">\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\n              <Image source={{\n                uri: logo\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\n            </Box>\n            {/* <LoginForm /> */}\n\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\n              <HStack space={1} justifyContent=\"center\">\n                <Spinner color='white' size='lg' />\n              </HStack>\n            </Stack>\n\n          </Center>\n\n\n        </Center>\n\n\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport { \n  Input,\n  Icon, \n  Stack, \n  Pressable, \n  Center, \n  NativeBaseProvider, \n  Button, \n  Box, \n  HStack, \n  Image, \n  VStack, \n  Alert, \n  IconButton, \n  CloseIcon, \n  Spinner, \n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition \n} from \"native-base\";\nimport { useNavigation } from '@react-navigation/core'\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\n\n\n\n\n\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [emailCredential, setEmailCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = React.useState(false);\n  const [errorShow, setErrorShow] = React.useState(false);\n  const [resetShow, setResetShow] = React.useState(false);\n  const [errorTitle, setErrorTitle] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.replace(\"Checkpoint\")\n      }\n      \n    })\n\n    return unsubscribe\n  }, []) \n\n\n  const ErrorLoginShow = () => {\n    return <Box w=\"100%\" alignItems=\"center\">\n            <PresenceTransition visible={errorShow} initial={{\n            opacity: 0,\n            scale: 0,\n          }} animate={{\n            opacity: 1,\n            scale: 1,\n            transition: {\n              duration: 200\n            }\n          }} >\n        {/* <Collapse isOpen={errorShow}> */}\n          <Alert maxW=\"400\" status=\"error\">\n            <VStack space={1} flexShrink={1} w=\"100%\">\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\n                  <Alert.Icon />\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\n                  color: \"coolGray.800\"\n                }}>\n                    {errorTitle}\n                  </Text>\n                </HStack>\n              </HStack>\n              <Box pl=\"6\" _dark={{\n              _text: {\n                color: \"coolGray.600\"\n              }\n            }}>\n                {errorMessage}\n              </Box>\n            </VStack>\n          </Alert>\n        {/* </Collapse> */}\n        </PresenceTransition>\n \n      </Box>;\n  \n};\n\n\n\n  const handleReturnLogin = () => {\n    navigation.navigate('Login');\n  };\n\n   const handleEmailOnChangeText = (text) => {\n    setEmail(text) \n    setErrorShow(false)\n  };\n\n  const handleReset = () => {\n    setIsLoading(true);\n    setIsDisabled(true);\n    setErrorShow(false);\n    sendPasswordResetEmail(auth, email)\n    .then((re)=> {\n      console.log(re);\n      navigation.navigate('ResetPasswordSuccess');\n    \n    })\n    .catch((error) =>{\n      setIsLoading(false);\n      setIsDisabled(false);\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(error);\n      setErrorShow(true);\n      if (errorCode === 'auth/missing-email') {\n        console.log('Please enter an email.☹️');\n        setErrorTitle('Email is empty!');\n        setErrorMessage('Please enter an email.☹️');\n        <ErrorLoginShow/>\n      }\n      else if (errorCode === 'auth/invalid-email') {\n        console.log('Email is invalid. ☹️');\n        setErrorTitle('Invalid email!');\n        setErrorMessage('Please enter a valid email. ☹️');\n         <ErrorLoginShow/>\n      } \n      else if (errorCode === 'auth/user-not-found') {\n        console.log('Please use an existing email. ☹️');\n        setErrorTitle('User not found!');\n        setErrorMessage('Please use an existing email. ☹️');\n         <ErrorLoginShow/>\n      }       else if (errorCode === 'auth/too-many-requests') {\n        console.log('Too many requests detected, please try again later. ☹️');\n        setErrorTitle('Too many requests!');\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\n         <ErrorLoginShow/>\n      } \n    })\n  };\n  \n  return (\n    <NativeBaseProvider>\n\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\n      <ErrorLoginShow/>\n        <Center flex={1}>\n          <Center px=\"3\">\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\n              <Image source={{\n                uri: logo\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\n            </Box>\n            {/* <LoginForm /> */}\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\n\n    <Input w={{\n      base: \"90%\",\n      md: \"90%\",\n      sm: \"90%\", \n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\n\n    <HStack space={1} justifyContent=\"center\">\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\n        base: 130,\n        md: 130,\n        sm: 130,\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\n        base: 130,\n        md: 130,\n        sm: 130,\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\n\n    </HStack>\n\n  </Stack>\n\n          </Center>  \n\n          \n        </Center>\n\n   \n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport { \n  Input,\n  Icon, \n  Stack, \n  Pressable, \n  Center, \n  NativeBaseProvider, \n  Button, \n  Box, \n  HStack, \n  Image, \n  VStack, \n  Alert, \n  IconButton, \n  CloseIcon, \n  Spinner, \n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition \n} from \"native-base\";\nimport { useNavigation } from '@react-navigation/core'\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\n\n\n\n\n\n\nexport default function ResetPasswordSuccess() {\n  const [email, setEmail] = useState('');\n  const [emailCredential, setEmailCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = React.useState(false);\n  const [errorShow, setErrorShow] = React.useState(true);\n  const [resetShow, setResetShow] = React.useState(false);\n  const [errorTitle, setErrorTitle] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\n\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.replace(\"Checkpoint\")\n      }\n      \n    })\n\n    return unsubscribe\n  }, []) \n\n\n  const ErrorLoginShow = () => {\n    return <Box w=\"100%\" alignItems=\"center\">\n            <PresenceTransition visible={errorShow} initial={{\n            opacity: 0,\n            scale: 0,\n          }} animate={{\n            opacity: 1,\n            scale: 1,\n            transition: {\n              duration: 200\n            }\n          }} >\n        {/* <Collapse isOpen={errorShow}> */}\n          <Alert maxW=\"400\" status=\"Success\">\n            <VStack space={1} flexShrink={1} w=\"100%\">\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\n                  <Alert.Icon />\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\n                  color: \"coolGray.800\"\n                }}>\n                    Success!\n                  </Text>\n                </HStack>\n              </HStack>\n              <Box pl=\"6\" _dark={{\n              _text: {\n                color: \"coolGray.600\"\n              }\n            }}>\n                Password reset link has been sent to your email! 😊\n              </Box>\n            </VStack>\n          </Alert>\n        {/* </Collapse> */}\n        </PresenceTransition>\n \n      </Box>;\n  \n};\n\n\n  \n  const handleReturnLogin = () => {\n    navigation.navigate('Login');\n  };\n\n\n  \n  return (\n    <NativeBaseProvider>\n\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\n      <ErrorLoginShow/>\n        <Center flex={1}>\n          <Center px=\"3\">\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\n              <Image source={{\n                uri: logo\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\n            </Box>\n            {/* <LoginForm /> */}\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\n\n   \n\n    <HStack space={1} justifyContent=\"center\">\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\n        base: 130,\n        md: 130,\n        sm: 130,\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\n\n    </HStack>\n\n  </Stack>\n\n          </Center>  \n\n          \n        </Center>\n\n   \n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n});\n","import React, { useState, useEffect, StrictMode } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Spinner,\n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition\n} from \"native-base\";\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginPage from './components/LoginPage';\nimport Top from './components/Top';\nimport Admin from './components/Top';\nimport Checkpoint from './components/Checkpoint';\nimport ResetPassword from './components/ResetPassword';\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\nimport './style.css';\nimport { Provider } from 'react-redux';\nimport store from './components/DevAdminComponents/redux/store';\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n\n\nconst StackNavigator = createNativeStackNavigator();\n\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\n\n\n\nexport default function App() {\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState(null);\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n\n  useEffect(() => {\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\n\n    return subscriber;\n  }, [])\n\n\n  if (initializing) {\n    return null; // or a loading screen if needed\n  }\n\n\n  const config = {\n    screens: {\n      Login: 'login',\n      Checkpoint: 'checkpoint',\n      devadmin: {\n        path: 'devadmin',\n        screens: {\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\n          'FREIGHT': 'Freight',\n          'ADD NEW VEHICLE': 'AddNewVehicle',\n          'LOGS': 'Logs',\n          'VEHICLE LIST': 'VehicleList',\n          'ACCOUNT LIST': 'AccountList',\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\n        },\n      },\n\n    },\n  };\n\n  const linking = {\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\n    config,\n  };\n\n  const style = document.createElement('style');\n  style.textContent = `\n  body, html {\n    overscroll-behavior-x: none;\n    overscroll-behavior-y: none;\n  }\n`;\n\n  document.head.append(style);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n          <Route path=\"/Login\" element={<LoginPage />} />\n          <Route path=\"/Login/*\" element={<LoginPage />} />\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\n          {/* Corrected path for Admin if needed */}\n          <Route path=\"/top/*\" element={<Top />} />\n          {/* Define other routes */}\n        </Routes>\n      </Router>\n    </Provider>\n    // <Router>\n    //   <Provider store={store}>\n    //     <NativeBaseProvider>\n    //       {/* <LoginPage/> */}\n    //       <NavigationContainer linking={linking}>\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\n    //     )} */}\n    //         </StackNavigator.Navigator>\n    //       </NavigationContainer>\n    //     </NativeBaseProvider>\n    //   </Provider>\n    // </Router>\n  );\n}\n\n\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\nimport {\n    Input,\n    Icon,\n    Stack,\n    Pressable,\n    Center,\n    PresenceTransition,\n    NativeBaseProvider,\n    Button,\n    Box,\n    HStack,\n    Image,\n    Container,\n    Header,\n    Left,\n    Body,\n    Title,\n    Content,\n    Text,\n    Heading,\n    Flex,\n    VStack,\n    ScrollView,\n    SectionList,\n    useBreakpointValue,\n    Spinner,\n    Modal,\n    Divider,\n    Popover\n} from \"native-base\";\nimport { DataTable } from 'react-native-paper';\nimport {\n    FontAwesome,\n    Entypo,\n    MaterialIcons,\n    Ionicons,\n    Fontisto,\n    EvilIcons,\n    AntDesign,\n    MaterialCommunityIcons,\n    Feather,\n    FontAwesome5Brands\n} from 'react-native-vector-icons';\nimport 'react-native-gesture-handler';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\nimport { useNavigation } from '@react-navigation/core'\nimport { NavigationContainer } from '@react-navigation/native';\nimport './../style.css';\nimport { debounce } from 'lodash';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { color } from 'react-native-reanimated';\nimport FastImage from 'react-native-fast-image-web-support';\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView,\n    DrawerItemList,\n    DrawerItem,\n} from '@react-navigation/drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\nimport { projectControlFirestore } from '../../crossFirebase';\nimport { useNavigate } from 'react-router-dom';\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\nlet selectedScreen = 'ACCOUNT LIST'\n\n\nconst { width, height } = Dimensions.get('window');\nconst windowHeight = Dimensions.get('window').height;\n\nconst firestore = getFirestore();\nconst getEmailOfCurrentUser = () => {\n    const user = auth.currentUser;\n    if (user) {\n        const email = user.email;\n        return email;\n    } else {\n        console.log('No user is currently authenticated');\n        return null;\n    }\n};\n\n// const Drawer = createDrawerNavigator();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default function AccountList() {\n    const dispatch = useDispatch();\n    const loginName = useSelector((state) => state.loginName);\n    const [email, setEmail] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [showModal, setShowModal] = useState('');\n    const [type, setType] = useState('');\n    const logo = require('../../assets/C-Hub.png');\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\n    const screenWidth = Dimensions.get('window').width;\n    const [isMobileView, setIsMobileView] = useState(false);\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [show, setShow] = React.useState(false);\n    const [show2, setShow2] = React.useState(false);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    // const navigation = useNavigation();\n    const navigate = useNavigate();\n\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\n    const [isSelected3, setIsSelected3] = useState(false);\n    const [isSelected4, setIsSelected4] = useState(false);\n\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\n    const [accountType3, setAccountType3] = useState(false);\n    const [accountType4, setAccountType4] = useState(false);\n\n    const [inputName, setInputName] = useState('');\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\n    const [inputEmail, setInputEmail] = useState('');\n    const [inputPassword, setInputPassword] = useState('');\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\n    const [typeOfAccount, setTypeOfAccount] = useState('');\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\n    const inputRefs = useRef([]);\n\n    const [selectedItem, setSelectedItem] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\n    const [time, setTime] = useState('');\n    const [selectedType, setSelectedType] = useState('');\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\n    const [selectedItemType, setSelectedItemType] = useState('');\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\n    const [authEmail, setAuthEmail] = useState('');\n    const [authPassword, setAuthPassword] = useState('');\n    const [isYesLoading, setIsYesLoading] = useState(false);\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\n    const inputEmailRef = useRef(null);\n    const inputNameRef = useRef(null);\n    const inputPassRef = useRef(null);\n\n    const [page, setPage] = useState(0);\n    const optionsPerPage = [13, 25, 50];\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n    const [data, setData] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filteredData, setFilteredData] = useState([]);\n\n    const [documentListener, setDocumentListener] = useState(false);\n\n    const [showNamePopover, setShowNamePopover] = useState(false);\n\n    const ref0 = useRef(null);\n    const ref1 = useRef(null);\n    const ref2 = useRef(null);\n    const ref3 = useRef(null);\n    const searchInputRef = useRef(null);\n\n    const searchInput = useRef(null);\n    const searchInputValue = searchInput.current?.value;\n\n    const [pageSize, setPageSize] = useState(10);\n    const [lastVisible, setLastVisible] = useState(null);\n    const [firstVisible, setFirstVisible] = useState(null);\n    const [searchText, setSearchText] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(() => {\n        const q = query(\n            collection(db, 'accounts'),\n            orderBy('timestamp', 'desc'),\n            limit(pageSize)\n        );\n        const unsubscribe = onSnapshot(q, (documents) => {\n            const logsDatabaseData = [];\n            documents.forEach((document) => {\n                logsDatabaseData.push({\n                    id: document.id,\n                    ...document.data(),\n                });\n            });\n            dispatch(setAccountListData(logsDatabaseData));\n            setLastVisible(documents.docs[documents.docs.length - 1]);\n            setFirstVisible(documents.docs[0]);\n        });\n        return () => unsubscribe();\n\n    }, []);\n\n    const fetchNextData = async () => {\n\n        if (searchText === '') {\n\n\n            const q = query(\n                collectionGroup(projectControlFirestore, 'accounts'),\n                orderBy('timestamp', 'desc'),\n                startAfter(lastVisible),\n                limit(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'next');\n\n\n\n            dispatch(setLoadingModalVisible(false));\n\n\n        }\n\n        else {\n            const q = query(\n                collection(projectControlFirestore, 'accounts'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                startAfter(lastVisible),\n                limit(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'next');\n\n\n\n            dispatch(setLoadingModalVisible(false));\n        }\n\n    };\n\n\n    const fetchPreviousData = async () => {\n        if (searchText === '') {\n\n\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                orderBy('timestamp', 'desc'),\n                endBefore(firstVisible),\n                limitToLast(pageSize)\n            );\n\n\n            const documents = await getDocs(q);\n            updateState(documents, 'prev')\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n        else {\n\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                endBefore(firstVisible),\n                limitToLast(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'prev');\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n\n    }\n\n\n\n    const fetchFirstPage = (documents) => {\n\n\n        const accountListDatabaseData = [];\n\n        documents.forEach((document) => {\n            accountListDatabaseData.push({\n                id: document.id,\n                ...document.data(),\n            });\n        });\n\n        dispatch(setAccountListData(accountListDatabaseData));\n\n        if (documents?.docs[0]) {\n            setFirstVisible(documents.docs[0]);\n        }\n        if (documents?.docs[documents.docs.length - 1]) {\n            setLastVisible(documents.docs[documents.docs.length - 1]);\n        }\n\n\n\n\n\n    }\n\n    const updateState = async (documents, pageClicked) => {\n\n\n        if (!documents.empty) {\n            const accountListDatabaseData = [];\n            documents.forEach((document) => {\n                accountListDatabaseData.push({\n                    id: document.id,\n                    ...document.data(),\n                });\n            });\n\n\n\n            if (documents?.docs[0]) {\n                setFirstVisible(documents.docs[0]);\n            }\n            if (documents?.docs[documents.docs.length - 1]) {\n                setLastVisible(documents.docs[documents.docs.length - 1]);\n            }\n\n            if (pageClicked == 'next') {\n                setCurrentPage(currentPage + 1);\n            }\n            if (pageClicked == 'prev') {\n                setCurrentPage(currentPage - 1);\n            }\n\n            dispatch(setAccountListData(accountListDatabaseData));\n        }\n\n        else {\n\n            if (searchText == '') {\n                setCurrentPage(1);\n\n                const q = query(\n                    collection(projectControlFirestore, 'logs'),\n                    orderBy('timestamp', 'desc'),\n                    limit(pageSize)\n                );\n                const firstPageDocuments = await getDocs(q);\n                fetchFirstPage(firstPageDocuments);\n\n            }\n            else {\n\n                setCurrentPage(1);\n\n                const q = query(\n                    collection(projectControlFirestore, 'accounts'),\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\n                    orderBy('timestamp', 'desc'),\n                    limit(pageSize)\n                );\n                const firstPageDocuments = await getDocs(q);\n                fetchFirstPage(firstPageDocuments);\n\n            }\n\n\n        }\n\n\n    };\n\n\n    const handleNextPage = async () => {\n        // setPageClicked('next');\n        dispatch(setLoadingModalVisible(true));\n        // setCurrentPage(currentPage + 1);\n        await fetchNextData();\n\n\n\n\n    };\n\n    const handlePreviousPage = async () => {\n        // setPageClicked('previous');\n        dispatch(setLoadingModalVisible(true));\n        // setCurrentPage(currentPage - 1);\n        await fetchPreviousData();\n\n\n    };\n\n\n    useEffect(() => {\n\n        searchData();\n\n    }, [searchText]);\n\n    const searchData = async () => {\n\n        dispatch(setLoadingModalVisible(true));\n\n        if (searchText === '') {\n\n            setCurrentPage(1);\n            const q = query(\n                collection(projectControlFirestore, 'accounts'),\n                orderBy('timestamp', 'desc'),\n                limit(pageSize)\n            );\n\n            const firstPageDocuments = await getDocs(q);\n            fetchFirstPage(firstPageDocuments);\n            dispatch(setLoadingModalVisible(false));\n\n\n\n        }\n\n        else {\n\n            setCurrentPage(1);\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                limit(pageSize)\n            );\n\n            const firstPageDocuments = await getDocs(q);\n            fetchFirstPage(firstPageDocuments);\n            dispatch(setLoadingModalVisible(false));\n        }\n    };\n\n    const handleSearchEnter = () => {\n\n        if (searchInputRef.current?.value !== '') {\n            setSearchText(searchInputRef.current.value.trim());\n        }\n        else {\n            setSearchText('');\n\n            if (searchText == '') {\n                searchData();\n            }\n\n\n        }\n\n    }\n\n\n    const handleToggleAccountTypeAd = useCallback(() => {\n        const text = 'admin';\n\n        setSelectedType(text);\n        setSelectedTypeDisplay('Admin');\n        setSelectedItemType(text);\n    }, []);\n\n    const handleToggleAccountTypeDevAd = useCallback(() => {\n        const text = 'devadmin';\n\n        setSelectedTypeDisplay('Developer Admin');\n\n        setSelectedType(text);\n        setSelectedItemType(text);\n\n    }, []);\n\n    const handleToggleAccountType3 = useCallback(() => {\n        const text = 'staff';\n\n        setSelectedType(text);\n\n        setSelectedTypeDisplay('Staff');\n        setSelectedItemType(text);\n    }, []);\n\n    const handleToggleAccountType4 = useCallback(() => {\n        const text = 'booking';\n\n\n        setSelectedType(text);\n        setSelectedTypeDisplay('Booking');\n        setSelectedItemType(text);\n    }, []);\n\n    const handleToggleAccountTypeSpAd = useCallback(() => {\n        const text = 'superadmin';\n\n        setSelectedItemType(text);\n        setSelectedType(text);\n        setSelectedTypeDisplay('Super Admin');\n    }, []);\n\n    useEffect(() => {\n        // console.log(selectedType);\n        // console.log(selectedTypeDisplay);\n\n    }, [selectedType, selectedTypeDisplay])\n\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\n                const querySnapshot = await getDocs(q);\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n                setData(docs);\n                setFilteredData(docs);\n            } catch (error) {\n                console.error('Error retrieving data:', error);\n            }\n        };\n\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\n            const updatedData = snapshot.docs.map((doc) => doc.data());\n            setData(updatedData);\n            setFilteredData(updatedData);\n        });\n\n        fetchData();\n\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n    }, [typeOfAccount]);\n\n\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n\n            if (!user) {\n                // navigation.navigate(\"Login\")\n                navigate(\"/Login\")\n            }\n\n        })\n\n        return unsubscribe\n    }, [])\n\n    const firebaseFirestore = getFirestore();\n\n\n\n\n    // const handleUpdate = async () => {\n    //     setIsDisabled(true);\n    //     setIsLoading(true);\n\n    //     if (\n    //         validateEmail() === false ||\n    //         inputName === ''\n    //     ) {\n    //         setTimeout(() => {\n    //             // Reset loading and disabled state\n    //             setIsLoading(false);\n    //             setIsDisabled(false);\n    //         }, 500);\n    //     } else {\n    //         try {\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\n    //             if (signInMethods.length > 0) {\n    //                 // Email already exists\n    //                 setIsEmailDuplicate(true);\n    //                 setEmailError(false);\n    //                 validateEmail(false);\n    //                 setIsLoading(false);\n    //                 setIsDisabled(false);\n    //                 return;\n    //             }\n\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\n    //                 .then((userCredential) => {\n\n    //                     const user = userCredential.user;\n    //                     try {\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\n    //                         updateDoc(docRef, {\n    //                             // Specify the data you want to add to the document\n    //                             email: inputEmail,\n    //                             name: inputName,\n    //                             pass: inputPassword,\n    //                             type: typeOfAccount,\n    //                             // ...\n    //                         });\n\n    //                         addLogToCollection(logData);\n    //                         // console.log(logData);\n    //                         setIsLoading(false);\n    //                         setIsDisabled(false);\n    //                         handleClear();\n    //                         setShowModal(true);\n\n    //                         // console.log('Document added with custom ID: ', customID);\n    //                     } catch (error) {\n    //                         console.error('Error adding document: ', error);\n    //                     }\n\n\n    //                     // Reset loading and disabled state\n\n\n\n    //                 })\n    //                 .catch((error) => {\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\n    //                     console.log(error);\n    //                     setIsLoading(false);\n    //                     setIsDisabled(false);\n    //                 });\n    //         } catch (error) {\n    //             const errorCode = error.code;\n    //             const errorMessage = error.message;\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\n    //             // console.log(errorCode, errorMessage);\n    //             setIsLoading(false);\n    //             setIsDisabled(false);\n    //         }\n    //     }\n    // };\n\n    const handleClear = useCallback(() => {\n        const text = '';\n\n        ref0.current.value = \"\";\n        ref1.current.value = \"\";\n        ref2.current.value = \"\";\n        ref3.current.value = \"\";\n        setAccountTypeAd(false);\n        setAccountTypeSpAd(false);\n        setAccountTypeDevAd(false);\n        setAccountType3(false);\n        setAccountType4(false);\n        setEmailError(false);\n        setIsEmailDuplicate(false);\n\n\n        setInputConfirmPassword('');\n        setInputEmail('');\n        setInputName('');\n        setInputPassword('');\n\n\n    }, []);\n\n\n    // const handleToggleLogs = useCallback(() => {\n    //     // setIsSelectedLogs(true);\n\n    //     // setIsSelectedAddAccount(false);\n    //     // setIsSelectedAccountList(false);\n    //     // setIsSelected3(false);\n    //     // setIsSelected4(false);\n\n    //     navigation.navigate(\"LOGS\");\n    // }, []);\n    // const handleToggleAddAccount = useCallback(() => {\n    //     // setIsSelectedAddAccount(true);\n\n    //     // setIsSelectedLogs(false);\n    //     // setIsSelectedAccountList(false);\n    //     // setIsSelected3(false);\n    //     // setIsSelected4(false);\n\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\n    // }, []);\n\n    // const handleToggleAccountList = useCallback(() => {\n    //     // setIsSelectedAccountList(true);\n\n    //     // setIsSelectedAddAccount(false);\n    //     // setIsSelected3(false);\n    //     // setIsSelected4(false);\n    //     // setIsSelectedLogs(false);\n    //     navigation.navigate(\"ACCOUNT LIST\");\n    // }, []);\n\n    // const handleToggleAddVehicle = useCallback(() => {\n    //     // setIsSelected3(true);\n\n    //     // setIsSelectedAddAccount(false);\n    //     // setIsSelectedAccountList(false);\n    //     // setIsSelected4(false);\n    //     // setIsSelectedLogs(false);\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\n    // }, []);\n\n    // const handleVehicleList = useCallback(() => {\n    //     navigation.navigate(\"VEHICLE LIST\");\n    // }, []);\n\n    const handleDocumentChange = (snapshot) => {\n\n\n        if (snapshot.exists()) {\n            const data = snapshot.data();\n            const isActive = data.active;\n\n            if (!isActive) {\n                signOut(auth)\n                    .then(() => {\n                        // navigation.navigate('Login');\n                        navigate(\"/Login\")\n\n                    })\n                    .catch((error) => {\n                        console.error('Error signing out:', error);\n                    });\n            }\n        } else {\n            signOut(auth)\n                .then(() => {\n                    // navigation.navigate('Login');\n                    navigate(\"/Login\")\n\n                })\n                .catch((error) => {\n                    console.error('Error signing out:', error);\n                });\n        }\n\n\n    };\n    const subscribeToFieldChange = () => {\n        const userId = auth.currentUser?.email;\n        if (userId) {\n            const userRef = doc(firestore, 'accounts', userId);\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n            return unsubscribe;\n        } else {\n            // Return a no-op function if there's no user\n            return () => {\n                navigate(\"/login\")\n            };\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = subscribeToFieldChange();\n\n        return () => {\n            // This will now always be a function\n            unsubscribe();\n        };\n    }, []);\n\n    useEffect(() => {\n        const currentUserEmail = getEmailOfCurrentUser();\n        if (currentUserEmail) {\n            getFieldValueByEmail(currentUserEmail);\n            setEmail(currentUserEmail)\n            const documentId = currentUserEmail;\n            listenForNameChange(documentId);\n        }\n\n    }, []);\n\n    const listenForNameChange = (documentId) => {\n        const userRef = doc(db, 'accounts', documentId);\n\n        const unsubscribe = onSnapshot(userRef, (doc) => {\n            if (doc.exists()) {\n                const name = doc.data().name;\n                const type = doc.data().type;\n                setName(name);\n                setType(type);\n                // Perform any necessary actions with the name value\n            } else {\n                console.log('Document does not exist');\n            }\n        });\n\n        // To stop listening for updates, you can call unsubscribe()\n        // unsubscribe();\n    };\n\n    useEffect(() => {\n        getEmailFromDocument('accounts', auth.currentUser?.email);\n        // console.log(authEmail, authPassword)\n    }, [authEmail, authPassword]);\n\n    const getEmailFromDocument = async (collectionPath, documentId) => {\n        const firestore = getFirestore();\n        const documentRef = doc(firestore, collectionPath, documentId);\n\n        try {\n            const documentSnapshot = await getDoc(documentRef);\n            if (documentSnapshot.exists()) {\n                const email = documentSnapshot.data().email;\n                const pass = documentSnapshot.data().pass;\n\n                setAuthEmail(email);\n                setAuthPassword(pass);\n            } else {\n                console.log('Document does not exist');\n            }\n        } catch (error) {\n            console.error('Error retrieving email:', error);\n        }\n    };\n\n\n    const getFieldValueByEmail = async (email) => {\n        try {\n            const accountDocRef = doc(firestore, 'accounts', email);\n            const accountDocSnapshot = await getDoc(accountDocRef);\n\n            if (accountDocSnapshot.exists()) {\n                const data = accountDocSnapshot.data();\n                const fieldType = data.type;\n                const fieldName = data.name;\n                dispatch(setLoginName(data.name));\n\n            } else {\n                console.log('Document does not exist');\n            }\n        } catch (error) {\n            console.error('Error fetching field value:', error);\n        }\n    };\n\n\n\n    const validateEmail = () => {\n        // Regular expression for email validation\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        const isValid = emailRegex.test(inputEmail);\n\n        return isValid;\n\n\n    };\n\n\n    const handleSignOut = () => {\n\n        signOut(auth).then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\")\n\n            setEmail('');\n            setName('');\n        }).catch((error) => {\n            // An error happened.\n        });\n\n\n    };\n\n    // useEffect(() => {\n    //     const handleScreenResize = () => {\n    //         const screenWidth = Dimensions.get('window').width;\n    //         setIsMobileView(screenWidth < 1200);\n    //     };\n\n    //     // Initial check on component mount\n    //     handleScreenResize();\n\n    //     // Listen for screen dimension changes\n    //     Dimensions.addEventListener('change', handleScreenResize);\n\n    //     // Cleanup event listener on component unmount\n    //     return () => {\n    //         Dimensions.removeEventListener('change', handleScreenResize);\n    //     };\n    // }, []);\n\n\n\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n\n\n\n\n\n\n\n\n\n    const handleEdit = useCallback((id) => {\n        const selectedItem = data.find((item) => item.id === id);\n\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputPassword(selectedItem.pass);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setModalVisible(true);\n        setSelectedItemType(selectedItem.type);\n        setSelectedType(selectedItem.type);\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\n        setIsEmailDuplicate(false);\n        // console.log(selectedItem);\n\n        if (inputEmailRef.current) {\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\n        }\n\n        if (inputNameRef.current) {\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\n        }\n        if (inputPassRef.current) {\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\n        }\n    }, [data]);\n\n\n\n    const handleInputEmailChange = debounce((value) => {\n        setInputEmail(value);\n    }, 50);\n\n    const handleInputNameChange = debounce((value) => {\n        setInputName(value);\n    }, 50);\n\n    const handleInputPassChange = debounce((value) => {\n        setInputPassword(value);\n    }, 50);\n\n\n    const handleOpenDisableModal = (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setShowDisableModal(true);\n    };\n\n    const handleOpenEnableModal = (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setShowEnableModal(true);\n    };\n\n    const handleOpenDeleteModal = (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setShowDeleteModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setModalVisible(false);\n        setShow(false);\n    };\n\n    const handleCloseDisableModal = () => {\n        setShowDisableModal(false);\n    };\n\n    const handleOpenSaveSuccessModal = () => {\n        setShowDisableModal(false);\n    };\n\n\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n    };\n    const handleCloseEnableModal = () => {\n        setShowEnableModal(false);\n    };\n\n\n    useEffect(() => {\n\n    }, [selectedItem]);\n    const addLogToCollection = async (data) => {\n        try {\n            const firestore = getFirestore();\n            const logsCollectionRef = collection(firestore, 'logs');\n\n            // Add a new document to the \"logs\" collection\n            await addDoc(logsCollectionRef, data);\n\n        } catch (error) {\n            console.error('Error adding document:', error);\n        }\n    };\n    // useEffect(() => {\n    //     const fetchTime = async () => {\n    //         try {\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    //             const { datetime } = response.data;\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    //             setTime(formattedTime);\n    //         } catch (error) {\n    //             console.error('Error fetching time:', error);\n    //         }\n    //     };\n\n    //     const interval = setInterval(() => {\n    //         if (isIntervalActive) {\n    //             fetchTime();\n    //         }\n    //     }, 1000);\n\n    //     return () => {\n    //         clearInterval(interval);\n    //     };\n    // }, [isIntervalActive]);\n\n    const openSuccessModal = () => {\n        setShowSuccessModal(true);\n\n    };\n\n    const closeSuccessModal = () => {\n        setShowSuccessModal(false);\n        setIsDisabled(false);\n        setIsYesLoading(false);\n    };\n\n\n    // async function disableUserByUid(uid) {\n    //     try {\n    //         await updateDisabled(auth, uid, true);\n    //         console.log('User account disabled successfully');\n    //     } catch (error) {\n    //         console.error('Error disabling user account:', error);\n    //     }\n    // }\n\n    const handleEnable = useCallback(async (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setIsDisabled(true);\n        setIsYesLoading(true);\n        try {\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\n            const updates = {\n                active: true,\n            };\n\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n            const { datetime } = response.data;\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n            const year = moment(datetime).format('YYYY');\n            const month = moment(datetime).format('MM');\n            const monthWithDay = moment(datetime).format('MM/DD');\n            const date = moment(datetime).format('YYYY/MM/DD');\n            const day = moment(datetime).format('DD');\n            const time = moment(datetime).format('HH:mm');\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n            setTime(formattedTime);\n\n            await updateDoc(itemDocRef, updates);\n\n            const updatedData = data.map((item) => {\n                if (item.id === id) {\n                    return { ...item, active: true };\n                }\n                return item;\n            });\n\n            setData(updatedData);\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\n            setFilteredData(filteredData);\n            // console.log('Field updated successfully.');\n\n            const logData = {\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\n                keywords: [\n                    formattedTime.toLowerCase(),\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\n                    'Account Enabled'.toLowerCase(),\n                    'Enabled'.toLowerCase(),\n                    selectedItem.email.toLowerCase(),\n                    selectedItem.name.toLowerCase(),\n                    name.toLowerCase(),\n                    year.toLowerCase(),\n                    month.toLowerCase(),\n                    monthWithDay.toLowerCase(),\n                    date.toLowerCase(),\n                    day.toLowerCase(),\n                    time.toLowerCase(),\n                    timeWithMinutesSeconds.toLowerCase(),\n                ],\n                timestamp: formattedTime,\n                colorScheme: true,\n            };\n            addLogToCollection(logData);\n            setIsDisabled(false);\n            setIsYesLoading(false);\n            handleCloseEnableModal();\n        } catch (error) {\n            console.error('Error updating field:', error);\n        }\n    }, [data]);\n\n    const deleteDocument = async (collectionPath, customId) => {\n        const firestore = getFirestore();\n        const documentRef = doc(firestore, collectionPath, customId);\n\n        try {\n            await deleteDoc(documentRef);\n            console.log('Document deleted successfully.');\n        } catch (error) {\n            console.error('Error deleting document:', error);\n        }\n    };\n\n\n\n    const handleDelete = useCallback(async (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n        setIsDisabled(true);\n        setIsYesLoading(true);\n\n\n        try {\n\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\n            const user = userCredential.user;\n\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n            const { datetime } = response.data;\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n            const year = moment(datetime).format('YYYY');\n            const month = moment(datetime).format('MM');\n            const monthWithDay = moment(datetime).format('MM/DD');\n            const date = moment(datetime).format('YYYY/MM/DD');\n            const day = moment(datetime).format('DD');\n            const time = moment(datetime).format('HH:mm');\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n            setTime(formattedTime);\n\n            await deleteUser(user);\n            const logData = {\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\n                timestamp: formattedTime,\n                colorScheme: false,\n                keywords: [\n                    formattedTime.toLowerCase(),\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\n                    'Account Deleted'.toLowerCase(),\n                    'Deleted'.toLowerCase(),\n                    selectedItem.email.toLowerCase(),\n                    selectedItem.name.toLowerCase(),\n                    name.toLowerCase(),\n                    monthWithDay.toLowerCase(),\n                    year.toLowerCase(),\n                    month.toLowerCase(),\n                    day.toLowerCase(),\n                    date.toLowerCase(),\n                    time.toLowerCase(),\n                    timeWithMinutesSeconds.toLowerCase(),\n                ],\n            };\n            addLogToCollection(logData);\n\n\n            console.log('Account deleted successfully');\n\n            const signInCredential = await signInWithEmailAndPassword(\n                auth,\n                authEmail,\n                authPassword\n            );\n            const signedInUser = signInCredential.user;\n            signedInUser\n            deleteDocument('accounts', selectedItem.email);\n            // setData(updatedData);\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\n            setFilteredData(filteredData);\n            navigate('/account-list')\n            // console.log('Field updated successfully.');\n            setIsDisabled(false);\n            setIsYesLoading(false);\n\n            handleCloseDeleteModal();\n        } catch (error) {\n            console.error('Error updating field:', error);\n        }\n    }, [data]);\n\n    const handleDisable = useCallback(async (id) => {\n        setIsDisabled(true);\n        setIsYesLoading(true);\n        const selectedItem = data.find((item) => item.id === id);\n        setSelectedItem(selectedItem);\n        setInputName(selectedItem.name);\n        setInputEmail(selectedItem.email);\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\n        setTypeOfAccount(selectedItem.type);\n\n        try {\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\n            const updates = {\n                active: false,\n            };\n\n            await updateDoc(itemDocRef, updates);\n\n            const updatedData = data.map((item) => {\n                if (item.id === id) {\n                    return { ...item, active: false };\n                }\n                return item;\n            });\n\n            setData(updatedData);\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\n            setFilteredData(filteredData);\n            // console.log('Field updated successfully.');\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n            const { datetime } = response.data;\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n            const year = moment(datetime).format('YYYY');\n            const month = moment(datetime).format('MM');\n            const monthWithDay = moment(datetime).format('MM/DD');\n            const date = moment(datetime).format('YYYY/MM/DD');\n            const day = moment(datetime).format('DD');\n            const time = moment(datetime).format('HH:mm');\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n            setTime(formattedTime);\n\n            const logData = {\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\n                timestamp: formattedTime,\n                colorScheme: false,\n                keywords: [\n                    formattedTime.toLowerCase(),\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\n                    'Account Disabled'.toLowerCase(),\n                    'Disabled'.toLowerCase(),\n                    selectedItem.email.toLowerCase(),\n                    selectedItem.name.toLowerCase(),\n                    name.toLowerCase(),\n                    year.toLowerCase(),\n                    month.toLowerCase(),\n                    monthWithDay.toLowerCase(),\n                    date.toLowerCase(),\n                    day.toLowerCase(),\n                    time.toLowerCase(),\n                    timeWithMinutesSeconds.toLowerCase(),\n                ],\n\n            };\n            addLogToCollection(logData);\n            setIsDisabled(false);\n            setIsYesLoading(false);\n            handleCloseDisableModal();\n        } catch (error) {\n            console.error('Error updating field:', error);\n            setIsDisabled(false);\n            setIsSaveLoading(false);\n        }\n    }, [data]);\n\n    // Apply search filter to the data\n    const applySearchFilter = (data, searchInputValue) => {\n        if (!searchInputValue) {\n            return data;\n        }\n        const filteredData = data.filter((item) =>\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\n        );\n        return filteredData;\n    };\n\n\n\n    const handleSave = async (id) => {\n        const selectedItem = data.find((item) => item.id === id);\n        setIsDisabled(true);\n        setIsSaveLoading(true);\n        if (\n            isPasswordLengthLabel() === false ||\n            validateEmail() === false ||\n            inputName === ''\n        ) {\n            setTimeout(() => {\n                // Reset loading and disabled state\n                setIsLoading(false);\n                setIsDisabled(false);\n            }, 500);\n        } else {\n\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\n\n\n                const documentRef = doc(db, 'accounts', selectedItem.id);\n\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                const { datetime } = response.data;\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                setTime(formattedTime);\n\n                const updatedFields = {\n                    name: inputName,\n                    type: selectedType,\n                    typeDisplay: selectedTypeDisplay,\n                    lastUpdatedDate: formattedTime,\n                    // Add more fields as needed\n\n                };\n\n                try {\n\n                    await updateDoc(documentRef, updatedFields);\n                    setIsDisabled(false);\n                    setIsSaveLoading(false);\n\n\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                    const { datetime } = response.data;\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                    const year = moment(datetime).format('YYYY');\n                    const month = moment(datetime).format('MM');\n                    const monthWithDay = moment(datetime).format('MM/DD');\n                    const date = moment(datetime).format('YYYY/MM/DD');\n                    const day = moment(datetime).format('DD');\n                    const time = moment(datetime).format('HH:mm');\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n                    setTime(formattedTime);\n\n                    const logData = {\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\n                            'Updated'.toLowerCase(),\n                            selectedItem.email.toLowerCase(),\n                            selectedItem.name.toLowerCase(),\n                            inputName.toLowerCase(),\n                            name.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                            timeWithMinutesSeconds.toLowerCase(),\n                        ],\n                    }\n\n                    addLogToCollection(logData);\n\n                    const updatedData = data.map((item) => {\n                        if (item.id === id) {\n                            item.name = inputName;\n                            item.type = selectedType;\n                            item.typeDisplay = selectedTypeDisplay;\n                            item.lastUpdatedDate = formattedTime;\n                        }\n                        return item;\n                    });\n                    setData(updatedData);\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\n                    setFilteredData(filteredData);\n                    // console.log('Field updated successfully.');\n                    // console.log('Document successfully updated!');\n                    handleCloseModal();\n                    setShowSuccessModal(true);\n                } catch (error) {\n                    console.error('Error updating document:', error);\n                }\n\n            }\n\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\n\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\n                const user = userCredential.user;\n\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                const { datetime } = response.data;\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                setTime();\n\n                try {\n                    await updatePassword(user, inputPassword);\n\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                    const { datetime } = response.data;\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                    const year = moment(datetime).format('YYYY');\n                    const month = moment(datetime).format('MM');\n                    const monthWithDay = moment(datetime).format('MM/DD');\n                    const date = moment(datetime).format('YYYY/MM/DD');\n                    const day = moment(datetime).format('DD');\n                    const time = moment(datetime).format('HH:mm');\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n                    setTime();\n                    // console.log('Password changed successfully');\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\n\n\n                    const updatedFields = {\n                        email: inputEmail,\n                        name: inputName,\n                        type: selectedType,\n                        typeDisplay: selectedTypeDisplay,\n                        dateOfCreation: selectedItem.dateOfCreation,\n                        lastUpdatedDate: formattedTime,\n                        pass: inputPassword,\n                        active: true,\n\n                        // Add more fields as needed\n                    };\n                    // Perform setDoc operation\n                    await setDoc(userDocRef, updatedFields);\n\n                    const signInCredential = await signInWithEmailAndPassword(\n                        auth,\n                        authEmail,\n                        authPassword\n                    );\n\n                    const signedInUser = signInCredential.user;\n                    signedInUser\n\n\n                    // console.log(authEmail, authPassword);\n                    setIsDisabled(false);\n                    setIsSaveLoading(false);\n\n                    setTime(formattedTime);\n\n                    const logData = {\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\n                            'Password Changed'.toLowerCase(),\n                            'Password'.toLowerCase(),\n                            selectedItem.email.toLowerCase(),\n                            selectedItem.name.toLowerCase(),\n                            name.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                            timeWithMinutesSeconds.toLowerCase(),\n                        ],\n                    };\n                    addLogToCollection(logData);\n\n                    const updatedItem = {\n                        ...selectedItem,\n                        email: inputEmail,\n                        name: inputName,\n                        type: selectedType,\n                        typeDisplay: selectedTypeDisplay,\n                        lastUpdatedDate: formattedTime,\n                    };\n\n                    const updatedData = data.map((item) => {\n                        if (item.id === id) {\n                            item.name = inputName;\n                            item.type = selectedType;\n                            item.typeDisplay = selectedTypeDisplay;\n                            item.lastUpdatedDate = formattedTime;\n                            item.pass = inputPassword;\n                        }\n                        return item;\n                    });\n                    setData(updatedData);\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\n                    setFilteredData(filteredData);\n                    // console.log('Document set successfully');\n                    handleCloseModal();\n                    setShowSuccessModal(true);\n                } catch (error) {\n                    console.error('Error:', error);\n                }\n\n            }\n\n            else if (inputEmail !== selectedItem.email) {\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\n                const user = userCredential.user;\n\n\n                // updateEmail(user, inputEmail)\n                //     .then(async () => {\n                //         // Email change successful\n                //         setIsDisabled(false);\n                //         setIsSaveLoading(false);\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\n\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\n\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                const { datetime } = response.data;\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                setTime(formattedTime);\n\n                try {\n                    // Get the data from the old document\n                    const documentSnapshot = await getDoc(oldDocumentRef);\n                    if (documentSnapshot.exists()) {\n                        const documentData = documentSnapshot.data();\n\n                        // Merge the updated fields with the existing document data\n\n                        // Create the new document with the desired ID and copy the merged data\n\n                        const updatedFields = {\n                            email: inputEmail,\n                            name: inputName,\n                            type: selectedType,\n                            typeDisplay: selectedTypeDisplay,\n                            dateOfCreation: selectedItem.dateOfCreation,\n                            lastUpdatedDate: formattedTime,\n                            pass: inputPassword,\n                            active: true,\n\n                            // Add more fields as needed\n                        };\n\n                        await setDoc(newDocumentRef, updatedFields);\n                        await deleteDoc(oldDocumentRef);\n                        // Optionally, delete the old document\n\n                        try {\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\n                            // console.log('User created successfully:', userCredential.user);\n\n                            setIsDisabled(false);\n                            setIsSaveLoading(false);\n\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                            const { datetime } = response.data;\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                            const year = moment(datetime).format('YYYY');\n                            const month = moment(datetime).format('MM');\n                            const monthWithDay = moment(datetime).format('MM/DD');\n                            const date = moment(datetime).format('YYYY/MM/DD');\n                            const day = moment(datetime).format('DD');\n                            const time = moment(datetime).format('HH:mm');\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n                            setTime(formattedTime);\n\n                            const logData = {\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\n                                timestamp: formattedTime,\n                                colorScheme: true,\n                                keywords: [\n                                    formattedTime.toLowerCase(),\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\n                                    'Updated'.toLowerCase(),\n                                    'Email'.toLowerCase(),\n                                    selectedItem.email.toLowerCase(),\n                                    selectedItem.name.toLowerCase(),\n                                    inputEmail.toLowerCase(),\n                                    monthWithDay.toLowerCase(),\n                                    name.toLowerCase(),\n                                    year.toLowerCase(),\n                                    month.toLowerCase(),\n                                    day.toLowerCase(),\n                                    date.toLowerCase(),\n                                    time.toLowerCase(),\n                                    timeWithMinutesSeconds.toLowerCase(),\n                                ],\n                            }\n                            try {\n                                await deleteUser(user);\n                                // console.log('User authentication record deleted successfully.');\n\n\n\n                                setIsDisabled(false);\n                                setIsSaveLoading(false);\n\n                                const signInCredential = await signInWithEmailAndPassword(\n                                    auth,\n                                    authEmail,\n                                    authPassword\n                                );\n\n                                const signedInUser = signInCredential.user;\n                                signedInUser\n\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                                const { datetime } = response.data;\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                                setTime(formattedTime);\n\n                                const updatedItem = {\n                                    ...selectedItem,\n                                    email: inputEmail,\n                                    name: inputName,\n                                    type: selectedType,\n                                    typeDisplay: selectedTypeDisplay,\n                                    lastUpdatedDate: formattedTime,\n                                };\n\n                                const updatedData = data.map((item) =>\n                                    item.id === id ? updatedItem : item\n                                );\n                                setData(updatedData);\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\n                                setFilteredData(filteredData);\n                                // console.log(authEmail, authPassword);\n\n\n                            } catch (error) {\n                                console.error('Error deleting user authentication record:', error);\n                            }\n\n                            addLogToCollection(logData);\n                            handleCloseModal();\n                            setShowSuccessModal(true);\n\n                            // console.log('Document ID successfully changed!');\n                        } catch (error) {\n                            console.error('Error creating user:', error);\n                        }\n                    } else {\n                        console.error('Old document does not exist!');\n                    }\n\n                } catch (error) {\n                    console.error('Error changing document ID:', error);\n                    setIsDisabled(false);\n                    setIsSaveLoading(false);\n                }\n\n\n                // })\n                // .catch((error) => {\n                //     console.error('Error changing email:', error);\n                // });\n            }\n\n\n\n\n            else {\n                try {\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\n                    if (signInMethods.length > 0) {\n                        // Email already exists                        \n                        setIsDisabled(false);\n                        setIsSaveLoading(false);\n                        setIsEmailDuplicate(true);\n                        setEmailError(false);\n                        validateEmail(false);\n\n                        return;\n                    }\n\n\n                } catch (error) {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log('An error occurred while checking the email existence. Please try again later.');\n                    // console.log(errorCode, errorMessage);\n                    setIsLoading(false);\n                    setIsDisabled(false);\n                }\n\n\n            }\n\n\n\n        }\n    };\n\n    const handleChangeEmailText = (text) => {\n        setInputEmail(text);\n    };\n\n\n\n    const isPasswordLengthLabel = () => {\n        return inputPassword.length >= 6;\n    };\n    // const handlePasswordChange = _.debounce((value) => {\n    //     setInputPassword(value);\n    // }, 50);\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\n                const unsubscribe = onSnapshot(q, (snapshot) => {\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n                    setData(documents);\n                });\n\n                return () => unsubscribe();\n            } catch (error) {\n                console.error('Error retrieving data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        setPage(0);\n    }, [itemsPerPage]);\n\n    const filtered = useMemo(() => {\n        return data.filter(\n            (item) =>\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n    }, [searchQuery, data]);\n\n    const paginatedData = useMemo(() => {\n        const startIndex = page * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        return filtered.slice(startIndex, endIndex);\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\n\n\n    const handleSearch = debounce((text) => {\n        setSearchQuery(text);\n    }, 300);\n\n    const startIndex = page * itemsPerPage;\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\n\n    const showPopover = () => {\n        setShowNamePopover(true);\n    };\n\n    // Function to hide the Popover\n    const hidePopover = () => {\n        setShowNamePopover(false);\n    };\n    const NamePopover = ({ name, handleSignOut }) => {\n        const [showNamePopover, setShowNamePopover] = useState(false);\n\n        const showPopover = () => {\n            setShowNamePopover(!showNamePopover);\n        };\n\n        return (\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n                <Flex direction=\"row-reverse\">\n                    <Popover\n                        isOpen={showNamePopover}\n                        trigger={(triggerProps) => (\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                            </Text>\n                        )}\n                        onClose={() => setShowNamePopover(!showNamePopover)}\n                        placement='bottom right'\n                        trapFocus={false}\n                    >\n                        <Popover.Content backgroundColor={'#0642F4'}>\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n                            <Popover.Body backgroundColor={'#0642F4'}>\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                                    Logout\n                                </Button>\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n                </Flex>\n            </Box>\n        );\n    };\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        image: {\n            flex: 1,\n        },\n    });\n    return (\n        <NativeBaseProvider>\n\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n                {/* Header */}\n                <Box\n                    px=\"3\"\n                    bgColor='#0642f4'\n                    height={54}\n                    position=\"sticky\"\n                    top={0}\n                    zIndex={999}\n                    flexDirection=\"row\"\n                    alignItems=\"center\"\n                    borderBottomWidth={0}\n                    borderBottomColor={'cyan.500'}\n\n                >\n                    <SideDrawer\n                        selectedScreen={selectedScreen} />\n\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n                        <FastImage\n                            source={{\n                                uri: logo,\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image}\n                        />\n                    </Box>\n                    {/* {showDrawerIcon && <MobileViewDrawer\n                        selectedScreen={selectedScreen}\n                    />} */}\n\n\n\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\n\n                        <FastImage\n                            source={{\n                                uri: logo2,\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image}\n                        />\n                    </Box>\n\n\n                    <View style={{ alignItems: 'center', flex: 1 }}>\n                        <QRCodeScanner />\n                    </View>\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n                        <Flex direction=\"row-reverse\">\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                                </Text>;\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                                            Logout\n                                        </Button>\n                                    </Popover.Body>\n                                </Popover.Content>\n                            </Popover>\n                        </Flex>\n                    </Box> */}\n\n                </Box>\n\n                {/* Content */}\n                <Box flex={[1]} flexDirection=\"row\" >\n                    {/* Sidebar */}\n                    {/* <SideDrawer\n                        selectedScreen={selectedScreen}\n                    /> */}\n\n                    {/* Main Content */}\n                    <Box flex={1} flexGrow={1} minHeight={0}>\n                        {/* Main Content Content */}\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\n                            <Box height={'100%'}>\n\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\n                                            </Box>\n                                            <Box flex={1} padding={2}>\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                    <PresenceTransition visible={true} initial={{\n                                        opacity: 0\n                                    }} animate={{\n                                        opacity: 1,\n                                        transition: {\n                                            duration: 250\n                                        }\n                                    }}>\n                                        {paginatedData.map((item) => (\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\n\n\n                                                    </Box>\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\n                                                    </Box>\n\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\n                                                    </Box>\n\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\n                                                    </Box>\n\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\n                                                    </Box>\n\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\n                                                        </Box>\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\n                                                    </Box>\n\n                                                </Box>\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\n                                                        </Box>\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\n                                                            <Button\n                                                                onPress={() => handleEdit(item.id)}\n                                                                flex={[1, 1, 1, 2, 2, 2]}\n                                                                padding={1}\n                                                                justifyContent='center'\n                                                                alignItems='center'\n                                                                flexDirection='row'>\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\n                                                            </Button>\n                                                            {item.active ? (\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\n                                                                </Button>\n                                                            ) : (\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\n                                                                </Button>\n                                                            )}\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\n                                                            </Button>\n                                                        </HStack>\n                                                    </Box>\n                                                </Box>\n\n                                            </Box>\n\n                                        ))}\n                                    </PresenceTransition>\n                                    <DataTable.Pagination\n                                        page={page}\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\n                                        onPageChange={(page) => setPage(page)}\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\n                                        optionsPerPage={optionsPerPage}\n                                        itemsPerPage={itemsPerPage}\n                                        setItemsPerPage={setItemsPerPage}\n                                        showFastPagination\n                                        optionsLabel={'Rows per page'}\n                                    />\n                                </DataTable>\n                            </Box>\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\n                                <Modal.Content>\n                                    <Modal.CloseButton />\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\n                                    <Modal.Body>\n\n                                        {selectedItem && (\n                                            <VStack>\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\n                                                {!validateEmail() && (\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\n                                                )}\n                                                {isEmailDuplicate && (\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\n                                                )}\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\n                                                {inputName === '' && (\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\n                                                )}\n                                                <VStack><Text>Password: </Text>\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\n                                                    </Pressable>} />\n                                                </VStack>\n\n                                                <VStack><Text>Type of Account:</Text>\n                                                    <HStack space={1} justifyContent=\"center\" >\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\n                                                            base: 90,\n                                                            md: 90,\n                                                            sm: 90,\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\n\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\n                                                            base: 90,\n                                                            md: 90,\n                                                            sm: 90,\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\n\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\n                                                            base: 90,\n                                                            md: 90,\n                                                            sm: 90,\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\n\n\n\n                                                    </HStack>\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\n                                                            base: 90,\n                                                            md: 90,\n                                                            sm: 90,\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\n                                                            base: 90,\n                                                            md: 90,\n                                                            sm: 90,\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\n                                                    </HStack>\n                                                </VStack>\n\n                                                {/* Add additional input fields or form components to edit the data */}\n                                            </VStack>\n                                        )}\n                                    </Modal.Body>\n                                    <Modal.Footer borderTopWidth={0}>\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\n                                        {/* Add a save button or other action button to update the data */}\n                                    </Modal.Footer>\n                                </Modal.Content>\n                            </Modal>\n\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\n                                <Modal.Content bgColor={'amber.500'}>\n                                    <Modal.CloseButton />\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\n                                    <Modal.Body bgColor={'amber.500'}>\n                                        {selectedItem && (\n                                            <VStack>\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\n                                                {/* Add additional input fields or form components to edit the data */}\n                                            </VStack>\n                                        )}\n                                    </Modal.Body>\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\n                                        {/* Add a save button or other action button to update the data */}\n                                    </Modal.Footer>\n                                </Modal.Content>\n                            </Modal>\n\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\n                                <Modal.Content bgColor={'error.300'}>\n                                    <Modal.CloseButton />\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\n                                    <Modal.Body bgColor={'error.300'}>\n                                        {selectedItem && (\n                                            <VStack>\n                                                <Text >Email: {selectedItem.email}</Text>\n                                                <Text >Name: {selectedItem.name}</Text>\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\n                                                {/* Add additional input fields or form components to edit the data */}\n                                            </VStack>\n                                        )}\n                                    </Modal.Body>\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\n                                        {/* Add a save button or other action button to update the data */}\n                                    </Modal.Footer>\n                                </Modal.Content>\n                            </Modal>\n\n\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\n                                <Modal.Content bgColor={'success.200'}>\n                                    <Modal.CloseButton />\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\n                                    <Modal.Body bgColor={'success.200'}>\n                                        {selectedItem && (\n                                            <VStack>\n                                                <Text>Email: {selectedItem.email}</Text>\n                                                <Text>Name: {selectedItem.name}</Text>\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\n                                                {/* Add additional input fields or form components to edit the data */}\n                                            </VStack>\n                                        )}\n                                    </Modal.Body>\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\n                                        {/* Add a save button or other action button to update the data */}\n                                    </Modal.Footer>\n                                </Modal.Content>\n                            </Modal>\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\n                                    <Modal.Body >\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\n                                    </Modal.Body>\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\n                                        </Button>\n                                    </Modal.Footer>\n                                </Modal.Content>\n                            </Modal>\n                        </ScrollView>\n                    </Box>\n                </Box>\n            </Box>\n        </NativeBaseProvider>\n    );\n}\n\n\n\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  PresenceTransition,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  Container,\n  Header,\n  Left,\n  Body,\n  Title,\n  Content,\n  Text,\n  Heading,\n  Flex,\n  VStack,\n  ScrollView,\n  SectionList,\n  useBreakpointValue,\n  Spinner,\n  Modal,\n  Divider,\n  Popover\n} from \"native-base\";\nimport {\n  FontAwesome,\n  Entypo,\n  MaterialIcons,\n  Ionicons,\n  Fontisto,\n  EvilIcons,\n  AntDesign,\n  MaterialCommunityIcons,\n  Feather,\n  FontAwesome5Brands,\n} from 'react-native-vector-icons';\nimport 'react-native-gesture-handler';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\nimport { useNavigation } from '@react-navigation/core'\nimport './../style.css';\nimport { debounce } from 'lodash';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FastImage from 'react-native-fast-image-web-support';\nimport { setLoginName } from './redux/store';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { useNavigate } from 'react-router-dom';\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\n\nconst { width, height } = Dimensions.get('window');\nconst windowHeight = Dimensions.get('window').height;\n\nconst firestore = getFirestore();\nconst getEmailOfCurrentUser = () => {\n  const user = auth.currentUser;\n  if (user) {\n    const email = user.email;\n    return email;\n  } else {\n    console.log('No user is currently authenticated');\n    return null;\n  }\n};\n\n// const Drawer = createDrawerNavigator();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default function AddAccount() {\n  const dispatch = useDispatch();\n  const loginName = useSelector((state) => state.loginName);\n  const [email, setEmail] = useState('');\n  const [type, setType] = useState('');\n  const logo = require('../../assets/C-Hub.png');\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\n  const screenWidth = Dimensions.get('window').width;\n  const [isMobileView, setIsMobileView] = useState(false);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [show, setShow] = React.useState(false);\n  const [show2, setShow2] = React.useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  // const navigation = useNavigation();\n  const navigate = useNavigate();\n\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\n  const [isSelected3, setIsSelected3] = useState(false);\n  const [isSelected4, setIsSelected4] = useState(false);\n\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\n\n\n  const [nameVerify, setNameVerify] = useState(false);\n  const [emailVerify, setEmailVerify] = useState(false);\n  const [passwordVerify, setPasswordVerify] = useState(false);\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  // const [inputName, setInputName] = useState('');\n  // const [inputEmail, setInputEmail] = useState('');\n  // const [inputPassword, setInputPassword] = useState('');\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\n  const [typeOfAccount, setTypeOfAccount] = useState('');\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const inputRefs = useRef([]);\n\n\n  const inputName = useRef(null);\n  const inputEmail = useRef(null);\n  const inputPassword = useRef(null);\n  const inputConfirmPassword = useRef(null);\n\n  const [passwordMatch, setPasswordMatch] = useState(false);\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\n\n  const [formattedTime, setFormattedTime] = useState('');\n\n  const [time, setTime] = useState('');\n  const fetchTimeRef = useRef();\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\n\n  const [showNamePopover, setShowNamePopover] = useState(false);\n\n\n\n\n  useEffect(() => {\n\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\n\n\n\n\n  const SuccessModal = () => {\n    return <Center>\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\n          <Modal.Body >\n\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\n          </Modal.Body>\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </Center>;\n  };\n\n\n  useEffect(() => {\n  }, [typeOfAccount]);\n\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (!user) {\n        // navigation.navigate(\"Login\")\n        navigate(\"/Login\")\n      }\n\n    })\n\n    return unsubscribe\n  }, [])\n\n  const firebaseFirestore = getFirestore();\n\n\n  const addLogToCollection = async (data) => {\n    try {\n      const firestore = getFirestore();\n      const logsCollectionRef = collection(firestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  // useEffect(() => {\n  //   const fetchTime = async () => {\n  //     try {\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\n  //       const { datetime } = response.data;\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n  //       setTime(formattedTime);\n  //     } catch (error) {\n  //       console.error('Error fetching time:', error);\n  //     }\n  //   };\n  //   const interval = setInterval(fetchTime, 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n  // useEffect(() => {\n  //   const fetchTime = async () => {\n  //     try {\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\n  //       const { datetime } = response.data;\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n  //       setTime(formattedTime);\n  //     } catch (error) {\n  //       console.error('Error fetching time:', error);\n  //     }\n  //   };\n\n  //   const interval = setInterval(() => {\n  //     if (isIntervalActive) {\n  //       fetchTime();\n  //     }\n  //   }, 1000);\n\n  //   return () => {\n  //     clearInterval(interval);\n  //   };\n  // }, [isIntervalActive]);\n\n  const openModal = () => {\n    setShowModal(true);\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\n  };\n\n\n\n\n\n  const handleAddAccount = async () => {\n    setIsDisabled(true);\n    setIsLoading(true);\n    if (\n      passwordLengthLabel === false ||\n      passwordMatch === false ||\n      passwordMatchLabel === false ||\n      validateEmail() === false ||\n      isNameEmpty === true ||\n      typeOfAccount === ''\n    ) {\n      setTimeout(() => {\n        // Reset loading and disabled state\n        setIsLoading(false);\n        setIsDisabled(false);\n      }, 500);\n    } else {\n      try {\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\n        if (signInMethods.length > 0) {\n          // Email already exists\n          setIsEmailDuplicate(true);\n          setEmailError(false);\n          validateEmail(false);\n          setIsLoading(false);\n          setIsDisabled(false);\n          return;\n        }\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\n          .then((userCredential) => {\n\n            const user = userCredential.user;\n\n\n\n            try {\n\n              // setTime(formattedTime);\n\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\n              const logData = {\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\n                timestamp: formattedTime,\n                keywords: [\n                  formattedTime.toLowerCase(),\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\n                  'Account Added'.toLowerCase(),\n                  'Added'.toLowerCase(),\n                  inputName.current.value.toLowerCase(),\n                  typeOfAccountDisplay.toLowerCase(),\n                  name.toLowerCase(),\n                  year.toLowerCase(),\n                  month.toLowerCase(),\n                  monthWithDay.toLowerCase(),\n                  date.toLowerCase(),\n                  day.toLowerCase(),\n                  time.toLowerCase(),\n                  timeWithMinutesSeconds.toLowerCase(),\n                ],\n                colorScheme: true,\n              };\n\n              setDoc(docRef, {\n                // Specify the data you want to add to the document\n                email: inputEmail.current?.value,\n                name: inputName.current?.value,\n                pass: inputPassword.current?.value,\n                type: typeOfAccount,\n                typeDisplay: typeOfAccountDisplay,\n                dateOfCreation: formattedTime,\n                lastUpdatedDate: formattedTime,\n                active: true,\n                // ...\n              });\n\n              addLogToCollection(logData);\n              console.log(logData);\n              console.log(formattedTime);\n              setIsLoading(false);\n              setIsDisabled(false);\n              handleClear();\n              openModal();\n\n              console.log('Document added with custom ID: ', customID);\n            } catch (error) {\n              console.error('Error adding document: ', error);\n            }\n\n\n\n\n            // Reset loading and disabled state\n\n\n\n          })\n          .catch((error) => {\n            console.log('An error occurred during sign-up. Please try again later.');\n            console.log(error);\n            setIsLoading(false);\n            setIsDisabled(false);\n          });\n      } catch (error) {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log('An error occurred while checking the email existence. Please try again later.');\n        // console.log(errorCode, errorMessage);\n        setIsLoading(false);\n        setIsDisabled(false);\n      }\n    }\n  };\n\n  const handleClear = () => {\n    const text = '';\n\n    inputName.current.value = \"\";\n    inputEmail.current.value = \"\";\n    inputPassword.current.value = \"\";\n    inputConfirmPassword.current.value = \"\";\n\n    setEmailError(false);\n    setIsEmailDuplicate(false);\n    setIsNameEmpty(true);\n\n    setPasswordLengthLabel(false);\n    setPasswordMatch(false);\n    setPasswordMatchLabel(true);\n\n    setTypeOfAccount('');\n    setTypeOfAccountDisplay('');\n    // setInputConfirmPassword('');\n    // setInputEmail('');\n    // setInputName('');\n    // setInputPassword('');\n\n\n  };\n\n  const registerInputRef = (index) => (ref) => {\n    inputRefs.current[index] = ref;\n  };\n\n  const handleToggleAccountTypeAdmin = () => {\n    const text = 'admin';\n\n\n    setTypeOfAccount(text);\n    setTypeOfAccountDisplay('Admin');\n  };\n\n  const handleToggleAccountTypeBooking = () => {\n    const text = 'booking';\n\n\n    setTypeOfAccount(text);\n\n    setTypeOfAccountDisplay('Booking');\n  };\n\n\n  const handleToggleAccountTypeSales = () => {\n    const text = 'sales';\n\n\n    setTypeOfAccount(text);\n\n    setTypeOfAccountDisplay('Sales');\n  };\n\n  const handleToggleAccountTypeHamanasu = () => {\n    const text = 'hamanasu';\n\n\n\n    setTypeOfAccount(text);\n    setTypeOfAccountDisplay('Hamanasu');\n  };\n\n\n  const handleToggleAccountTypeApi = () => {\n    const text = 'api';\n\n\n\n    setTypeOfAccount(text);\n    setTypeOfAccountDisplay('Api');\n  };\n\n  // const handleToggleLogs = useCallback(() => {\n\n\n  //   navigation.navigate(\"LOGS\");\n  // }, []);\n\n  // const handleToggleAddAccount = useCallback(() => {\n\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\n  // }, []);\n\n  // const handleToggleAccountList = useCallback(() => {\n\n  //   navigation.navigate(\"ACCOUNT LIST\");\n  // }, []);\n\n  // const handleToggleAddVehicle = useCallback(() => {\n\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\n  // }, []);\n\n  // const handleVehicleList = useCallback(() => {\n  //   navigation.navigate(\"VEHICLE LIST\");\n  // }, []);\n\n  const handleDocumentChange = (snapshot) => {\n    if (snapshot.exists()) {\n      const data = snapshot.data();\n      const isActive = data.active;\n\n      if (!isActive) {\n        signOut(auth)\n          .then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\")\n          })\n          .catch((error) => {\n            console.error('Error signing out:', error);\n          });\n      }\n    } else {\n      signOut(auth)\n        .then(() => {\n          // navigation.navigate('Login');\n          navigate(\"/Login\")\n        })\n        .catch((error) => {\n          console.error('Error signing out:', error);\n        });\n    }\n  };\n\n  const subscribeToFieldChange = () => {\n    const userId = auth.currentUser?.email;\n    if (userId) {\n      const userRef = doc(firestore, 'accounts', userId);\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n      return unsubscribe;\n    } else {\n      // Return a no-op function if there's no user\n      return () => {\n        navigate(\"/login\")\n      };\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = subscribeToFieldChange();\n\n    return () => {\n      // This will now always be a function\n      unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentUserEmail = getEmailOfCurrentUser();\n    if (currentUserEmail) {\n      getFieldValueByEmail(currentUserEmail);\n      setEmail(currentUserEmail)\n      const documentId = currentUserEmail;\n      listenForNameChange(documentId);\n    }\n  }, []);\n\n  const listenForNameChange = (documentId) => {\n    const userRef = doc(db, 'accounts', documentId);\n\n    const unsubscribe = onSnapshot(userRef, (doc) => {\n      if (doc.exists()) {\n        const name = doc.data().name;\n        const type = doc.data().type;\n        setName(name);\n        setType(type);\n        // Perform any necessary actions with the name value\n      } else {\n        console.log('Document does not exist');\n      }\n    });\n\n    // To stop listening for updates, you can call unsubscribe()\n    // unsubscribe();\n  };\n\n\n\n  const getFieldValueByEmail = async (email) => {\n    try {\n      const accountDocRef = doc(firestore, 'accounts', email);\n      const accountDocSnapshot = await getDoc(accountDocRef);\n\n      if (accountDocSnapshot.exists()) {\n        const data = accountDocSnapshot.data();\n        const fieldType = data.type;\n        const fieldName = data.name;\n        dispatch(setLoginName(data.name));\n\n      } else {\n        console.log('Document does not exist');\n      }\n    } catch (error) {\n      console.error('Error fetching field value:', error);\n    }\n  };\n\n\n  const handlePasswordChange = () => {\n    // const inputPasswordValue = inputPassword.current?.value;\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n\n    // setPasswordMatch(\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\n    // );\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\n    handlePasswordStatus();\n  };\n\n  const handleConfirmPasswordChange = () => {\n    const inputPasswordValue = inputPassword.current?.value;\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n\n    setPasswordMatch(\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\n    );\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\n  };\n\n\n  const handlePasswordStatus = () => {\n    const inputPasswordValue = inputPassword.current?.value;\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n\n    setPasswordMatch(\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\n    );\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\n\n  };\n\n  // const isPasswordMatch = () => {\n  //   const inputPasswordValue = inputPassword.current?.value;\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n\n  //   return (\n  //     inputPasswordValue === inputConfirmPasswordValue &&\n  //     inputPasswordValueLength >= 6\n  //   );\n  // };\n\n  // const isAccountType = () => {\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\n  // };\n\n  // const isPasswordMatchLabel = () => {\n  //   const inputPasswordValue = inputPassword.current?.value;\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\n  // };\n\n  // const isPasswordLengthLabel = () => {\n  //   const inputPasswordValue = inputPassword.current?.value;\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\n  //   return inputPasswordValueLength >= 6;\n  // };\n\n\n  const handleEmailChange = () => {\n    setIsEmailDuplicate(false);\n    handleEmailSubmit();\n  };\n\n  const handleNameChange = () => {\n    setIsNameEmpty(inputName.current?.value === '')\n  };\n\n\n  const validateEmail = () => {\n    const emailValue = inputEmail.current?.value;\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const isValid = emailRegex.test(emailValue);\n\n    return isValid;\n  };\n\n  const handleEmailSubmit = (value) => {\n    setEmailError(validateEmail(value));\n\n    if (emailError) {\n      // console.log(emailError);\n      // setEmailError(validateEmail());\n    } else {\n\n    }\n  };\n\n\n  const handleSignOut = () => {\n\n    signOut(auth).then(() => {\n      // navigation.navigate('Login');\n      navigate(\"/Login\")\n      setEmail('');\n      setName('');\n    }).catch((error) => {\n      // An error happened.\n    });\n\n\n  };\n\n  // useEffect(() => {\n  //   const handleScreenResize = () => {\n  //     const screenWidth = Dimensions.get('window').width;\n  //     setIsMobileView(screenWidth < 1200);\n  //   };\n\n  //   // Initial check on component mount\n  //   handleScreenResize();\n\n  //   // Listen for screen dimension changes\n  //   Dimensions.addEventListener('change', handleScreenResize);\n\n  //   // Cleanup event listener on component unmount\n  //   return () => {\n  //     Dimensions.removeEventListener('change', handleScreenResize);\n  //   };\n  // }, []);\n\n  const sidebarListData = [{\n    title: \"VEHICLE INFORMATION INPUT\",\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\n  },];\n\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n  const showPopover = () => {\n    setShowNamePopover(true);\n  };\n\n  // Function to hide the Popover\n  const hidePopover = () => {\n    setShowNamePopover(false);\n  };\n  const NamePopover = ({ name, handleSignOut }) => {\n    const [showNamePopover, setShowNamePopover] = useState(false);\n\n    const showPopover = () => {\n      setShowNamePopover(!showNamePopover);\n    };\n\n    return (\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n        <Flex direction=\"row-reverse\">\n          <Popover\n            isOpen={showNamePopover}\n            trigger={(triggerProps) => (\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n              </Text>\n            )}\n            onClose={() => setShowNamePopover(!showNamePopover)}\n            placement='bottom right'\n            trapFocus={false}\n          >\n            <Popover.Content backgroundColor={'#0642F4'}>\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n              <Popover.Body backgroundColor={'#0642F4'}>\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                  Logout\n                </Button>\n              </Popover.Body>\n            </Popover.Content>\n          </Popover>\n        </Flex>\n      </Box>\n    );\n  };\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    image: {\n      flex: 1,\n    },\n  });\n  return (\n    <NativeBaseProvider>\n      <SuccessModal />\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n        {/* Header */}\n        <Box\n          px=\"3\"\n          bgColor='#0642f4'\n          height={54}\n          position=\"sticky\"\n          top={0}\n          zIndex={999}\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          borderBottomWidth={0}\n          borderBottomColor={'cyan.500'}\n\n        >\n\n          <SideDrawer\n            selectedScreen={selectedScreen} />\n\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n            <FastImage\n              source={{\n                uri: logo,\n                priority: FastImage.priority.high,\n              }}\n              resizeMode={FastImage.resizeMode.stretch}\n              style={styles.image}\n            />\n          </Box>\n\n          {/* {showDrawerIcon && <MobileViewDrawer\n            selectedScreen={selectedScreen}\n          />} */}\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\n\n            <FastImage\n              source={{\n                uri: logo2,\n                priority: FastImage.priority.high,\n              }}\n              resizeMode={FastImage.resizeMode.stretch}\n              style={styles.image}\n            />\n          </Box>\n\n\n          <View style={{ alignItems: 'center', flex: 1 }}>\n            <QRCodeScanner />\n          </View>\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\n\n\n        </Box>\n\n        {/* Content */}\n        <Box flex={[1]} flexDirection=\"row\" >\n\n\n          {/* Main Content */}\n          <Box flex={1} flexGrow={1} minHeight={0}>\n            {/* Main Content Content */}\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\n\n              {/* <AddAccount/> */}\n\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\n\n\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\n                  <Center flex={1}>\n                    <Center px=\"3\">\n\n\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\n                        <Input w={{\n                          base: \"90%\",\n                          md: \"90%\",\n                          sm: \"90%\",\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\n                        <Input w={{\n                          base: \"90%\",\n                          md: \"90%\",\n                          sm: \"90%\",\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\n\n\n                        <Input w={{\n                          base: \"90%\",\n                          md: \"90%\",\n                          sm: \"90%\",\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\n                        <Input w={{\n                          base: \"90%\",\n                          md: \"90%\",\n                          sm: \"90%\",\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\n                        {!validateEmail() && (\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\n                        )}\n                        {isEmailDuplicate && (\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\n                        )}\n                        {!passwordLengthLabel && (\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\n                        )}\n                        {!passwordMatchLabel && (\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\n                        )}\n\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\n                            <Button\n                              margin={1}\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\n                              size=\"sm\"\n                              borderWidth='1'\n                              borderColor='white'\n                              w={{ base: 90, md: 90, sm: 90 }}\n                              onPress={handleToggleAccountTypeHamanasu}\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\n                            >\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\n                            </Button>\n\n                            <Button\n                              margin={1}\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\n                              size=\"sm\"\n                              borderWidth='1'\n                              borderColor='white'\n                              w={{ base: 90, md: 90, sm: 90 }}\n                              onPress={handleToggleAccountTypeBooking}\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\n                            >\n                              <Text style={{ color: 'white', }}>Booking</Text>\n                            </Button>\n\n                            <Button\n                              margin={1}\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\n                              size=\"sm\"\n                              borderWidth='1'\n                              borderColor='white'\n                              w={{ base: 90, md: 90, sm: 90 }}\n                              onPress={handleToggleAccountTypeSales}\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\n                            >\n                              <Text style={{ color: 'white', }}>Sales</Text>\n                            </Button>\n\n                            <Button\n                              margin={1}\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\n                              size=\"sm\"\n                              borderWidth='1'\n                              borderColor='white'\n                              w={{ base: 90, md: 90, sm: 90 }}\n                              onPress={handleToggleAccountTypeAdmin}\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\n                            >\n                              <Text style={{ color: 'white', }}>Admin</Text>\n                            </Button>\n\n                            <Button\n                              margin={1}\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\n                              size=\"sm\"\n                              borderWidth='1'\n                              borderColor='white'\n                              w={{ base: 90, md: 90, sm: 90 }}\n                              onPress={handleToggleAccountTypeApi}\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\n                            >\n                              <Text style={{ color: 'white', }}>API</Text>\n                            </Button>\n                          </Flex>\n                        </Box>\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\n                            base: 130,\n                            md: 130,\n                            sm: 130,\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\n                            base: 130,\n                            md: 130,\n                            sm: 130,\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\n\n                        </HStack>\n\n\n                      </Stack>\n\n                    </Center>\n\n\n                  </Center>\n\n\n                </Box>\n\n              </Box>\n\n            </ScrollView>\n          </Box>\n        </Box>\n      </Box>\n    </NativeBaseProvider>\n\n\n  );\n}\n\n\n\n","/* The above code is a JavaScript code snippet that imports various components and libraries from the\nNativeBase framework and React Native for building mobile applications. It also includes imports for\nicons from different icon libraries like AntDesign, FontAwesome, Ionicons, etc. Additionally, it\nimports functions and utilities from Firebase for authentication, Firestore database operations, and\nstorage. */\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  HStack,\n  Icon,\n  Image as NativeImage,\n  Input,\n  Modal,\n  NativeBaseProvider,\n  Popover,\n  Pressable,\n  Spinner,\n  Text,\n  VStack,\n  useBreakpointValue,\n  TextArea,\n  InputRightAddon,\n  InputGroup,\n  Select,\n  CheckIcon,\n  ScrollView,\n  PresenceTransition,\n  Drawer,\n  InputLeftAddon,\n  Heading,\n  FormControl,\n  WarningOutlineIcon\n} from 'native-base';\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform, View } from 'react-native';\nimport 'react-native-gesture-handler';\nimport {\n  AntDesign,\n  FontAwesome,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Entypo\n} from 'react-native-vector-icons';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useNavigation } from '@react-navigation/core';\nimport axios from 'axios';\nimport { signOut } from 'firebase/auth';\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\nimport moment from 'moment';\nimport './../style.css';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\nimport { DragSortableView } from \"react-native-drag-sort\";\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { cloneDeep } from 'lodash';\nimport ImageMarker, { Position } from \"react-native-image-marker\";\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\n\n\nimport {\n  // setModelData,\n  setMakeData,\n  setIsLoading,\n  setSelectedImages,\n  setIsAddPhotoVisible,\n  setAddAnotherImages,\n  setLoginName,\n  setDeleteImageVisible,\n  setExpenseNameData,\n  setPaidToData,\n  setCurrentDate,\n  setSupplyChainsCostsData,\n  setSelectedExpenseName,\n  setSelectedPaidTo,\n  setLoadingModalVisible,\n  setIsSuccessModalOpen,\n  setIsUpdateSuccessModalOpen\n\n} from './redux/store'\n\n\nimport \"setimmediate\";\n\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\nimport FastImage from 'react-native-fast-image-web-support';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\n\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\nimport { nanoid } from 'nanoid';\nimport { useNavigate } from 'react-router-dom';\n\nconst { width } = Dimensions.get('window');\n\n\nconst childrenWidth = 76;\nconst childrenHeight = 76;\nconst marginChildrenTop = 7;\nconst marginChildrenBottom = 0;\n\nlet globalJpyToUsd = '';\nlet globalUsdToJpy = '';\n\nlet globalSupplyChainCostsData = [];\nlet globalSelectedExpenseName = '';\nlet globalSupplyChainCostsAmount = 0;\nlet globalSelectedPaidTo = '';\nlet globalModelDataVariable = [];\nlet globalMakeDataVariable = [];\nlet globalRegYearDataVariable = [];\nlet globalPortDataVariable = [];\nlet globalSalesDataVariable = [];\nlet globalBuyerDataVariable = [];\nlet globalTransmissionDataVariable = [];\nlet globalExteriorColorDataVariable = [];\nlet globalFuelDataVariable = [];\nlet globalDriveTypeDataVariable = [];\nlet globalBodyTypeDataVariable = [];\nlet globalSelectedImages = [];\nlet globalVehicleFolderName = '';\nlet selectedScreen = 'ADD NEW VEHICLE'\nlet globalReferenceNumber = '';\nlet globalSPCSelectedDate = '';\nlet globalFobPrice = '';\n\nconst firestore = getFirestore();\n\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\n\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\n\n  return (\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\n      <Modal.Content bgColor={'green.100'}>\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n          <Text textAlign={'center'} color={'#102A43'} bold>\n            😊😎 Success! 😎😊\n          </Text>\n        </Modal.Header>\n        <Modal.Body\n          justifyContent={'center'}\n          alignItems={'center'}\n          bgColor={'green.200'}\n          borderLeftWidth={4}\n          borderLeftColor={'green.600'}\n          margin={5}\n        >\n          <Box flex={1}>\n            <Text color={'green.600'} bold>\n              {headerText}\n              {/* Vehicle Added! */}\n            </Text>\n            <Text color={'green.600'}>\n              {bodyText}\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\n            </Text>\n          </Box>\n        </Modal.Body>\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n          <HStack space={5} flex={1}>\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\n              Ok\n            </Button>\n          </HStack>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\n\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\n\n  return (\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\n      <Modal.Content bgColor={'green.100'}>\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n          <Text textAlign={'center'} color={'#102A43'} bold>\n            😊😎 Success! 😎😊\n          </Text>\n        </Modal.Header>\n        <Modal.Body\n          justifyContent={'center'}\n          alignItems={'center'}\n          bgColor={'green.200'}\n          borderLeftWidth={4}\n          borderLeftColor={'green.600'}\n          margin={5}\n        >\n          <Box flex={1}>\n            <Text color={'green.600'} bold>\n              {headerText}\n              {/* Vehicle Added! */}\n            </Text>\n            <Text color={'green.600'}>\n              {bodyText}\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\n            </Text>\n          </Box>\n        </Modal.Body>\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n          <HStack space={5} flex={1}>\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\n              Ok\n            </Button>\n          </HStack>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst LoadingModal = () => {\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\n\n\n  return (\n\n    <Box\n      position=\"absolute\"\n      top={0}\n      bottom={0}\n      left={0}\n      right={0}\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\n      flex={1}\n      display={loadingModalVisible ? '' : 'none'}\n    >\n      {/* Content within the modal */}\n      <Center flex={1}>\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <Spinner size=\"lg\" color=\"white\" />\n          <Text color={'white'} selectable={false}>Loading, please wait!</Text>\n        </Box>\n      </Center>\n    </Box>\n\n\n  );\n\n}\n\n\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\n\n  const dispatch = useDispatch();\n  const expenseNameData = useSelector((state) => state.expenseNameData);\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\n  const [key, setKey] = useState(nanoid());\n\n\n\n  return <Select\n    selectedValue={selectedExpenseName}\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\n    flex={3}\n    onValueChange={(value) => {\n      globalSelectedExpenseName = value\n      dispatch(setSelectedExpenseName(value));\n    }}\n    accessibilityLabel=\"Choose Expense Name\"\n    placeholder=\"Choose Expense Name\"\n    _selectedItem={{\n      bg: \"teal.600\",\n      endIcon: <CheckIcon size=\"5\" />\n    }}>\n    {expenseNameData.map((item) => (\n\n      <Select.Item key={item} label={item} value={item} />\n\n    ))}\n  </Select>\n\n\n};\nconst SelectPaidTo = ({ paidToIsError, }) => {\n\n  const dispatch = useDispatch();\n  const paidToData = useSelector((state) => state.paidToData);\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\n\n\n\n  return <Select\n    selectedValue={selectedPaidTo}\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\n    flex={3}\n    onValueChange={(value) => {\n      globalSelectedPaidTo = value\n      dispatch(setSelectedPaidTo(value));\n    }}\n    accessibilityLabel=\"Choose Paid To\"\n    placeholder=\"Choose Paid To\"\n    _selectedItem={{\n      bg: \"teal.600\",\n      endIcon: <CheckIcon size=\"5\" />\n    }}>\n    {paidToData.map((item) => (\n\n      <Select.Item key={item} label={item} value={item} />\n\n    ))}\n  </Select>\n    ;\n};\n\n\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\n\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n\n\n  const handleModalCalendarOpen = () => {\n    setModalCalendarVisible(true);\n  };\n\n  const handleModalCalendarClose = () => {\n    setModalCalendarVisible(false);\n  };\n\n\n\n  return (\n\n    <>\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\n      </Pressable>\n\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\n        <Modal.CloseButton />\n        <Modal.Content>\n          <Box height={'full'} flex={1}>\n\n            <Calendar\n              onDayPress={useCallback(day => {\n                setSelectedDate(day.dateString);\n                // console.log(day.dateString);\n                globalSPCSelectedDate = day.dateString;\n                handleModalCalendarClose();\n              }, [])}\n              markedDates={{\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\n              }}\n              renderArrow={(direction) => (\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\n              )}\n              enableSwipeMonths={true}\n              initialDate={selectedDate}\n              showSixWeeks />\n\n          </Box>\n\n        </Modal.Content>\n\n      </Modal></>\n\n  );\n\n}\n\nconst SupplyChainsCosts = ({\n  handleAddExpenseNameTextChange,\n  textAreaAddExpenseName,\n  inputExpenseAmount,\n  handleInputExpenseAmountChange,\n  handleAddPaidToTextChange,\n  paidToData,\n  inputCarNotes,\n\n}) => {\n\n  const dispatch = useDispatch();\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\n  const [sccData, setSccData] = useState([]);\n  const currentDate = useSelector((state) => state.currentDate);\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n  const expenseNameData = useSelector((state) => state.expenseNameData);\n\n  const [clearModalVisible, setClearModalVisible] = useState(false);\n  const [data, setData] = useState([]);\n\n  const [selectedDate, setSelectedDate] = useState(currentDate);\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\n  const [paidToIsError, setPaidToIsError] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\n  const selectExpenseNameRef = useRef(null);\n  const selectPaidToRef = useRef(null);\n\n\n\n\n\n  const handleModalSupplyChainsCostsOpen = () => {\n    setSupplyChainsCostsModalVisible(true);\n  };\n\n  const handleModalSupplyChainsCostsClose = () => {\n    setSupplyChainsCostsModalVisible(false);\n    inputExpenseAmount.current?.clear();\n    globalSelectedExpenseName = '';\n    setSelectResetKey(nanoid());\n    globalSelectedPaidTo = '';\n    setSelectedDate(currentDate);\n    globalSPCSelectedDate = currentDate;\n    dispatch(setSelectedExpenseName(''));\n    dispatch(setSelectedPaidTo(''));\n    setInputAmountIsError(false);\n    setExpenseNameIsError(false);\n    setPaidToIsError(false);\n  };\n\n  const handleClearModalOpen = () => {\n    setClearModalVisible(true);\n  };\n\n  const handleClearModalClose = () => {\n    setClearModalVisible(false);\n  };\n\n  useEffect(() => {\n    const amounts = supplyChainsCostsData.map((item) => {\n      const expenseName = Object.keys(item)[0];\n      const expenseData = item[expenseName];\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\n    });\n\n    // Use reduce to add up all the amounts\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    const formattedTotalAmount = totalAmount.toLocaleString();\n    setTotalAmount(formattedTotalAmount);\n    globalSupplyChainCostsAmount = formattedTotalAmount;\n\n  }, [supplyChainsCostsData]);\n\n  const handleSave = useCallback(() => {\n\n\n\n    if (inputExpenseAmount.current?.value == ''\n      || inputExpenseAmount.current?.value == 0\n      || globalSelectedExpenseName == ''\n      || globalSelectedPaidTo == ''\n    ) {\n\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\n        setInputAmountIsError(true);\n      }\n\n      if (globalSelectedExpenseName == '') {\n        setExpenseNameIsError(true);\n      }\n\n      if (globalSelectedPaidTo == '') {\n        setPaidToIsError(true);\n      }\n    }\n\n    else {\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\n\n      if (existingIndex !== -1) {\n        // If an entry with the same expense name exists, update it\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\n        updatedData[existingIndex][globalSelectedExpenseName] = {\n          expenseName: globalSelectedExpenseName,\n          amount: inputExpenseAmount.current?.value,\n          date: globalSPCSelectedDate,\n          paidName: globalSelectedPaidTo,\n        };\n        globalSupplyChainCostsData = updatedData;\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\n        dispatch(setSelectedExpenseName(''));\n        dispatch(setSelectedPaidTo(''));\n        inputExpenseAmount.current.clear();\n        globalSelectedExpenseName = '';\n        globalSelectedPaidTo = '';\n        setSelectedDate(currentDate);\n        globalSPCSelectedDate = currentDate;\n\n      } else {\n        setInputAmountIsError(false);\n        setExpenseNameIsError(false);\n        setPaidToIsError(false);\n        // If no entry with the same expense name exists, add a new entry\n        const newData = {\n          [globalSelectedExpenseName]: {\n            expenseName: globalSelectedExpenseName,\n            amount: inputExpenseAmount.current?.value,\n            date: globalSPCSelectedDate,\n            paidName: globalSelectedPaidTo,\n          },\n        };\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\n        console.log(globalSupplyChainCostsData);\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\n        setSelectResetKey(nanoid());\n        inputExpenseAmount.current.clear();\n        globalSelectedExpenseName = '';\n        globalSelectedPaidTo = '';\n        setSelectedDate(currentDate);\n        globalSPCSelectedDate = currentDate;\n        dispatch(setSelectedExpenseName(''));\n        dispatch(setSelectedPaidTo(''));\n\n\n      }\n\n    }\n\n\n\n  }, []);\n\n\n\n  const handleEditPress = useCallback((item) => {\n    console.log(item.amount);\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\n    dispatch(setSelectedExpenseName(item.expenseName));\n    globalSelectedExpenseName = item.expenseName;\n    dispatch(setSelectedPaidTo(item.paidName));\n    globalSelectedPaidTo = item.paidName;\n    globalSPCSelectedDate = item.date;\n    setSelectedDate(item.date);\n  }, [])\n\n\n  const handleDeleteItem = (expenseName) => {\n    // Find the index of the item to be deleted\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\n\n    if (itemIndex !== -1) {\n      // Create a copy of the data array and remove the item at the found index\n      const newData = [...globalSupplyChainCostsData];\n      newData.splice(itemIndex, 1);\n\n      // Update the state with the new array\n      dispatch(setSupplyChainsCostsData(newData));\n      globalSupplyChainCostsData = newData;\n    }\n  };\n\n  const handleFirstModalClose = () => {\n    setSupplyChainsCostsModalVisible(false);\n\n  };\n  const handleFirstModalOpen = () => {\n    setSupplyChainsCostsModalVisible(true);\n\n  };\n  return (\n    <>\n      <Button\n        borderRadius={3}\n        flex={1}\n        onPress={handleModalSupplyChainsCostsOpen}\n        variant={'outline'}\n        _text={{ color: 'black', }}\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\n      </Button>\n\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\n          <Modal.CloseButton />\n          <Modal.Header bgColor={'#7B9CFF'}>\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\n\n\n          </Modal.Header>\n\n          <Modal.Body>\n            <Box height={'full'}>\n              <Box paddingBottom={5}>\n                <Box flexDir={'row'} paddingBottom={1} >\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\n\n                    <SupplyChainsCostsSortAndAddModal\n                      docName='ExpenseName'\n                      handleAddTextChange={handleAddExpenseNameTextChange}\n                      textAreaAdd={textAreaAddExpenseName}\n                      title='Expense Name'\n                      dataName={'expenseName'}\n                      databaseInit={projectExtensionFirestore}\n                      headerText=\"Rearrange/Add Expense Name\"\n                      data={expenseNameData}\n                      handleFirstModalClose={handleFirstModalClose}\n                      handleFirstModalOpen={handleFirstModalOpen}\n                    />\n                  </Box>\n\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\n                  {/* <Select\n                    // ref={selectExpenseNameRef}\n                    key={`expenseName${resetKey}`}\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\n                    flex={3}\n                    onValueChange={(value) => {\n                      globalSelectedExpenseName = value\n                    }}\n                    accessibilityLabel=\"Choose Expense Name\"\n                    placeholder=\"Choose Expense Name\"\n                    _selectedItem={{\n                      bg: \"teal.600\",\n                      endIcon: <CheckIcon size=\"5\" />\n                    }}>\n                    {expenseNameData.map((item) => (\n\n                      <Select.Item key={item} label={item} value={item} />\n\n                    ))}\n                  </Select> */}\n\n\n                </Box>\n\n\n                <Box flexDir={'row'} paddingBottom={1} >\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\n                  </Box>\n                  <Input\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\n                    flex={3}\n                    ref={inputExpenseAmount}\n                    onChangeText={handleInputExpenseAmountChange}\n                    placeholder=\"Amount\"\n                    bgColor={'white'}\n                    placeholderTextColor={'muted.400'}\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\n                </Box>\n\n                <Box flexDir={'row'} paddingBottom={1} >\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\n                  </Box>\n\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\n                </Box>\n\n                <Box flexDir={'row'} paddingBottom={1} >\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\n\n\n                    <SupplyChainsCostsSortAndAddModal\n                      docName='PaidTo'\n                      handleAddTextChange={handleAddPaidToTextChange}\n                      textAreaAdd={textAreaAddExpenseName}\n                      title='Paid To'\n                      dataName={'paidTo'}\n                      databaseInit={projectExtensionFirestore}\n                      headerText=\"Rearrange/Add Paid To\"\n                      data={paidToData}\n                      handleFirstModalClose={handleFirstModalClose}\n                      handleFirstModalOpen={handleFirstModalOpen}\n                    />\n\n                  </Box>\n\n                  <SelectPaidTo paidToIsError={paidToIsError} />\n                </Box>\n\n                <Button\n                  onPress={handleSave}\n                  colorScheme={'success'}\n                  size={'sm'}\n                  borderRadius={5}\n                  margin={1}\n                  flex={1}\n                  width={'40%'}\n                  alignSelf={'center'}\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\n                >\n                  ADD\n                </Button>\n              </Box>\n\n              <Box>\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\n                </Box>\n                {supplyChainsCostsData.map((item, index) => {\n                  const expenseName = Object.keys(item)[0];\n                  const expenseData = item[expenseName];\n\n                  return (\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\n                      justifyContent={'center'} alignItems={'center'}>\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\n\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\n                          {({\n                            isHovered,\n                            isFocused,\n                            isPressed\n                          }) => {\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\n                            </Box>\n                          }}\n                        </Pressable>\n\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\n                          {({\n                            isHovered,\n                            isFocused,\n                            isPressed\n                          }) => {\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\n                            </Box>\n                          }}\n                        </Pressable>\n                      </Box>\n                    </Box>\n                  );\n                })}\n              </Box>\n\n            </Box>\n\n\n          </Modal.Body>\n\n\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\n            <Box flex={4} />\n            <Button\n              onPress={handleModalSupplyChainsCostsClose}\n              colorScheme={'gray'}\n              size={'sm'}\n              borderRadius={5}\n              margin={1}\n              flex={1}\n            >\n              Close\n            </Button>\n          </HStack>\n\n        </Modal.Content>\n      </Modal>\n\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\n        <Modal.Content bgColor={'amber.100'}>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\n            <Text color={'#102A43'} bold>\n              Clear\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'amber.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'amber.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'amber.600'} bold>\n                Warning!\n              </Text>\n              <Text color={'amber.600'}>\n                Are you sure you want to clear?\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\n            <HStack space={5} flex={1}>\n              <Button\n                onPress={handleClearModalClose}\n                colorScheme={'warmGray'}\n                flex={1}\n                size={'sm'}\n                borderRadius={5}\n              >\n                No\n              </Button>\n              <Button\n                onPress={() => {\n\n                }}\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\n                Clear\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n\n    </>\n  );\n};\n\nconst getEmailOfCurrentUser = () => {\n  const user = projectControlAuth.currentUser;\n  if (user) {\n    const email = user.email;\n    return email;\n  } else {\n    console.log('No user is currently authenticated');\n    return null;\n  }\n};\n\n// const Drawer = createDrawerNavigator();\n\n\nconst storage = getStorage(projectExtensionFirebase);\n\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\n\n  const handleModalDeleteOpen = () => {\n    setModalDeleteImagesVisible(true);\n  };\n\n  const handleModalDeleteClose = () => {\n    setModalDeleteImagesVisible(false);\n  };\n\n  return (\n    <>\n      <Box\n        position=\"absolute\"\n        top={0}\n        right={0}\n        bg=\"error.500\"\n        borderRadius={3}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        display={isAddPhotoVisible ? 'none' : 'block'}\n      >\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\n        </Pressable>\n      </Box>\n\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\n        <Modal.Content bgColor={'error.100'}>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\n            <Text color={'#102A43'} bold>\n              Clear Images\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'error.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'danger.400'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'danger.500'} bold>\n                Alert!\n              </Text>\n              <Text color={'danger.500'}>\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\n                No\n              </Button>\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\n                Clear Images\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\n  const dispatch = useDispatch();\n  const { width } = Dimensions.get('window');\n\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\n  const [boolean, setBoolean] = useState(true);\n  const selectedImages = useSelector((state) => state.selectedImages);\n  // const [selectedImages, setSelectedImages] = useState([]);\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\n  const [scrollEnabled, setscrollEnabled] = useState(true);\n  const [isEnterEdit, setisEnterEdit] = useState(false);\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\n  const [modalImageUri, setModalImageUri] = useState('');\n  const [imageModalVisible, setImageModalVisible] = useState(false);\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\n\n  const handleImagePress = useCallback((uri) => {\n    // const base64Image = toString(uri);\n    // setIsLoading(true);\n    setIsCursorLoading(true);\n    setModalImageUri(uri);\n    setImageModalVisible(true);\n    // console.log(\"URI: \", uri);\n\n  }, []);\n\n  const styles = StyleSheet.create({\n    dropdown: {\n      margin: 16,\n      height: 50,\n      borderBottomColor: 'gray',\n      borderBottomWidth: 0.5,\n    },\n    icon: {\n      marginRight: 5,\n    },\n    placeholderStyle: {\n      fontSize: 16,\n    },\n    selectedTextStyle: {\n      fontSize: 16,\n    },\n    iconStyle: {\n      width: 20,\n      height: 20,\n    },\n    inputSearchStyle: {\n      height: 40,\n      fontSize: 16,\n    },\n    container: {\n      flex: 1,\n      paddingTop: 20,\n\n    },\n    txt: {\n      fontSize: 18,\n      lineHeight: 24,\n      padding: 5\n    },\n    sort: {\n    },\n    item_children: {\n      width: 90,\n      height: 90,\n      backgroundColor: 'black',\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    item_delete_icon: {\n      width: 14,\n      height: 14,\n      position: \"absolute\",\n      right: 1,\n      top: 1\n    },\n    item_icon: {\n      width: 90,\n      height: 90,\n      resizeMode: \"contain\",\n      position: \"absolute\"\n    }\n  });\n\n  const handleImageAddToSelection = async () => {\n    dispatch(setDeleteImageVisible(true));\n    if (selectedImages.length === 40) {\n      return; // Limit reached, do not add a new image\n    }\n\n    const options = {\n      mediaType: 'photo',\n      // quality: 10,\n      maxWidth: 1000,\n      maxHeight: 1000,\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n\n    try {\n      const response = await launchImageLibrary(options);\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n        return;\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n        return;\n      } else if (!response.assets || response.assets.length === 0) {\n        console.log('No images selected.');\n        return;\n      }\n\n      // Filter out images larger than 10MB\n      const newImages = [...selectedImages];\n      const promises = response.assets.map(async (asset) => {\n        const file = await fetch(asset.uri).then((res) => res.blob());\n        const fileSize = file.size;\n        if (fileSize / 1024 / 1024 < 10) {\n          const exists = newImages.some((image) => image.uri === asset.uri);\n          if (!exists) {\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\n          }\n        } else {\n          setIsFileSizeLimitModal(true);\n        }\n      });\n\n      await Promise.all(promises);\n\n      const limitedImages = newImages.slice(0, 40);\n      dispatch(setSelectedImages(limitedImages));\n      globalSelectedImages = limitedImages;\n\n      if (limitedImages.length >= 40) {\n        dispatch(setAddAnotherImages(false));\n      }\n\n      // limitedImages.forEach((image) => {\n      //   console.log(`File size: ${image.fileSize}`);\n      // });\n\n    } catch (error) {\n      console.log('ImagePicker Error: ', error);\n    }\n  };\n\n  const reloadData = useCallback(() => {\n    if (selectedImages.length > 0) {\n      // ... Logic to reload data using selectedImages and width\n\n      // Assuming your logic has updated selectedImages, you can directly use it here\n      const updatedSelectedImages = [...selectedImages];\n\n      // Dispatch the updatedSelectedImages array to the state\n      dispatch(setSelectedImages(updatedSelectedImages));\n    }\n\n  }, [widthState]);\n\n  useEffect(() => {\n    const handleWidthChange = ({ window }) => {\n      setWidthState(window.width);\n    };\n\n    Dimensions.addEventListener('change', handleWidthChange);\n\n    return () => {\n      Dimensions.removeEventListener('change', handleWidthChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    reloadData();\n  }, [reloadData]);\n\n\n\n  const handleClearImages = useCallback(() => {\n    setModalDeleteImagesVisible(false);\n    // dispatch(setSelectedImages([]));\n    // globalSelectedImages = [];\n    // dispatch(setIsAddPhotoVisible(true));\n    // dispatch(setAddAnotherImages(false));\n    // dispatch(setDeleteImageVisible(true));\n    handleClearImagesExtra();\n\n  }, []);\n\n\n\n  const renderItem = useCallback((item) => {\n\n    // console.log(item.id);\n    // console.log(index)\n    if (isEnterEdit) {\n\n      return (\n\n        <Box key={item.uri} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n            />\n            <Box\n              position=\"absolute\"\n              top={-3}\n              right={-3}\n              bg=\"rgba(0, 0, 0, 0.5)\"\n              borderRadius={10}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\n              </Pressable>\n            </Box>\n          </Box>\n        </Box>\n\n      );\n    } else {\n\n      return (\n\n        <Box key={item.id} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n\n            />\n\n            <Box\n              position=\"absolute\"\n              top={-3}\n              right={-3}\n              bg=\"rgba(0, 0, 0, 0.5)\"\n              borderRadius={10}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\n              </Pressable>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n\n\n  }, []);\n\n  const getImagesRenderItem = useCallback((item) => {\n\n    // console.log(item.id);\n    // console.log(index)\n    if (isEnterEdit) {\n\n      return (\n\n        <Box key={item.uri} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n            />\n\n\n          </Box>\n        </Box>\n\n      );\n    } else {\n\n      return (\n\n        <Box key={item.id} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n\n            />\n\n          </Box>\n        </Box>\n      );\n    }\n\n\n  }, []);\n\n\n  const handleImageSelection = async () => {\n    const options = {\n      mediaType: 'photo',\n      // quality: 10,\n      maxWidth: 1000,\n      maxHeight: 1000,\n      selectionLimit: 40,\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n\n    try {\n      const response = await launchImageLibrary(options);\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n        return;\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n        return;\n      } else if (!response.assets || response.assets.length === 0) {\n        console.log('No images selected.');\n        return;\n      }\n\n      // Remove duplicates from the selected images\n      const uniqueImages = response.assets.filter(\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\n      );\n\n      // Filter out images larger than 10MB\n      const filteredImages = [];\n      const imageOrder = [];\n      for (let index = 0; index < uniqueImages.length; index++) {\n        const image = uniqueImages[index];\n        const file = await fetch(image.uri).then((res) => res.blob());\n        const fileSize = file.size;\n        if (fileSize / 1024 / 1024 < 10) {\n          filteredImages.push(image);\n          imageOrder.push(index);\n        } else {\n          setIsFileSizeLimitModal(true);\n        }\n      }\n\n\n      // Sort the filtered images based on their original order\n      const sortedImages = filteredImages.sort((a, b) => {\n        const indexA = imageOrder[filteredImages.indexOf(a)];\n        const indexB = imageOrder[filteredImages.indexOf(b)];\n        return indexA - indexB;\n      });\n\n\n\n      // Limit the number of selected images to 40\n      const limitedImages = sortedImages.slice(0, 40);\n\n      globalSelectedImages = limitedImages;\n      if (limitedImages.length > 0) {\n        dispatch(setIsAddPhotoVisible(false));\n        dispatch(setAddAnotherImages(true));\n      }\n\n      if (limitedImages.length >= 40) {\n        dispatch(setIsAddPhotoVisible(false));\n        dispatch(setAddAnotherImages(false));\n      }\n\n      dispatch(setSelectedImages(globalSelectedImages));\n\n    } catch (error) {\n      console.log('ImagePicker Error: ', error);\n    }\n  };\n\n\n\n\n\n  const handleDeleteImagePress = useCallback((uri) => {\n\n    globalSelectedImages = globalSelectedImages.filter((item) => {\n      // Replace 'uriToDelete' with the URI you want to delete\n      return item.uri !== uri;\n    });\n\n    if (globalSelectedImages.length < 40) {\n      dispatch(setAddAnotherImages(true));\n    }\n\n    if (globalSelectedImages.length == 0) {\n      dispatch(setAddAnotherImages(false));\n      dispatch(setIsAddPhotoVisible(true));\n    }\n    dispatch(setSelectedImages(globalSelectedImages));\n    // dispatch(setSelectedImages((prevImages) => {\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\n\n    //   if (updatedImages.length < 40) {\n    //     dispatch(setAddAnotherImages(true));\n    //   }\n    //   if (updatedImages.length == 0) {\n    //    dispatch(setAddAnotherImages(false));\n    //     dispatch(setIsAddPhotoVisible(true));\n    //   }\n    //   return updatedImages;\n    // }));\n\n    // console.log(globalSelectedImages.map((item) => item.uri));\n  }, []);\n\n\n\n\n\n  return (\n    <>\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\n\n\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\n\n            <ClearImagesModal\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\n              handleClearImages={handleClearImages}\n              selectedImages={selectedImages}\n              isAddPhotoVisible={isAddPhotoVisible} />\n\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\n\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\n\n\n              <ScrollView\n                scrollEnabled={scrollEnabled}\n                flex={1}\n              >\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\n\n\n                  <DragSortableView\n\n                    ref={dragSortableViewRef}\n                    dataSource={selectedImages}\n                    delayLongPress={100}\n                    parentWidth={width * 0.33}\n                    childrenWidth={100}\n                    childrenHeight={100}\n                    marginChildrenTop={3}\n                    marginChildrenBottom={0}\n                    marginChildrenLeft={0}\n                    marginChildrenRight={0}\n                    onDragStart={useCallback(() => {\n                      if (!isEnterEdit) {\n                        setisEnterEdit(true);\n                        setscrollEnabled(false);\n                      } else {\n                        setscrollEnabled(false);\n                      }\n                    }, [])}\n                    onDragEnd={useCallback(() => {\n                      setscrollEnabled(true);\n                    }, [])}\n                    onDataChange={useCallback((data) => {\n\n                      if (data.length !== data) {\n                        dispatch(setSelectedImages(data));\n                        globalSelectedImages = data;\n                      }\n\n                    }, [])}\n                    onClickItem={(item, index) => {\n                      handleImagePress(index.uri);\n                    }}\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\n                    renderItem={\n                      useCallback((item, index) => renderItem(item, index), [])} />\n\n                  <Center>\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\n                  </Center>\n\n                </Box>\n\n\n\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\n\n\n                  <DragSortableView\n                    sortable={false}\n                    ref={dragSortableViewRef}\n                    dataSource={selectedImages}\n                    parentWidth={width * 0.33}\n                    childrenWidth={100}\n                    childrenHeight={100}\n                    marginChildrenTop={3}\n                    marginChildrenBottom={0}\n                    marginChildrenLeft={0}\n                    marginChildrenRight={0}\n                    onClickItem={(item, index) => {\n                      handleImagePress(index.uri);\n                    }}\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\n                    renderItem={\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\n\n                </Box>\n              </ScrollView>\n\n\n\n\n            </Box>\n\n\n            <Box\n              position=\"absolute\"\n              top={0}\n              left={0}\n              borderRadius={3}\n              bgColor={'rgba(0, 0, 0, 0.5)'}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              display={isAddPhotoVisible ? 'none' : 'block'}>\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\n            </Box>\n          </Box>\n\n        </ScrollView>\n\n\n\n      </Box>\n\n      {/* </Box> */}\n\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\n\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\n          <Modal.CloseButton color={'white'} />\n          <NativeImage\n            key={modalImageUri}\n            source={{ uri: modalImageUri }}\n            resizeMode='contain'\n            flex={1}\n            alt={modalImageUri}\n            h={720}\n            w={1280}\n          />\n\n        </Box>\n\n      </Modal>\n\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\n        <Modal.Content bgColor={'danger.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\n            <Text color={'#102A43'} bold>\n              Failed!\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            bgColor={'danger.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'danger.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'danger.600'} bold>\n                Failed!\n              </Text>\n              <Text color={'danger.600'}>\n                Please select image(s) smaller than 10MB!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\n\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\n  const okSuccessButtonRef = useRef(null);\n  const okFailButtonRef = useRef(null);\n\n  return (\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\n      <Modal.Content bgColor={'green.100'}>\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n          <Text color={'#102A43'} bold>\n            Success!\n          </Text>\n        </Modal.Header>\n        <Modal.Body\n          bgColor={'green.200'}\n          borderLeftWidth={4}\n          borderLeftColor={'green.600'}\n          margin={5}\n        >\n          <Box flex={1}>\n            <Text color={'green.600'} bold>\n              Success!\n            </Text>\n            <Text color={'green.600'}>\n              Stock ID Exist!\n            </Text>\n          </Box>\n        </Modal.Body>\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n          <HStack space={5} flex={1}>\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\n              Ok\n            </Button>\n          </HStack>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal>\n\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\n        <Modal.Content bgColor={'danger.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\n            <Text color={'#102A43'} bold>\n              Failed!\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            bgColor={'danger.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'danger.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'danger.600'} bold>\n                Failed!\n              </Text>\n              <Text color={'danger.600'}>\n                Stock ID Do Not Exist!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\n            <HStack space={5} flex={1}>\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal></>\n  );\n}\n\n\nconst StockIDAndMakeAndModel = ({\n  selectStockStatus,\n  handleSetBordersWhite,\n  inputFobUsd,\n  handleClearIfError,\n  monthNumbers,\n  steeringData,\n  selectPort,\n  selectSales,\n  selectBuyer,\n  inputRefNum,\n  inputChassis,\n  inputModelCode,\n  inputEngineCode,\n  inputEngineDis,\n  selectSteering,\n  inputMileage,\n  selectTransmission,\n  selectExteriorColor,\n  inputNumOfSeats,\n  inputDoors,\n  inputPurchasedPrice,\n  selectFuel,\n  inputDimensionLength,\n  inputDimensionWidth,\n  inputDimensionHeight,\n  inputDimensionCubicMeters,\n  selectDriveType,\n  inputWeight,\n  selectBodyType,\n  inputCarName,\n  inputCarDesc,\n  inputFobJpy,\n  selectRegYear,\n  selectRegMonth,\n  setRefNumFromSelects,\n  inputStockIDNumber,\n  stockIDNumError,\n  selectMakeForModelRef,\n  textAreaAddModel,\n  selectMakeForAddModelRef,\n  handleAddMakeTextChange,\n  textAreaAddMake,\n  makeError,\n  modelError,\n  selectMakeBoxRef,\n  selectMakeRef,\n  selectModelRef,\n  selectModelBoxRef,\n  setCarNameFromSelects,\n  setCarNameFromSelectsModel,\n  inputCarNotes,\n  inputCarMemo,\n  purchasedPriceError,\n  handleInputPurchasedPriceChange }) => {\n\n\n  const dispatch = useDispatch();\n\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\n  const makeData = useSelector((state) => state.makeData);\n  const stockStatusData = useSelector((state) => state.stockStatusData);\n  const portData = useSelector((state) => state.portData);\n  // const isLoading = useSelector((state) => state.isLoading);\n  const transmissionData = useSelector((state) => state.transmissionData);\n  const fuelData = useSelector((state) => state.fuelData);\n  const buyerData = useSelector((state) => state.buyerData);\n  const salesData = useSelector((state) => state.salesData);\n  const driveTypeData = useSelector((state) => state.driveTypeData);\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\n\n\n  const [modelData, setModelData] = useState([]);\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\n  const [fetchedData, setFetchedData] = useState([]);\n  const [model, setModel] = useState('');\n  const [key, setKey] = useState(0);\n  // useEffect(() => {\n\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\n  //   console.log(model);\n  // }, [modelData]);\n\n  // const exportFunction = () => {\n  //   const clearModelData = () =>{\n  //       setModelData([]);\n  //   };\n\n  //   return clearModelData;\n  // }\n\n  const handleInputFobJpyChange = (text) => {\n    const numericValue = text.replace(/[^0-9]/g, '');\n    // console.log(globalJpyToUsd);\n    // Check if the numeric value starts with 0\n    if (numericValue.startsWith('0')) {\n      // Handle the case when the value starts with 0\n      inputFobUsd.current.setNativeProps({ text: '' });\n      return;\n    }\n\n    // Truncate the numeric value to a maximum of 9 digits\n    const truncatedValue = numericValue.slice(0, 9);\n\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    if (formattedValue !== '') {\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\n\n      if (!isNaN(multipliedValue)) {\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n        inputFobJpy.current.value = formattedValue;\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\n      } else {\n        // Handle the case when the multipliedValue is NaN\n        inputFobJpy.current.value = formattedValue;\n        inputFobUsd.current.setNativeProps({ text: '' });\n      }\n    } else {\n      // Handle the case when formattedValue is empty\n      inputFobJpy.current.value = '';\n      inputFobUsd.current.setNativeProps({ text: '' });\n    }\n  };\n\n\n  const getImages = useCallback(async (folderName) => {\n    // const dispatch = useDispatch();\n    dispatch(setLoadingModalVisible(true));\n    try {\n\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\n\n      const urls = await Promise.all(\n        imageRefs.items.map(async (itemRef) => {\n          const uri = await getDownloadURL(itemRef);\n          return { uri, fileName: itemRef.name };\n        })\n      );\n\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\n      urls.sort((a, b) => {\n        const fileNameA = parseInt(a.fileName);\n        const fileNameB = parseInt(b.fileName);\n        return fileNameA - fileNameB;\n      });\n\n      if (urls.length > 0) {\n        dispatch(setDeleteImageVisible(false));\n        dispatch(setSelectedImages(urls));\n        dispatch(setIsAddPhotoVisible(false));\n        dispatch(setAddAnotherImages(false));\n        globalSelectedImages = urls;\n\n      }\n\n      else {\n        dispatch(setDeleteImageVisible(true));\n        dispatch(setIsAddPhotoVisible(true));\n        dispatch(setAddAnotherImages(false));\n        dispatch(setSelectedImages([]));\n        dispatch(setDeleteImageVisible(true));\n        globalSelectedImages = [];\n      }\n\n\n      console.log(urls);\n\n    } catch (error) {\n      // Handle any errors that may occur during the Firebase operations\n      console.error('Error getting image URLs:', error);\n    }\n  }, []);\n\n\n  const handleSearchPress = useCallback(async () => {\n\n\n    if (inputStockIDNumber.current?.value !== '') {\n      dispatch(setLoadingModalVisible(true));\n      setIsSearchLoading(true);\n      setIsSuccessOpen(false);\n      setIsFailedOpen(false);\n\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\n\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        console.log('No documents found');\n        // setIsLoading(false);\n        dispatch(setDeleteImageVisible(true));\n        setIsSearchLoading(false);\n        setIsFailedOpen(true);\n        dispatch(setIsAddPhotoVisible(true));\n        dispatch(setAddAnotherImages(false));\n        dispatch(setSelectedImages([]));\n        globalSelectedImages = [];\n        dispatch(setLoadingModalVisible(false));\n\n      }\n\n\n      else {\n\n        // dispatch(setSelectedImages([]));\n        // globalSelectedImages = [];\n\n        querySnapshot.forEach(async (item) => {\n          const data = item.data();\n          selectModelRef.current.reset();\n          // console.log(item.id, \" => \", item.data().make);\n          setIsSearchLoading(false);\n          // setIsSuccessOpen(true);\n\n          // fetchModelData();\n          // setModel(data.model);\n\n          // console.log(portData);    \n          async function fetchDataAndSelectIndex() {\n            try {\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\n              const docSnapshot = await getDoc(collectionRef);\n              if (docSnapshot.exists()) {\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\n              }\n            } catch (error) {\n              console.error('Error fetching models data from Firebase: ', error);\n            }\n          }\n\n          try {\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\n            const docSnapshot = await getDoc(collectionRef);\n            if (docSnapshot.exists()) {\n              const modelsDataFromFirebase = docSnapshot.data().model;\n              setModelData(modelsDataFromFirebase);\n              globalModelDataVariable = modelsDataFromFirebase;\n            }\n          } catch (error) {\n            console.error('Error fetching models data from Firebase: ', error);\n          }\n\n          handleSetBordersWhite();\n          fetchDataAndSelectIndex();\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\n          // inputDoors.current.setNativeProps({ text: data.doors });\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\n          // inputCarName.current.setNativeProps({ text: data.carName });\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\n          // handleInputFobJpyChange(data.fobPrice);\n\n          if (data.notes == undefined) {\n            inputCarNotes.current.setNativeProps({ text: '' });\n          }\n          else {\n            inputCarNotes.current.setNativeProps({ text: data.notes });\n          }\n\n          if (data.memo == undefined) {\n            inputCarMemo.current.setNativeProps({ text: '' });\n\n          }\n          else {\n            inputCarMemo.current.setNativeProps({ text: data.memo });\n\n          }\n\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\n          featuresState.ComfortCDPl = data.ComfortCDPl;\n          featuresState.ComfortCDCh = data.ComfortCDCh;\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\n          featuresState.ComfortDiSp = data.ComfortDiSp;\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\n          featuresState.ComfortHDD = data.ComfortHDD;\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\n          featuresState.ComfortPoSt = data.ComfortPoSt;\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\n          featuresState.InteriorLeSe = data.InteriorLeSe;\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\n          featuresState.InteriorPoMi = data.InteriorPoMi;\n          featuresState.InteriorPoSe = data.InteriorPoSe;\n          featuresState.InteriorPoWi = data.InteriorPoWi;\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\n          featuresState.InteriorTiGl = data.InteriorTiGl;\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\n\n          resetKey++;\n\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\n          makeVariable.text = data.make ? data.make : \"\";\n          modelVariable.text = data.model ? data.model : \"\";\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\n          portVariable.text = data.port ? data.port : \"\";\n          salesVariable.text = data.sales ? data.sales : \"\";\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\n          portVariable.id = data.portID ? data.portID : \"\";\n          salesVariable.id = data.salesID ? data.salesID : \"\";\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\n          steeringVariable.text = data.steering ? data.steering : \"\";\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\n\n          await getImages(globalVehicleFolderName);\n\n          dispatch(setLoadingModalVisible(false));\n\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\n          //   setModelData(snapshot.data()?.model || []);\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\n\n          //   return () => unsubscribe();\n          // });\n\n\n        });\n      }\n\n    }\n\n\n\n  }, []);;\n\n\n  // useEffect(() => {\n\n  //   if (isFailedOpen == false) {\n  //     handleClearIfError();\n  //   }\n\n\n  // }, [isFailedOpen])\n  const handleFailModalClose = useCallback(() => {\n    setIsFailedOpen(false);\n\n    handleClearIfError();\n\n\n  }, []);\n\n  const handleSuccessModalClose = useCallback(() => {\n    setIsSuccessOpen(false);\n\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\n\n\n  }, []);\n\n  const handleModelChange = useCallback(() => {\n    // console.log('Selected make:', value);\n    setCarNameFromSelectsModel();\n\n  }, []);\n\n\n  const handleMakeChange = useCallback(async (item) => {\n    setCarNameFromSelects();\n    // dispatch(setSelectedMake(item));\n    // fetchModelData();\n    //  dispatch(setIsLoading(true));\n    try {\n      if (makeVariable.text !== '') {\n\n        try {\n\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\n\n          const docSnapshot = await getDoc(collectionRef);\n          if (docSnapshot.exists()) {\n            const modelsDataFromFirebase = docSnapshot.data().model;\n            setModelData(modelsDataFromFirebase);\n            globalModelDataVariable = modelsDataFromFirebase;\n            // console.log(globalModelVariable);\n\n            // modelKey++;\n            // console.log(modelKey);\n            // dispatch(setIsLoading(false));\n          }\n        } catch (error) {\n          console.error('Error fetching models data from Firebase: ', error);\n        }\n\n      }\n\n      else {\n        //  dispatch(setModelData([]));\n      }\n    } catch (error) {\n      console.error('Error fetching models data from Firebase: ', error);\n    }\n\n  }, [projectExtensionFirestore, modelData, makeData]);\n\n  const handleInputStockIDNumberChange = useCallback((text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n    const truncatedValue = numericValue.slice(0, 10);\n    inputStockIDNumber.current.value = truncatedValue;\n    globalVehicleFolderName = truncatedValue;\n    setRefNumFromSelects();\n    // // Limit the numeric value to a maximum of 4 characters\n    // const truncatedValue = numericValue.slice(5);\n\n    // // Format the truncated numeric value with comma separator\n    // const formattedValue = Number(truncatedValue).toLocaleString();\n\n    // // Remove comma separator from the formatted value\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\n\n    // inputStockIDNumber.current.value = valueWithoutCommas;\n  }, []);\n\n  const handleModelOnFocus = useCallback(() => {\n    // console.log(globalModelVariable.length);\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\n\n    if (condition) {\n      globalModelDataVariable = [];\n      setModelData([]);\n    }\n\n\n  }, []);\n\n  return (\n    <>\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\n          InputRightElement={\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\n              onPress={() => {\n                handleSearchPress()\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\n              }}>Search</Button>\n          }\n        />\n        </Box>\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\n\n\n\n      </Box>\n\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\n        </Box>\n      </Box>\n\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\n        </Box>\n\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\n\n\n          <SelectDropdown\n            ref={selectMakeRef}\n            buttonStyle={{\n              flex: 1,\n              width: '100%',\n              backgroundColor: 'white',\n              borderColor: '#E0E0E0',\n              borderWidth: 1,\n              borderRadius: 4,\n              padding: 4,\n            }}\n            buttonTextStyle={{\n              textAlign: 'left',\n              color: '#424242',\n              fontSize: 12,\n            }}\n            dropdownStyle={{\n              backgroundColor: '#FFFFFF',\n              borderColor: '#E0E0E0',\n              borderWidth: 1,\n              borderRadius: 4,\n              shadowColor: '#000000',\n              shadowOffset: { width: 0, height: 2 },\n              shadowOpacity: 0.1,\n              shadowRadius: 4,\n              elevation: 2,\n            }}\n            rowStyle={{\n              backgroundColor: '#FFFFFF',\n              paddingVertical: 10,\n              paddingHorizontal: 15,\n            }}\n            rowTextStyle={{\n              color: '#424242',\n              fontSize: 16,\n            }}\n            data={makeData}\n            onSelect={useCallback((selectedItem) => {\n              makeVariable.text = selectedItem;\n              selectModelRef.current.reset();\n              modelVariable.text = '';\n              handleMakeChange(selectedItem);\n\n\n            }, [])}\n            defaultButtonText=\"-- Choose Make --\"\n            buttonTextAfterSelection={(selectedItem) => {\n              return selectedItem;\n            }} SelectDropdown\n            renderDropdownIcon={(isOpened) => {\n              return (\n                <Ionicons\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\n                  color={'#424242'}\n                  size={18}\n                />\n              );\n            }}\n            rowTextForSelection={(item) => {\n              return item;\n            }}\n            searchPlaceHolder=\"Search for Make\"\n            searchInputStyle={{ marginTop: 2, }}\n            disableAutoScroll\n            search />\n\n        </Box>\n      </Box>\n\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n\n          <ModelSortAndAddModal\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\n            selectMakeForModelRef={selectMakeForModelRef}\n            textAreaAddModel={textAreaAddModel}\n            makeData={makeData} />\n        </Box>\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\n\n\n          <SelectDropdown\n\n            onFocus={handleModelOnFocus}\n            ref={selectModelRef}\n            // disabled={makeVariable.text === '' ? true : false}\n            // key={`make${key}`}\n            buttonStyle={{\n              flex: 1,\n              width: '100%',\n              backgroundColor: 'white',\n              borderColor: '#E0E0E0',\n              borderWidth: 1,\n              borderRadius: 4,\n              padding: 4,\n            }}\n            buttonTextStyle={{\n              textAlign: 'left',\n              color: '#424242',\n              fontSize: 12,\n            }}\n            dropdownStyle={{\n              backgroundColor: '#FFFFFF',\n              borderColor: '#E0E0E0',\n              borderWidth: 1,\n              borderRadius: 4,\n              shadowColor: '#000000',\n              shadowOffset: { width: 0, height: 2 },\n              shadowOpacity: 0.1,\n              shadowRadius: 4,\n              elevation: 2,\n            }}\n            rowStyle={{\n              backgroundColor: '#FFFFFF',\n              paddingVertical: 10,\n              paddingHorizontal: 15,\n            }}\n            rowTextStyle={{\n              color: '#424242',\n              fontSize: 16,\n            }}\n            // data={modelData.map((item) => item)}\n            data={modelData}\n            onSelect={useCallback((selectedItem) => {\n              modelVariable.text = selectedItem;\n              // console.log(modelVariable.text);\n\n\n              handleModelChange()\n            }, [])}\n            defaultButtonText=\"-- Choose Model --\"\n            buttonTextAfterSelection={(selectedItem) => {\n              return selectedItem;\n            }}\n            renderDropdownIcon={(isOpened) => {\n              return (\n                <Ionicons\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\n                  color={'#424242'}\n                  size={18}\n                />\n              );\n            }}\n            rowTextForSelection={(item) => {\n              return item;\n            }}\n            searchPlaceHolder=\"Search for Model\"\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\n            disableAutoScroll\n            search\n\n          />\n        </Box>\n      </Box>\n    </>\n  );\n\n};\n\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\n  const [modalSortOpen, setModalSortOpen] = useState(false);\n  const [modalAddOpen, setModalAddOpen] = useState(false);\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\n  const [modalSave, setModalSave] = useState(false);\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\n  const [modalData, setModalData] = useState(data);\n  const [modalIsLoading, setModalIsLoading] = useState(false);\n\n  const handleDeleteItemPress = useCallback(\n    (item) => {\n      setModalData((prevData) => {\n        const updatedData = prevData.filter((value) => value !== item);\n        return updatedData;\n      });\n    },\n    []\n  );\n\n  // useEffect(() => {\n\n  //   fetchData();\n\n  // }, [modalSortOpen]);\n\n  const addLogToCollection = async (data) => {\n    try {\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  const fetchData = useCallback(async () => {\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\n    const modalDocSnap = await getDoc(modalDocRef);\n    if (modalDocSnap.exists()) {\n      // setModalData(modalDocSnap.data()?.dataName || []);\n      setModalData(modalDocSnap.data()?.[dataName] || []);\n    }\n  }, [databaseInit, modalData]);\n\n  // useEffect(() => {\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\n  //     setModalData(snapshot.data()?.[dataName] || []);\n  //   });\n\n  //   return () => unsubscribe();\n  // }, [dataName, databaseInit, docName]);\n\n  const handleSave = useCallback(async () => {\n    setModalSaveLoading(true);\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    try {\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\n      setModalSaveLoading(false);\n      setModalSortOpen(true);\n      setModalSave(false);\n\n\n      const logData = {\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\n          `${title} updated`.toLowerCase(),\n          `\"${title}\" updated`.toLowerCase(),\n          'updated'.toLowerCase(),\n          title.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n\n      addLogToCollection(logData);\n\n    } catch (error) {\n      setModalSaveLoading(false);\n      handleModalSaveClose();\n      console.error(error);\n    }\n\n\n  }, [databaseInit, modalData, dataName, docName]);\n\n\n  const handleSortModalOpen = useCallback(() => {\n    setModalIsLoading(true);\n    fetchData();\n    setModalSortOpen(true);\n    handleFirstModalClose();\n  }, [modalSortOpen, modalIsLoading]);\n\n  const handleSortModalClose = useCallback(async () => {\n    handleFirstModalOpen();\n    setModalSortOpen(false);\n    setModalIsLoading(false);\n\n  }, [modalSortOpen, modalIsLoading]);\n  // const handleAddTextChange = () => {\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\n  // };\n\n\n  const handleModalAddOpen = useCallback(() => {\n    setModalAddOpen(true);\n    handleSortModalClose();\n    setModalIsLoading(true);\n    handleFirstModalClose();\n\n  }, [])\n\n  const handleModalAddClose = useCallback(() => {\n    setModalAddOpen(false);\n    handleSortModalOpen();\n    textAreaAdd.current?.clear();\n  }, [modalAddOpen])\n\n  const handleModalAddSuccessClose = useCallback(() => {\n    setModalAddSuccess(false);\n    // setIsLoading(false);\n    handleSortModalOpen();\n  }, [modalAddSuccess])\n\n  const handleModalAddSuccessOpen = useCallback(() => {\n    setModalAddSuccess(true);\n    handleSortModalClose();\n    setModalAddOpen(false);\n    setModalIsLoading(true);\n    handleFirstModalClose();\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\n\n  const handleModalSaveOpen = useCallback(() => {\n    setModalSave(true);\n    setModalSortOpen(false);\n    setModalIsLoading(true);\n  }, [modalSave, modalSortOpen, modalIsLoading])\n\n  const handleModalSaveClose = useCallback(() => {\n    setModalSave(false);\n    setModalSortOpen(true);\n  }, [modalSave, modalSortOpen]);\n\n  const handleAddSubmit = async () => {\n\n    const data = textAreaAdd.current?.value;\n    const dataArray = data.split('\\n').map((item) => item.trim());\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    if (data !== '') {\n\n      setModalSaveLoading(true);\n\n      try {\n        const modalCollectionRef = collection(databaseInit, docName);\n        const modalDocRef = doc(modalCollectionRef, docName);\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\n\n        const logData = {\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\n            `${title} added`.toLowerCase(),\n            `\"${title}\" added`.toLowerCase(),\n            'added'.toLowerCase(),\n            title.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n        addLogToCollection(logData);\n        setModalSaveLoading(false);\n\n        handleModalAddSuccessOpen();\n\n\n\n        console.log('Data added to Firestore');\n      } catch (error) {\n        console.error('Error adding data to Firestore:', error);\n        setModalSaveLoading(false);\n      }\n    }\n    else {\n\n    }\n\n\n  };\n\n  return (\n    <>\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\n\n        {!modalIsLoading ? (\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\n          </TouchableOpacity>\n        ) : (\n          <Spinner color=\"white\" />\n        )}\n\n\n      </Box>\n\n      <Modal\n        isOpen={modalSortOpen}\n        onClose={handleSortModalClose} useRNModal>\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>{headerText}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n            <Box w={'full'} flexDir={'column'}>\n              <Box alignItems={'flex-end'}>\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\n              </Box>\n\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\n\n                <DraggableFlatList\n                  style={{ alignContent: 'center', flex: 1, }}\n                  data={modalData}\n                  keyExtractor={(item) => item}\n                  renderItem={({ item, drag }) => (\n\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\n                    </Box>\n\n                  )}\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\n\n              </Box>\n\n            </Box>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0}>\n            <HStack space={5} flex={1}>\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalSave}\n        onClose={handleModalSaveClose}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Save Order?</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <Text>Are you sure you want to save changes?</Text>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        useRNModal\n        isOpen={modalAddOpen}\n        onClose={handleModalAddClose}\n        initialFocusRef={textAreaAdd}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Add {title}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <TextArea\n              textAlign={'center'}\n              w={'full'}\n              ref={textAreaAdd}\n              multiline\n              onChangeText={handleAddTextChange}\n              totalLines={4}\n              placeholder=\"Enter your data, separated by new lines\" />\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\n        <Modal.Content bgColor={'green.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n            <Text textAlign={'center'} color={'#102A43'} bold>\n              😊😎 Success! 😎😊\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'green.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'green.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'green.600'} bold>\n                Added successfully!\n              </Text>\n              <Text color={'green.600'}>\n                Added successfully!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n    </>\n\n\n  );\n};\n\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\n  const [modalSortOpen, setModalSortOpen] = useState(false);\n  const [modalAddOpen, setModalAddOpen] = useState(false);\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\n  const [modalSave, setModalSave] = useState(false);\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\n  const [modalData, setModalData] = useState(data);\n  const [modalIsLoading, setModalIsLoading] = useState(false);\n\n  const handleDeleteItemPress = useCallback(\n    (item) => {\n      setModalData((prevData) => {\n        const updatedData = prevData.filter((value) => value !== item);\n        return updatedData;\n      });\n    },\n    []\n  );\n\n  // useEffect(() => {\n\n  //   fetchData();\n\n  // }, [modalSortOpen]);\n\n  const addLogToCollection = async (data) => {\n    try {\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  const fetchData = useCallback(async () => {\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\n    const modalDocSnap = await getDoc(modalDocRef);\n    if (modalDocSnap.exists()) {\n      // setModalData(modalDocSnap.data()?.dataName || []);\n      setModalData(modalDocSnap.data()?.[dataName] || []);\n    }\n  }, [databaseInit, modalData]);\n\n  // useEffect(() => {\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\n  //     setModalData(snapshot.data()?.[dataName] || []);\n  //   });\n\n  //   return () => unsubscribe();\n  // }, [dataName, databaseInit, docName]);\n\n  const handleSave = useCallback(async () => {\n    setModalSaveLoading(true);\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    try {\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\n      setModalSaveLoading(false);\n      setModalSortOpen(true);\n      setModalSave(false);\n\n\n      const logData = {\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\n          `${title} updated`.toLowerCase(),\n          `\"${title}\" updated`.toLowerCase(),\n          'updated'.toLowerCase(),\n          title.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n\n      addLogToCollection(logData);\n\n    } catch (error) {\n      setModalSaveLoading(false);\n      handleModalSaveClose();\n      console.error(error);\n    }\n\n\n  }, [databaseInit, modalData, dataName, docName]);\n\n\n  const handleSortModalOpen = useCallback(() => {\n    setModalIsLoading(true);\n    fetchData();\n    setModalSortOpen(true);\n  }, [modalSortOpen, modalIsLoading]);\n\n  const handleSortModalClose = useCallback(async () => {\n    setModalSortOpen(false);\n    setModalIsLoading(false);\n  }, [modalSortOpen, modalIsLoading]);\n\n  // const handleAddTextChange = () => {\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\n  // };\n\n\n  const handleModalAddOpen = useCallback(() => {\n    setModalAddOpen(true);\n    handleSortModalClose();\n    setModalIsLoading(true);\n\n  }, [])\n\n  const handleModalAddClose = useCallback(() => {\n    setModalAddOpen(false);\n    handleSortModalOpen();\n    textAreaAdd.current?.clear();\n  }, [modalAddOpen])\n\n  const handleModalAddSuccessClose = useCallback(() => {\n    setModalAddSuccess(false);\n    // setIsLoading(false);\n    handleSortModalOpen();\n  }, [modalAddSuccess])\n\n  const handleModalAddSuccessOpen = useCallback(() => {\n    setModalAddSuccess(true);\n    handleSortModalClose();\n    setModalAddOpen(false);\n    setModalIsLoading(true);\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\n\n  const handleModalSaveOpen = useCallback(() => {\n    setModalSave(true);\n    setModalSortOpen(false);\n    setModalIsLoading(true);\n  }, [modalSave, modalSortOpen, modalIsLoading])\n\n  const handleModalSaveClose = useCallback(() => {\n    setModalSave(false);\n    setModalSortOpen(true);\n  }, [modalSave, modalSortOpen]);\n\n  const handleAddSubmit = async () => {\n\n    const data = textAreaAdd.current?.value;\n    const dataArray = data.split('\\n').map((item) => item.trim());\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    if (data !== '') {\n\n      setModalSaveLoading(true);\n\n      try {\n        const modalCollectionRef = collection(databaseInit, docName);\n        const modalDocRef = doc(modalCollectionRef, docName);\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\n\n        const logData = {\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\n            `${title} added`.toLowerCase(),\n            `\"${title}\" added`.toLowerCase(),\n            'added'.toLowerCase(),\n            title.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n        addLogToCollection(logData);\n        setModalSaveLoading(false);\n\n        handleModalAddSuccessOpen();\n\n\n\n        console.log('Data added to Firestore');\n      } catch (error) {\n        console.error('Error adding data to Firestore:', error);\n        setModalSaveLoading(false);\n      }\n    }\n    else {\n\n    }\n\n\n  };\n\n  return (\n    <>\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\n\n        {!modalIsLoading ? (\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\n          </TouchableOpacity>\n        ) : (\n          <Spinner color=\"white\" />\n        )}\n\n\n      </Box>\n\n      <Modal\n        isOpen={modalSortOpen}\n        onClose={handleSortModalClose}>\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>{headerText}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n            <Box w={'full'} flexDir={'column'}>\n              <Box alignItems={'flex-end'}>\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\n              </Box>\n\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\n\n                <DraggableFlatList\n                  style={{ alignContent: 'center', flex: 1, }}\n                  data={modalData}\n                  keyExtractor={(item) => item}\n                  renderItem={({ item, drag }) => (\n\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\n                    </Box>\n\n                  )}\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\n\n              </Box>\n\n            </Box>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0}>\n            <HStack space={5} flex={1}>\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalSave}\n        onClose={handleModalSaveClose}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Save Order?</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <Text>Are you sure you want to save changes?</Text>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalAddOpen}\n        onClose={handleModalAddClose}\n        initialFocusRef={textAreaAdd}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Add {title}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <TextArea\n              textAlign={'center'}\n              w={'full'}\n              ref={textAreaAdd}\n              multiline\n              onChangeText={handleAddTextChange}\n              totalLines={4}\n              placeholder=\"Enter your data, separated by new lines\" />\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\n        <Modal.Content bgColor={'green.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n            <Text textAlign={'center'} color={'#102A43'} bold>\n              😊😎 Success! 😎😊\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'green.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'green.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'green.600'} bold>\n                Added successfully!\n              </Text>\n              <Text color={'green.600'}>\n                Added successfully!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n    </>\n\n\n  );\n};\n\n\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\n  const [modalSortOpen, setModalSortOpen] = useState(false);\n  const [modalAddOpen, setModalAddOpen] = useState(false);\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\n  const [modalSave, setModalSave] = useState(false);\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\n  const [modalData, setModalData] = useState(data);\n  const [modalIsLoading, setModalIsLoading] = useState(false);\n\n  const handleDeleteItemPress = useCallback(\n    (item) => {\n      setModalData((prevData) => {\n        const updatedData = prevData.filter((value) => value !== item);\n        return updatedData;\n      });\n    },\n    []\n  );\n\n  // useEffect(() => {\n\n  //   fetchData();\n\n  // }, [modalSortOpen]);\n\n  const addLogToCollection = async (data) => {\n    try {\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  const fetchData = useCallback(async () => {\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\n    const modalDocSnap = await getDoc(modalDocRef);\n    if (modalDocSnap.exists()) {\n      // setModalData(modalDocSnap.data()?.dataName || []);\n      setModalData(modalDocSnap.data()?.[dataName] || []);\n    }\n  }, [databaseInit, modalData]);\n\n  // useEffect(() => {\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\n  //     setModalData(snapshot.data()?.[dataName] || []);\n  //   });\n\n  //   return () => unsubscribe();\n  // }, [dataName, databaseInit, docName]);\n\n  const handleSave = useCallback(async () => {\n    setModalSaveLoading(true);\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    try {\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\n      setModalSaveLoading(false);\n      setModalSortOpen(true);\n      setModalSave(false);\n\n\n      const logData = {\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\n          `${title} updated`.toLowerCase(),\n          `\"${title}\" updated`.toLowerCase(),\n          'updated'.toLowerCase(),\n          title.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n\n      addLogToCollection(logData);\n\n    } catch (error) {\n      setModalSaveLoading(false);\n      handleModalSaveClose();\n      console.error(error);\n    }\n\n\n  }, [databaseInit, modalData, dataName, docName]);\n\n\n  const handleSortModalOpen = useCallback(() => {\n    setModalIsLoading(true);\n    fetchData();\n    setModalSortOpen(true);\n  }, []);\n\n  const handleSortModalClose = useCallback(async () => {\n    setModalSortOpen(false);\n    setModalIsLoading(false);\n  }, []);\n\n  // const handleAddTextChange = () => {\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\n  // };\n\n\n  const handleModalAddOpen = useCallback(() => {\n    setModalAddOpen(true);\n    handleSortModalClose();\n    setModalIsLoading(true);\n    textAreaAdd.current.clear();\n    textAreaAddCode.current.clear();\n  }, [])\n\n  const handleModalAddClose = useCallback(() => {\n    setModalAddOpen(false);\n    handleSortModalOpen();\n\n  }, [])\n\n  const handleModalAddSuccessClose = useCallback(() => {\n    setModalAddSuccess(false);\n    // setIsLoading(false);\n    handleSortModalOpen();\n  }, [])\n\n  const handleModalAddSuccessOpen = useCallback(() => {\n    setModalAddSuccess(true);\n    handleSortModalClose();\n    setModalAddOpen(false);\n    setModalIsLoading(true);\n\n  }, [])\n\n  const handleModalSaveOpen = useCallback(() => {\n    setModalSave(true);\n    setModalSortOpen(false);\n    setModalIsLoading(true);\n  }, [])\n\n  const handleModalSaveClose = useCallback(() => {\n    setModalSave(false);\n    setModalSortOpen(true);\n  }, []);\n\n  const handleAddSubmit = async () => {\n\n    const data = textAreaAdd.current?.value;\n    const dataCode = textAreaAddCode.current?.value;\n    const dataArray = data.split('\\n').map((item) => item.trim());\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n\n    if (data !== '' && dataCode !== '') {\n      setModalSaveLoading(true);\n      try {\n        const modalCollectionRef = collection(databaseInit, docName);\n        const modalDocRef = doc(modalCollectionRef, docName);\n\n        const dataToUpdate = dataArray.map((data, index) => ({\n          id: dataCodeArray[index],\n          name: data,\n        }));\n\n        const updateObject = {};\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\n\n        await setDoc(modalDocRef, updateObject, { merge: true });\n        // const updateData = {\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\n        // };\n\n        // await setDoc(modalDocRef, updateData, { merge: true });\n\n        const logData = {\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\n            `${title} added`.toLowerCase(),\n            `\"${title}\" added`.toLowerCase(),\n            'added'.toLowerCase(),\n            title.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n        addLogToCollection(logData);\n        setModalSaveLoading(false);\n\n        handleModalAddSuccessOpen();\n\n\n\n        console.log('Data added to Firestore');\n      } catch (error) {\n        console.error('Error adding data to Firestore:', error);\n        setModalSaveLoading(false);\n      }\n    }\n    else {\n\n    }\n  };\n\n  return (\n    <>\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\n\n        {!modalIsLoading ? (\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\n          </TouchableOpacity>\n        ) : (\n          <Spinner color=\"white\" />\n        )}\n\n\n      </Box>\n\n      <Modal\n        isOpen={modalSortOpen}\n        onClose={handleSortModalClose}>\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>{headerText}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n            <Box w={'full'} flexDir={'column'}>\n              <Box alignItems={'flex-end'}>\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\n              </Box>\n\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\n\n                <DraggableFlatList\n                  style={{ alignContent: 'center', flex: 1, }}\n                  data={modalData}\n                  keyExtractor={(item) => item.id}\n                  renderItem={({ item, drag }) => (\n\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\n                    </Box>\n\n                  )}\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\n\n              </Box>\n\n            </Box>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0}>\n            <HStack space={5} flex={1}>\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalSave}\n        onClose={handleModalSaveClose}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Save Order?</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <Text>Are you sure you want to save changes?</Text>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalAddOpen}\n        onClose={handleModalAddClose}\n        initialFocusRef={textAreaAddCode}\n        size={'lg'}>\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Add {title}</Text>\n          </Modal.Header>\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\n          <HStack space={5} flex={1} margin={2}>\n            <VStack space={1} flex={1}>\n              <Text textAlign={'center'}>Code</Text>\n              <TextArea\n                flex={2}\n                textAlign={'center'}\n                w={'full'}\n                ref={textAreaAddCode}\n                multiline\n                onChangeText={handleAddCodeTextChange}\n                totalLines={8}\n                placeholder=\"Enter your data, separated by new lines\"\n              />\n            </VStack>\n            <VStack space={1} flex={1}>\n              <Text textAlign={'center'}>Name</Text>\n              <TextArea\n                flex={2}\n                textAlign={'center'}\n                w={'full'}\n                ref={textAreaAdd}\n                multiline\n                onChangeText={handleAddTextChange}\n                totalLines={8}\n                placeholder=\"Enter your data, separated by new lines\"\n              />\n            </VStack>\n          </HStack>\n          {/* </Modal.Body> */}\n          <Modal.Footer borderTopWidth={0}>\n            <HStack space={5} flex={1}>\n              <Button\n                onPress={handleModalAddClose}\n                colorScheme={'muted'}\n                flex={1}\n                size={'sm'}\n                borderRadius={5}>\n                Close\n              </Button>\n              <Button\n                onPress={handleAddSubmit}\n                isLoading={modalSaveLoading ? true : false}\n                flex={1}\n                size={'sm'}\n                borderRadius={5}>\n                Add\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\n        <Modal.Content bgColor={'green.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n            <Text textAlign={'center'} color={'#102A43'} bold>\n              😊😎 Success! 😎😊\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'green.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'green.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'green.600'} bold>\n                Added successfully!\n              </Text>\n              <Text color={'green.600'}>\n                Added successfully!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n    </>\n\n\n  );\n};\n\n\n\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\n\n  const [modalAddModel, setModalAddModel] = useState(false);\n  const [modalSaveModel, setModalSaveModel] = useState(false);\n  const [modalModel, setModalModel] = useState(false);\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\n  const [modelSortData, setModelSortData] = useState([]);\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalIsLoading, setModalIsLoading] = useState(false);\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\n\n  const fetchModelSortData = async () => {\n\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\n\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\n      if (modelSortDocSnap.exists()) {\n        setModelSortData(modelSortDocSnap.data()?.model || []);\n\n      }\n      else {\n        setModelSortData([]);\n      }\n\n    }\n\n\n  };\n\n  // useEffect(() => {\n\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\n\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\n  //       setModelSortData(snapshot.data()?.model || []);\n  //       return () => unsubscribe();\n  //     });\n\n  //   }\n\n  // }, []);\n\n  const handleDeleteModelPress = useCallback(\n    (item) => {\n      setModelSortData((prevModelData) => {\n        const updatedModelData = prevModelData.filter((model) => model !== item);\n        return updatedModelData;\n      });\n    },\n    []\n  );\n\n  const addLogToCollection = async (data) => {\n    try {\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n  const handleSaveModel = useCallback(async () => {\n    setModalSaveModelLoading(true);\n    console.log(selectMakeForModelRef.current?.value);\n\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\n      try {\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\n        setModalSaveModelLoading(false);\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const logData = {\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\n            'Model Update'.toLowerCase(),\n            'Model'.toLowerCase(),\n            'Update'.toLowerCase(),\n            selectMakeForModelRef.current.value.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n\n        addLogToCollection(logData);\n\n        handleModalSaveModelClose();\n      } catch (error) {\n        console.error(error);\n        setModalSaveModelLoading(false);\n        handleModalSaveModelClose();\n      }\n\n    }\n    else {\n      setModalSaveModelLoading(false);\n    }\n\n\n\n\n  }, [projectExtensionFirestore, modelSortData]);\n\n  const handleAddModelTextChange = () => {\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\n    textAreaAddModel.current?.setNativeProps({ text: newText });\n\n  };\n\n  const handleMakeForModelChange = useCallback(() => {\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\n    fetchModelSortData();\n\n    // console.log(selectMakeForModelRef.current?.value);\n  }, []);\n\n  const handleMakeForAddModelChange = useCallback(() => {\n    setIsAddModelDisabled(false);\n\n  }, []);\n\n\n  const handleModalModelOpen = useCallback(() => {\n    setModalIsLoading(true);\n    setModalModel(true);\n    fetchModelSortData();\n    setIsLoading(true);\n  }, []);\n\n  const handleModalModelClose = useCallback(() => {\n    setModalIsLoading(false);\n\n    setModalModel(false);\n    setIsLoading(false);\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\n    setModelSortData([]);\n  }, []);\n\n  const handleModalAddModelOpen = useCallback(() => {\n    setModalIsLoading(true);\n    setModalAddModel(true);\n    // handleModalModelClose();\n    setModalModel(false);\n    setIsLoading(false);\n  }, []);\n\n  const handleModalAddModelClose = useCallback(() => {\n    handleModalModelOpen();\n    setModalAddModel(false);\n    textAreaAddModel.current.clear();\n    setIsAddModelDisabled(true);\n    setIsLoading(false);\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\n\n  }, []);\n\n  const handleModalAddModelSuccessOpen = useCallback(() => {\n    setModalIsLoading(true);\n    setModalAddModel(false);\n    setModalModel(false);\n    textAreaAddModel.current.clear();\n    setModalAddModelSuccess(true);\n\n\n  }, []);\n\n  const handleModalAddModelSuccessClose = useCallback(() => {\n    setModalAddModelSuccess(false);\n    handleModalModelOpen();\n    setIsLoading(false);\n  }, []);\n\n  const handleModalSaveModelOpen = useCallback(() => {\n    setModalIsLoading(true);\n\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\n      setModalSaveModel(true);\n      // handleModalModelClose();\n      setModalModel(false);\n      setIsLoading(false);\n    }\n\n\n  }, []);\n\n\n  const handleModalSaveModelClose = useCallback(() => {\n    setModalSaveModel(false);\n    handleModalModelOpen();\n    setIsLoading(false);\n  }, []);\n\n  const handleAddModelSubmit = async () => {\n    const data = textAreaAddModel.current?.value;\n    const dataArray = data.split('\\n').map((item) => item.trim());\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    if (data !== '') {\n      setModalSaveLoading(true);\n      try {\n\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\n\n        const logData = {\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\n            'Model Added'.toLowerCase(),\n            'Model'.toLowerCase(),\n            'Added'.toLowerCase(),\n            selectMakeForAddModelRef.current.value.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n        setModalSaveLoading(false);\n        addLogToCollection(logData);\n\n        handleModalAddModelSuccessOpen();\n\n        console.log('Data added to Firestore');\n      } catch (error) {\n        console.error('Error adding data to Firestore:', error);\n        setModalSaveLoading(false);\n      }\n    }\n    else {\n\n    }\n  };\n\n\n\n\n\n\n  return (\n    <>\n\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\n\n        {!modalIsLoading ? (\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\n          </TouchableOpacity>\n        ) :\n          (<Spinner color=\"white\" />)\n        }\n\n      </Box>\n\n      <Modal\n        isOpen={modalModel}\n        onClose={handleModalModelClose} >\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n            <Box w={'full'} flexDir={'column'} height={'f'}>\n              <Box alignItems={'flex-end'}>\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\n              </Box>\n              <Box>\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\n                  bg: \"teal.600\",\n                  endIcon: <CheckIcon size=\"5\" />\n                }}>\n                  {makeData.map((item) => (\n\n                    <Select.Item key={item} label={item} value={item} />\n\n                  ))}\n                </Select>\n              </Box>\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\n\n                <DraggableFlatList\n                  style={{ alignContent: 'center', flex: 1, }}\n                  data={modelSortData}\n                  keyExtractor={(item) => item}\n                  renderItem={({ item, drag }) => (\n\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\n                    </Box>\n\n                  )}\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\n\n              </Box>\n\n            </Box>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\n            </HStack>\n          </Modal.Footer>\n\n\n\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalAddModel}\n        onClose={handleModalAddModelClose}\n        initialFocusRef={selectMakeForAddModelRef}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Add Model</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\n              bg: \"teal.600\",\n              endIcon: <CheckIcon size=\"5\" />\n            }}>\n              {makeData.map((item) => (\n\n                <Select.Item key={item} label={item} value={item} />\n\n              ))}\n            </Select>\n            <TextArea\n              textAlign={'center'}\n              w={'full'}\n              ref={textAreaAddModel}\n              multiline\n              onChangeText={handleAddModelTextChange}\n              totalLines={4}\n              placeholder=\"Enter your data, separated by new lines\"\n              isDisabled={isAddModelDisabled ? true : false}\n            />\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n\n\n      <Modal\n        isOpen={modalSaveModel}\n        onClose={handleModalSaveModelClose}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <Text>Are you sure you want to save changes?</Text>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\n        <Modal.Content bgColor={'green.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n            <Text textAlign={'center'} color={'#102A43'} bold>\n              😊😎 Success! 😎😊\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'green.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'green.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'green.600'} bold>\n                Model Added!\n                {/* Vehicle Added! */}\n              </Text>\n              <Text color={'green.600'}>\n                Model was successfully added! You can view it in the model list.\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n\n\n\n\nconst referenceNumberVariable = {\n  text: \"\",\n};\n\n\nconst nameVariable = {\n  text: \"\",\n};\n\n\nconst makeVariable = {\n  text: \"\",\n};\n\nconst makeForAddModelVariable = {\n  text: \"\",\n};\n\n\n\nconst modelVariable = {\n  text: \"\",\n};\n\nconst regYearVariable = {\n  text: \"\",\n};\n\nconst regMonthVariable = {\n  text: \"\",\n};\n\nconst steeringVariable = {\n  text: \"\",\n};\n\nconst transmissionVariable = {\n  text: \"\",\n};\n\nconst exteriorColorVariable = {\n  text: \"\",\n};\n\nconst fuelVariable = {\n  text: \"\",\n};\n\nconst portVariable = {\n  text: \"\",\n  id: \"\",\n};\n\nconst salesVariable = {\n  text: \"\",\n  id: \"\",\n};\n\nconst buyerVariable = {\n  text: \"\",\n  id: \"\",\n};\n\nconst driveTypeVariable = {\n  text: \"\",\n};\n\nconst bodyTypeVariable = {\n  text: \"\",\n};\n\nconst stockStatusVariable = {\n  text: \"\",\n};\n\n\nlet resetKey = 0;\nconst featuresState = {\n  SafetySystemAnBrSy: false,\n  SafetySystemDrAi: false,\n  SafetySystemPaAi: false,\n  SafetySystemSiAi: false,\n  ComfortAiCoFr: false,\n  ComfortAiCoRe: false,\n  ComfortAMFMRa: false,\n  ComfortAMFMSt: false,\n  ComfortCDPl: false,\n  ComfortCDCh: false,\n  ComfortCrSpCo: false,\n  ComfortDiSp: false,\n  ComfortDVDPl: false,\n  ComfortHDD: false,\n  ComfortNaSyGPS: false,\n  ComfortPoSt: false,\n  ComfortPrAuSy: false,\n  ComfortReKeSy: false,\n  ComfortTiStWh: false,\n  InteriorLeSe: false,\n  InteriorPoDoLo: false,\n  InteriorPoMi: false,\n  InteriorPoSe: false,\n  InteriorPoWi: false,\n  InteriorReWiDe: false,\n  InteriorReWiWi: false,\n  InteriorThRoSe: false,\n  InteriorTiGl: false,\n  ExteriorAlWh: false,\n  ExteriorPoSlDo: false,\n  ExteriorSuRo: false,\n  SellingPointsCuWh: false,\n  SellingPointsFuLo: false,\n  SellingPointsMaHiAv: false,\n  SellingPointsBrNeTi: false,\n  SellingPointsNoAcHi: false,\n  SellingPointsNoSmPrOw: false,\n  SellingPointsOnOwHi: false,\n  SellingPointsPeRaTi: false,\n  SellingPointsReBo: false,\n  SellingPointsTuEn: false,\n  SellingPointsUpAuSy: false,\n};\n\nconst CheckBoxButton = ({ label, onChange, variable }) => {\n  const [checked, setChecked] = useState(variable);\n\n  // useEffect(() => {console.log(checked)}, [checked])\n\n  const handlePress = () => {\n\n    setChecked(!checked);\n    onChange(!checked);\n\n  };\n\n  return (\n    <TouchableOpacity\n      style={{ flex: 1, justifyContent: 'center', }}\n      onPress={handlePress}\n    >\n      <Box\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        borderRadius={3}\n        bgColor={checked ? '#7b9cff' : 'white'}\n        margin={1}\n        overflow={'hidden'}\n        // h={50}\n        // w={180}\n        padding={2}\n        borderWidth={1}\n        borderColor={checked ? 'white' : 'muted.400'}\n      >\n        <Text\n          // fontSize={[9, 11, 12, 11, 12, 13]}\n          // maxW={[85, 100, 180, 100, 130, 180]}\n          textAlign={'center'}\n          noOfLines={3}\n          color={checked ? 'white' : 'muted.400'}\n        >\n          {label}\n        </Text>\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\n\n\nexport default function AddVehicle() {\n  const screenWidth = Dimensions.get('window').width;\n\n  const dispatch = useDispatch();\n\n\n  const loginName = useSelector((state) => state.loginName);\n\n  const [renderLoading, setRenderLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [type, setType] = useState('');\n  const logo = require('../../assets/C-Hub.png');\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\n\n  const [name, setName] = useState(loginName);\n  // const navigation = useNavigation();\n  const navigate = useNavigate();\n\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\n\n  const dragSortableViewRef = useRef();\n\n  nameVariable.text = loginName;\n\n  const inputCarNotes = useRef(null);\n  const inputCarMemo = useRef(null);\n  const inputCarName = useRef(null);\n  const inputCarDesc = useRef(null);\n  const inputFobJpy = useRef(null);\n  const inputFobUsd = useRef(null);\n  const inputRegYear = useRef(null);\n  const selectRegYear = useRef(null);\n  const selectRegMonth = useRef(null);\n  const inputRegMonth = useRef(null);\n  const inputRefNum = useRef(null);\n  const inputStockIDNumber = useRef(null);\n  const inputChassis = useRef(null);\n  const inputModelCode = useRef(null);\n  const inputEngineCode = useRef(null);\n  const inputEngineDis = useRef(null);\n  const selectSteering = useRef(null);\n  const inputMileage = useRef(null);\n  const selectTransmission = useRef(null);\n  const selectExteriorColor = useRef(null);\n  const inputNumOfSeats = useRef(null);\n  const inputDoors = useRef(null);\n  const inputPurchasedPrice = useRef(null);\n  const inputFuel = useRef(null);\n  const selectFuel = useRef(null);\n  const selectPort = useRef(null);\n  const selectSales = useRef(null);\n  const selectBuyer = useRef(null);\n  const selectDriveType = useRef(null);\n  const inputDimensionLength = useRef(null);\n  const inputDimensionWidth = useRef(null);\n  const inputDimensionHeight = useRef(null);\n  const inputDimensionCubicMeters = useRef(null);\n  const inputDriveType = useRef(null);\n  const inputWeight = useRef(null);\n  const selectBodyType = useRef(null);\n  const selectStockStatus = useRef(null);\n  const textAreaAddMake = useRef(null);\n  const textAreaAddModel = useRef(null);\n  const textAreaAddTransmission = useRef(null);\n  const textAreaAddExteriorColor = useRef(null);\n  const textAreaAddFuel = useRef(null);\n  const textAreaAddPort = useRef(null);\n  const textAreaAddPortCode = useRef(null);\n  const textAreaAddSales = useRef(null);\n  const textAreaAddBuyer = useRef(null);\n  const textAreaAddSalesCode = useRef(null);\n  const textAreaAddBuyerCode = useRef(null);\n  const textAreaAddDriveType = useRef(null);\n  const textAreaAddBodyType = useRef(null);\n  const textAreaAddExpenseName = useRef(null);\n  const textAreaAddPaidTo = useRef(null);\n  const inputExpenseAmount = useRef(null);\n\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\n  const paidToData = useSelector((state) => state.paidToData);\n  // const selectedImages = useSelector((state) => state.selectedImages);\n  const portData = useSelector((state) => state.portData);\n  const isLoading = useSelector((state) => state.isLoading);\n  const transmissionData = useSelector((state) => state.transmissionData);\n  const fuelData = useSelector((state) => state.fuelData);\n  const buyerData = useSelector((state) => state.buyerData);\n  const salesData = useSelector((state) => state.salesData);\n  const driveTypeData = useSelector((state) => state.driveTypeData);\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\n  const stockStatusData = useSelector((state) => state.stockStatusData);\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\n  const currentYear = useSelector((state) => state.currentYear);\n\n  const minYear = 1970;\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\n  globalRegYearDataVariable = years;\n\n\n\n\n  const steeringData = ['Left', 'Right'];\n\n\n  const selectMakeRef = useRef(null);\n  const selectModelRef = useRef(null);\n\n  const selectMakeForModelRef = useRef(null);\n  const selectMakeForAddModelRef = useRef(null);\n\n\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\n\n\n  const [carNameError, setCarNameError] = useState('muted.500');\n  const [makeError, setMakeError] = useState('white');\n  const [modelError, setModelError] = useState('white');\n  const [regYearError, setRegYearError] = useState('white');\n  const [regMonthError, setRegMonthError] = useState('white');\n  const [refNumError, setRefNumError] = useState('white');\n  const [stockIDNumError, setStockIDNumError] = useState('white');\n  const [chassisError, setChassisError] = useState('white');\n  const [modelCodeError, setModelCodeError] = useState('white');\n  const [engineDisError, setEngineDisError] = useState('white');\n  const [steeringError, setSteeringError] = useState('white');\n  const [mileageError, setMileageError] = useState('white');\n  const [transmissionError, setTransmissionError] = useState('white');\n  const [exteriorColoError, setExteriorColoError] = useState('white');\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\n  const [doorsError, setDoorsError] = useState('white');\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\n  const [fuelError, setFuelError] = useState('white');\n  const [portError, setPortError] = useState('white');\n  const [buyerError, setBuyerError] = useState('white');\n  const [salesError, setSalesError] = useState('white');\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\n  const [driveTypeError, setDriveTypeError] = useState('white');\n  const [weightError, setWeightError] = useState('white');\n  const [bodyTypeError, setBodyTypeError] = useState('white');\n  const [stockStatusError, setStockStatusError] = useState('white');\n\n\n\n  const inputVehicleBoxRef = useRef(null);\n\n\n  const selectMakeBoxRef = useRef(null);\n  const selectModelBoxRef = useRef(null);\n  const selectRegYearBoxRef = useRef(null);\n  const selectRegMonthBoxRef = useRef(null);\n  const selectSteeringBoxRef = useRef(null);\n  const selectTransmissionBoxRef = useRef(null);\n  const selectExteriorColorBoxRef = useRef(null);\n  const selectFuelBoxRef = useRef(null);\n  const selectPortBoxRef = useRef(null);\n  const selectBuyerBoxRef = useRef(null);\n  const selectSalesBoxRef = useRef(null);\n  const selectDriveTypeBoxRef = useRef(null);\n  const selectBodyTypeBoxRef = useRef(null);\n  const selectStockStatusBoxRef = useRef(null);\n\n  useEffect(() => {\n\n    handleClearImages();\n\n    dispatch(setSupplyChainsCostsData([]));\n    dispatch(setDeleteImageVisible(true));\n    portVariable.id = '';\n    portVariable.text = '';\n    salesVariable.id = '';\n    salesVariable.text = '';\n    buyerVariable.id = '';\n    buyerVariable.text = '';\n    makeVariable.text = '';\n    modelVariable.text = '';\n    regYearVariable.text = '';\n    regMonthVariable.text = '';\n    steeringVariable.text = '';\n    transmissionVariable.text = '';\n    exteriorColorVariable.text = '';\n    fuelVariable.text = '';\n    driveTypeVariable.text = '';\n    bodyTypeVariable.text = '';\n    stockStatusVariable.text = '';\n    Object.keys(featuresState).forEach(property => {\n      featuresState[property] = false;\n    });\n\n    console.log('Sample');\n\n    const currentUserEmail = getEmailOfCurrentUser();\n    if (currentUserEmail) {\n      getFieldValueByEmail(currentUserEmail);\n      setEmail(currentUserEmail)\n      const documentId = currentUserEmail;\n    }\n  }, []);\n\n\n  const getFieldValueByEmail = async (email) => {\n    try {\n      const accountDocRef = doc(firestore, 'accounts', email);\n      const accountDocSnapshot = await getDoc(accountDocRef);\n\n      if (accountDocSnapshot.exists()) {\n        const data = accountDocSnapshot.data();\n        const fieldType = data.type;\n        const fieldName = data.name;\n        dispatch(setLoginName(data.name));\n\n      } else {\n        console.log('Document does not exist');\n      }\n    } catch (error) {\n      console.error('Error fetching field value:', error);\n    }\n  };\n\n\n  const handleClearImages = useCallback(() => {\n    dispatch(setSelectedImages([]));\n    globalSelectedImages = [];\n    dispatch(setIsAddPhotoVisible(true));\n    dispatch(setAddAnotherImages(false));\n  }, []);\n\n\n  const handleClearIfError = useCallback(() => {\n\n\n    handleClearToggleButton();\n    clearSelect();\n\n    inputCarName.current?.clear();\n    inputCarDesc.current?.clear();\n    inputFobJpy.current?.clear();\n    inputFobUsd.current?.clear();\n\n    inputRegYear.current?.clear();\n    inputRegMonth.current?.clear();\n    inputRefNum.current?.clear();\n    inputChassis.current?.clear();\n    inputModelCode.current?.clear();\n    inputEngineCode.current?.clear();\n    inputEngineDis.current?.clear();\n    inputMileage.current?.clear();\n    inputNumOfSeats.current?.clear();\n    inputDoors.current?.clear();\n    inputPurchasedPrice.current?.clear();\n    inputFuel.current?.clear();\n    inputDimensionLength.current?.clear();\n    inputDimensionWidth.current?.clear();\n    inputDimensionHeight.current?.clear();\n    inputDimensionCubicMeters.current.value = \"0.00\";\n    inputDriveType.current?.clear();\n    inputWeight.current?.clear();\n\n    makeVariable.text = '';\n    modelVariable.text = '';\n    regYearVariable.text = '';\n    regMonthVariable.text = '';\n    steeringVariable.text = '';\n    transmissionVariable.text = '';\n    exteriorColorVariable.text = '';\n    fuelVariable.text = '';\n    portVariable.text = '';\n    salesVariable.text = '';\n    buyerVariable.text = '';\n    portVariable.id = '';\n    salesVariable.id = '';\n    buyerVariable.id = '';\n    driveTypeVariable.text = '';\n    bodyTypeVariable.text = '';\n    stockStatusVariable.text = '';\n    setIsNoFeaturesSelected('white');\n\n    setMakeError('white');\n    setModelError('white');\n    setRegYearError('white');\n    setRegMonthError('white');\n    setRefNumError('white');\n    setStockIDNumError('white');\n    setChassisError('white');\n    setModelCodeError('white');\n    setEngineDisError('white');\n    setSteeringError('white');\n    setMileageError('white');\n    setTransmissionError('white');\n    setExteriorColoError('white');\n    setNumOfSeatsError('white');\n    setDoorsError('white');\n    setPurchasedPriceError('white');\n    setFuelError('white');\n    setPortError('white');\n    setSalesError('white');\n    setBuyerError('white');\n    setDimensionLengthError('white');\n    setDimensionWidthError('white');\n    setDimensionHeightError('white');\n    setDriveTypeError('white');\n    setWeightError('white');\n    setBodyTypeError('white');\n    setStockStatusError('white');\n    setCarNameError('muted.500');\n\n    setIsNoFeaturesSelected('white');\n\n  }, []);\n\n  // const uploadImages = useCallback(async () => {\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\n  //   const ImageFormat = { jpg: 'jpg' };\n\n  //   try {\n  //     // Get the names of the images to keep\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\n\n  //     // Delete existing files in the folder that do not match the names of the images to keep\n  //     const listResult = await listAll(storageRef);\n  //     await Promise.all(\n  //       listResult.items\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\n  //         .map((itemRef) => deleteObject(itemRef))\n  //     );\n\n  //     // Upload new images with or without watermarks based on the platform\n  //     function blobToArrayBuffer(blob) {\n  //       return new Promise((resolve, reject) => {\n  //         const reader = new FileReader();\n  //         reader.onload = () => resolve(reader.result);\n  //         reader.onerror = reject;\n  //         reader.readAsArrayBuffer(blob);\n  //       });\n  //     }\n\n  //     // ...\n\n  //     await Promise.all(\n  //       globalSelectedImages.map(async (asset, index) => {\n  //         const { uri } = asset;\n  //         const imageName = index.toString();\n\n  //         const response = await fetch(uri);\n  //         const blob = await response.blob();\n\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\n\n  //         // Define your watermark options\n  //         const watermarkOptions = {\n  //           text: 'Real Motor Japan',\n  //           color: '#FFFFFF', // Text color\n  //           fontSize: 20,\n  //           opacity: 50, // Set opacity if needed\n  //         };\n\n  //         // Convert the blob to an ArrayBuffer\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\n\n  //         // Use watermark.js to add the watermark\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\n  //           .image(watermark.image.bottomCenter())\n  //           .then((img) => img.arrayBuffer());\n\n  //         // Convert the ArrayBuffer back to a Blob\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\n\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\n  //       })\n  //     );\n\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\n  //   } catch (error) {\n  //     console.error('Error uploading images:', error);\n  //   }\n  // }, []);\n\n  const uploadImages = useCallback(async () => {\n\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\n    const ImageFormat = { jpg: 'jpg' };\n\n\n\n    try {\n      // Get the names of the images to keep\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\n\n      // Delete existing files in the folder that do not match the names of the images to keep\n      const listResult = await listAll(storageRef);\n      await Promise.all(\n        listResult.items\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\n          .map((itemRef) => deleteObject(itemRef))\n      );\n\n      await Promise.all(\n        globalSelectedImages.map(async (asset, index) => {\n          const { uri } = asset;\n          const imagename = index.toString();\n\n          const response = await fetch(uri);\n          const blob = await response.blob();\n\n          // Create an offscreen canvas\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create a new image object\n          const img = new Image();\n          img.src = URL.createObjectURL(blob);\n\n          // Draw the image on the canvas\n          img.onload = async () => {\n            // Create a canvas element\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            // Calculate the desired width and height for the resized image\n            const maxWidth = 800; // Set your desired maximum width\n            const maxHeight = 600; // Set your desired maximum height\n            let newWidth = img.width;\n            let newHeight = img.height;\n\n            // Check if the image needs resizing\n            if (img.width > maxWidth) {\n              newWidth = maxWidth;\n              newHeight = (img.height * maxWidth) / img.width;\n            }\n\n            if (newHeight > maxHeight) {\n              newWidth = (newWidth * maxHeight) / newHeight;\n              newHeight = maxHeight;\n            }\n\n            // Set the canvas dimensions to the new width and height\n            canvas.width = newWidth;\n            canvas.height = newHeight;\n\n            // Draw the resized image onto the canvas\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\n\n            // Calculate the font size as a percentage of the image width\n            const fontSizePercentage = 3;\n            const imageRes = img.height * img.width;\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\n\n            ctx.font = `bold ${fontSize}px Arial`;\n            ctx.fillStyle = '#fff';\n            ctx.shadowColor = 'transparent';\n            ctx.imageSmoothingEnabled = true;\n            ctx.lineWidth = 2;\n\n            // Calculate the position for the watermark text\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\n            const textWidth = ctx.measureText(watermarkText).width;\n            const textHeight = fontSize; // Font size determines the text height\n\n            // Set padding around the text (adjust as needed)\n            const paddingX = 10;\n            const paddingY = 5;\n\n            // Calculate the position for the text shadow\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\n\n            // Increase the shadow thickness by adjusting the shadow blur radius\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\n\n            // Draw the text shadow (black)\n            ctx.fillStyle = 'black';\n            ctx.fillText(watermarkText, xShadow, yShadow);\n\n            // Reset the shadow blur radius for the actual text\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\n\n            // Calculate the position for the actual text\n            const x = (canvas.width - textWidth) / 2;\n            const y = canvas.height - 20;\n\n            // Draw the actual text (white)\n            ctx.fillStyle = '#fff';\n            ctx.fillText(watermarkText, x, y);\n\n            // Convert the canvas to a blob\n            const watermarkedImageBlob = await new Promise(resolve => {\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\n            });\n\n            // Upload the resized image to Firebase Storage\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\n          };\n\n        })\n\n      );\n\n\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\n    } catch (error) {\n      console.error('Error uploading images:', error);\n    }\n  }, []);\n\n\n  const handleUpload = useCallback(async () => {\n\n    dispatch(setLoadingModalVisible(true));\n\n    setCarNameError('muted.500');\n    setMakeError('white');\n    setModelError('white');\n    setRegYearError('white');\n    setRegMonthError('white');\n    setRefNumError('white');\n    setStockIDNumError('white');\n    setChassisError('white');\n    setModelCodeError('white');\n    setEngineDisError('white');\n    setSteeringError('white');\n    setMileageError('white');\n    setTransmissionError('white');\n    setExteriorColoError('white');\n    setNumOfSeatsError('white');\n    setDoorsError('white');\n    setPurchasedPriceError('white');\n    setFuelError('white');\n    setPortError('white');\n    setBuyerError('white');\n    setSalesError('white');\n    setDimensionLengthError('white');\n    setDimensionWidthError('white');\n    setDimensionHeightError('white');\n    setDriveTypeError('white');\n    setWeightError('white');\n    setBodyTypeError('white');\n    setStockStatusError('white');\n    setIsNoFeaturesSelected('white');\n\n    const selectIsEmpty = makeVariable.text == \"\" ||\n      modelVariable.text == \"\" ||\n      regYearVariable.text == \"\" ||\n      regMonthVariable.text == \"\" ||\n      // steeringVariable.text == \"\" ||\n      // transmissionVariable.text == \"\" ||\n      // exteriorColorVariable.text == \"\" ||\n      fuelVariable.text == \"\"\n      || portVariable.text == \"\"\n      || buyerVariable.text == \"\"\n      || salesVariable.text == \"\"\n      || driveTypeVariable.text == \"\"\n      || bodyTypeVariable.text == \"\"\n      ;\n\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\n      inputChassis.current?.value == \"\" ||\n      inputModelCode.current?.value == \"\" ||\n      inputEngineDis.current?.value == \"\" ||\n      inputEngineDis.current?.value == 0 ||\n      inputMileage.current?.value == \"\" ||\n      inputMileage.current?.value == 0 ||\n      inputNumOfSeats.current?.value == \"\" ||\n      inputDoors.current?.value == \"\" ||\n      inputNumOfSeats.current?.value == 0 ||\n      inputDoors.current?.value == 0 ||\n      inputPurchasedPrice.current?.value == 0 ||\n      inputPurchasedPrice.current?.value == \"\" ||\n      inputDimensionLength.current?.value == \"\" ||\n      inputDimensionWidth.current?.value == \"\" ||\n      inputDimensionHeight.current?.value == \"\" ||\n      inputDimensionCubicMeters.current?.value == \"\" ||\n      inputDimensionLength.current?.value == 0 ||\n      inputDimensionWidth.current?.value == 0 ||\n      inputDimensionHeight.current?.value == 0 ||\n      inputDimensionCubicMeters.current?.value == 0 ||\n      // inputWeight.current?.value == \"\" ||\n      inputCarName.current?.value == \"\";\n\n    // const inputExceedLength = input;\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\n\n    console.log(inputIsEmpty || selectIsEmpty);\n\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\n      dispatch(setLoadingModalVisible(false));\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n      if (allValuesAreFalse) {\n        // All features are false\n        console.log('All features are false');\n        setIsNoFeaturesSelected('danger.400');\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        // handleModalUploadClose();\n      } else {\n        // At least one feature is true\n        console.log('At least one feature is true.');\n        // handleModalUploadClose();\n      }\n\n      if (inputCarName.current?.value == \"\") {\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\n        setCarNameError('danger.400');\n      }\n\n      if (bodyTypeVariable.text == \"\") {\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setBodyTypeError('danger.400');\n      }\n\n      if (driveTypeVariable.text == \"\") {\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setDriveTypeError('danger.400');\n      }\n\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\n        setDimensionHeightError('danger.400');\n      }\n\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\n        setDimensionWidthError('danger.400');\n      }\n\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\n        setDimensionLengthError('danger.400');\n      }\n\n      if (fuelVariable.text == \"\") {\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setFuelError('danger.400');\n      }\n\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\n        setDoorsError('danger.400');\n      }\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\n        setPurchasedPriceError('danger.400');\n      }\n\n      if (inputNumOfSeats.current?.value == \"\") {\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\n        setNumOfSeatsError('danger.400');\n      }\n\n      if (exteriorColorVariable.text == \"\") {\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setExteriorColoError('danger.400');\n      }\n\n      if (transmissionVariable.text == \"\") {\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setTransmissionError('danger.400');\n      }\n\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\n        setMileageError('danger.400');\n      }\n\n      if (steeringVariable.text == \"\") {\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setSteeringError('danger.400');\n      }\n\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\n        setEngineDisError('danger.400');\n      }\n\n      if (inputModelCode.current?.value == \"\") {\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\n        setModelCodeError('danger.400');\n      }\n\n      if (inputChassis.current?.value == \"\") {\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\n        setChassisError('danger.400');\n      }\n\n      if (inputRefNum.current?.value == \"\") {\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\n        setRefNumError('danger.400');\n      }\n      if (buyerVariable.text == \"\") {\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setBuyerError('danger.400');\n      }\n\n      if (salesVariable.text == \"\") {\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setSalesError('danger.400');\n      }\n\n\n      if (portVariable.text == \"\") {\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setPortError('danger.400');\n      }\n\n\n      if (regMonthVariable.text == \"\") {\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setRegMonthError('danger.400');\n      }\n\n      if (regYearVariable.text == \"\") {\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setRegYearError('danger.400');\n      }\n\n      if (modelVariable.text == \"\") {\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setModelError('danger.400');\n      }\n\n      if (makeVariable.text == \"\") {\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\n        setMakeError('danger.400');\n      }\n\n      if (inputStockIDNumber.current?.value == \"\") {\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\n        setStockIDNumError('danger.400');\n      }\n\n    }\n    else {\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\n      const stockID = inputStockIDNumber.current?.value;\n      const docQuery = doc(stockCollectionRef, stockID);\n      const docSnap = await getDoc(docQuery);\n\n      dispatch(setLoadingModalVisible(true));\n      globalReferenceNumber = inputRefNum.current?.value;\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n      const { datetime } = response.data;\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n      const year = moment(datetime).format('YYYY');\n      const month = moment(datetime).format('MM');\n      const monthWithDay = moment(datetime).format('MM/DD');\n      const date = moment(datetime).format('YYYY/MM/DD');\n      const day = moment(datetime).format('DD');\n      const time = moment(datetime).format('HH:mm');\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\n\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\n\n      const docData = docSnap.data();\n      // Your data object to be added\n      const docSnapshot = await getDoc(docRef);\n\n\n\n\n      const keywordsData = [\n        inputRefNum.current?.value,\n        inputCarName.current?.value,\n        inputStockIDNumber.current?.value,\n        regYearVariable.text,\n        makeVariable.text,\n        modelVariable.text,\n        inputChassis.current?.value,\n        `${makeVariable.text} ${modelVariable.text}`,\n        `${regYearVariable.text} ${makeVariable.text}`,\n      ]\n      const fobHistoryData = {\n        date: formattedTime,\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\n        changedBy: nameVariable.text,\n      };\n\n      let fobHistoryValue;\n      const inputFobValue = inputFobJpy.current?.value;\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\n        fobHistoryValue = arrayUnion(fobHistoryData);\n      }\n\n      const data = {\n        keywords: keywordsData,\n        imageCount: globalSelectedImages.length,\n        supplyChainsCostsData: globalSupplyChainCostsData,\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\n        // ? { updatedDate: formattedTime }\n        // : { dateAdded: formattedTime }),\n        // dateAdded: formattedTime, \n        display: false,\n        photos: false,\n        stockID: inputStockIDNumber.current?.value,\n        make: makeVariable.text,\n        model: modelVariable.text,\n        regYear: regYearVariable.text,\n        regMonth: regMonthVariable.text,\n        referenceNumber: inputRefNum.current?.value,\n        chassisNumber: inputChassis.current?.value,\n        modelCode: inputModelCode.current?.value,\n        engineCode: inputEngineCode.current?.value,\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\n        steering: steeringVariable.text,\n        mileage: inputMileage.current.value.replace(/,/g, ''),\n        transmission: transmissionVariable.text,\n        exteriorColor: exteriorColorVariable.text,\n        numberOfSeats: inputNumOfSeats.current?.value,\n        doors: inputDoors.current?.value,\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\n        fuel: fuelVariable.text,\n        port: portVariable.text,\n        sales: salesVariable.text,\n        buyer: buyerVariable.text,\n        portID: portVariable.id,\n        salesID: salesVariable.id,\n        buyerID: buyerVariable.id,\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\n        driveType: driveTypeVariable.text,\n        weight: inputWeight.current.value.replace(/,/g, ''),\n        bodyType: bodyTypeVariable.text,\n        stockStatus: stockStatusVariable.text,\n        carName: inputCarName.current?.value,\n        carDescription: inputCarDesc.current?.value,\n        notes: inputCarNotes.current?.value,\n        memo: inputCarMemo.current?.value,\n\n        comfort: {\n          ComfortAiCoFr: featuresState.ComfortAiCoFr  || false,\n          ComfortAiCoRe: featuresState.ComfortAiCoRe  || false,\n          ComfortAMFMRa: featuresState.ComfortAMFMRa || false,\n          ComfortAMFMSt: featuresState.ComfortAMFMSt  || false,\n          ComfortCDPl: featuresState.ComfortCDPl  || false,\n          ComfortCDCh: featuresState.ComfortCDCh  || false,\n          ComfortCrSpCo: featuresState.ComfortCrSpCo  || false,\n          ComfortDiSp: featuresState.ComfortDiSp  || false,\n          ComfortDVDPl: featuresState.ComfortDVDPl  || false,\n          ComfortHDD: featuresState.ComfortHDD  || false,\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS  || false,\n          ComfortPoSt: featuresState.ComfortPoSt  || false,\n          ComfortPrAuSy: featuresState.ComfortPrAuSy  || false,\n          ComfortReKeSy: featuresState.ComfortReKeSy  || false,\n          ComfortTiStWh: featuresState.ComfortTiStWh  || false,\n        },\n\n        ComfortAiCoFr: featuresState.ComfortAiCoFr || false,\n        ComfortAiCoRe: featuresState.ComfortAiCoRe || false,\n        ComfortAMFMRa: featuresState.ComfortAMFMRa || false,\n        ComfortAMFMSt: featuresState.ComfortAMFMSt || false,\n        ComfortCDPl: featuresState.ComfortCDPl || false,\n        ComfortCDCh: featuresState.ComfortCDCh || false,\n        ComfortCrSpCo: featuresState.ComfortCrSpCo || false,\n        ComfortDiSp: featuresState.ComfortDiSp || false,\n        ComfortDVDPl: featuresState.ComfortDVDPl || false,\n        ComfortHDD: featuresState.ComfortHDD || false,\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS || false,\n        ComfortPoSt: featuresState.ComfortPoSt || false,\n        ComfortPrAuSy: featuresState.ComfortPrAuSy || false,\n        ComfortReKeSy: featuresState.ComfortReKeSy || false,\n        ComfortTiStWh: featuresState.ComfortTiStWh || false,\n\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\n\n        safetySystem: {\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy || false,\n          SafetySystemDrAi: featuresState.SafetySystemDrAi || false,\n          SafetySystemPaAi: featuresState.SafetySystemPaAi || false,\n          SafetySystemSiAi: featuresState.SafetySystemSiAi || false,\n\n        },\n\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy || false,\n        SafetySystemDrAi: featuresState.SafetySystemDrAi || false,\n        SafetySystemPaAi: featuresState.SafetySystemPaAi || false,\n        SafetySystemSiAi: featuresState.SafetySystemSiAi || false,\n\n        interior: {\n          InteriorLeSe: featuresState.InteriorLeSe || false,\n          InteriorPoDoLo: featuresState.InteriorPoDoLo || false,\n          InteriorPoMi: featuresState.InteriorPoMi || false,\n          InteriorPoSe: featuresState.InteriorPoS || false,\n          InteriorPoWi: featuresState.InteriorPoWi || false,\n          InteriorReWiDe: featuresState.InteriorReWiDe || false,\n          InteriorReWiWi: featuresState.InteriorReWiWi || false,\n          InteriorThRoSe: featuresState.InteriorThRoSe || false,\n          InteriorTiGl: featuresState.InteriorTiGl || false,\n        },\n\n        InteriorLeSe: featuresState.InteriorLeSe || false,\n        InteriorPoDoLo: featuresState.InteriorPoDoLo || false,\n        InteriorPoMi: featuresState.InteriorPoMi || false,\n        InteriorPoSe: featuresState.InteriorPoSe || false,\n        InteriorPoWi: featuresState.InteriorPoWi || false,\n        InteriorReWiDe: featuresState.InteriorReWiDe || false,\n        InteriorReWiWi: featuresState.InteriorReWiWi || false,\n        InteriorThRoSe: featuresState.InteriorThRoSe || false,\n        InteriorTiGl: featuresState.InteriorTiGl || false,\n\n        exterior: {\n          ExteriorAlWh: featuresState.ExteriorAlWh || false,\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo || false,\n          ExteriorSuRo: featuresState.ExteriorSuRo || false,\n        },\n        ExteriorAlWh: featuresState.ExteriorAlWh || false,\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo || false,\n        ExteriorSuRo: featuresState.ExteriorSuRo || false,\n\n        sellingPoints: {\n          SellingPointsCuWh: featuresState.SellingPointsCuWh || false,\n          SellingPointsFuLo: featuresState.SellingPointsFuLo || false,\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv || false,\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi || false,\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi || false,\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw || false,\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi || false,\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi || false,\n          SellingPointsReBo: featuresState.SellingPointsReBo || false,\n          SellingPointsTuEn: featuresState.SellingPointsTuEn || false,\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy || false,\n        },\n\n        SellingPointsCuWh: featuresState.SellingPointsCuWh || false,\n        SellingPointsFuLo: featuresState.SellingPointsFuLo || false,\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv || false,\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi || false,\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi || false,\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw || false,\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi || false,\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi || false,\n        SellingPointsReBo: featuresState.SellingPointsReBo || false,\n        SellingPointsTuEn: featuresState.SellingPointsTuEn || false,\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy || false,\n\n\n        // Add more fields as needed\n      };\n\n      // Get a reference to the document with the given stock ID\n\n\n      // Get the document\n\n\n      // Check if the document exists\n      if (docSnap.exists()) {\n        setDoc(docRef, data, { merge: true })\n          .then(async () => {\n            try {\n\n              await uploadImages();\n              dispatch(setLoadingModalVisible(false));\n              dispatch(setIsUpdateSuccessModalOpen(true));\n\n\n              try {\n                // Check if the document exists\n                const docSnapshot = await getDoc(docRef);\n\n                if (docSnap.exists()) {\n                  const dataDoc = docSnap.data();\n                  if (dataDoc) {\n                    if ('dateAdded' in dataDoc) {\n                      // The document exists and has a 'dateAdded' field\n                      console.log('Date Update');\n                      // Update the 'updatedDate' field without removing 'dateAdded'\n                      const updates = {\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\n                      };\n\n                      // Use updateDoc to only update the 'updatedDate' field in the document\n                      await updateDoc(docRef, updates);\n                    } else {\n                      // The document exists, but it doesn't have a 'dateAdded' field\n                      console.log('Date Added');\n                      // Update the 'dateAdded' field without removing other fields\n                      const updates = {\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\n                      };\n\n                      // Use updateDoc to only update the 'dateAdded' field in the document\n                      await updateDoc(docRef, updates);\n                    }\n                  } else {\n                    // The document exists, but it doesn't have a 'dateAdded' field\n                    console.log('Date Added');\n                    // Update the 'dateAdded' field without removing other fields\n                    const updates = {\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\n                    };\n\n                    // Use updateDoc to only update the 'dateAdded' field in the document\n                    await updateDoc(docRef, updates);\n                  }\n                } else {\n                  // The document does not exist\n                  console.log('Date Added');\n                }\n              } catch (error) {\n                console.error('Error checking document:', error);\n              }\n\n              const logData = {\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\n                timestamp: formattedTime,\n                colorScheme: true,\n                keywords: [\n                  formattedTime.toLowerCase(),\n                  inputStockIDNumber.current.value.toLowerCase(),\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\n                  'Vehicle Updated'.toLowerCase(),\n                  'Vehicle'.toLowerCase(),\n                  'Updated'.toLowerCase(),\n                  inputCarName.current.value.toLowerCase(),\n                  inputRefNum.current.value.toLowerCase(),\n                  nameVariable.text.toLowerCase(),\n                  year.toLowerCase(),\n                  month.toLowerCase(),\n                  monthWithDay.toLowerCase(),\n                  date.toLowerCase(),\n                  day.toLowerCase(),\n                  time.toLowerCase(),\n                  timeWithMinutesSeconds.toLowerCase(),\n                ],\n              };\n              dispatch(setLoadingModalVisible(false));\n              handleClearImages();\n              addLogToCollection(logData);\n              handleClear();\n              console.log('Document updated successfully!');\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\n            } catch (error) {\n              // Handle errors that may occur during the update process\n              console.error('Error updating document:', error);\n            }\n          })\n          .catch((error) => {\n            dispatch(setLoadingModalVisible(false));\n            console.error('Error updating document: ', error);\n          });\n      }\n      else {\n        const dataWithDateAdded = {\n          ...data,\n          dateAdded: formattedTime,\n        };\n\n        setDoc(docRef, dataWithDateAdded)\n          .then(async () => {\n\n            try {\n              await uploadImages();\n              dispatch(setLoadingModalVisible(false));\n              dispatch(setIsSuccessModalOpen(true));\n\n              // try {\n              //   // Check if the document exists\n              //   const docSnapshot = await getDoc(docRef);\n\n              //   if (docSnapshot.exists()) {\n              //     const data = docSnapshot.data();\n              //     if (data) {\n              //       if ('dateAdded' in data) {\n              //         // The document exists and has a 'dateAdded' field\n              //         console.log('Date Update');\n              //         // Update the 'updatedDate' field in the document\n              //         const updates = {\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\n              //         };\n\n              //         // Use setDoc to update the 'updatedDate' field in the document\n              //         await setDoc(docRef, updates, { merge: true });\n              //       } else {\n              //         // The document exists, but it doesn't have a 'dateAdded' field\n              //         console.log('Date Added');\n              //         // Update the 'dateAdded' field in the document\n              //         const updates = {\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\n              //         };\n\n              //         // Use setDoc to update the 'dateAdded' field in the document\n              //         await setDoc(docRef, updates, { merge: true });\n              //       }\n              //     } else {\n              //       // The document exists, but it doesn't have a 'dateAdded' field\n              //       console.log('Date Added');\n              //       // Update the 'dateAdded' field in the document\n              //       const updates = {\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\n              //       };\n\n              //       // Use setDoc to update the 'dateAdded' field in the document\n              //       await setDoc(docRef, updates, { merge: true });\n              //     }\n              //   } else {\n              //     // The document does not exist\n              //     console.log('Date Added');\n              //   }\n              // } catch (error) {\n              //   console.error('Error checking document:', error);\n              // }\n\n              const logData = {\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\n                timestamp: formattedTime,\n                colorScheme: true,\n                keywords: [\n                  formattedTime.toLowerCase(),\n                  inputStockIDNumber.current.value.toLowerCase(),\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\n                  'Vehicle Added'.toLowerCase(),\n                  'Vehicle'.toLowerCase(),\n                  'Added'.toLowerCase(),\n                  inputCarName.current.value.toLowerCase(),\n                  inputRefNum.current.value.toLowerCase(),\n                  nameVariable.text.toLowerCase(),\n                  year.toLowerCase(),\n                  month.toLowerCase(),\n                  monthWithDay.toLowerCase(),\n                  date.toLowerCase(),\n                  day.toLowerCase(),\n                  time.toLowerCase(),\n                  timeWithMinutesSeconds.toLowerCase(),\n                ],\n              };\n\n              handleClearImages();\n              addLogToCollection(logData);\n              handleClear();\n              console.log('Document added successfully!');\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\n            } catch (error) {\n\n            }\n\n\n          })\n          .catch((error) => {\n            dispatch(setLoadingModalVisible(false));\n            console.error('Error adding document: ', error);\n          });\n      }\n\n    }\n\n\n  }, []);\n\n\n\n\n  const addLogToCollection = async (data) => {\n    try {\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n      // Add a new document to the \"logs\" collection\n      await addDoc(logsCollectionRef, data);\n\n      console.log('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n\n\n\n  const handleClearToggleButton = () => {\n    resetKey++;\n\n    featuresState.SafetySystemAnBrSy = false;\n    featuresState.SafetySystemDrAi = false;\n    featuresState.SafetySystemPaAi = false;\n    featuresState.SafetySystemSiAi = false;\n    featuresState.ComfortAiCoFr = false;\n    featuresState.ComfortAiCoRe = false;\n    featuresState.ComfortAMFMRa = false;\n    featuresState.ComfortAMFMSt = false;\n    featuresState.ComfortCDPl = false;\n    featuresState.ComfortCDCh = false;\n    featuresState.ComfortCrSpCo = false;\n    featuresState.ComfortDiSp = false;\n    featuresState.ComfortDVDPl = false;\n    featuresState.ComfortHDD = false;\n    featuresState.ComfortNaSyGPS = false;\n    featuresState.ComfortPoSt = false;\n    featuresState.ComfortPrAuSy = false;\n    featuresState.ComfortReKeSy = false;\n    featuresState.ComfortTiStWh = false;\n    featuresState.InteriorLeSe = false;\n    featuresState.InteriorPoDoLo = false;\n    featuresState.InteriorPoMi = false;\n    featuresState.InteriorPoSe = false;\n    featuresState.InteriorPoWi = false;\n    featuresState.InteriorReWiDe = false;\n    featuresState.InteriorReWiWi = false;\n    featuresState.InteriorThRoSe = false;\n    featuresState.InteriorTiGl = false;\n    featuresState.ExteriorAlWh = false;\n    featuresState.ExteriorPoSlDo = false;\n    featuresState.ExteriorSuRo = false;\n    featuresState.SellingPointsCuWh = false;\n    featuresState.SellingPointsFuLo = false;\n    featuresState.SellingPointsMaHiAv = false;\n    featuresState.SellingPointsBrNeTi = false;\n    featuresState.SellingPointsNoAcHi = false;\n    featuresState.SellingPointsNoSmPrOw = false;\n    featuresState.SellingPointsOnOwHi = false;\n    featuresState.SellingPointsPeRaTi = false;\n    featuresState.SellingPointsReBo = false;\n    featuresState.SellingPointsTuEn = false;\n    featuresState.SellingPointsUpAuSy = false;\n  };\n\n  const handleClear = useCallback(() => {\n\n    handleClearToggleButton();\n    handleClearImages();\n    clearSelect();\n\n\n    dispatch(setSupplyChainsCostsData([]));\n    globalSupplyChainCostsData = [];\n    globalSupplyChainCostsAmount = '';\n    globalFobPrice = '';\n\n    inputStockIDNumber.current?.clear();\n    inputCarName.current?.clear();\n    inputCarDesc.current?.clear();\n    inputFobJpy.current?.clear();\n    inputFobUsd.current?.clear();\n\n    inputRegYear.current?.clear();\n    inputRegMonth.current?.clear();\n    inputRefNum.current?.clear();\n    inputChassis.current?.clear();\n    inputModelCode.current?.clear();\n    inputEngineCode.current?.clear();\n    inputEngineDis.current?.clear();\n    inputMileage.current?.clear();\n    inputNumOfSeats.current?.clear();\n    inputDoors.current?.clear();\n    inputPurchasedPrice.current?.clear();\n    inputFuel.current?.clear();\n    inputDimensionLength.current?.clear();\n    inputDimensionWidth.current?.clear();\n    inputDimensionHeight.current?.clear();\n    inputDimensionCubicMeters.current.value = \"0.00\";\n    inputDriveType.current?.clear();\n    inputWeight.current?.clear();\n    inputCarNotes.current?.clear();\n    inputCarMemo.current?.clear();\n    makeVariable.text = '';\n    modelVariable.text = '';\n    regYearVariable.text = '';\n    regMonthVariable.text = '';\n    steeringVariable.text = '';\n    transmissionVariable.text = '';\n    exteriorColorVariable.text = '';\n    fuelVariable.text = '';\n    portVariable.text = '';\n    salesVariable.text = '';\n    buyerVariable.text = '';\n    portVariable.id = '';\n    salesVariable.id = '';\n    buyerVariable.id = '';\n    driveTypeVariable.text = '';\n    bodyTypeVariable.text = '';\n    stockStatusVariable.text = '';\n\n    setIsNoFeaturesSelected('white');\n\n    setMakeError('white');\n    setModelError('white');\n    setRegYearError('white');\n    setRegMonthError('white');\n    setRefNumError('white');\n    setStockIDNumError('white');\n    setChassisError('white');\n    setModelCodeError('white');\n    setEngineDisError('white');\n    setSteeringError('white');\n    setMileageError('white');\n    setTransmissionError('white');\n    setExteriorColoError('white');\n    setNumOfSeatsError('white');\n    setDoorsError('white');\n    setPurchasedPriceError('white');\n    setFuelError('white');\n    setPortError('white');\n    setSalesError('white');\n    setBuyerError('white');\n    setDimensionLengthError('white');\n    setDimensionWidthError('white');\n    setDimensionHeightError('white');\n    setDriveTypeError('white');\n    setWeightError('white');\n    setBodyTypeError('white');\n    setStockStatusError('white');\n    setCarNameError('muted.500');\n\n    setIsNoFeaturesSelected('white');\n\n    // handleModalClearClose();\n\n\n\n\n  }, []);\n\n\n\n\n  // const handleToggleLogs = useCallback(() => {\n\n\n  //   navigation.navigate(\"LOGS\");\n  // }, []);\n  // const handleToggleAddAccount = useCallback(() => {\n\n\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\n  // }, []);\n\n  // const handleToggleAccountList = useCallback(() => {\n\n  //   navigation.navigate(\"ACCOUNT LIST\");\n  // }, []);\n\n  // const handleToggleAddVehicle = useCallback(() => {\n\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\n  // }, []);\n\n\n  // const handleVehicleList = useCallback(() => {\n  //   navigation.navigate(\"VEHICLE LIST\");\n  // }, []);\n\n  const handleDocumentChange = (snapshot) => {\n    if (snapshot.exists()) {\n      const data = snapshot.data();\n      const isActive = data.active;\n\n      if (!isActive) {\n        signOut(projectControlAuth)\n          .then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\");\n\n          })\n          .catch((error) => {\n            console.error('Error signing out:', error);\n          });\n      }\n    } else {\n      signOut(projectControlAuth)\n        .then(() => {\n          // navigation.navigate('Login');\n          navigate(\"/Login\");\n\n        })\n        .catch((error) => {\n          console.error('Error signing out:', error);\n        });\n    }\n  };\n\n  const subscribeToFieldChange = () => {\n    const userId = projectControlAuth.currentUser?.email;\n    if (userId) {\n      const userRef = doc(firestore, 'accounts', userId);\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n      return unsubscribe;\n    } else {\n      // Return a no-op function if there's no user\n      return () => {\n        navigate(\"/login\")\n      };\n    }\n  };\n\n\n  const handleSignOut = () => {\n\n    signOut(projectControlAuth).then(() => {\n      // navigation.navigate('Login');\n      navigate(\"/Login\");\n      setEmail('');\n      setName('');\n    }).catch(() => {\n      // An error happened.\n    });\n\n\n  }\n\n\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n\n\n  const { width } = Dimensions.get('window');\n\n\n  const handleInputPurchasedPriceChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 9);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputPurchasedPrice.current.value = formattedValue;\n\n  };\n\n\n  const handleInputFobJpyChange = (text) => {\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Check if the numeric value starts with 0\n    if (numericValue.startsWith('0')) {\n      // Handle the case when the value starts with 0\n      inputFobJpy.current.value = '';\n      inputFobUsd.current.setNativeProps({ text: '' });\n      return;\n    }\n\n    // Truncate the numeric value to a maximum of 9 digits\n    const truncatedValue = numericValue.slice(0, 9);\n\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    if (formattedValue !== '') {\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\n\n      if (!isNaN(multipliedValue)) {\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n        inputFobJpy.current.value = formattedValue;\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\n      } else {\n        // Handle the case when the multipliedValue is NaN\n        inputFobJpy.current.value = formattedValue;\n        inputFobUsd.current.setNativeProps({ text: '' });\n      }\n    } else {\n      // Handle the case when formattedValue is empty\n      inputFobJpy.current.value = '';\n      inputFobUsd.current.setNativeProps({ text: '' });\n    }\n  };\n\n  useEffect(() => {\n    handleInputFobJpyChange(inputFobJpy.current?.value);\n  }, [jpyToUsd]);\n\n\n\n  const handleAddMakeTextChange = () => {\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\n    textAreaAddMake.current?.setNativeProps({ text: newText });\n\n  };\n\n\n  const handleAddTransmissionTextChange = () => {\n    const textAreaValue = textAreaAddTransmission.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddFuelTextChange = () => {\n    const textAreaValue = textAreaAddFuel.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddFuel.current.setNativeProps({ text: newText });\n    }\n  };\n\n\n  const handleAddPortTextChange = () => {\n    const textAreaValue = textAreaAddPort.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddPort.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddPortCodeTextChange = () => {\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\n    // Remove any non-numeric characters\n  };\n\n  const handleAddSalesTextChange = () => {\n    const textAreaValue = textAreaAddSales.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddSales.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddSalesCodeTextChange = () => {\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\n  };\n\n  const handleAddBuyerTextChange = () => {\n    const textAreaValue = textAreaAddBuyer.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddBuyerCodeTextChange = (text) => {\n\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\n\n    // Update the value of the textarea while preventing new lines\n    textAreaAddBuyerCode.current.value = numericValue;\n  };\n\n  const handleAddDriveTypeTextChange = () => {\n    const textAreaValue = textAreaAddDriveType.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddBodyTypeTextChange = () => {\n    const textAreaValue = textAreaAddBodyType.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\n    }\n  };\n\n\n  const handleAddExteriorColorTextChange = () => {\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddExpenseNameTextChange = () => {\n    const textAreaValue = textAreaAddExpenseName.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddPaidToTextChange = () => {\n    const textAreaValue = textAreaAddPaidTo.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleInputRefNumChange = () => {\n    const newText = inputRefNum.current?.value?.toUpperCase();\n    inputRefNum.current?.setNativeProps({ text: newText });\n\n    setRefNumFromSelects();\n  };\n\n  const handleInputChassisChange = () => {\n    const newText = inputChassis.current?.value?.toUpperCase();\n    inputChassis.current?.setNativeProps({ text: newText });\n\n  };\n\n  const handleInputModelCodeChange = () => {\n    const newText = inputModelCode.current?.value?.toUpperCase();\n    inputModelCode.current?.setNativeProps({ text: newText });\n\n  };\n\n  const handleInputEngineCodeChange = () => {\n    const newText = inputEngineCode.current?.value?.toUpperCase();\n    inputEngineCode.current?.setNativeProps({ text: newText });\n  };\n\n  const handleInputEngineDisChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 5);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputEngineDis.current.value = formattedValue;\n  };\n\n  const handleInputExpenseAmountChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 6);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputExpenseAmount.current.value = formattedValue;\n  };\n\n\n  const handleInputMileageChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 6);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputMileage.current.value = formattedValue;\n  };\n\n  const handleInputNumOfSeatsChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 3);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputNumOfSeats.current.value = formattedValue;\n  };\n\n  const handleInputDoorsChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 2);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputDoors.current.value = formattedValue;\n  };\n\n  const handleInputDimensionLengthChange = (text) => {\n    // Remove any non-numeric characters and allow decimal points\n    const numericValue = text.replace(/[^0-9.]/g, '');\n\n    // Check if a dot already exists in the input\n    const dotIndex = numericValue.indexOf('.');\n    let truncatedValue;\n    if (dotIndex !== -1) {\n      // If a dot already exists, remove any additional dots\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\n    } else {\n      truncatedValue = numericValue;\n    }\n\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\n    truncatedValue = truncatedValue.slice(0, 7);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    inputDimensionLength.current.value = formattedValue;\n\n    calculateCubicMeters();\n  };\n\n\n  const handleInputDimensionWidthChange = (text) => {\n    // Remove any non-numeric characters and allow decimal points\n    const numericValue = text.replace(/[^0-9.]/g, '');\n\n    // Check if a dot already exists in the input\n    const dotIndex = numericValue.indexOf('.');\n    let truncatedValue;\n    if (dotIndex !== -1) {\n      // If a dot already exists, remove any additional dots\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\n    } else {\n      truncatedValue = numericValue;\n    }\n\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\n    truncatedValue = truncatedValue.slice(0, 7);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    inputDimensionWidth.current.value = formattedValue;\n\n    calculateCubicMeters();\n  };\n\n  const handleInputDimensionHeightChange = (text) => {\n    // Remove any non-numeric characters and allow decimal points\n    const numericValue = text.replace(/[^0-9.]/g, '');\n\n    // Check if a dot already exists in the input\n    const dotIndex = numericValue.indexOf('.');\n    let truncatedValue;\n    if (dotIndex !== -1) {\n      // If a dot already exists, remove any additional dots\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\n    } else {\n      truncatedValue = numericValue;\n    }\n\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\n    truncatedValue = truncatedValue.slice(0, 7);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    inputDimensionHeight.current.value = formattedValue;\n    calculateCubicMeters();\n\n  };\n\n  const handleInputDimensionCubicMetersChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 6);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputDimensionCubicMeters.current.value = formattedValue;\n    calculateCubicMeters();\n  };\n\n  const handleInputWeightChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 5);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputWeight.current.value = formattedValue;\n  };\n\n  const monthNumbers = [\n    '01',\n    '02',\n    '03',\n    '04',\n    '05',\n    '06',\n    '07',\n    '08',\n    '09',\n    '10',\n    '11',\n    '12'\n  ];\n\n  const calculateCubicMeters = () => {\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\n\n    const result = (length * width * height) / 1000000;\n    const resultFormatted = result.toFixed(2);\n\n    // setCubicMeters(resultFormatted);\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\n  };\n\n\n\n\n\n  // useEffect(() => {\n\n  //   let makeValue = makeVariable.text;\n\n  //   if (makeValue !== '') {\n  //     setCarNameFromSelects();\n  //   }\n\n  // }, [modelData]);\n\n\n  const setRefNumFromSelects = () => {\n    let portValue = portVariable.id;\n    let stockIDValue = inputStockIDNumber.current?.value;\n    let salesValue = salesVariable.id;\n    let buyerValue = buyerVariable.id;\n\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\n    //   regYearValue = \"\";\n    // }\n\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\n    // if (makeValue === '') {\n    //   makeValue = \"\";\n    // }\n\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\n    // if (modelValue === '') {\n    //   modelValue = \"\";\n    // }\n\n    // Concatenate the values to form the car name\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\n    // Update the inputCarName ref value using setNativeProps\n    // inputCarName.current.setNativeProps({ text: carName });\n    inputRefNum.current.setNativeProps({ text: carName });\n    referenceNumberVariable.text = carName;\n    // console.log(carName);\n  };\n\n\n  const setCarNameFromSelects = () => {\n    let regYearValue = regYearVariable.text;\n    let makeValue = makeVariable.text;\n    let modelValue = modelVariable.text;\n\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\n    //   regYearValue = \"\";\n    // }\n\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\n    // if (makeValue === '') {\n    //   makeValue = \"\";\n    // }\n\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\n    // if (modelValue === '') {\n    //   modelValue = \"\";\n    // }\n\n    // Concatenate the values to form the car name\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\n    // Update the inputCarName ref value using setNativeProps\n    inputCarName.current.setNativeProps({ text: carName });\n\n  };\n\n  const setCarNameFromSelectsModel = () => {\n    let regYearValue = regYearVariable.text;\n    let makeValue = makeVariable.text;\n    let modelValue = modelVariable.text;\n\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\n    //   regYearValue = \"\";\n    // }\n\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\n    // if (makeValue === '') {\n    //   makeValue = \"\";\n    // }\n\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\n    // if (modelValue === '') {\n    //   modelValue = \"\";\n    // }\n\n    // Concatenate the values to form the car name\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\n    // Update the inputCarName ref value using setNativeProps\n    inputCarName.current.setNativeProps({ text: carName });\n\n\n  };\n  // const [selectedMake, setSelectedMake] = useState();\n\n\n  // useEffect(() => {\n\n\n\n  // }, []);\n\n  const clearSelect = () => {\n    // setModelData([]);\n\n    // if (makeVariable.text !== '') {\n    //   dispatch(setModelData([]));\n    // }\n\n\n\n    selectMakeRef.current.reset();\n    selectModelRef.current.reset();\n    selectRegYear.current.reset();\n    selectRegMonth.current.reset();\n    selectSteering.current.reset();\n    selectTransmission.current.reset();\n    selectExteriorColor.current.reset();\n    selectFuel.current.reset();\n    selectPort.current.reset();\n    selectSales.current.reset();\n    selectBuyer.current.reset();\n    selectDriveType.current.reset();\n    selectBodyType.current.reset();\n    selectStockStatus.current.reset();\n\n\n  };\n\n\n\n\n  const [isOpen, setIsOpen] = useState(false);\n\n\n\n  const ClearModalButton = ({ handleClear }) => {\n    const [modalClearVisible, setModalClearVisible] = useState(false);\n\n    const handleModalClearOpen = useCallback(() => {\n      setModalClearVisible(true);\n\n\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\n    }, []);\n\n    const handleModalClearClose = useCallback(() => {\n      setModalClearVisible(false);\n    }, []);\n\n\n\n    return (\n      <>\n        <Button\n          borderRadius={3}\n          flex={1}\n          bgColor={'#D9D9D9'}\n          onPress={handleModalClearOpen}\n          _text={{ color: 'muted.500' }}\n          _hover={{ bgColor: '#f0eded' }}\n        >\n          Clear\n        </Button>\n\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\n          <Modal.Content bgColor={'amber.100'}>\n            <Modal.CloseButton />\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\n              <Text color={'#102A43'} bold>\n                Clear\n              </Text>\n            </Modal.Header>\n            <Modal.Body\n              justifyContent={'center'}\n              alignItems={'center'}\n              bgColor={'amber.200'}\n              borderLeftWidth={4}\n              borderLeftColor={'amber.600'}\n              margin={5}\n            >\n              <Box flex={1}>\n                <Text color={'amber.600'} bold>\n                  Warning!\n                </Text>\n                <Text color={'amber.600'}>\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\n                </Text>\n              </Box>\n            </Modal.Body>\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\n              <HStack space={5} flex={1}>\n                <Button\n                  onPress={handleModalClearClose}\n                  colorScheme={'warmGray'}\n                  flex={1}\n                  size={'sm'}\n                  borderRadius={5}\n                >\n                  No\n                </Button>\n                <Button\n                  onPress={() => {\n                    handleModalClearClose();\n                    handleClear();\n                  }}\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\n                  Clear\n                </Button>\n              </HStack>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n    );\n  };\n\n\n\n\n  const SelectFeaturesButton = () => {\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\n\n    const [key, setKey] = useState(resetKey);\n\n\n    const handleModalSelectFeaturesOpen = () => {\n      setFeaturesModalVisible(true);\n    };\n\n    const handleModalSelectFeaturesClose = () => {\n      setFeaturesModalVisible(false);\n    };\n\n    const handleClearModalOpen = () => {\n      setClearModalVisible(true);\n    };\n\n    const handleClearModalClose = () => {\n      setClearModalVisible(false);\n    };\n\n    return (\n      <>\n        <Button\n          borderRadius={3}\n          flex={1}\n          onPress={handleModalSelectFeaturesOpen}\n          variant={'outline'}\n          _text={{ color: 'black', }}\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\n\n          Select Features\n        </Button>\n\n        <Modal\n          isOpen={featuresModalVisible}\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\n            <Modal.CloseButton />\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\n              <Text color={'#102A43'} bold>\n                Features\n              </Text>\n            </Modal.Header> */}\n            {/* <Modal.Body\n              justifyContent={'center'}\n              alignItems={'center'}\n              bgColor={'white'}\n              flex={1}\n              h={'100%'}\n            > */}\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\n\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\n                </Box> */}\n\n              <Box>\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\n              </Box>\n\n\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\n              </Box>\n\n              <Box>\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\n              </Box>\n\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n              </Box>\n\n\n              <Box>\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n              </Box>\n\n              <Box >\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n              </Box>\n\n              <Box >\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\n              </Box>\n              <Box flex={1} flexDir={'row'}>\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\n              </Box>\n            </ScrollView>\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\n              <Button\n                onPress={() => {\n                  handleClearModalOpen();\n                }}\n                colorScheme={'gray'}\n                size={'sm'}\n                borderRadius={5}\n                margin={1}\n                flex={1}\n              >\n                Clear\n              </Button>\n              <Box flex={2} />\n              <Button\n                onPress={handleModalSelectFeaturesClose}\n                colorScheme={'primary'}\n                size={'sm'}\n                borderRadius={5}\n                margin={1}\n                flex={1}\n              >\n                Ok\n              </Button>\n            </HStack>\n            {/* </Modal.Body> */}\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\n              <HStack space={5} flex={1}>\n                <Button\n                  onPress={handleModalSelectFeaturesClose}\n                  colorScheme={'warmGray'}\n                  size={'sm'}\n                  borderRadius={5}\n                >\n                  Ok\n                </Button>\n              </HStack>\n            </Modal.Footer> */}\n          </Modal.Content>\n        </Modal>\n\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\n          <Modal.Content bgColor={'amber.100'}>\n            <Modal.CloseButton />\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\n              <Text color={'#102A43'} bold>\n                Clear\n              </Text>\n            </Modal.Header>\n            <Modal.Body\n              justifyContent={'center'}\n              alignItems={'center'}\n              bgColor={'amber.200'}\n              borderLeftWidth={4}\n              borderLeftColor={'amber.600'}\n              margin={5}\n            >\n              <Box flex={1}>\n                <Text color={'amber.600'} bold>\n                  Warning!\n                </Text>\n                <Text color={'amber.600'}>\n                  Are you sure you want to clear?\n                </Text>\n              </Box>\n            </Modal.Body>\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\n              <HStack space={5} flex={1}>\n                <Button\n                  onPress={handleClearModalClose}\n                  colorScheme={'warmGray'}\n                  flex={1}\n                  size={'sm'}\n                  borderRadius={5}\n                >\n                  No\n                </Button>\n                <Button\n                  onPress={() => {\n                    handleClearToggleButton();\n                    setKey(resetKey++);\n                    handleClearModalClose();\n                  }}\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\n                  Clear\n                </Button>\n              </HStack>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n\n\n\n      </>\n    );\n  };\n\n  const handleClearImagesExtra = () => {\n    dispatch(setSelectedImages([]));\n    globalSelectedImages = [];\n    dispatch(setIsAddPhotoVisible(true));\n    dispatch(setAddAnotherImages(false));\n    dispatch(setDeleteImageVisible(true));\n  };\n\n  const UploadModalButton = ({ handleUpload }) => {\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\n    const handleModalUploadOpen = () => {\n      setModalUploadVisible(true);\n    };\n\n    const handleModalUploadClose = () => {\n      setModalUploadVisible(false);\n    };\n\n    return (\n      <>\n        <Button\n          borderRadius={3}\n          flex={1}\n          onPress={handleModalUploadOpen}\n          bgColor={'#7B9CFF'}\n          _hover={{ bgColor: '#517cfc', }}>\n          Upload/Save\n        </Button>\n\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\n          <Modal.Content bgColor={'white'}>\n            <Modal.CloseButton />\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\n              <Text color={'#102A43'} bold>\n                Upload/Save\n              </Text>\n            </Modal.Header>\n            <Modal.Body\n              justifyContent={'center'}\n              alignItems={'center'}\n              bgColor={'gray.300'}\n              borderLeftWidth={4}\n              borderLeftColor={'black'}\n              margin={5}\n            >\n              <Box flex={1}>\n                <Text color={'black'} bold>\n                  Attention!\n                </Text>\n                <Text color={'black'}>\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\n                </Text>\n              </Box>\n            </Modal.Body>\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\n              <HStack space={5} flex={1}>\n                <Button\n                  onPress={handleModalUploadClose}\n                  colorScheme={'warmGray'}\n                  flex={1}\n                  size={'sm'}\n                  borderRadius={5}\n                >\n                  No\n                </Button>\n                <Button isLoading={isLoading} onPress={async () => {\n                  await handleUpload();\n                  handleModalUploadClose()\n                }}\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\n                  Upload/Save\n                </Button>\n              </HStack>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n    );\n  };\n\n\n\n  const NamePopover = ({ name, handleSignOut }) => {\n    const [showNamePopover, setShowNamePopover] = useState(false);\n\n    const showPopover = () => {\n      setShowNamePopover(!showNamePopover);\n    };\n\n    return (\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n        <Flex direction=\"row-reverse\">\n          <Popover\n            isOpen={showNamePopover}\n            trigger={(triggerProps) => (\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n              </Text>\n            )}\n            onClose={() => setShowNamePopover(!showNamePopover)}\n            placement='bottom right'\n            trapFocus={false}\n          >\n            <Popover.Content backgroundColor={'#0642F4'}>\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n              <Popover.Body backgroundColor={'#0642F4'}>\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                  Logout\n                </Button>\n              </Popover.Body>\n            </Popover.Content>\n          </Popover>\n        </Flex>\n      </Box>\n    );\n  };\n\n  const handleSuccessModalClose = useCallback(() => {\n    dispatch(setIsSuccessModalOpen(false));\n  }, []);\n\n  const handleUpdateSuccessModalClose = useCallback(() => {\n    dispatch(setIsUpdateSuccessModalOpen(false));\n  }, []);\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    image: {\n      flex: 1,\n    },\n  });\n\n  const handleSetBordersWhite = () => {\n\n\n    setIsNoFeaturesSelected('white');\n\n    setMakeError('white');\n    setModelError('white');\n    setRegYearError('white');\n    setRegMonthError('white');\n    setRefNumError('white');\n    setStockIDNumError('white');\n    setChassisError('white');\n    setModelCodeError('white');\n    setEngineDisError('white');\n    setSteeringError('white');\n    setMileageError('white');\n    setTransmissionError('white');\n    setExteriorColoError('white');\n    setNumOfSeatsError('white');\n    setDoorsError('white');\n    setPurchasedPriceError('white');\n    setFuelError('white');\n    setPortError('white');\n    setSalesError('white');\n    setBuyerError('white');\n    setDimensionLengthError('white');\n    setDimensionWidthError('white');\n    setDimensionHeightError('white');\n    setDriveTypeError('white');\n    setWeightError('white');\n    setBodyTypeError('white');\n    setStockStatusError('white');\n    setCarNameError('muted.500');\n\n    setIsNoFeaturesSelected('white');\n\n\n  };\n  return (\n\n\n\n    <NativeBaseProvider>\n\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n        {/* Header */}\n        <Box\n          px=\"3\"\n          bgColor='#0642f4'\n          height={54}\n          position=\"sticky\"\n          top={0}\n          zIndex={999}\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          borderBottomWidth={0}\n          borderBottomColor={'cyan.500'} >\n\n          <SideDrawer\n            selectedScreen={selectedScreen} />\n\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n            <FastImage\n              source={{\n                uri: logo,\n                priority: FastImage.priority.high,\n              }}\n              resizeMode={FastImage.resizeMode.stretch}\n              style={styles.image}\n            />\n          </Box>\n\n          {/* {showDrawerIcon && <MobileViewDrawer\n            selectedScreen={selectedScreen}\n          />} */}\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\n            <FastImage\n              source={{\n                uri: logo2,\n                priority: FastImage.priority.high,\n              }}\n              resizeMode={FastImage.resizeMode.stretch}\n              style={styles.image}\n            />\n          </Box>\n\n          <View style={{ alignItems: 'center', flex: 1 }}>\n            <QRCodeScanner />\n          </View>\n\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n            <Flex direction=\"row-reverse\">\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                </Text>;\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\n                <Popover.Content backgroundColor={'#7B9CFF'}>\n                 \n                  <Popover.Body backgroundColor={'#7B9CFF'}>\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                      Logout\n                    </Button>\n                  </Popover.Body>\n                </Popover.Content>\n              </Popover>\n            </Flex>\n          </Box> */}\n\n        </Box>\n\n        {/* Content */}\n        <Box flex={[1]} flexDirection=\"row\" >\n\n\n          {/* Main Content */}\n\n          <Box flex={1} flexGrow={1} minHeight={0}>\n            {/* Main Content Content */}\n\n\n\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\n              <PresenceTransition visible={true} initial={{\n                opacity: 0,\n              }} animate={{\n                opacity: 1,\n                transition: {\n                  duration: 250\n                }\n              }}>\n\n\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\n\n\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\n\n                  </Box>\n\n\n\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\n\n\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\n                      <Box flexDir={'row'} flex={1}>\n                        <Box margin={2} flex={1} flexDir={['column']} >\n\n\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\n\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\n                            </Box>\n\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\n                              InputRightElement={\n                                <StockIDNumber />\n                              }\n                            />\n                            </Box>\n\n\n                          </Box> */}\n\n                            <StockIDAndMakeAndModel\n                              selectStockStatus={selectStockStatus}\n                              handleSetBordersWhite={handleSetBordersWhite}\n                              handleClearIfError={handleClearIfError}\n                              handleClearToggleButton={handleClearToggleButton}\n                              inputFobUsd={inputFobUsd}\n                              years={years}\n                              monthNumbers={monthNumbers}\n                              portData={portData}\n                              salesData={salesData}\n                              buyerData={buyerData}\n                              steeringData={steeringData}\n                              transmissionData={transmissionData}\n                              exteriorColorData={exteriorColorData}\n                              fuelData={fuelData}\n                              driveTypeData={driveTypeData}\n                              bodyTypeData={bodyTypeData}\n                              selectPort={selectPort}\n                              selectSales={selectSales}\n                              selectBuyer={selectBuyer}\n                              inputRefNum={inputRefNum}\n                              inputChassis={inputChassis}\n                              inputModelCode={inputModelCode}\n                              inputEngineCode={inputEngineCode}\n                              inputEngineDis={inputEngineDis}\n                              selectSteering={selectSteering}\n                              inputMileage={inputMileage}\n                              selectTransmission={selectTransmission}\n                              selectExteriorColor={selectExteriorColor}\n                              inputNumOfSeats={inputNumOfSeats}\n                              inputDoors={inputDoors}\n                              inputPurchasedPrice={inputPurchasedPrice}\n                              selectFuel={selectFuel}\n                              inputDimensionLength={inputDimensionLength}\n                              inputDimensionWidth={inputDimensionWidth}\n                              inputDimensionHeight={inputDimensionHeight}\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\n                              selectDriveType={selectDriveType}\n                              inputWeight={inputWeight}\n                              selectBodyType={selectBodyType}\n                              inputCarName={inputCarName}\n                              inputCarDesc={inputCarDesc}\n                              inputFobJpy={inputFobJpy}\n                              selectRegYear={selectRegYear}\n                              selectRegMonth={selectRegMonth}\n                              setRefNumFromSelects={setRefNumFromSelects}\n                              inputStockIDNumber={inputStockIDNumber}\n                              stockIDNumError={stockIDNumError}\n                              selectMakeForModelRef={selectMakeForModelRef}\n                              textAreaAddModel={textAreaAddModel}\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\n                              handleAddMakeTextChange={handleAddMakeTextChange}\n                              textAreaAddMake={textAreaAddMake}\n                              modelError={modelError}\n                              // makeData={makeData}\n                              makeError={makeError}\n                              selectMakeBoxRef={selectMakeBoxRef}\n                              selectMakeRef={selectMakeRef}\n                              selectModelRef={selectModelRef}\n                              selectModelBoxRef={selectModelBoxRef}\n                              setCarNameFromSelects={setCarNameFromSelects}\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\n                              inputCarNotes={inputCarNotes}\n                              inputCarMemo={inputCarMemo}\n                              purchasedPriceError={purchasedPriceError}\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\n                            />\n\n\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectRegYear}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={years}\n                                  onSelect={useCallback((selectedItem) => {\n                                    regYearVariable.text = selectedItem;\n                                    // console.log(regYearVariable.text);\n                                    setCarNameFromSelects()\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Year --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\"Year\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n\n\n                              </Box>\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\n\n\n                                <SelectDropdown\n                                  ref={selectRegMonth}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={monthNumbers}\n                                  onSelect={useCallback((selectedItem) => {\n                                    regMonthVariable.text = selectedItem;\n                                    // console.log(regMonthVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"--Choose Month--\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\"Month\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                    outlineStyle: 'none',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <PSBSortAndAddModal\n                                  docName={'Port'}\n                                  handleAddTextChange={handleAddPortTextChange}\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\n                                  textAreaAddCode={textAreaAddPortCode}\n                                  textAreaAdd={textAreaAddPort}\n                                  title='Port'\n                                  dataName={'port'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Port\"\n                                  data={portData} />\n                              </Box>\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectPort}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={portData.map((item) => item)}\n                                  onSelect={useCallback((selectedItem) => {\n                                    portVariable.text = selectedItem.name;\n                                    portVariable.id = selectedItem.id;\n                                    setRefNumFromSelects();\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Port --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem.name;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item.name;\n                                  }}\n                                  searchPlaceHolder=\" Search for Port\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n                                />\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <PSBSortAndAddModal\n                                  docName={'Sales'}\n                                  handleAddTextChange={handleAddSalesTextChange}\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\n                                  textAreaAddCode={textAreaAddSalesCode}\n                                  textAreaAdd={textAreaAddSales}\n                                  title='Sales'\n                                  dataName={'sales'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Sales\"\n                                  data={salesData} />\n                              </Box>\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectSales}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={salesData.map((item) => item)}\n                                  onSelect={useCallback((selectedItem) => {\n                                    salesVariable.text = selectedItem.name;\n                                    salesVariable.id = selectedItem.id;\n                                    setRefNumFromSelects();\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Sales --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem.name;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item.name;\n                                  }}\n                                  searchPlaceHolder=\" Search for Sales\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n                                />\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <PSBSortAndAddModal\n                                  docName={'Buyer'}\n                                  handleAddTextChange={handleAddBuyerTextChange}\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\n                                  textAreaAddCode={textAreaAddBuyerCode}\n                                  textAreaAdd={textAreaAddBuyer}\n                                  title='Buyer'\n                                  dataName={'buyer'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add buyer\"\n                                  data={buyerData} />\n                              </Box>\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectBuyer}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={buyerData.map((item) => item)}\n                                  onSelect={useCallback((selectedItem) => {\n                                    buyerVariable.text = selectedItem.name;\n                                    buyerVariable.id = selectedItem.id;\n                                    setRefNumFromSelects();\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Buyer --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem.name;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item.name;\n                                  }}\n                                  searchPlaceHolder=\" Search for Buyer\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n                                />\n                              </Box>\n                            </Box>\n\n\n\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\n                          </Box> */}\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\n                              </Box>\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\n                                bg: \"teal.600\",\n                                endIcon: <CheckIcon size=\"5\" />\n                              }}>\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\n                              </Select> */}\n                                <SelectDropdown\n                                  ref={selectSteering}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={steeringData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    steeringVariable.text = selectedItem;\n                                    // console.log(steeringVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Steering --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Steering\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\n                              </Box>\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\n                                bg: \"teal.600\",\n                                endIcon: <CheckIcon size=\"5\" />\n                              }}>\n                                {transmissionData.map((item, index) => (\n\n                                  <Select.Item key={item} label={item} value={item} />\n\n                                ))}\n                              </Select> */}\n                                <SelectDropdown\n                                  ref={selectTransmission}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={transmissionData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    transmissionVariable.text = selectedItem;\n                                    // console.log(transmissionVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Transmission --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Transmission\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <SortAndAddModal\n                                  docName='ExteriorColor'\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\n                                  textAreaAdd={textAreaAddExteriorColor}\n                                  title='Exterior Color'\n                                  dataName={'exteriorColor'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Transmission\"\n                                  data={transmissionData}\n                                />\n                              </Box>\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectExteriorColor}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={exteriorColorData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    exteriorColorVariable.text = selectedItem;\n                                    // console.log(exteriorColorVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Exterior Color\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\n                            </Box>\n\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <SortAndAddModal\n                                  docName='Fuel'\n                                  handleAddTextChange={handleAddFuelTextChange}\n                                  textAreaAdd={textAreaAddFuel}\n                                  title='Fuel'\n                                  dataName={'fuel'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Fuel\"\n                                  data={fuelData}\n                                />\n                              </Box>\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\n                                bg: \"teal.600\",\n                                endIcon: <CheckIcon size=\"5\" />\n                              }}>\n                                {fuelData.map((item, index) => (\n\n                                  <Select.Item key={item} label={item} value={item} />\n\n                                ))}\n                              </Select> */}\n                                <SelectDropdown\n                                  ref={selectFuel}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={fuelData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    fuelVariable.text = selectedItem;\n                                    // console.log(fuelVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Fuel --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Fuel\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\n                                <SortAndAddModal\n                                  docName='DriveType'\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\n                                  textAreaAdd={textAreaAddDriveType}\n                                  title='Drive Type'\n                                  dataName={'driveType'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Drive Type\"\n                                  data={driveTypeData}\n                                />\n                              </Box>\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\n                                bg: \"teal.600\",\n                                endIcon: <CheckIcon size=\"5\" />\n                              }}>\n                                {driveTypeData.map((item, index) => (\n\n                                  <Select.Item key={item} label={item} value={item} />\n\n                                ))}\n                              </Select> */}\n                                <SelectDropdown\n                                  ref={selectDriveType}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={driveTypeData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    driveTypeVariable.text = selectedItem;\n                                    // console.log(driveTypeVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Drive Type --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Drive Type\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\n\n                                <SortAndAddModal\n                                  docName='BodyType'\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\n                                  textAreaAdd={textAreaAddBodyType}\n                                  title='Body Type'\n                                  dataName={'bodyType'}\n                                  databaseInit={projectExtensionFirestore}\n                                  headerText=\"Rearrange/Add Body Type\"\n                                  data={bodyTypeData}\n                                />\n                              </Box>\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectBodyType}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={bodyTypeData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    bodyTypeVariable.text = selectedItem;\n                                    // console.log(bodyTypeVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Body Type --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Body Type\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\n                                <SupplyChainsCosts\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\n                                  inputExpenseAmount={inputExpenseAmount}\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\n                                  paidToData={paidToData}\n                                  inputCarNotes={inputCarNotes}\n                                /></Box>\n                            </Box>\n\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\n                            </Box>\n\n\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text>\n\n                              </Box>\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\n\n                                <SelectDropdown\n                                  ref={selectStockStatus}\n                                  buttonStyle={{\n                                    flex: 1,\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    padding: 4,\n                                  }}\n                                  buttonTextStyle={{\n                                    textAlign: 'left',\n                                    color: '#424242',\n                                    fontSize: 12,\n                                  }}\n                                  dropdownStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    borderColor: '#E0E0E0',\n                                    borderWidth: 1,\n                                    borderRadius: 4,\n                                    shadowColor: '#000000',\n                                    shadowOffset: { width: 0, height: 2 },\n                                    shadowOpacity: 0.1,\n                                    shadowRadius: 4,\n                                    elevation: 2,\n                                  }}\n                                  rowStyle={{\n                                    backgroundColor: '#FFFFFF',\n                                    paddingVertical: 10,\n                                    paddingHorizontal: 15,\n                                  }}\n                                  rowTextStyle={{\n                                    color: '#424242',\n                                    fontSize: 16,\n                                  }}\n                                  data={stockStatusData}\n                                  onSelect={useCallback((selectedItem) => {\n                                    stockStatusVariable.text = selectedItem;\n                                    // console.log(bodyTypeVariable.text);\n\n                                  }, [])}\n                                  defaultButtonText=\"-- Choose Stock Status --\"\n                                  buttonTextAfterSelection={(selectedItem) => {\n                                    return selectedItem;\n                                  }}\n                                  renderDropdownIcon={(isOpened) => {\n                                    return (\n                                      <Ionicons\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\n                                        color={'#424242'}\n                                        size={18}\n                                      />\n                                    );\n                                  }}\n                                  rowTextForSelection={(item) => {\n                                    return item;\n                                  }}\n                                  searchPlaceHolder=\" Search for Stock Status\"\n                                  searchInputStyle={{\n                                    marginTop: 1,\n                                    flex: 1,\n                                    width: '100%',\n                                  }}\n                                  disableAutoScroll\n                                  search\n\n                                />\n                              </Box>\n                            </Box>\n\n\n\n                          </Box>\n\n\n                        </Box>\n\n                      </Box>\n\n                      <br /> <br /> <br /> <br />\n\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\n                        {/*=============================================================== Add Image(s)===============================================================*/}\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\n\n                      </Box>\n\n                    </Box>\n\n                  </Box>\n\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\n                    <Box h={'full'} w={'full'}>\n\n                      <HStack flex={1}>\n                        <Input\n                          ref={inputCarName}\n                          borderColor={carNameError}\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\n                        <HStack flex={1}>\n                          <InputGroup flex={1}>\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\n                          </InputGroup>\n                        </HStack>\n                      </HStack>\n\n                      <HStack flex={2}>\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\n                        <HStack marginTop={1} flex={1}>\n                          <InputGroup flex={1}>\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\n                          </InputGroup>\n                        </HStack>\n                      </HStack>\n\n\n                      <HStack>\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\n                      </HStack>\n\n                    </Box>\n                  </Box>\n\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\n                    <ClearModalButton handleClear={handleClear} />\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\n                    <UploadModalButton handleUpload={handleUpload} />\n\n                  </Box>\n\n                </Box>\n              </PresenceTransition>\n            </ScrollView>\n\n          </Box>\n        </Box>\n      </Box>\n\n\n      <LoadingModal />\n      {/* <Box\n        position=\"absolute\"\n        top={0}\n        bottom={0}\n        left={0}\n        right={0}\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\n        flex={1}\n        display={isLoading ? '' : 'none'}\n      >\n        <Center flex={1}>\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Spinner size=\"lg\" color=\"white\" />\n            <Text color={'white'}>Loading, please wait!</Text>\n          </Box>\n        </Center>\n      </Box> */}\n\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\n    </NativeBaseProvider>\n\n\n  );\n}\n\n\n\n","import {\n    Box,\n    Button,\n    Center,\n    Flex,\n    HStack,\n    Icon,\n    Image as NativeImage,\n    Input,\n    Modal,\n    NativeBaseProvider,\n    Popover,\n    Spinner,\n    Stack,\n    Text,\n    VStack,\n    TextArea,\n    InputRightAddon,\n    InputGroup,\n    InputLeftAddon,\n    Select,\n    CheckIcon,\n    PresenceTransition,\n    CloseIcon,\n    ScrollView as ScrollViewNative,\n    Divider,\n    useDisclosure,\n    useDisclose,\n    FormControl,\n    Checkbox,\n    useToast,\n    Tooltip,\n    Progress,\n    Alert,\n    Pressable as NativePressable,\n} from 'native-base';\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport {\n    Dimensions,\n    ImageBackground,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    StyleSheet,\n    View,\n    PanResponder,\n    Animated,\n    Easing,\n    InputAccessoryView,\n    FlatList,\n    ScrollView,\n    TouchableHighlight,\n    TextInput,\n    Image as RNImage,\n    Pressable,\n    Linking,\n    Modal as RNModal,\n    Platform,\n    SafeAreaView,\n} from 'react-native';\nimport 'react-native-gesture-handler';\nimport {\n    AntDesign,\n    FontAwesome,\n    Ionicons,\n    MaterialCommunityIcons,\n    MaterialIcons,\n    Entypo,\n    FontAwesome5,\n    EvilIcons\n} from 'react-native-vector-icons';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useNavigation } from '@react-navigation/core';\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\nimport moment from 'moment';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport './../style.css';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\nimport FastImage from 'react-native-fast-image-web-support';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\nimport { DragSortableView } from 'react-native-drag-sort';\nimport {\n    setVehicleListData,\n    setSupplyChainsCostsData,\n    setSelectedPaidTo,\n    setSelectedExpenseName,\n    setSupplyChainsCostsModalVisible,\n    setVehicleListSupplyChainsCostsData,\n    setDeleteImageVisible,\n    setSelectedImages,\n    setAddAnotherImages,\n    setIsAddPhotoVisible,\n    setUploadImagesModalVisible,\n    setUploadImagesButtonLoading,\n    setViewImagesModalVisible,\n    setViewImagesData,\n    setLoadingModalVisible,\n    setAddVehicleListData,\n    setEditVehicleModalVisible,\n    setFobPriceHistoryModalVisible,\n    setChatListData,\n    setChatListImageUrl,\n    setChatListLastVisible,\n    setLoadMoreLoading,\n    setNoMoreData,\n    setActiveChatId,\n    setChatListSearchText,\n    setChatMessagesData,\n    setChatMessageBoxLoading,\n    setSelectedChatData,\n    setReadByListModalVisible,\n    setLoadMoreMessagesLoading,\n    setNoMoreMessagesData,\n    setDeleteMessageTemplateVisible,\n    setInvoiceData,\n    setTransactionModalVisible,\n    setPreviewInvoiceVisible,\n    setSelectedCustomerData,\n    setPdfViewerModalVisible,\n    setSelectedFileUrl,\n    setIsLoading,\n    setLoginName,\n    setCarImageUrl,\n    setSelectedVehicleData,\n    setMessageTextInputValue,\n    setCustomInvoiceVisible,\n    setMessageTextInputHeight,\n} from './redux/store';\n// import { TextInput } from 'react-native-gesture-handler';\nimport { nanoid } from 'nanoid';\nimport { cloneDeep, toFinite } from 'lodash';\nimport StickyHeader from './Header/StickyHeader';\nimport { UsePagination } from './VehicleListComponent/UsePagination';\nimport Hyperlink from 'react-native-hyperlink';\nimport { HmacSHA256, enc } from 'crypto-js';\nimport { AES } from 'crypto-js';\nimport { CRYPTO_KEY, CRYPTO_KEY_API } from '@env';\nimport { captureRef } from 'react-native-view-shot';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport QRCode from 'react-native-qrcode-svg';\nimport { useRoute } from '@react-navigation/native';\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams, useHistory, useLocation } from 'react-router-dom';\n\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\n\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\nconst valueCurrency = 0;\nconst valueInspectionPrice = 300;\nconst valueInsurancePrice = 50;\n\n// import { CollectionGroup } from 'firebase-admin/firestore';\nconst { width } = Dimensions.get('window');\nlet selectedScreen = 'CHAT MESSAGES'\nlet globalLastVisible;\nlet globalMessagesLastVisible;\nlet globalSearchText = '';\nlet globalCustomerId = '';\nlet globalChatId = '';\nlet globalImageUrl = '';\nlet globalCustomerCarName = '';\nlet globalCustomerFirstName = '';\nlet globalCustomerLastName = '';\n\nlet globalAdditionalNameArray = [];\n\nlet globalAdditionalPriceArray = [];\n\nlet globalMessageTemplateSelectedTitle = '';\n\n// let userEmail = projectControlAuth.currentUser.email;\n\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\nlet formattedDueDate = '';\n\nlet transactionModalTitle = '';\n\nlet transactionModalContentValue = 0;\n\nlet ip = '';\nlet ipCountry = '';\n\nlet globalInvoiceVariable = {\n    carData: {\n\n    },\n    selectedCurrencyExchange: '',\n    cfs: '',\n    placeOfDelivery: '',\n    departureCountry: '',\n    departurePort: '',\n    salesPerson: '',\n\n    discharge: {\n        port: '',\n        country: '',\n    },\n\n    consignee: {\n        sameAsBuyer: null,\n        name: '',\n        address: '',\n        contactNumber: '',\n        fax: '',\n        email: '',\n    },\n\n    notifyParty: {\n        sameAsConsignee: null,\n        name: '',\n        address: '',\n        contactNumber: '',\n        fax: '',\n        email: '',\n    },\n\n    paymentDetails: {\n        incoterms: '',\n        inspectionIsChecked: null,\n        inspectionName: '',\n        warrantyIsCheck: null,\n        warrantyAmount: 0,\n        fobPrice: 0,\n        freightPrice: 0,\n        insurancePrice: 0,\n        inspectionPrice: 0,\n        totalAmount: 0,\n        additionalName: [],\n        additionalPrice: [],\n    },\n\n    bankInformations: {\n        dueDate: '',\n        issuingDate: '',\n        bankAccount: {\n\n        },\n        paymentTerms: '',\n        salesAgreement: '',\n    },\n\n}\n\nconst mobileViewBreakpoint = 1367;\n\nlet globalSelectedPDFUrl = '';\nlet globalSelectedFileType = '';\n\n\nconst firestore = getFirestore();\n\n\n\nconst getEmailOfCurrentUser = () => {\n\n    const user = projectControlAuth.currentUser;\n    if (user) {\n        const email = user.email;\n        return email;\n    } else {\n        // console.log('No user is currently authenticated');\n        return null;\n    }\n};\n\nconst encryptDataAPI = (data) => {\n    try {\n        const secretKey = CRYPTO_KEY_API.toString();\n        return AES.encrypt(data, secretKey).toString();\n    } catch (error) {\n        console.error(\"Error encrypting data:\", error);\n        // useNavigate(`/devadmin/chat-messages`);\n\n        // Handle the encryption error or return a fallback\n        return null; // or handle it in another appropriate way\n    }\n};\n\nconst encryptData = (data) => {\n    try {\n        const secretKey = CRYPTO_KEY.toString();\n        return AES.encrypt(data, secretKey).toString();\n    } catch (error) {\n        console.error(\"Error encrypting data:\", error);\n        // useNavigate(`/devadmin/chat-messages`);\n\n        // Handle the encryption error or return a fallback\n        return null; // or handle it in another appropriate way\n    }\n};\n\nconst decryptData = (ciphertext) => {\n    try {\n        const secretKey = CRYPTO_KEY.toString();\n\n        const bytes = AES.decrypt(ciphertext, secretKey);\n        return bytes.toString(enc.Utf8);\n    } catch (error) {\n        console.error(\"Error decrypting data:\", error);\n        // useNavigate(`/devadmin/chat-messages`);\n\n        // Handle the decryption error or return a fallback\n        return null; // or handle it in another appropriate way\n    }\n};\n\n\nconst TimelineStatus = ({ data }) => {\n\n    const selectedChatData = useSelector(state => state.selectedChatData);\n\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\n\n\n    return (\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\n            {/* Dots and individual line segments */}\n            {data.map((item, index) => (\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    {/* Dot */}\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\n                        <View style={{\n                            width: 20,\n                            height: 20,\n                            borderRadius: 10,\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\n                            justifyContent: 'center',\n                        }}>\n                            {selectedChatData.stepIndicator.value < item.value ? (\n                                <FastImage\n                                    source={{\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\n                                        priority: FastImage.priority.normal,\n                                    }}\n                                    style={{\n                                        tintColor: 'rgba(128, 128, 128, 1)',\n                                        width: 15,\n                                        height: 15,\n                                        alignSelf: 'center',\n                                    }}\n                                    resizeMode={FastImage.resizeMode.stretch}\n                                />\n                            ) : (\n                                <FastImage\n                                    source={{\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\n                                        priority: FastImage.priority.normal\n                                    }}\n                                    style={{\n                                        tintColor: 'rgba(128, 128, 128, 1)',\n                                        width: 15,\n                                        height: 15,\n                                        alignSelf: 'center',\n                                    }}\n                                    resizeMode={FastImage.resizeMode.stretch}\n                                />\n                            )}\n\n                        </View>\n                    </Tooltip>\n                    {/* Line Segment (except for the last dot) */}\n                    {index < data.length - 1 && (\n                        <View style={{\n                            height: 3,\n                            width: 20, // Adjust the width to match the space between the dots\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\n                        }} />\n                    )}\n                </View>\n            ))}\n        </View>\n    );\n};\n\n\nconst statusData = [\n    { title: 'Negotiation', value: 1 },\n    { title: 'Issued Proforma Invoice', value: 2 },\n    { title: 'Order Item', value: 3 },\n    { title: 'Payment Confirmed', value: 4 },\n    { title: 'Shipping Schedule', value: 5 },\n    { title: 'Documents', value: 6 },\n    { title: 'Vehicle Received', value: 7 },\n    // Add more events as needed\n];\n\nconst LoadingModal = () => {\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\n\n\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                flex: 1,\n                display: loadingModalVisible ? 'flex' : 'none',\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            {/* Content within the modal */}\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <Spinner size=\"lg\" color=\"white\" />\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\n            </View>\n        </View>\n\n    );\n\n}\n\n// const SkeletonChatListLayout = () => {\n//     return (\n//         <SkeletonPlaceholder>\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\n//                 {/* Placeholder for Image */}\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\n\n//                 {/* Placeholder for Texts */}\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\n//                     {/* Date */}\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\n//                     {/* Car Name */}\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\n//                     {/* Text First and Last */}\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\n//                     {/* Last Message */}\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\n//                 </SkeletonPlaceholder.Item>\n//             </SkeletonPlaceholder.Item>\n//         </SkeletonPlaceholder>\n//     );\n// };\n\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\n    const screenWidth = Dimensions.get('window').width;\n    const [isHovered, setIsHovered] = useState(false);\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n\n    return (\n        <Pressable\n            onHoverIn={hoverIn}\n            onHoverOut={hoverOut}\n            focusable={false}\n            onPress={onPress}\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\n        >\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\n            {headerCount}\n\n        </Pressable>\n    );\n\n};\n\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\n    const [isHovered, setIsHovered] = useState(false);\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n    return (\n        <Pressable\n            focusable={false}\n            variant='ghost'\n            onPress={onPress}\n            onHoverIn={hoverIn}\n            onHoverOut={hoverOut}\n            style={{\n                padding: 5,\n                width: 100,\n                margin: 5,\n                flexDirection: 'row', // Align items in a row\n                alignItems: 'center', // Center items vertically\n                justifyContent: 'center',\n                borderRadius: 5,\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\n            }}\n        >\n            {isActive ? iconActive : iconNotActive}\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\n\n\n        </Pressable>\n    );\n};\n\nconst formatDate = (timestamp) => {\n    const currentDate = new Date();\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\n    const givenDate = new Date(formattedTimestamp);\n\n    // Resetting the time part to compare dates only\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\n\n    // Check if the dates are the same\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\n        return \"This day\";\n    }\n\n    const oneDay = 24 * 60 * 60 * 1000;\n    const startOfWeek = new Date();\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\n    startOfWeek.setHours(0, 0, 0, 0);\n\n    // Check if the date is within this week\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\n    }\n\n    // Check if the date is within this year\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\n    if (givenDate >= startOfYear) {\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    }\n\n    // If the date is not within this year\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\n};\n\nconst SkeletonChatListLayout = () => {\n\n    return (\n        <>\n            <View // Add a unique key here\n                style={{\n                    padding: 12,\n                    alignItems: 'flex-start',\n                    flexDirection: 'row',\n                    backgroundColor: 'white',\n                }}\n            >\n                {/* Skeleton for the image */}\n                <View\n                    style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        backgroundColor: '#e0e0e0',\n                        marginRight: 12,\n                    }}\n                />\n                {/* Skeleton for the text */}\n                <View style={{ flex: 1 }}>\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\n                        <View\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\n                            style={{\n                                height: 10,\n                                backgroundColor: '#e0e0e0',\n                                marginBottom: 6,\n                                width: '80%',\n                                borderRadius: 4,\n                            }}\n                        />\n                    ))}\n                    <View style={{\n                        position: 'absolute',\n                        right: 10, height: 10,\n                        backgroundColor: '#e0e0e0',\n                        marginBottom: 6,\n                        width: '5%',\n                        borderRadius: 4,\n                    }} />\n\n                    <View\n                        style={{\n                            borderRadius: 4,\n                            backgroundColor: '#e0e0e0',\n                            position: 'absolute',\n                            right: -20,\n                            top: -20,\n                            padding: 10,\n                            alignSelf: 'center',\n                        }}\n\n                    />\n                </View>\n            </View>\n        </>\n\n    );\n}\n\n\n\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\n\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n    const selectedTitle = globalMessageTemplateSelectedTitle;\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\n    const handleClose = () => {\n        handleDeleteMessageTemplateClose();\n\n    }\n\n\n    const deleteMessageTemplate = async (titleToDelete) => {\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\n        setIsDeleteLoading(true);\n        try {\n            // Fetch current data\n            const docSnap = await getDoc(documentRef);\n\n            if (docSnap.exists()) {\n                let messageTemplates = docSnap.data().messageTemplate || [];\n\n                // Filter out the item with the specified title\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\n\n                // Update the document with the new array\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\n\n                console.log('Item successfully deleted');\n                setIsDeleteLoading(false);\n                handleClose();\n            } else {\n                console.log('Document does not exist');\n                setIsDeleteLoading(false);\n\n            }\n        } catch (error) {\n            console.error('Error deleting item: ', error);\n            setIsDeleteLoading(false);\n\n        }\n    };\n\n    return (\n\n        <Modal\n            isOpen={deleteMessageTemplateVisible}\n            onClose={handleClose}\n        >\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header >Delete Message Template?</Modal.Header>\n                <Modal.Body>\n                    <View style={{ flex: 1, }}>\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\n                    </View>\n                </Modal.Body>\n\n                <Modal.Footer >\n                    <Button.Group variant=\"ghost\" space=\"2\">\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\n                    </Button.Group>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n\n\n    );\n};\n\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\n    const [currentItem, setCurrentItem] = useState(null);\n    const [addIsVisible, setIsAddVisible] = useState(null);\n    const dispatch = useDispatch();\n\n    const onPress = (item) => {\n        // textInputRef.current.value = item.value;\n        dispatch(setMessageTextInputValue(item.value));\n        setPopoverOpen(false);\n    };\n\n    const onEditPress = (item) => {\n\n        setAddVisible(true);\n        // setCurrentItem(item);\n        setIsAddVisible(true);\n        setTemplateMenuOpen(false);\n        titleInputRef.current.value = item.title;\n        valueInputRef.current.value = item.value;\n        setOriginalTitle(item.title);\n        textInputRef.current.focus();\n\n    };\n\n    // useEffect(() => {\n\n\n    //     if (addIsVisible == true) {\n    //         console.log(addIsVisible);\n    //         titleInputRef.current.value = currentItem.title;\n    //         valueInputRef.current.value = currentItem.value;\n    //     }\n    //     if (titleInputRef.current && valueInputRef.current) {\n    //         titleInputRef.current.value = currentItem.title;\n    //         valueInputRef.current.value = currentItem.value;\n    //     }\n    // }, [currentItem]);\n\n    const handleDeletePress = (title) => {\n\n        dispatch(setDeleteMessageTemplateVisible(true));\n        globalMessageTemplateSelectedTitle = title;\n    }\n\n\n    return (\n        <Pressable\n            onPress={() => onPress(item)}\n            onHoverIn={() => setIsTemplateItemHovered(true)}\n            onHoverOut={() => setIsTemplateItemHovered(false)}\n            style={{\n                padding: 10,\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\n                flex: 1,\n                borderRadius: 5,\n            }}>\n            <View style={{ flex: 1, flexDirection: 'row', }}>\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\n                <Popover\n                    isOpen={templateMenuOpen}\n                    onClose={() => setTemplateMenuOpen(false)}\n                    trigger={(triggerProps) => {\n                        return <Pressable\n                            {...triggerProps}\n                            onPress={() => setTemplateMenuOpen(true)}\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\n                        </Pressable>\n                    }}\n\n                >\n                    <Popover.Content>\n\n                        <Pressable\n                            onPress={() => onEditPress(item)}\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\n                            <Text>Edit</Text>\n                        </Pressable>\n\n                        <Pressable\n                            onPress={() => handleDeletePress(item.title)}\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\n                            <Text>Delete</Text>\n                        </Pressable>\n\n                    </Popover.Content>\n                </Popover>\n            </View>\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\n        </Pressable>\n\n\n    );\n}\n\nconst MessageTemplate = ({ textInputRef }) => {\n    const dispatch = useDispatch();\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\n    const [isAddHovered, setIsAddHovered] = useState(false);\n    const [popoverOpen, setPopoverOpen] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [filteredData, setFilteredData] = useState([]);\n    const [addVisible, setAddVisible] = useState(false);\n\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\n    const [originalTitle, setOriginalTitle] = useState('');\n\n\n    const [saveLoading, setSaveLoading] = useState(false);\n\n    const [templateData, setTemplateData] = useState([]);\n\n    const screenWidth = Dimensions.get('window').width;\n\n    const searchInputRef = useRef(null);\n    const titleInputRef = useRef(null);\n    const valueInputRef = useRef(null);\n\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n    const data = [\n        { title: 'Message 1', value: 'Sample Message 1' },\n        { title: 'Message 2', value: 'Sample Message 2' },\n        { title: 'Message 3', value: 'Sample Message 3' },\n    ];\n\n\n\n    const saveMessageTemplate = async () => {\n        setSaveLoading(true);\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\n\n        try {\n            // Fetch current data\n            const docSnap = await getDoc(documentRef);\n\n            let messageTemplates = [];\n            const newTitle = titleInputRef.current?.value;\n            const newValue = valueInputRef.current?.value;\n\n            if (newTitle && newValue) {\n                if (docSnap.exists()) {\n                    // Document exists, get the current templates\n                    messageTemplates = docSnap.data().messageTemplate || [];\n\n                    // Find index based on the original title\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\n\n                    if (index !== -1) {\n                        // Update existing template\n                        messageTemplates[index] = { title: newTitle, value: newValue };\n                    } else {\n                        // Add new template if original title does not exist\n                        messageTemplates.push({ title: newTitle, value: newValue });\n                    }\n                } else {\n                    // Document does not exist, create a new array with the new template\n                    console.log('Creating a new document');\n                    messageTemplates = [{ title: newTitle, value: newValue }];\n                }\n\n                // Update or set the document\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\n\n                console.log('Document successfully updated or created');\n            } else {\n                console.log('Title or value is empty');\n            }\n        } catch (error) {\n            console.error('Error updating or creating document: ', error);\n        } finally {\n            setSaveLoading(false);\n            handleCancelPressed();\n        }\n    };\n\n\n    const handleSearch = (text) => {\n        setSearchText(text);\n        const filtered = templateData.filter(item =>\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\n            item.value.toLowerCase().includes(text.toLowerCase())\n        );\n        setFilteredData(filtered);\n    };\n\n    const handlePopoverClose = () => {\n        setPopoverOpen(false);\n        setAddVisible(false);\n        setIsAddHovered(false);\n    };\n\n    const handleCancelPressed = () => {\n        setIsAddHovered(false);\n        setAddVisible(false);\n        setIsCancelHovered(false)\n        setIsSaveHovered(false)\n        titleInputRef.current.clear();\n        valueInputRef.current.clear();\n\n    };\n\n    const renderItem = ({ item }) => {\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\n    };\n\n\n    useEffect(() => {\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\n\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\n            if (docSnap.exists()) {\n                let arrayFieldData = docSnap.data().messageTemplate;\n\n                // Sort the array by title\n                arrayFieldData.sort((a, b) => {\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\n                    if (titleA < titleB) {\n                        return -1;\n                    }\n                    if (titleA > titleB) {\n                        return 1;\n                    }\n                    // titles must be equal\n                    return 0;\n                });\n\n                setTemplateData(arrayFieldData);\n            } else {\n                console.log(\"No such document!\");\n            }\n        }, (error) => {\n            console.error(\"Error fetching document:\", error);\n        });\n\n        // Cleanup subscription on unmount\n        return () => unsubscribe();\n    }, [popoverOpen]);\n\n    const handleDeleteMessageTemplateClose = () => {\n\n        dispatch(setDeleteMessageTemplateVisible(false));\n    };\n\n    return (\n        <>\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\n            <Popover\n                isOpen={popoverOpen}\n                onClose={handlePopoverClose}\n                // initialFocusRef={searchInputRef}\n                finalFocusRef={textInputRef}\n                placement={'top'}\n                trigger={(triggerProps) => {\n                    return <Pressable\n                        focusable={false}\n                        {...triggerProps}\n                        onPress={() => setPopoverOpen(true)}\n                        onHoverIn={() => setIsTemplateHovered(true)}\n                        onHoverOut={() => setIsTemplateHovered(false)}\n                        style={({ pressed }) => [\n                            {\n                                bottom: 0,\n                                right: 100,\n                                position: 'absolute',\n                                borderRadius: 20,\n                                opacity: pressed ? 0.5 : 1\n                            }\n                        ]}\n\n                    >\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\n                    </Pressable>\n                }} >\n                <Popover.Content w={screenWidth < mobileViewBreakpoint ? 320 : 400} marginRight={10} >\n                    <Popover.Arrow />\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\n                        </View>\n                    </Popover.Header>\n                        <Popover.Body backgroundColor={'white'} height={250}>\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\n                            <TextInput\n                                ref={titleInputRef}\n                                placeholder='Input Title'\n                                placeholderTextColor='#9B9E9F'\n                                underlineColorAndroid=\"transparent\"\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\n                            <br />\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\n                            <TextInput\n                                multiline\n                                ref={valueInputRef}\n                                placeholder='Input Message'\n                                placeholderTextColor='#9B9E9F'\n                                underlineColorAndroid=\"transparent\"\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\n\n                        </Popover.Body>\n                        <Popover.Footer backgroundColor={'white'}>\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\n                                <Pressable\n                                    onHoverIn={() => setIsCancelHovered(true)}\n                                    onHoverOut={() => setIsCancelHovered(false)}\n                                    onPress={handleCancelPressed}\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\n                                </Pressable>\n\n                                <Pressable\n                                    onPress={saveMessageTemplate}\n                                    onHoverIn={() => setIsSaveHovered(true)}\n                                    onHoverOut={() => setIsSaveHovered(false)}\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\n                                    {saveLoading ?\n                                        (<Spinner\n                                            animating\n                                            size=\"sm\"\n                                            color={'white'}\n                                        />) :\n                                        (\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\n                                        )}\n                                </Pressable>\n                            </View>\n                        </Popover.Footer>\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\n                            </Pressable>\n                        </View>\n                    </Popover.Header>\n                        <Popover.Body backgroundColor={'white'} height={300}>\n                            <TextInput\n                                ref={searchInputRef}\n                                focusable={false}\n                                placeholder='Search'\n                                placeholderTextColor='#9B9E9F'\n                                underlineColorAndroid=\"transparent\"\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\n                                keyboardType='search'\n                                onChangeText={handleSearch}\n                                value={searchText} />\n                            {templateData.length > 0 || filteredData.length > 0 ? (\n                                <FlatList\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\n                                    renderItem={renderItem}\n                                    keyExtractor={item => item.title.toString()}\n                                    data={searchText ? filteredData : templateData} />\n                            ) : (\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\n                            )}\n\n                        </Popover.Body>\n                    </View>\n                </Popover.Content>\n            </Popover>\n        </>\n    );\n};\n\n\nconst FileDisplay = ({ file, onRemove }) => {\n    const iconSize = 24;\n    if (!file) return null;  // Define the icon size\n\n\n\n\n    const getFileIcon = (type) => {\n        if (type.includes('pdf')) {\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\n        }\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\n        }\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\n        }\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\n            return <FastImage\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\n                style={{\n                    width: 24,\n                    height: 24,\n                }}\n                resizeMode={FastImage.resizeMode.cover}\n            />; // Color of your choice for RAR files\n        }\n\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\n    };\n\n    return (\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\n            {getFileIcon(file.type)}\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\n            <Pressable onPress={onRemove}>\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\n            </Pressable>\n        </View>\n    );\n};\n\nconst MessageTextInput = ({ handleSendMessage, textInputRef }) => {\n    const [inputHeight, setInputHeight] = useState(50);\n    const messageTextInputHeight = useSelector((state) => state.messageTextInputHeight)\n    const screenWidth = Dimensions.get('window').width;\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\n    const dispatch = useDispatch();\n\n    const handleContentOnChange = (event) => {\n        const target = event.target;\n        // Temporarily reset height to ensure scrollHeight reflects current content\n        target.style.height = '0px'; // Reset height to recalculate\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\n\n        dispatch(setMessageTextInputHeight(updatedHeight));\n\n    };\n\n    const handleContentSizeChange = (event) => {\n        const { width, height } = event.nativeEvent.contentSize;\n        const updatedHeight = Math.max(50, Math.min(200, height));\n        dispatch(setMessageTextInputHeight(updatedHeight)); // Set to new calculated height\n    };\n\n    const handleKeyPress = (e) => {\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\n        const mobileBreakpoint = 768;\n\n        // Check if the screen width is less than or equal to the mobile breakpoint\n        if (screenWidth >= mobileBreakpoint) {\n            // Check if 'Enter' key is pressed\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\n                e.preventDefault(); // Prevent the default behavior of adding a new line\n                handleSendMessage();\n\n            }\n        }\n    };\n\n    const handleInputChange = (text) => {\n        dispatch(setMessageTextInputValue(text));\n        // You can also call handleContentSizeChange manually here if needed\n    };\n\n    return (\n        <TextInput\n            ref={textInputRef}\n            value={messageTextInputValue} // Controlled component\n            multiline\n            placeholder='Send a message...'\n            placeholderTextColor='#9B9E9F'\n            onChangeText={handleInputChange} // Use onChangeText for React Native\n            onChange={handleContentOnChange}\n            onContentSizeChange={handleContentSizeChange}\n            onKeyPress={handleKeyPress}\n            style={{\n                outlineStyle: 'none',\n                width: '100%',\n                minHeight: 50,\n                maxHeight: 200,\n                height: messageTextInputHeight,\n                alignSelf: 'center',\n                padding: 10,\n                overflow: 'auto',\n                marginBottom: 25,\n                marginRight: 50,\n            }}\n        />\n    )\n}\n\nconst ChatInputText = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const activeChatId = useSelector((state) => state.activeChatId);\n\n    const [isSendHovered, setIsSendHovered] = useState(false);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [imageUri, setImageUri] = useState(null);\n    const [fileUri, setFileUri] = useState(null);\n    const [fileName, setFileName] = useState('');\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\n    const [sendIsLoading, setSendIsLoading] = useState(false);\n    const textInputRef = useRef(null);\n    const [inputHeight, setInputHeight] = useState(50);\n\n    const [inputValue, setInputValue] = useState(''); // Add state for input value\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\n    const dispatch = useDispatch();\n\n    const removeImage = () => {\n        setImageUri(null);\n        setSelectedImage(null);\n        setFileName(null);\n\n    };\n\n    const removeFile = () => {\n        setSelectedFile(null);\n        setSelectedFilePreview(null);\n        setFileUri(null);\n        setFileName(null);\n\n\n    };\n\n    const selectFile = async () => {\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\n\n        if (Platform.OS === 'web') {\n            return new Promise((resolve, reject) => {\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\n                input.onchange = () => {\n                    const file = input.files[0];\n\n                    if (file) {\n                        if (![\n                            'application/pdf',\n                            'application/msword',\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n                            'application/vnd.ms-excel',\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                            'application/x-rar-compressed',\n                            'application/x-compressed',\n                            'text/csv'\n                        ].includes(file.type)) {\n                            alert('File type not allowed');\n                            reject('File type not allowed');\n                            return;\n                        }\n\n                        if (file.size > maxFileSize) {\n                            alert('File size should be less than 10MB');\n                            reject('File size should be less than 10MB');\n                            return;\n                        }\n                        removeImage();\n                        // Read the file as a Data URL and set it in the state\n                        const reader = new FileReader();\n                        reader.onload = (e) => {\n                            setFileUri(e.target.result);\n                            resolve(file);\n                            setSelectedFile(file);\n                            setSelectedFilePreview({ name: file.name, type: file.type });\n                            setFileName(file.name);\n                            textInputRef.current.focus();\n                        };\n                        reader.onerror = (e) => {\n                            reject(e);\n                        };\n                        reader.readAsDataURL(file);\n                    }\n                };\n                input.click();\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\n                    if (response.didCancel) {\n                        reject('User cancelled image picker');\n                    } else if (response.errorCode) {\n                        reject(response.errorMessage);\n                    } else {\n                        const asset = response.assets[0];\n\n                        if (!asset.type.startsWith('image/')) {\n                            reject('Only image files are allowed');\n                            alert('Only image files are allowed');\n\n                            return;\n                        }\n\n                        if (asset.fileSize > maxFileSize) {\n                            reject('File size should be less than 10MB');\n                            alert('File size should be less than 10MB');\n                            return;\n                        }\n\n                        const selectedImageUri = asset.uri;\n                        const fileName = asset.fileName || 'Unknown name';\n                        resolve({ uri: selectedImageUri, name: fileName });\n                        setImageUri(selectedImageUri); // Set imageUri here\n                        // console.log(`File name: ${fileName}`);\n                    }\n                });\n            });\n        }\n    };\n\n    const selectImage = async () => {\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\n\n        if (Platform.OS === 'web') {\n\n            return new Promise((resolve, reject) => {\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = 'image/*';\n                input.onchange = () => {\n                    const file = input.files[0];\n                    if (file) {\n\n                        if (!file.type.startsWith('image/')) {\n                            reject('Only image files are allowed');\n                            alert('Only image files are allowed');\n\n                            return;\n                        }\n\n                        if (file.size > maxFileSize) {\n                            reject('File size should be less than 10MB');\n                            alert('File size should be less than 10MB');\n\n                            return;\n                        }\n\n                        removeFile();\n                        const reader = new FileReader();\n                        reader.readAsDataURL(file);\n                        reader.onload = () => {\n                            resolve({ dataUrl: reader.result, name: file.name });\n                            setImageUri(reader.result); // Set imageUri here\n                            setFileName(file.name);\n                            // console.log(`File name: ${file.name}`);\n                        };\n                        setSelectedImage(file);\n                        reader.onerror = error => reject(error);\n                    }\n                };\n                input.click();\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\n                    if (response.didCancel) {\n                        reject('User cancelled image picker');\n                    } else if (response.errorCode) {\n                        reject(response.errorMessage);\n                    } else {\n                        const asset = response.assets[0];\n\n                        if (!asset.type.startsWith('image/')) {\n                            reject('Only image files are allowed');\n                            alert('Only image files are allowed');\n                            return;\n                        }\n\n                        if (asset.fileSize > maxFileSize) {\n                            reject('File size should be less than 10MB');\n                            alert('Only image files are allowed');\n                            return;\n                        }\n\n                        const selectedImageUri = asset.uri;\n                        const fileName = asset.fileName || 'Unknown name';\n                        resolve({ uri: selectedImageUri, name: fileName });\n                        setImageUri(selectedImageUri); // Set imageUri here\n                        // console.log(`File name: ${fileName}`);\n                    }\n                });\n            });\n        }\n    };\n\n    const resizeImage = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (event) => {\n                const img = new Image();\n                img.src = event.target.result;\n                img.onload = () => {\n                    const canvas = document.createElement('canvas');\n                    const ctx = canvas.getContext('2d');\n\n                    // Set your desired image size here\n                    const maxWidth = 800; // Example value\n                    const maxHeight = 800; // Example value\n                    let width = img.width;\n                    let height = img.height;\n\n                    if (width > height) {\n                        if (width > maxWidth) {\n                            height *= maxWidth / width;\n                            width = maxWidth;\n                        }\n                    } else {\n                        if (height > maxHeight) {\n                            width *= maxHeight / height;\n                            height = maxHeight;\n                        }\n                    }\n\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.drawImage(img, 0, 0, width, height);\n                    canvas.toBlob((blob) => {\n                        resolve(new File([blob], file.name, {\n                            type: 'image/jpeg',\n                            lastModified: Date.now()\n                        }));\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\n                };\n                img.onerror = error => reject(error);\n            };\n            reader.onerror = error => reject(error);\n        });\n    };\n\n    const addFileMessage = async () => {\n        setSendIsLoading(true);\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n        const inputValue = textInputRef.current?.value;\n\n        textInputRef.current.clear();\n        textInputRef.current.focus();\n        removeFile();\n\n        const storage = getStorage(projectExtensionFirebase);\n\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\n\n            try {\n\n                let fileUrl = null;\n                if (fileUri) {\n                    // Upload file and get URL\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\n                    fileUrl = await getDownloadURL(uploadResult.ref);\n                }\n\n                // Adding the message to the 'messages' subcollection\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                    text: inputValue.trim(),\n                    sender: email,\n                    timestamp: formattedTime,\n                    ip: ip,\n                    ipCountry: ipCountry,\n                    file: {\n                        name: fileName,\n                        type: 'attachment', // Set the file type\n                        url: fileUrl,\n                    } // Include file URL if available\n                });\n\n                // Updating the main chat document with the latest message details\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                    lastMessageSender: email,\n                    lastMessage: `Sent an attachment`,\n                    lastMessageDate: formattedTime,\n                    customerRead: false,\n                    read: true,\n                    readBy: [email],\n                });\n\n                setSendIsLoading(false);\n\n            } catch (e) {\n                console.error('Error adding document: ', e);\n            }\n        }\n        else {\n            setSendIsLoading(false);\n        }\n    };\n\n\n    const addImageMessage = async () => {\n        setSendIsLoading(true);\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n        const inputValue = textInputRef.current?.value;\n\n\n\n        const storage = getStorage(projectExtensionFirebase);\n\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\n\n            textInputRef.current.clear();\n            textInputRef.current.focus();\n            removeImage();\n\n            try {\n                let imageUrl = null;\n                if (imageUri) {\n                    // Upload image and get URL\n                    const resizedImage = await resizeImage(selectedImage);\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\n                    imageUrl = await getDownloadURL(uploadResult.ref);\n                }\n\n                // Adding the message to the 'messages' subcollection\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                    text: inputValue.trim(),\n                    sender: email,\n                    timestamp: formattedTime,\n                    ip: ip,\n                    ipCountry: ipCountry,\n                    file: {\n                        name: fileName,\n                        type: 'image',\n                        url: imageUrl,\n                    } // Include image URL if available\n                });\n\n                // Updating the main chat document with the latest message details\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                    lastMessageSender: email,\n                    lastMessage: 'Sent an image',\n                    lastMessageDate: formattedTime,\n                    customerRead: false,\n                    read: true,\n                    readBy: [email],\n                });\n\n                setSendIsLoading(false);\n\n            } catch (e) {\n                console.error('Error adding document: ', e);\n            }\n        }\n        else {\n            setSendIsLoading(false);\n        }\n    };\n\n\n    const addMessage = async () => {\n        setSendIsLoading(true);\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        // const inputValue = textInputRef.current?.value;\n        const inputValue = messageTextInputValue;\n        dispatch(setMessageTextInputValue(''));\n        textInputRef.current.clear();\n        textInputRef.current.focus();\n        dispatch(setMessageTextInputHeight(50));\n\n        if (inputValue !== '') {\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n            try {\n\n                // Adding the message to the 'messages' subcollection\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                    text: inputValue.trim(),\n                    sender: email,\n                    timestamp: formattedTime, // Using the fetched timestamp\n                    ip: ip, // IP Address\n                    ipCountry: ipCountry // Country of the IP Address\n                });\n\n                // Updating the main chat document with the latest message details\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                    lastMessageSender: email,\n                    lastMessage: inputValue,\n                    lastMessageDate: formattedTime,\n                    customerRead: false,\n                    read: true,\n                    readBy: [email],\n                });\n                setSendIsLoading(false);\n\n            } catch (e) {\n                console.error('Error adding document: ', e);\n            }\n        }\n        else {\n            setSendIsLoading(false);\n        }\n\n    };\n    const handleContentSizeChange = (event) => {\n        const { width, height } = event.nativeEvent.contentSize;\n        const updatedHeight = Math.max(50, Math.min(200, height));\n        setInputHeight(updatedHeight); // Set to new calculated height\n    };\n\n\n    const screenWidth = Dimensions.get('window').width;\n\n    const handleKeyPress = (e) => {\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\n        const mobileBreakpoint = 768;\n\n        // Check if the screen width is less than or equal to the mobile breakpoint\n        if (screenWidth >= mobileBreakpoint) {\n            // Check if 'Enter' key is pressed\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\n                e.preventDefault(); // Prevent the default behavior of adding a new line\n                handleSendMessage();\n\n            }\n        }\n    };\n\n\n    const handleSendMessage = () => {\n        textInputRef.current.focus();\n\n        if (imageUri !== null) {\n            addImageMessage();\n\n        }\n        if (fileUri !== null) {\n            addFileMessage();\n        }\n        else {\n            addMessage();\n\n        }\n\n    }\n\n\n\n    return (\n\n        <View style={{ width: '98%', flexDirection: 'row', backgroundColor: 'white', }}>\n\n            <View style={{ flexDirection: 'column', flex: 1, }}>\n\n                {fileUri &&\n                    (\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\n                    )}\n\n                {imageUri && (\n                    <View style={{\n                        position: 'relative', // Make sure the parent View is positioned relative\n                        width: 70,\n                        height: 70,\n                        borderRadius: 5,\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\n                        borderWidth: 1,\n                        borderColor: '#DADDE1',\n                        margin: 2,\n                    }}>\n                        <FastImage\n                            source={{ uri: imageUri }}\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\n                            resizeMode={FastImage.resizeMode.cover}\n                        />\n                        <Pressable\n                            onPress={removeImage}\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                right: 0,\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\n                                borderRadius: 12 // Circular shape\n                            }}\n                        >\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\n                        </Pressable>\n                    </View>\n\n                )}\n                <View style={{ flexDirection: 'row', }}>\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\n                        <FastImage\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\n                            style={{\n                                width: 30,\n                                height: 30,\n                                borderRadius: 15,\n                            }}\n                            resizeMode={FastImage.resizeMode.cover}\n                        />\n                    </View>\n                    {/* <TextInput\n                        ref={textInputRef}\n                        multiline\n                        placeholder='Send a message...'\n                        placeholderTextColor='#9B9E9F'\n                        onChange={handleContentSizeChange}\n                        onKeyPress={handleKeyPress}\n                        style={{\n                            outlineStyle: 'none',\n                            width: '100%',\n                            minHeight: 50, // Set your desired minHeight\n                            maxHeight: 200, // Set your desired maxHeight\n                            height: inputHeight, // Dynamic height\n                            alignSelf: 'center',\n                            padding: 10,\n                            overflow: 'auto',\n                            marginBottom: 25,\n                            marginRight: 50,\n                        }}\n                    /> */}\n\n                    <MessageTextInput handleSendMessage={handleSendMessage} textInputRef={textInputRef} />\n\n                    <Pressable\n                        focusable={false}\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\n                        onHoverIn={() => setIsSendHovered(true)}\n                        onHoverOut={() => setIsSendHovered(false)}\n                        style={({ pressed }) => [\n                            {\n                                padding: 10,\n                                top: 5,\n                                right: 10,\n                                position: 'absolute',\n                                borderRadius: 20,\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\n                            }\n                        ]}\n                    >\n                        {sendIsLoading ? <Spinner\n                            animating\n                            size=\"sm\"\n                            color={\"#95BCF9\"}\n                        /> :\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\n                        }\n                    </Pressable>\n                </View>\n            </View>\n\n            <Pressable\n                onHoverIn={() => setIsSendImageHovered(true)}\n                onHoverOut={() => setIsSendImageHovered(false)}\n                style={({ pressed }) => [\n                    {\n                        padding: 10,\n                        bottom: -10,\n                        right: 125,\n                        position: 'absolute',\n                        borderRadius: 20,\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\n                    }\n                ]}\n                onPress={selectImage}\n            >\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\n            </Pressable>\n\n            <Pressable\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\n                style={({ pressed }) => [\n                    {\n                        padding: 10,\n                        bottom: -9,\n                        right: 155,\n                        position: 'absolute',\n                        borderRadius: 20,\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\n                    }\n                ]}\n                onPress={selectFile}\n            >\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\n            </Pressable>\n\n            <MessageTemplate textInputRef={textInputRef} />\n\n        </View>\n\n    );\n}\n\n\n\n\nconst CancelledView = () => {\n\n    return (\n        <View style={{\n            zIndex: 999,\n            position: 'absolute',\n            borderRadius: 40,\n            borderWidth: 0, // Border width\n            justifyContent: 'center',\n            alignItems: 'center',\n            opacity: 0.5,\n            // Centering the view within its parent\n            top: 38,\n            left: 17,\n        }}>\n\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\n        </View>\n    );\n\n};\n\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\n    const [imageUrl, setImageUrl] = useState(null);\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\n    const [textFirst, setTextFirst] = useState('');\n    const [textLast, setTextLast] = useState('');\n    const dispatch = useDispatch();\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n    const [customerData, setCustomerData] = useState({});\n\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\n    const updateChatToUnread = async () => {\n        dispatch(setActiveChatId(''));\n        dispatch(setChatMessagesData([]));\n        dispatch(setSelectedChatData([]));\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\n        try {\n            await updateDoc(docRef, {\n                read: false,\n            });\n\n        } catch (error) {\n            console.error(\"Error updating document: \", error);\n        }\n    };\n\n    const hoverIn = () => {\n        setIsHovered(true)\n    };\n\n    const hoverOut = () => {\n        setIsHovered(false);\n    };\n\n    const hoverOpenNewTabIn = () => {\n        setIsHovered(true)\n        setIsOpenNewTabHovered(true)\n    };\n\n    const hoverOpenNewTabOut = () => {\n        setIsOpenNewTabHovered(false)\n    };\n\n    const hoverUnreadIn = () => {\n        setIsHovered(true)\n        setIsUnreadHovered(true)\n    };\n\n    const hoverUnreadOut = () => {\n        setIsUnreadHovered(false)\n    };\n\n\n    useEffect(() => {\n        // getChatListStepImageUrl();\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\n        const storage = getStorage(projectExtensionFirebase);\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\n\n        getDownloadURL(imageRef)\n            .then((url) => {\n                setImageUrl(url);\n            })\n            .catch((error) => {\n                if (error.code === 'storage/object-not-found') {\n                    // Handle the 'object not found' error.\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\n                } else {\n                    // Handle other errors differently\n\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\n\n                }\n            });\n\n        const collectionPath = 'accounts';\n        const docId = item.participants.customer; // Ensure this is a valid document ID\n\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\n\n        const unsubscribe = onSnapshot(docRef, (doc) => {\n            if (doc.exists()) {\n                const data = doc.data();\n                setCustomerData(data ? data : {});\n                setTextFirst(data.textFirst ? data.textFirst : '');\n                setTextLast(data.textLast ? data.textLast : '');\n\n            } else {\n                console.log(\"Document not found\");\n            }\n        }, (error) => {\n            console.error(\"Error fetching document: \", error);\n        });\n\n        // Clean up function to unsubscribe from the listener when the component unmounts\n        return () => unsubscribe();\n    }, []);\n\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\n\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\n\n\n    const handlePress = () => {\n        onPress()\n\n        // dispatch(setSelectedCustomerData(customerData));\n        globalCustomerFirstName = textFirst ? textFirst : '';\n        globalCustomerLastName = textLast ? textLast : '';\n        globalImageUrl = imageUrl ? imageUrl : '';\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\n\n        globalCustomerCarName = carName;\n        setIsHovered(false);\n        setIsUnreadHovered(false)\n\n\n    }\n\n    const handlePressNewTab = () => {\n        onPressNewTab()\n\n        // dispatch(setSelectedCustomerData(customerData));\n        globalCustomerFirstName = textFirst ? textFirst : '';\n        globalCustomerLastName = textLast ? textLast : '';\n        globalImageUrl = imageUrl ? imageUrl : '';\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\n\n        globalCustomerCarName = carName;\n        setIsHovered(false);\n        setIsUnreadHovered(false)\n\n\n    }\n\n    if (loadingCondition) {\n        return <SkeletonChatListLayout />\n    }\n    else {\n        return (\n            <Pressable\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                focusable={false}\n                style={{\n                    padding: 12,\n                    alignItems: 'flex-start', // Align items to the start of the button\n                    flexDirection: 'row',\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\n                    borderLeftWidth: 2,\n                    borderRightWidth: 2,\n\n                }}\n                onPress={handlePress}\n            >\n                {item.isCancelled && <CancelledView />}\n\n                <View style={{ paddingRight: 10, justifyContent: 'center', }}>\n                    {imageUrl ? (\n                        <FastImage\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\n                            style={{\n                                width: 60,\n                                height: 60,\n                                borderRadius: 30,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                        />\n                    ) : (\n                        <View\n                            style={{\n                                width: 60,\n                                height: 60,\n                                borderRadius: 30,\n                                backgroundColor: '#e0e0e0',\n                                marginRight: 12,\n                            }}\n                        />\n                    )}\n                </View>\n                <View style={{ flex: 1 }}>\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\n                    {!item.read ? (\n                        <FastImage\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\n                            style={{\n                                tintColor: 'rgba(128, 128, 128, 1)',\n                                width: 22,\n                                height: 20,\n                                position: 'absolute',\n                                right: 10,\n                                bottom: 0,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                        />\n                    ) : (\n                        <FastImage\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\n                            style={{\n                                tintColor: 'rgba(128, 128, 128, 1)',\n                                width: 22,\n                                height: 20,\n                                position: 'absolute',\n                                right: 10,\n                                bottom: 0,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                        />\n                    )}\n\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 10,\n                        padding: 10,\n                        alignSelf: 'center',\n                        fontSize: 12,\n                        overflow: 'hidden',\n                        flex: 1,\n                        fontWeight: messageUnread ? 700 : 400,\n                        color: messageUnread ? '#FF0000' : '#90949c',\n                    }}>\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\n                    </Text>\n\n                    {isHovered && item.read && (\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                            <Pressable\n                                focusable={false}\n                                onHoverIn={hoverUnreadIn}\n                                onHoverOut={hoverUnreadOut}\n                                onPress={updateChatToUnread}\n                                style={{\n                                    position: 'absolute',\n                                    right: 0,\n                                    top: -10,\n                                    padding: 10,\n                                    alignSelf: 'center',\n                                }}\n\n                            >\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\n                            </Pressable>\n                        </Tooltip>\n                    )}\n\n                    {isHovered && (\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                            <Pressable\n                                focusable={false}\n                                onHoverIn={hoverOpenNewTabIn}\n                                onHoverOut={hoverOpenNewTabOut}\n                                onPress={handlePressNewTab}\n                                style={{\n                                    position: 'absolute',\n                                    right: -22,\n                                    top: -22,\n                                    padding: 10,\n                                    alignSelf: 'center',\n                                }}\n\n                            >\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\n                            </Pressable>\n                        </Tooltip>\n                    )}\n                </View>\n\n\n\n            </Pressable>\n        );\n    }\n\n\n};\n\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\n\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const chatListData = useSelector((state) => state.chatListData);\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\n    const activeChatId = useSelector((state) => state.activeChatId);\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\n    const noMoreData = useSelector((state) => state.noMoreData);\n    const renderFooterRef = useRef(null);\n    const dispatch = useDispatch();\n\n    const [imageUrl, setImageUrl] = useState('');\n\n    const { chatId } = useParams();\n\n    const navigate = useNavigate();\n\n    const updateChatToRead = async () => {\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\n        const user = projectControlAuth.currentUser\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n        if (email !== '') {\n\n            try {\n                await updateDoc(docRef, {\n                    read: true,\n                    readBy: arrayUnion(email),\n                });\n            } catch (error) {\n                console.error(\"Error updating document: \", error);\n                dispatch(setActiveChatId(''));\n                navigate(`/top/chat-messages`);\n\n            }\n\n        }\n\n    };\n\n\n\n    const fetchChatMessages = () => {\n        if (!activeChatId) {\n            // Handle the case where there's no active chat ID\n        }\n        else {\n            dispatch(setChatMessagesData([]));\n            dispatch(setChatMessageBoxLoading(true));\n            updateChatToRead();\n\n            try {\n                // References to the document and its 'messages' subcollection\n                let activeInvoiceNumer;\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\n\n                const messagesRef = collection(docRef, 'messages');\n\n                // Query for the 'messages' subcollection\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\n\n                // Listen to the document\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\n                    if (docSnapshot.exists()) {\n                        const data = docSnapshot.data();\n                        // Add the document ID to the data\n                        const dataWithId = {\n                            ...data,\n                            id: docSnapshot.id\n                        };\n                        // Dispatch any action you need with the document data\n                        dispatch(setSelectedChatData(dataWithId));\n\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\n                                if (invoiceDocSnapshot.exists()) {\n                                    const invoiceData = invoiceDocSnapshot.data();\n                                    // Add the document ID to the data\n                                    const invoiceDataWithId = {\n                                        ...invoiceData,\n                                        id: invoiceDocSnapshot.id\n                                    };\n                                    // Dispatch any action you need with the invoice document data\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\n\n                                } else {\n                                    // Handle the case where the invoice document does not exist\n                                    console.log('No Invoice Yet');\n                                    dispatch(setInvoiceData({}));\n                                }\n                            });\n\n                            // Cleanup function for the invoice listener\n                            return () => {\n                                unsubscribeInvoice();\n\n                            };\n                        } else {\n                            dispatch(setInvoiceData({}));\n                            console.log('No Invoice Yet');\n                        }\n\n                    }\n\n                });\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\n                    let messages = [];\n                    querySnapshot.forEach((doc) => {\n                        const data = doc.data();\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\n                        messages.push({ id: doc.id, ...data, timestamp });\n                    });\n\n                    dispatch(setChatMessagesData(messages));\n                    dispatch(setChatMessageBoxLoading(false));\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\n                });\n\n                // Return a cleanup function\n                return () => {\n                    unsubscribeDoc();\n                    unsubscribeMessages();\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\n                    //     unsubscribeInvoice();\n                    // }\n                };\n            } catch (error) {\n                console.error(\"Error setting up real-time messages: \", error);\n\n            }\n        }\n    };\n\n    const handleLoadMore = () => {\n        dispatch(setLoadMoreLoading(true));\n\n        let nextQuery;\n        if (!globalLastVisible) {\n            // No more data to load or globalLastVisible is undefined\n            console.log(\"No more data to load or globalLastVisible is undefined\");\n            setTimeout(() => {\n                dispatch(setLoadMoreLoading(false));\n                dispatch(setNoMoreData(true));\n            }, 0);\n            return;\n        }\n        else {\n\n            if (chatListData.length >= 10) {\n                if (unreadButtonValue == true) {\n\n                    if (activeButtonValue == 0) {\n                        if (globalSearchText === '') {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('read', '==', false),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n                        }\n\n                        else {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('read', '==', false),\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n                        }\n                    }\n\n                    else {\n                        if (globalSearchText === '') {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('read', '==', false),\n                                where('stepIndicator.value', '==', activeButtonValue),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n\n\n                        }\n\n                        else {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('stepIndicator.value', '==', activeButtonValue),\n                                where('read', '==', false),\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n                        }\n                    }\n\n                }\n\n                else {\n\n                    if (activeButtonValue == 0) {\n                        if (globalSearchText === '') {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n\n\n\n\n                        }\n\n                        else {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n                        }\n                    }\n\n                    else {\n                        if (globalSearchText === '') {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('stepIndicator.value', '==', activeButtonValue),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n\n\n\n                        }\n\n                        else {\n                            dispatch(setLoadMoreLoading(true));\n                            dispatch(setNoMoreData(false));\n                            nextQuery = query(\n                                collection(projectExtensionFirestore, 'chats'),\n                                where('stepIndicator.value', '==', activeButtonValue),\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\n                                orderBy('lastMessageDate', 'desc'),\n                                startAfter(globalLastVisible),\n                                limit(10)\n                            );\n                        }\n                    }\n                }\n            }\n\n            else {\n                dispatch(setNoMoreData(true));\n                dispatch(setLoadMoreLoading(false));\n            }\n\n\n\n\n        }\n\n\n        if (chatListData.length < 10) {\n            setTimeout(() => {\n                dispatch(setLoadMoreLoading(false));\n                dispatch(setNoMoreData(true));\n            }, 0);\n        }\n\n        else {\n            try {\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\n                    if (snapshot.empty) {\n                        // Handle the case when there's no more data\n                        console.log(\"No more data to load\");\n                        setTimeout(() => {\n                            dispatch(setLoadMoreLoading(false));\n                            dispatch(setNoMoreData(true));\n                            globalLastVisible = null;\n                        }, 0);  // Delay setting loading and no more data flags\n                        return;\n                    }\n\n                    const chatsData = [];\n                    snapshot.forEach((doc) => {\n                        chatsData.push({\n                            id: doc.id,\n                            ...doc.data(),\n                        });\n                    });\n\n\n                    // Append new data to the existing list\n\n                    setTimeout(() => {\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\n                        dispatch(setLoadMoreLoading(false));\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\n                    }, 0);\n\n                });\n\n                return unsubscribe;\n            } catch (error) {\n                console.error('Error fetching data from Firebase:', error);\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\n            }\n\n        }\n\n    };\n\n    useEffect(() => {\n        // dispatch(setCarImageUrl(''));\n        dispatch(setMessageTextInputValue(''));\n\n        if (chatId) {\n\n            setTimeout(() => {\n                const decodedChatId = decodeURIComponent(chatId);\n                const decryptedChatId = decryptData(decodedChatId).toString();\n                let parts = decryptedChatId.split('_');\n                let stockIdPart = parts[1];\n                let emailPart = parts[parts.length - 1];\n\n                globalCustomerId = emailPart;\n                // console.log(decryptedChatId);\n\n                if (!emailPart) {\n                    console.error(\"Invalid email part:\", emailPart);\n                    return;\n                }\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\n                const storage = getStorage(projectExtensionFirebase);\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\n\n                // console.log('Folder Name: ', folderName)\n                getDownloadURL(imageRef)\n                    .then((url) => {\n                        setImageUrl(url);\n                        globalImageUrl = url;\n                        dispatch(setCarImageUrl(url));\n\n                    })\n                    .catch((error) => {\n                        if (error.code === 'storage/object-not-found') {\n                            // Handle the 'object not found' error.\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\n                        } else {\n                            // Handle other errors differently\n\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\n\n                        }\n                    });\n\n\n                if (selectedChatData) {\n                    const collectionPath = 'accounts';\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\n\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\n\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\n\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\n                        if (doc.exists()) {\n                            const data = doc.data();\n                            dispatch(setSelectedVehicleData(data ? data : {}));\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\n\n                            // globalCustomerCarName = carName;\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\n                            // setTextLast(data.textLast ? data.textLast : '');\n\n\n                        } else {\n                            console.log(\"Document not found\");\n                        }\n                    }, (error) => {\n                        console.error(\"Error fetching document: \", error);\n                    });\n\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\n                        if (doc.exists()) {\n                            const data = doc.data();\n                            dispatch(setSelectedCustomerData(data ? data : {}));\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\n\n\n                            // globalCustomerCarName = carName;\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\n                            // setTextLast(data.textLast ? data.textLast : '');\n\n\n                        } else {\n                            console.log(\"Document not found\");\n                        }\n                    }, (error) => {\n                        console.error(\"Error fetching document: \", error);\n                    });\n\n                    // Clean up function to unsubscribe from the listener when the component unmounts\n                    return () => {\n\n                        unsubscribe()\n                        unsubscribeVehicle()\n                    };\n                }\n\n\n\n\n            }, 1);\n        }\n\n        const unsubscribe = fetchChatMessages();\n\n\n        return () => {\n            if (unsubscribe) {\n\n                unsubscribe(); // Unsubscribe when the component unmounts\n            }\n        };\n\n    }, [activeChatId]);\n\n\n\n\n    useEffect(() => {\n\n        if (chatId) {\n            const decryptedChatId = decryptData(chatId).toString();\n\n            setTimeout(() => {\n                // console.log(decryptedChatId)\n                dispatch(setActiveChatId(decryptedChatId));\n\n            }, 1);\n\n\n        }\n    }, [chatId]);\n\n    const handleChatPress = async (customerId, chatId) => {\n        if (chatId !== activeChatId) {\n            const encryptedChatId = encryptData(chatId);\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\n            navigate(`/top/chat-messages/${encodedChatId}`);\n            // console.log(encodedChatId)\n            // console.log(decodeURIComponent(encodedChatId))\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\n\n            // // Assuming chatId is already properly encoded and needs no further encoding\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\n            // // Construct the URL for hash-based routing\n            // const baseUrl = window.location.origin + window.location.pathname;\n            // const fullPath = `${baseUrl}#${path}`;\n            // window.open(fullPath, '_blank');\n\n            dispatch(setActiveChatId(chatId));\n\n            globalCustomerId = customerId;\n            globalChatId = chatId;\n\n        }\n    };\n\n    const handleChatPressNewTab = async (customerId, chatId) => {\n        const encryptedChatId = encryptData(chatId);\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\n        // console.log(encodedChatId)\n        // console.log(decodeURIComponent(encodedChatId))\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\n\n        // Assuming chatId is already properly encoded and needs no further encoding\n        const path = `/top/chat-messages/${encodedChatId}`;\n        // Construct the URL for hash-based routing\n        const baseUrl = window.location.origin + window.location.pathname;\n        const fullPath = `${baseUrl}#${path}`;\n        window.open(fullPath, '_blank');\n\n        // dispatch(setActiveChatId(chatId));\n\n        globalCustomerId = customerId;\n        globalChatId = chatId;\n\n    };\n\n    useEffect(() => {\n        dispatch(setActiveChatId(''));\n    }, [unreadButtonValue])\n\n    const renderFooter = () => {\n        return (\n            <>\n                {!noMoreData && (\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\n                        {loadMoreLoading && (\n                            <Spinner\n                                animating\n                                size=\"sm\"\n                                color={'#7B9CFF'}\n                            />\n                        )}\n                    </View>\n                )}\n            </>\n\n\n        );\n    };\n\n    const renderItem = ({ item }) => {\n\n        const isActive = item.id === activeChatId;\n        const messageUnread = !item.read;\n        const formattedDate = formatDate(item.lastMessageDate);\n\n        return (\n            <ChatListItem\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\n                chatListData={chatListData}\n                item={item}\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\n                isActive={isActive}\n                messageUnread={messageUnread}\n                formattedDate={formattedDate}\n            />\n        );\n\n    };\n\n    if (chatListData.length < 1) {\n        return (\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\n            </View>\n        );\n    }\n\n    else {\n        return (\n            <>\n                <FlatList\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.id.toString()}\n                    data={chatListData}\n                    initialNumToRender={1}\n                    maxToRenderPerBatch={10}\n                    windowSize={21}\n                    onEndReachedThreshold={0.05}\n                    removeClippedSubviews={true}\n                    ListFooterComponent={renderFooter}\n                    onEndReached={handleLoadMore}  // Implement this function\n                />\n\n            </>\n\n        );\n    }\n\n};\n\n\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\n\n    const searchInputRef = useRef(null);\n    const [searchText, setSearchText] = useState('');\n    const [clearVisible, setClearVisible] = useState('');\n    const dispatch = useDispatch();\n\n    const searchData = async ({ }) => {\n        let q;\n\n        const searchValue = searchInputRef.current?.value;\n        if (unreadButtonValue == true) {\n\n            if (activeButtonValue == 0) {\n                if (searchValue === '') {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('read', '==', false),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n\n                    dispatch(setLoadingModalVisible(false));\n\n\n\n                }\n\n                else {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('read', '==', false),\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n                }\n            }\n\n            else {\n                if (searchValue === '') {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('read', '==', false),\n                        where('stepIndicator.value', '==', activeButtonValue),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n\n                    dispatch(setLoadingModalVisible(false));\n\n\n                }\n\n                else {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('stepIndicator.value', '==', activeButtonValue),\n                        where('read', '==', false),\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n                }\n            }\n\n        }\n\n        else {\n\n            if (activeButtonValue == 0) {\n                if (searchValue === '') {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n\n                    dispatch(setLoadingModalVisible(false));\n\n\n\n                }\n\n                else {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n                }\n            }\n\n            else {\n                if (searchValue === '') {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('stepIndicator.value', '==', activeButtonValue),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n\n                    dispatch(setLoadingModalVisible(false));\n\n\n                }\n\n                else {\n                    q = query(\n                        collection(projectExtensionFirestore, 'chats'),\n                        where('stepIndicator.value', '==', activeButtonValue),\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\n                        orderBy('lastMessageDate', 'desc'),\n                        limit(10)\n                    );\n                }\n            }\n        }\n\n\n\n\n\n\n        try {\n            const unsubscribe = onSnapshot(q, (snapshot) => {\n                const chatsData = [];\n                snapshot.forEach((doc) => {\n                    chatsData.push({\n                        id: doc.id,\n                        ...doc.data(),\n                    });\n                });\n                dispatch(setChatListData(chatsData));\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\n\n\n            });\n\n            // Return the unsubscribe function to stop listening when necessary\n            return () => {\n                if (unsubscribe) {\n                    unsubscribe();\n                }\n            };\n        } catch (error) {\n            // Handle errors here\n            console.error('Error fetching data from Firebase:', error);\n        }\n\n    };\n\n    // useEffect(() => {\n\n    //     searchData();\n\n    // }, [searchText])\n\n    useEffect(() => {\n        setSearchText('');\n        dispatch(setChatListSearchText(''));\n        globalSearchText = '';\n        searchInputRef.current.value = '';\n        setClearVisible(false);\n\n    }, [activeButtonValue, unreadButtonValue])\n\n    const handleSearchEnter = () => {\n        // setSortField('dateAdded');\n        // setIsSortActive(false)\n        if (searchInputRef.current?.value !== '') {\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\n            setSearchText(searchInputRef.current.value.trim());\n            globalSearchText = searchInputRef.current.value.trim();\n        }\n        else {\n            setSearchText('');\n            globalSearchText = '';\n            if (searchText == '') {\n                dispatch(setChatListSearchText(''));\n                searchData();\n\n            }\n\n\n\n        }\n\n    }\n\n    const handleClearText = () => {\n        searchInputRef.current.clear();\n        setClearVisible(false);\n        if (searchText !== '') {\n            setSearchText(''); // Clear the text\n            dispatch(setChatListSearchText(''));\n            dispatch(setActiveChatId(''));\n            globalSearchText = '';\n        }\n    };\n\n    return (\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\n            <TextInput\n                ref={searchInputRef}\n                onSubmitEditing={handleSearchEnter}\n                placeholder='Search'\n                placeholderTextColor='#9B9E9F'\n                underlineColorAndroid=\"transparent\"\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\n                onChangeText={() => setClearVisible(true)}\n                keyboardType='search'\n            />\n            {clearVisible ? (\n                <Pressable\n                    focusable={false}\n                    onPress={handleClearText}\n                    style={({ pressed, hovered }) => [\n                        {\n                            borderRadius: 10,\n                            marginRight: 10,\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\n                            // Add hover effect\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\n                        },\n                    ]}\n                >\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\n                </Pressable>\n            ) : null}\n        </View>);\n}\n\nconst timelineData = [\n    { key: '1', title: 'Event 1', description: 'Description 1' },\n    { key: '2', title: 'Event 2', description: 'Description 2' },\n    // ... more events\n];\n\n// const TimelineItem = ({ title, description }) => (\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\n//     </View>\n// );\n\n// const HorizontalTimeline = () => (\n//     <FlatList\n//         data={timelineData}\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\n//         horizontal\n//         showsHorizontalScrollIndicator={false}\n//         style={{ flexDirection: 'row', padding: 10 }}\n//     />\n// );\n\nconst ModalAddBank = () => {\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\n    const [isCancelHovered, setCancelHovered] = useState(false);\n    const [isAddHovered, setAddHovered] = useState(false);\n\n\n\n\n    const handleModalAddBankOpen = () => {\n        setModalAddBankVisible(true);\n    };\n\n    const handleModalAddBankClose = () => {\n        setModalAddBankVisible(false);\n    };\n\n    const bankNameRef = useRef(null);\n    const branchNameRef = useRef(null);\n    const swiftcodeRef = useRef(null);\n    const addressRef = useRef(null);\n    const accountHolderRef = useRef(null);\n    const accountNumberRef = useRef(null);\n\n\n\n    const addBankAccount = async () => {\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\n\n        const bankNameValue = bankNameRef.current?.value;\n        const branchNameValue = branchNameRef.current?.value;\n        const swiftcodeValue = swiftcodeRef.current?.value;\n        const addressValue = addressRef.current?.value;\n        const accountHolderValue = accountHolderRef.current?.value;\n        const accountNumberValue = accountNumberRef.current?.value;\n\n        const elementToAdd = {\n            bankName: bankNameValue,\n            branchName: branchNameValue,\n            swiftCode: swiftcodeValue,\n            address: addressValue,\n            accountHolder: accountHolderValue,\n            accountNumberValue: accountNumberValue,\n        }\n\n        try {\n            await updateDoc(docRef, {\n                [bankNameValue]: elementToAdd,\n            });\n            console.log(\"Element added to the array field\");\n            handleModalAddBankClose();\n        } catch (error) {\n            console.error(\"Error adding element to the array\", error);\n        }\n    }\n\n    return (\n        <>\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\n            </Pressable>\n\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\n                <Modal.Content>\n                    <Modal.Header>Add Bank Account</Modal.Header>\n                    <Modal.Body>\n                        <View style={{ height: '100%', flex: 1, }}>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\n                                <TextInput\n                                    ref={bankNameRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='Bank Name'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\n                                <TextInput\n                                    ref={branchNameRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='Branch Name'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\n                                <TextInput\n                                    ref={swiftcodeRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='SWIFTCODE'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\n                                <TextInput\n                                    ref={addressRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='Address'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\n                                <TextInput\n                                    ref={accountHolderRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='Account Holder'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\n                                <TextInput\n                                    ref={accountNumberRef}\n                                    placeholderTextColor='#9B9E9F'\n                                    placeholder='Account Number'\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                                />\n                            </View>\n                        </View>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\n                            <Pressable\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\n                                onHoverIn={() => setCancelHovered(true)}\n                                onHoverOut={() => setCancelHovered(false)}\n                                onPress={handleModalAddBankClose}\n                            >\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\n                            </Pressable>\n\n                            <Pressable\n                                onPress={addBankAccount}\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\n                                onHoverIn={() => setAddHovered(true)}\n                                onHoverOut={() => setAddHovered(false)}\n                            >\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\n                            </Pressable>\n                        </View>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n\n\n}\n\nconst BankInformation = () => {\n\n    let invoiceSelectedDueDate = '';\n    const currentDate = useSelector((state) => state.currentDate);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [selectedDueDate, setSelectedDueDate] = useState('');\n    const [bankAccountsData, setBankAccountsData] = useState({});\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\n    let selectedBankData = {};\n\n    const paymentTermsRef = useRef(null);\n    const salesAgreementRef = useRef(null);\n\n\n    useEffect(() => {\n\n        const subscribeToBankAccounts = () => {\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\n\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\n                if (docSnap.exists()) {\n                    const data = docSnap.data();\n                    const bankAccounts = {};\n\n                    // Assuming each entry in your document is a bank account\n                    Object.entries(data).forEach(([key, value]) => {\n                        if (value.bankName) {\n                            bankAccounts[value.bankName] = value;\n                        }\n                    });\n\n                    // console.log(bankAccounts);\n                    setBankAccountsData(bankAccounts);\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\n                    // Use state or context to store selected bank data if needed\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\n                    // console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\n                } else {\n                    console.log(\"No such document!\");\n                }\n            }, (error) => {\n                console.error(\"Error fetching document\", error);\n            });\n\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\n        };\n\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            // Check the day of the week\n            const dayOfWeek = date.getDay();\n\n            if (dayOfWeek === 5) { // Friday\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\n            } else if (dayOfWeek === 6) { // Saturday\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\n            } else {\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\n            }\n\n            // Format the date back to string\n            const adjustedDate = date.toISOString().split('T')[0];\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\n\n        }\n\n        const unsubscribe = subscribeToBankAccounts();\n    }, [currentDate]);\n\n\n\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\n\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n\n\n        const handleModalCalendarOpen = () => {\n            setModalCalendarVisible(true);\n        };\n\n        const handleModalCalendarClose = () => {\n            setModalCalendarVisible(false);\n        };\n\n\n\n        return (\n\n            <>\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    onPress={handleModalCalendarOpen}>\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\n                </Pressable>\n\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\n                    <Modal.CloseButton />\n                    <Modal.Content>\n                        <View style={{ height: '100%', flex: 1 }}>\n                            <Calendar\n                                onDayPress={useCallback(day => {\n                                    setSelectedDate(day.dateString);\n                                    invoiceSelectedDueDate = day.dateString;\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\n                                    handleModalCalendarClose();\n                                }, [])}\n                                markedDates={{\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\n                                }}\n                                renderArrow={(direction) => (\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\n                                )}\n                                enableSwipeMonths={true}\n                                initialDate={selectedDate}\n                                // minDate={currentDate}\n                                showSixWeeks />\n\n                        </View>\n\n                    </Modal.Content>\n\n                </Modal>\n            </>\n\n        );\n\n    }\n\n\n    const handleValueChange = (selectedBankName) => {\n        const selectedBankObj = bankAccountsData[selectedBankName];\n        setSelectedBank(selectedBankName);\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\n        // console.log(selectedBankObj);\n    };\n\n\n    return (\n        <>\n            <View style={{ marginLeft: 2, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Due Date:</Text>\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\n            </View>\n\n            <View style={{ marginLeft: 2, marginVertical: 10, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Bank Account: </Text>\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                    }}\n                >\n                    <Select\n                        selectedValue={selectedBank}\n                        onValueChange={handleValueChange}\n                        bgColor={'#FAFAFA'}\n                        accessibilityLabel=\"Choose Country\"\n                        placeholder=\"---\"\n                        _selectedItem={{\n                            bg: \"teal.600\",\n                            endIcon: <CheckIcon />,\n                        }}\n                        height={9}\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\n                    >\n                        {Object.keys(bankAccountsData).map((bankName) => (\n                            <Select.Item key={bankName} label={bankName} value={bankName} />\n                        ))}\n                    </Select>\n\n                    <ModalAddBank />\n                </View>\n\n\n            </View>\n\n            <View style={{ marginLeft: 2, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\n                    style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\nNo warranty service is provided on used vehicles.\n\nConditions for order cancellation:\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\n\nIntermediary Banking Information:\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\nSwift code: SMBCUS33\nAddress: 277 Park Avenue\nCity: New York, NY\nPostal Code: 10172\nCountry: United States\n`}\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View> */}\n        </>\n    );\n}\n\nconst PaymentDetails = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n\n    const fobPriceInput = useRef(null);\n    const freightInput = useRef(null);\n    const inspectionInput = useRef(null);\n    const insuranceInput = useRef(null);\n\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\n        selectedChatData.insurance ? 'CIF' : 'C&F');\n\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD');\n\n\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : (invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection));\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\n\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\n\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\n    const insurancePrice = 50;\n\n    const additionalNameRef = useRef(null);\n    const additionalPriceRef = useRef(null);\n\n    const safelyParseNumber = (value) => {\n        const number = Number(value.replace(/,/g, ''));\n        return isNaN(number) ? 0 : number;\n    };\n\n    const CurrencySign = () => {\n        switch (selectedCurrencyExchange) {\n            case 'USD':\n                return '$';\n\n            case 'EURO':\n                return '€';\n\n            case 'AUD':\n                return 'A$';\n\n            case 'GBP':\n                return '£';\n\n            case 'CAD':\n                return 'C$';\n        }\n    }\n\n\n    const convertedCurrency = (baseValue) => {\n\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\n            if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n                return `${Number(baseValue)}`\n            }\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\n                return `${(euroValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\n                return `${(audValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\n                return `${(gbpValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\n                return `${(cadValue)}`;\n            }\n        }\n\n        else {\n            if (selectedChatData.selectedCurrencyExchange == 'None' || !selectedChatData.selectedCurrencyExchange || selectedChatData.selectedCurrencyExchange == 'USD') {\n                return `${Number(baseValue)}`\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\n                return `${(euroValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\n                return `${(audValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\n                return `${(gbpValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\n                return `${(cadValue)}`;\n            }\n        }\n\n    }\n\n    const calculateTotalAmount = () => {\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\n        const freight = safelyParseNumber(freightInput.current?.value);\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\n\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(convertedCurrency(value)), 0);\n\n        const incotermsCondition = globalInvoiceVariable.paymentDetails.incoterms == 'CIF' ? insurance : 0;\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\n        const total = Math.round(fobPrice + freight + inspection + incotermsCondition + additionalPricesTotal).toLocaleString();\n        setTotalAmountCalculated(total);\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\n    };\n\n    useEffect(() => {\n\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice\n            ? invoiceData.paymentDetails.additionalPrice.map(price => Number(convertedCurrency(price)).toFixed(2)).join('\\n')\n            : '';\n\n\n        globalInvoiceVariable.selectedCurrencyExchange = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.selectedCurrencyExchange !== 'None' && invoiceData.selectedCurrencyExchange ? invoiceData.selectedCurrencyExchange : 'None';\n\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\n        globalInvoiceVariable.paymentDetails.inspectionPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? valueInspectionPrice : 0);\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\n        globalInvoiceVariable.paymentDetails.fobPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceDollars);\n        globalInvoiceVariable.paymentDetails.freightPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightCalculation);\n        globalInvoiceVariable.paymentDetails.insurancePrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0);\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\n\n        calculateTotalAmount();\n    }, []);\n\n\n    useEffect(() => {\n\n        inspectionInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? valueInspectionPrice : 0)).toFixed(2);\n        calculateTotalAmount();\n\n    }, [inspectionIsChecked]);\n\n    useEffect(() => {\n\n        insuranceInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? valueInsurancePrice : 0)).toFixed(2);\n        freightInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation)).toFixed(2);\n\n        calculateTotalAmount();\n\n    }, [selectedIncoterms]);\n\n    useEffect(() => {\n        calculateTotalAmount();\n\n    }, [warrantyIsChecked]);\n\n    const freightCalculation = (\n        (selectedChatData.m3 ? selectedChatData.m3 :\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\n        Number(selectedChatData.freightPrice)\n    );\n\n    const totalPriceCalculation = (\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n                selectedChatData.carData.fobPrice : 0) *\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                    selectedChatData.currency.jpyToUsd : 0))) +\n        parseFloat(freightCalculation)\n    ).toFixed(2);\n\n    const fobPriceDollars = (\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n                selectedChatData.carData.fobPrice : 0) *\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                    selectedChatData.currency.jpyToUsd : 0))\n        ));\n\n\n    const handleAdditionalPriceTextChange = (text) => {\n        // Process and filter each line\n        const filteredLines = text.split('\\n').map(line => {\n            let filteredLine = line.replace(/[^0-9.]/g, '');\n            const parts = filteredLine.split('.');\n            if (parts.length > 2) {\n                filteredLine = parts[0] + '.' + parts[1];\n            }\n            return filteredLine;\n        });\n\n        // Update the ref and the state\n        additionalPriceRef.current.value = filteredLines.join('\\n');\n        // setAdditionalPriceArray(filteredLines);\n        globalAdditionalPriceArray = filteredLines;\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\n        calculateTotalAmount();\n\n    };\n\n    const handleAdditionalNameTextChange = (text) => {\n        // Update the ref\n        additionalNameRef.current.value = text;\n\n        // Split the text into lines and update the state\n        const lines = text.split('\\n');\n        // setAdditionalNameArray(lines);\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\n    };\n\n\n    const handleFobPriceInputChangeText = (text) => {\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n        fobPriceInput.current.value = filteredText;\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\n        calculateTotalAmount();\n    };\n\n    const handleFreightInputChangeText = (text) => {\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n        freightInput.current.value = filteredText;\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\n        calculateTotalAmount();\n    };\n\n    const handleInspectionInputChangeText = (text) => {\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n        inspectionInput.current.value = filteredText;\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\n\n        calculateTotalAmount();\n    };\n\n    const handleInsuranceInputChangeText = (text) => {\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n        insuranceInput.current.value = filteredText;\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\n        calculateTotalAmount();\n    };\n\n\n    const SelectedCurrencyRate = () => {\n\n        if (selectedChatData.selectedCurrencyExchange == 'None' || !selectedChatData.selectedCurrencyExchange || selectedChatData.selectedCurrencyExchange == 'USD') {\n            return `JPY to USD ${Number(selectedChatData.currency.jpyToUsd).toFixed(6)}\\nUSD to JPY ${Number(selectedChatData.currency.usdToJpy).toFixed(2)}`\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n            return `JPY to EURO ${Number(selectedChatData.currency.jpyToEur).toFixed(6)}\\nUSD to EURO ${Number(selectedChatData.currency.usdToEur).toFixed(2)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n            return `JPY to AUD ${Number(selectedChatData.currency.jpyToAud).toFixed(6)}\\nUSD to AUD ${Number(selectedChatData.currency.usdToAud).toFixed(2)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n            return `JPY to GBP ${Number(selectedChatData.currency.jpyToGbp).toFixed(6)}\\nUSD to GBP ${Number(selectedChatData.currency.usdToGbp).toFixed(2)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n            return `JPY to CAD${Number(selectedChatData.currency.cadToJpy).toFixed(6)}\\nUSD to CAD ${Number(selectedChatData.currency.usdToCad).toFixed(2)}`;\n        }\n\n    }\n\n    return (\n        <>\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\n            </View>\n\n            <View style={{ marginLeft: 2, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Incoterms:</Text>\n\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                    }}\n                >\n                    <Select\n                        selectedValue={selectedIncoterms}\n                        onValueChange={(value) => {\n                            setSelectedIncoterms(value);\n                            globalInvoiceVariable.paymentDetails.incoterms = value;\n                            if (value == 'CIF') {\n                                globalInvoiceVariable.paymentDetails.insurancePrice = convertedCurrency(insurancePrice);\n                            }\n                        }\n                        }\n                        bgColor={'#FAFAFA'}\n                        accessibilityLabel=\"Choose Country\"\n                        placeholder=\"---\"\n                        _selectedItem={{\n                            bg: \"teal.600\",\n                            endIcon: <CheckIcon />,\n                        }}\n                        height={9}\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\n                    >\n                        <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\n                        <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\n                        <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\n                    </Select>\n                    <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\n                        {selectedChatData.currency && selectedChatData.currency.usdToJpy\n                            ? SelectedCurrencyRate() : '0.00'}\n                    </Text>\n                </View>\n\n            </View>\n\n            <View style={{ flexDirection: 'row', marginLeft: 2, marginTop: 10, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\n                <Checkbox\n                    isChecked={inspectionIsChecked}\n                    onChange={value => {\n                        setInspectionIsChecked(value)\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\n                    }}\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\n                    size=\"sm\"\n                    _text={{ fontWeight: 700 }}\n                />\n            </View>\n\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\n                <Checkbox\n                    isChecked={warrantyIsChecked}\n                    onChange={value => setWarrantyIsChecked(value)}\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\n                    size=\"sm\"\n                    _text={{ fontWeight: 700 }}\n                />\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\n            </View> */}\n\n            <View style={{ marginLeft: 2 }}>\n                <Text style={{ fontWeight: 700, margin: 3 }}>FOB Price:</Text>\n\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                    }}\n                >\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>{CurrencySign()}</Text>\n                    <TextInput\n                        onChangeText={handleFobPriceInputChangeText}\n                        ref={fobPriceInput}\n                        defaultValue={Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars)).toFixed(2)}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='FOB Price'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n                </View>\n\n            </View>\n\n            <View style={{ marginLeft: 2 }}>\n                <Text style={{ fontWeight: 700, margin: 3 }}>Freight:</Text>\n\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                        alignItems: 'center',\n                    }}\n                >\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>{CurrencySign()}</Text>\n                    <TextInput\n                        onChangeText={handleFreightInputChangeText}\n                        ref={freightInput}\n                        defaultValue={Number(convertedCurrency(freightCalculation)).toFixed(2)}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Freight'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n                    {/* <MaterialCommunityIcons name='swap-horizontal' size={18} color={'gray'} />\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, flex: 1, }}>$</Text> */}\n                </View>\n\n            </View>\n\n            <View style={{ marginLeft: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Insurance:</Text>\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                    }}\n                >\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>{CurrencySign()}</Text>\n                    <TextInput\n                        onChangeText={handleInsuranceInputChangeText}\n                        ref={insuranceInput}\n                        defaultValue={convertedCurrency(insurancePrice)}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder={`Insurance`}\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n                </View>\n\n            </View>\n\n            <View style={{ marginLeft: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\n                <View\n                    style={{\n                        flexDirection: 'row',\n                        flex: 1,\n                    }}\n                >\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>{CurrencySign()}</Text>\n                    <TextInput\n                        onChangeText={handleInspectionInputChangeText}\n                        ref={inspectionInput}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder={`Inspection [${selectedChatData.inspectionName}]`}\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\n                </View>\n\n            </View>\n\n\n            <View style={{ marginLeft: 2, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Additional:</Text>\n\n                <View\n                    style={{\n                        flex: 1,\n                        flexDirection: 'row',\n                    }}\n                >\n                    <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                    <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n\n\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginBottom: 4, }} />\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`${CurrencySign()}${totalAmountCalculated}`}</Text>\n\n                {/* <MaterialCommunityIcons name='swap-horizontal' size={30} color={'gray'} />\n\n\n                <Select\n                    selectedValue={selectedCurrencyExchange}\n                    onValueChange={(value) => {\n\n                        setSelectedCurrencyExchange(value)\n                        globalInvoiceVariable.selectedCurrencyExchange = value;\n                    }}\n                    bgColor={'#FAFAFA'}\n                    accessibilityLabel=\"Choose Currency\"\n                    placeholder=\"---\"\n                    _selectedItem={{\n                        bg: \"teal.600\",\n                        endIcon: <CheckIcon />,\n                    }}\n                    height={9}\n                    style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\n                >\n                    <Select.Item key={'$ USD'} label={'$ USD'} value={'USD'} />\n                    <Select.Item key={'€ EURO'} label={'€ EURO'} value={'EURO'} />\n                    <Select.Item key={'A$ AUD'} label={'A$ AUD'} value={'AUD'} />\n                    <Select.Item key={'£ GBP'} label={'£ GBP'} value={'GBP'} />\n                    <Select.Item key={'C$ CAD'} label={'C$ CAD'} value={'CAD'} />\n                </Select> */}\n\n            </View>\n        </>\n    );\n\n\n}\n\nconst SelectPortOfDischarge = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\n    const [portsData, setPortsData] = useState({});\n    const [nearestPorts, setNearestPorts] = useState([]);\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\n\n\n\n    useEffect(() => {\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\n\n        const fetchPorts = async () => {\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n            try {\n                const docSnap = await getDoc(docRef);\n\n                if (docSnap.exists()) {\n                    const data = docSnap.data();\n                    const sortedPorts = Object.keys(data)\n                        .map(portName => ({\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\n                            ...data[portName]\n                        }))\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\n                    setNearestPorts(sortedPorts);\n                } else {\n                    console.log('No such document!');\n                }\n            } catch (error) {\n                console.error('Error fetching document:', error);\n            }\n        };\n\n        const fetchPortsData = async () => {\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n            try {\n                const docSnap = await getDoc(docRef);\n\n                if (docSnap.exists()) {\n                    const data = docSnap.data();\n                    setPortsData(data);\n                } else {\n                    console.log('No such document!');\n                }\n            } catch (error) {\n                console.error('Error fetching document:', error);\n            }\n        };\n\n        fetchPorts();\n        fetchPortsData();\n        // fetchCountries();\n\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\n\n    }, []);\n\n\n    useEffect(() => {\n        // When selectedCountry changes, update nearestPorts\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\n            setNearestPorts(selectedCountryData.nearestPorts);\n        } else {\n            setNearestPorts([]); // Reset to empty if no ports or country not found\n        }\n    }, [selectedCountry, countriesDischarge]);\n\n\n    useEffect(() => {\n        const portData = portsData[selectedPort];\n        if (portData && portData.country) {\n            setSelectedPortCountry(portData.country);\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\n            globalInvoiceVariable.discharge.country = portData.country;\n        } else {\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\n            console.log('Not found');\n        }\n    }, [selectedPort, portsData]);\n\n    return (\n        <>\n            {/* <Select\n                selectedValue={selectedCountry}\n                onValueChange={(value) => {\n                    setSelectedCountry(value)\n                    globalInvoiceVariable.discharge.country = value;\n\n                }}\n                bgColor={'#FAFAFA'}\n                flex={1}\n                accessibilityLabel=\"Choose Country\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />,\n                }}\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\n            >\n                {countriesDischarge.map((country) => (\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\n                ))}\n            </Select> */}\n            <Select\n                selectedValue={selectedPort}\n                onValueChange={(value) => {\n                    setSelectedPort(value)\n                    globalInvoiceVariable.discharge.port = value;\n                }}\n                bgColor={'#FAFAFA'}\n                accessibilityLabel=\"Choose Port\"\n                placeholder=\"Select port\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />,\n                }}\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\n            >\n                {nearestPorts.map((port, index) => (\n                    <Select.Item key={index} label={port.name} value={port.name} />\n                ))}\n            </Select>\n        </>\n    );\n\n}\n\nconst SelectSalesPerson = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\n    const salesData = useSelector((state) => state.salesData);\n\n\n    useEffect(() => {\n\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\n\n    }, []);\n\n    return (\n        <Select\n            selectedValue={selectedSales}\n            onValueChange={(value) => {\n                setSelectedSales(value);\n                globalInvoiceVariable.salesPerson = value;\n            }}\n            bgColor={'#FAFAFA'}\n            accessibilityLabel=\"---\"\n            placeholder=\"---\"\n            _selectedItem={{\n                bg: \"teal.600\",\n                endIcon: <CheckIcon />\n            }}\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\n            {salesData.map((item) => (\n                <Select.Item key={item.id} label={item.name} value={item.name} />\n            ))}\n        </Select>\n    );\n}\n\nconst SelectPortOfDeparture = () => {\n\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const portData = useSelector((state) => state.portData);\n    const salesData = useSelector((state) => state.salesData);\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\n\n\n    useEffect(() => {\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\n\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\n\n    }, []);\n\n    return (\n        <View\n            style={{\n                flexDirection: 'row',\n            }}\n        >\n            <Select\n                focusable={false}\n                selectedValue='Japan'\n                onValueChange={(value) => {\n                    globalInvoiceVariable.departureCountry = value;\n                }}\n                bgColor={'#FAFAFA'}\n                flex={1}\n                accessibilityLabel=\"---\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />\n                }}\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none', }}>\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\n            </Select>\n\n            <Select\n                focusable={false}\n                selectedValue={selectedPort}\n                onValueChange={(value) => {\n                    setSelectedPort(value);\n                    globalInvoiceVariable.departurePort = value;\n                }}\n                bgColor={'#FAFAFA'}\n                flex={1}\n                accessibilityLabel=\"---\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />\n                }}\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none' }}>\n                {portData.map((item) => (\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\n                ))}\n            </Select>\n        </View>\n    );\n\n}\n\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\n    const invoiceData = useSelector((state) => state.invoiceData);\n\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\n\n    const notifyPartyName = useRef(null);\n    const notifyPartyAddress = useRef(null);\n    const notifyPartyCity = useRef(null);\n    const notifyPartyCountry = useRef(null);\n    const notifyPartyContactNumber = useRef(null);\n    const notifyPartyFax = useRef(null);\n    const notifyPartyEmail = useRef(null);\n\n    useEffect(() => {\n\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\n\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\n\n\n    }, []);\n\n    return (\n        <>\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\n\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\n            </View>\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\n                <Checkbox\n                    isChecked={isChecked}\n                    onChange={value => {\n                        setIsChecked(value)\n                        globalInvoiceVariable.notifyParty.sameAsConsignee = value;\n                    }}\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\n                    size=\"sm\"\n                    _text={{ fontWeight: 700 }}\n                >\n                    Same as consignee\n                </Checkbox>\n            </View>\n\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.name = value;\n                    }}\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.address = value;\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.city = value;\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.country = value;\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.fax = value;\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n                <View style={{ margin: 2, }}>\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\n                    <TextInput onChangeText={(value) => {\n                        globalInvoiceVariable.notifyParty.email = value;\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                </View>\n            </View>\n\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\n        </>\n    )\n}\n\nconst ConsigneeInput = () => {\n\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\n    const [accountData, setAccountData] = useState({});\n\n    const consigneeName = useRef(null);\n    const consigneeAddress = useRef(null);\n    const consigneeCity = useRef(null);\n    const consigneeCountry = useRef(null);\n    const consigneeContactNumber = useRef(null);\n    const consigneeFax = useRef(null);\n    const consigneeEmail = useRef(null);\n\n\n    useEffect(() => {\n        const fetchAccountData = async () => {\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\n\n            try {\n                const docSnap = await getDoc(docRef);\n\n                if (docSnap.exists()) {\n                    const data = docSnap.data();\n                    setAccountData(docSnap.data());\n                    // console.log(docSnap.data());\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\n\n\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\n\n                    // console.log(accountData.length);\n                } else {\n                    console.log('No such document!');\n                    setAccountData(null);\n                }\n            } catch (error) {\n                console.error('Error fetching document:', error);\n            }\n        };\n        fetchAccountData();\n\n    }, []);\n\n    useEffect(() => {\n\n        if (isChecked) {\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\n        }\n\n        // console.log(globalInvoiceVariable);\n\n\n    }, [isChecked])\n\n\n    return (\n        <>\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\n            </View>\n            <View style={{ flexDirection: 'row', margin: 5, }}>\n                <Checkbox\n                    isChecked={isChecked}\n                    onChange={value => {\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\n                        setIsChecked(value)\n                    }}\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\n                    size=\"sm\"\n                    _text={{ fontWeight: 700 }}\n                >\n                    Same as buyer\n                </Checkbox>\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.name = value;\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.address = value;\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.city = value;\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.country = value;\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.contactNumber = value;\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.fax = value;\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\n                <TextInput onChangeText={(value) => {\n                    globalInvoiceVariable.consignee.email = value;\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n            </View>\n\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\n        </>\n    );\n}\n\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\n    const invoiceData = useSelector((state) => state.invoiceData);\n    return (\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\n\n            <View\n                style={{\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\n            </View>\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\n            </View>\n\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\n            </View>\n\n\n            <View\n                style={{\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\n                    borderRadius: 5 * widthScaleFactor,\n                    width: 64 * widthScaleFactor,\n                    height: 25 * heightScaleFactor,\n                    backgroundColor: '#7B9CFF',\n                    marginRight: 5 * widthScaleFactor,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginTop: 5 * heightScaleFactor,\n                }}>\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\n            </View>\n        </View>\n    );\n}\n\nconst createHmacSha256Hash = (data, secretKey) => {\n    const hash = HmacSHA256(data, secretKey);\n    return enc.Hex.stringify(hash);\n};\n\n\nconst appendSalesInfoDataToCSV = async ({\n    id,\n    stock_system_id,\n    sales_date,\n    fob,\n    freight,\n    insurance,\n    inspection,\n    cost_name1,\n    cost1,\n    cost_name2,\n    cost2,\n    cost_name3,\n    cost3,\n    cost_name4,\n    cost4,\n    cost_name5,\n    cost5,\n    coupon_discount,\n    price_discount,\n    subtotal,\n    clients,\n}) => {\n    try {\n        const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-sales-info', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: 'jackall',\n                password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\n                data: {\n                    id: id,\n                    stock_system_id: stock_system_id,\n                    sales_date: sales_date,\n                    fob: fob,\n                    freight: freight,\n                    insurance: insurance,\n                    inspection: inspection,\n                    cost_name1: cost_name1,\n                    cost1: cost1,\n                    cost_name2: cost_name2,\n                    cost2: cost2,\n                    cost_name3: cost_name3,\n                    cost3: cost3,\n                    cost_name4: cost_name4,\n                    cost4: cost4,\n                    cost_name5: cost_name5,\n                    cost5: cost5,\n                    coupon_discount: coupon_discount,\n                    price_discount: price_discount,\n                    subtotal: subtotal,\n                    clients: clients,\n                }, // Adjust based on your CSV structure\n            }),\n        });\n\n        if (response.ok) {\n            console.log('Success', 'Data appended successfully to CSV.');\n        } else {\n            console.log('Error', 'Failed to append data to CSV.');\n        }\n    } catch (error) {\n        console.error(error);\n        console.log('Error', 'An error occurred.');\n    }\n};\n\n\n\nconst InputPaymentModalContent = () => {\n    const dispatch = useDispatch();\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n\n\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\n\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\n\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\n\n    const inputAmountRef = useRef(null);\n\n    const handleHistoryModalOpen = () => {\n        setHistoryModalVisible(true);\n\n        // console.log(selectedChatData.payments);\n    }\n\n    const handleHistoryModalClose = () => {\n        setHistoryModalVisible(false);\n\n    }\n\n    const handleInputAmountChangeText = (text) => {\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\n        const filteredText = text\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\n\n        // Update the input field\n        inputAmountRef.current.value = filteredText;\n    };\n\n\n    const convertedCurrency = (baseValue) => {\n        const numberFormatOptions = {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n            useGrouping: true\n        };\n        if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n            return `${Number(baseValue).toLocaleString('en-US', numberFormatOptions)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToEur)).toLocaleString('en-US', numberFormatOptions)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToAud)).toLocaleString('en-US', numberFormatOptions)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToGbp)).toLocaleString('en-US', numberFormatOptions)}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToCad)).toLocaleString('en-US', numberFormatOptions)}`;\n        }\n    }\n\n\n    const totalValue = selectedChatData.payments\n        ? selectedChatData.payments.reduce((sum, payment) => {\n            const value = Number(payment.value);\n            return Number(sum + (isNaN(value) ? 0 : value));\n        }, 0)\n        : 0;\n\n    const totalPriceCalculated = () => {\n        // Safely access deeply nested properties using optional chaining and provide default values\n        const additionalPrices = invoiceData?.paymentDetails?.additionalPrice || [];\n        const fobPrice = Number(invoiceData?.paymentDetails?.fobPrice || 0);\n        const freightPrice = Number(invoiceData?.paymentDetails?.freightPrice || 0);\n        const inspectionPrice = invoiceData?.paymentDetails?.inspectionIsChecked ? Number(invoiceData.paymentDetails.inspectionPrice || 0) : 0;\n        const usdToEur = Number(invoiceData?.currency?.usdToEur || 1);\n        const usdToJpy = Number(invoiceData?.currency?.usdToJpy || 1);\n        const jpyToAud = Number(invoiceData?.currency?.jpyToAud || 1);\n        const jpyToGbp = Number(invoiceData?.currency?.jpyToGbp || 1);\n        const cadToJpy = Number(invoiceData?.currency?.cadToJpy || 1);\n\n\n\n        const totalAdditionalPrice = additionalPrices.reduce((total, price) => {\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\n            return total + parseFloat(numericPart); // Add the numeric value to the total\n        }, 0);\n\n        const baseTotal = fobPrice + freightPrice + inspectionPrice + totalAdditionalPrice + (invoiceData?.paymentDetails?.incoterms == 'CIF' ? Number(invoiceData.paymentDetails.insurancePrice) : 0);\n\n        // Calculating total in different currencies\n        const totalUsd = baseTotal;\n        const totalEur = baseTotal * usdToEur;\n        const totalAud = baseTotal * usdToJpy * jpyToAud;\n        const totalGbp = baseTotal * usdToJpy * jpyToGbp;\n        const totalCad = baseTotal * usdToJpy * cadToJpy;\n\n        switch (invoiceData?.selectedCurrencyExchange) {\n            case 'EURO':\n                return `${Math.round(Number(totalEur))}`;\n            case 'AUD':\n                return `${Math.round(Number(totalAud))}`;\n            case 'GBP':\n                return `${Math.round(Number(totalGbp))}`;\n            case 'CAD':\n                return `${Math.round(Number(totalCad))}`;\n            case 'None':\n            case 'USD':\n            default:\n                return `${Math.round(Number(totalUsd))}`;\n        }\n    }\n\n    const handleCompletePaymentPress = () => {\n        const filteredText = totalPriceCalculated().replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1').replace(/,/g, '') - convertedCurrency(Number(totalValue)).replace(/,/g, '');\n        inputAmountRef.current.value = filteredText;\n    }\n\n\n\n    const parseDollars = (baseValue) => {\n\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\n            if (invoiceData.selectedCurrencyExchange == 'None' || invoiceData.selectedCurrencyExchange == 'USD' || !invoiceData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.eurToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.audToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.gbpToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.cadToUsd)).toFixed(2)}`;\n            }\n        } else {\n            if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.eurToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.audToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.gbpToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.cadToUsd)).toFixed(2)}`;\n            }\n        }\n        // Fallback in case no conditions are met\n        return `${Number(baseValue).toFixed(2)}`;\n    };\n\n\n    const CurrencySymbol = () => {\n        switch (selectedChatData.selectedCurrencyExchange) {\n            case 'USD':\n                return '$';\n            case 'EURO':\n                return '€';\n            case 'AUD':\n                return 'A$';\n            case 'GBP':\n                return '£';\n            case 'CAD':\n                return 'C$';\n            default:\n                return '$';\n        }\n    }\n\n\n    const fullPaymentMessage = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `Full Payment Received\n\nDear Customer,\n\nI hope this message finds you well. \n\nWe are writing to confirm that we have received your full payment. \n\nThank you for settling your account promptly.\n\nShould you have any further questions or require assistance, please feel free to contact us.\n                \nBest regards,\nReal Motor Japan`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                messageType: 'InputPayment',\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `Full Payment Received\n\nDear Customer,\n\nI hope this message finds you well. \n\nWe are writing to confirm that we have received your full payment. \n                \nThank you for settling your account promptly.\n                \nShould you have any further questions or require assistance, please feel free to contact us.\n                                \nBest regards,\nReal Motor Japan`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n\n    const overBalanceMessage = async (amount) => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `Dear Customer,\n\nGood day! \n\nWe're writing to inform you about your account with us at Real Motor Japan.\n                \nYou have an extra overbalance in your account.\n\nAmount: $${amount}\n                \nFeel free to contact us if you have any questions. We're here to help.\n                \nBest regards,\nReal Motor Japan`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                messageType: 'InputPayment',\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `Dear Customer,\n\nGood day! \n                \nWe're writing to inform you about your account with us at Real Motor Japan.\n                                \nYou have an extra overbalance in your account.\n                \nAmount: $${amount}\n                                \nFeel free to contact us if you have any questions. We're here to help.\n                                \nBest regards,\nReal Motor Japan`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n    const paymentMessage = async (amount, transactionDate) => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `🌟 Payment Confirmation Alert 🌟\n\nDear Customer! 👋\n\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\n\nYour prompt and efficient transaction is greatly appreciated! 🎉\n\n🔍 Payment Details:\n\nAmount: ${CurrencySymbol()}${amount}\nTransaction Date: ${transactionDate}\n\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\n\nThank you for your continued trust in us.\nLooking forward to serving you more in the future! 😊\n\nBest regards,\nReal Motor Japan`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                messageType: 'InputPayment',\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\n\nDear Customer! 👋\n\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\n\nYour prompt and efficient transaction is greatly appreciated! 🎉\n\n🔍 Payment Details:\n\nAmount: ${CurrencySymbol()}${amount}\nTransaction Date: ${transactionDate}\n\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\n\nThank you for your continued trust in us.\nLooking forward to serving you more in the future! 😊\n\nBest regards,\nReal Motor Japan`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n\n\n\n\n    const confirmPayment = async () => {\n        setIsConfirmLoading(true);\n\n        const amountNeeded = Number(invoiceData.paymentDetails.totalAmount ? Number(totalPriceCalculated().replace(/,/g, '')).toFixed(2) - convertedCurrency(Number(totalValue)).replace(/,/g, '') : 0);\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\n        const docRefInvoice = doc(projectExtensionFirestore, 'IssuedInvoice', selectedChatData.invoiceNumber);\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedDate = moment(datetime).format('DD MMMM YYYY');\n        const formattedSalesDate = moment(datetime).format('YYYY/MM/DD');\n\n        const newPayments = [\n            { value: parseDollars(inputAmountRef.current.value), date: formattedDate },\n        ];\n\n        const newPaymentsAccount = [\n            { value: parseDollars(inputAmountRef.current.value), date: formattedDate, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\n        ];\n\n        const inputAmountFormatOptions = {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n            useGrouping: true\n        };\n\n        const inputAmount = inputAmountRef.current.value;\n        const numericInputAmount = Number(inputAmount);\n        const formattedInputAmount = Number(numericInputAmount).toLocaleString('en-US', inputAmountFormatOptions);\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n        if (inputAmount === '' || inputAmount === '0') {\n            setIsConfirmLoading(false);\n            return;\n        }\n\n\n        const prepareSalesData = () => {\n            // Initial data from the function call\n            let salesData = {\n                id: selectedChatData.carData.stockID,\n                stock_system_id: selectedChatData.carData.jackall_id,\n                sales_date: formattedSalesDate,\n                fob: invoiceData.paymentDetails.fobPrice,\n                freight: invoiceData.paymentDetails.freightPrice,\n                insurance: 0,\n                inspection: invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionPrice : 0,\n                coupon_discount: 0,\n                price_discount: 0,\n                subtotal: parseFloat(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')),\n                clients: selectedCustomerData.j_id\n            };\n\n            // Map additional names and prices to cost_name and cost fields\n            invoiceData.paymentDetails.additionalName.forEach((name, index) => {\n                const price = invoiceData.paymentDetails.additionalPrice[index] || 0;\n                salesData[`cost_name${index + 1}`] = name;\n                salesData[`cost${index + 1}`] = price;\n            });\n\n            // Fill remaining cost_name and cost fields with default values if they haven't been set\n            for (let i = invoiceData.paymentDetails.additionalName.length + 1; i <= 5; i++) {\n                salesData[`cost_name${i}`] = 0;\n                salesData[`cost${i}`] = 0;\n            }\n\n            return salesData;\n        };\n\n        const salesDataToSubmit = prepareSalesData();\n\n        try {\n            if (!inputAmount.startsWith('-')) {\n                // First, execute paymentMessage\n                await paymentMessage(formattedInputAmount, formattedDate);\n                await delay(10); //10ms delay\n\n                if (numericInputAmount >= amountNeeded) {\n                    // Once paymentMessage is successful, execute fullPaymentMessage\n                    await fullPaymentMessage();\n                    await appendSalesInfoDataToCSV(salesDataToSubmit);\n                    await delay(10); //10ms delay\n\n                    if (numericInputAmount > amountNeeded) {\n                        // Calculate overbalance and execute overBalanceMessage\n                        const overBalance = numericInputAmount - amountNeeded;\n                        const formattedOverbalanceAmount = Number(Number(selectedCustomerData.overBalance) + Number(parseDollars(overBalance))).toLocaleString('en-US', inputAmountFormatOptions);\n                        if (overBalance > 0) {\n\n                            // Call the function to handle the message with the formatted total                            \n                            await updateDoc(docRefCustomer, {\n                                overBalance: increment(parseDollars(overBalance)),\n                            });\n                            await delay(10); //10ms delay\n                            await overBalanceMessage(formattedOverbalanceAmount);\n\n                        }\n\n\n                    }\n\n                    // Update step indicator for successful payment\n                    await updateDoc(docRef, {\n                        'stepIndicator.value': 4,\n                        'stepIndicator.status': 'Payment Confirmed',\n                    });\n\n                    await updateDoc(docRefInvoice, {\n                        fullyPaid: true,\n                    });\n\n                } else {\n                    // Handle the case where the payment is less than the amount needed\n                    console.log('Partial payment received');\n                }\n\n                // Update payments and payments history\n\n                await updateDoc(docRef, {\n                    payments: arrayUnion(...newPayments)\n                });\n\n                await updateDoc(docRefCustomer, {\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\n                });\n\n            } else {\n                console.error('Negative value entered');\n            }\n\n        } catch (error) {\n            console.error('Error processing payment: ', error);\n        } finally {\n            setIsConfirmLoading(false);\n            dispatch(setTransactionModalVisible(false));\n        }\n\n\n\n    }\n\n    function formatDate(dateString) {\n        // Remove ' at ' from the date string\n        const cleanedDateString = dateString.replace(' at ', ' ');\n        const date = new Date(cleanedDateString);\n\n        if (isNaN(date.getTime())) {\n            // Date is not valid\n            console.error(\"Invalid Date:\", dateString);\n            return \"Invalid Date\";\n        }\n\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const year = date.getFullYear();\n        const month = months[date.getMonth()];\n        const day = date.getDate().toString().padStart(2, '0');\n\n        let hours = date.getHours();\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n        const ampm = hours >= 12 ? 'pm' : 'am';\n\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n\n        // return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\n        return `${year} ${month} ${day}`;\n    }\n\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\n        // Create a copy of payments and sort it by date in descending order\n        const sortedPayments = [...payments].sort((a, b) => {\n            const dateA = a.date;\n            const dateB = b.date;\n            return dateB - dateA; // Sorts in descending order\n        });\n\n        // console.log(sortedPayments);\n\n        return (\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\n                    <Modal.CloseButton />\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\n                        Payment History\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\n                            {\n                                sortedPayments.length > 0 ?\n                                    sortedPayments.map((payment, index) => (\n                                        <View key={index} style={{\n                                            marginBottom: 15,\n                                            backgroundColor: '#F8F9FF', // Card background color\n                                            borderRadius: 10, // Rounded corners for the card\n                                            shadowColor: '#000', // Shadow color\n                                            shadowOffset: { width: 0, height: 2 },\n                                            shadowOpacity: 0.1,\n                                            shadowRadius: 2,\n                                            elevation: 3, // Elevation for Android\n                                            padding: 15, // Padding inside the card\n                                            borderBottomWidth: 1,\n                                            borderBottomColor: '#eee',\n                                        }}>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\n                                                <Text style={{ color: '#333' }}>\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\n                                                </Text>\n                                            </Text>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\n                                                </Text>\n                                            </Text>\n\n                                        </View>\n                                    )) :\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\n                            }\n                        </ScrollView>\n\n                    </Modal.Body>\n                </Modal.Content>\n            </Modal>\n        );\n    };\n\n\n\n    const isTotalValueGreater = Number(totalValue) < Number(totalPriceCalculated().replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : totalPriceCalculated();\n\n    return (\n\n        <View style={{ flex: 1, }}>\n\n            <View style={{ marginLeft: 5, }}>\n\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Total Paid:</Text>\n\n                <Progress w=\"90%\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\n                    bg: \"lime.500\"\n                }} />\n\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>{`${CurrencySymbol()}${convertedCurrency((displayedAmount).replace(/,/g, ''))}`}\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>\n                        {`${CurrencySymbol()}${Number(totalPriceCalculated()).toLocaleString('en-US', {\n                            minimumFractionDigits: 2,\n                            maximumFractionDigits: 2\n                        })}`}\n                    </Text>\n                </Text>\n\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\n\n            <View style={{ marginLeft: 5, }}>\n\n                <Pressable\n                    onPress={handleHistoryModalOpen}\n                    style={{ width: 'fit-content', }}>\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\n                </Pressable>\n\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\n\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\n\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\n\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\n\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>{CurrencySymbol()}</Text>\n\n                    <TextInput\n                        ref={inputAmountRef}\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        onChangeText={handleInputAmountChangeText}\n                    />\n\n                </View>\n\n                <Pressable\n                    onPress={handleCompletePaymentPress}\n                    style={{ width: 'fit-content', }}>\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\n                </Pressable>\n\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\n\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\n                <View\n                    style={{\n                        flex: 1,\n                        backgroundColor: '#16A34A', // Change color on hover\n                        borderRadius: 5,\n                        padding: 5,\n                    }}\n                >\n                    {!isConfirmLoading ? (\n                        <Pressable\n                            onPress={() => confirmPayment()}\n                        >\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\n                                Confirm\n                            </Text>\n                        </Pressable>\n                    ) : (\n                        <Spinner size={'sm'} color={'white'} />)}\n\n                </View>\n            </View>\n\n            <PaymentHistoryModal\n                historyModalVisible={historyModalVisible}\n                handleHistoryModalClose={handleHistoryModalClose}\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\n\n        </View>\n\n    );\n\n}\n\nconst IssueProformaInvoiceModalContent = () => {\n    const dispatch = useDispatch();\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const currentDate = useSelector((state) => state.currentDate);\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\n\n    const cfsInputRef = useRef(null);\n    const placeOfDeliveryInputRef = useRef(null);\n    const secretKey = CRYPTO_KEY.toString();\n\n\n    const invoiceMessage = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: 'Issued Invoice',\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                messageType: 'IssuedInvoice',\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: 'Issued Invoice',\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n\n    const parseDollars = (baseValue) => {\n\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\n            if (invoiceData.selectedCurrencyExchange == 'None' || invoiceData.selectedCurrencyExchange == 'USD' || !invoiceData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(6)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.eurToUsd)).toFixed(6)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.audToUsd)).toFixed(6)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.gbpToUsd)).toFixed(6)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.cadToUsd)).toFixed(6)}`;\n            }\n        } else {\n            if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(6)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.eurToUsd)).toFixed(6)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.audToUsd)).toFixed(6)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.gbpToUsd)).toFixed(6)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.cadToUsd)).toFixed(6)}`;\n            }\n        }\n        // Fallback in case no conditions are met\n        return `${Number(baseValue).toFixed(6)}`;\n    };\n\n\n\n    const confirmInvoice = async () => {\n        setIsConfirmLoading(true);\n        const year = currentDate.split('-')[0]; // Split the date and get the year\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\n\n        try {\n            // Retrieve all documents for the current yearF\n            const querySnapshot = await getDocs(collectionRef);\n            let maxNumber = 0;\n\n            querySnapshot.forEach((doc) => {\n                const docName = doc.id;\n                if (docName.startsWith(yearSuffix)) {\n                    const number = parseInt(docName.substring(2), 10);\n                    if (number > maxNumber) {\n                        maxNumber = number;\n                    }\n                }\n            });\n\n            const nextNumber = maxNumber + 1;\n            const docName = `${yearSuffix}${nextNumber}`;\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\n\n            const hashedData = createHmacSha256Hash(docName, secretKey);\n\n            // Create a new document with the globalInvoiceVariable object\n            if (selectedChatData.invoiceNumber) {\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\n\n                await setDoc(updateDocRef, {\n                    ...globalInvoiceVariable,\n                    paymentDetails: {\n                        ...globalInvoiceVariable.paymentDetails,\n                        fobPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.fobPrice)),\n                        freightPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.freightPrice)),\n                        inspectionPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.inspectionPrice)),\n                        insurancePrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.insurancePrice)),\n                        totalAmount: (parseDollars(Number(globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, '')))).toLocaleString('en-US', { useGrouping: true }),\n                    },\n                    fullyPaid: false,\n                    isCancelled: false,\n                    customerEmail: selectedCustomerData.textEmail,\n                    chatId: selectedChatData.id,\n                    carData: selectedChatData.carData,\n                    currency: selectedChatData.currency,\n                    selectedCurrencyExchange: selectedChatData.selectedCurrencyExchange,\n                }, { merge: true });\n\n                if (selectedChatData.stepIndicator.value == 1) {\n                    await updateDoc(docRefChatId, {\n                        'stepIndicator.status': 'Issue Proforma Invoice',\n                        'stepIndicator.value': 2,\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\n                    });\n                }\n\n                invoiceMessage();\n                setIsConfirmLoading(false);\n                dispatch(setTransactionModalVisible(false));\n            }\n\n            else {\n\n                await setDoc(docRef, {\n                    ...globalInvoiceVariable,\n                    paymentDetails: {\n                        ...globalInvoiceVariable.paymentDetails,\n                        fobPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.fobPrice)),\n                        freightPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.freightPrice)),\n                        inspectionPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.inspectionPrice)),\n                        insurancePrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.insurancePrice)),\n                        totalAmount: (parseDollars(Number(globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, '')))).toLocaleString('en-US', { useGrouping: true }),\n                    },\n                    fullyPaid: false,\n                    isCancelled: false,\n                    customerEmail: selectedCustomerData.textEmail,\n                    chatId: selectedChatData.id,\n                    cryptoNumber: hashedData,\n                    carData: selectedChatData.carData,\n                    currency: selectedChatData.currency,\n                    selectedCurrencyExchange: selectedChatData.selectedCurrencyExchange,\n\n                });\n\n                await updateDoc(docRefChatId, {\n                    keywords: arrayUnion(docName),\n                    invoiceNumber: docName,\n                    'stepIndicator.status': 'Issue Proforma Invoice',\n                    'stepIndicator.value': 2,\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\n                });\n\n                invoiceMessage();\n                setIsConfirmLoading(false);\n                dispatch(setTransactionModalVisible(false));\n\n\n            }\n\n\n        } catch (error) {\n            console.error(\"Error creating document: \", error);\n        }\n    };\n\n    // useEffect(() => {\n    //     calculateTotalAmount();\n    // }, [additionalPriceArray]);\n\n\n    useEffect(() => {\n\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\n\n    }, []);\n\n\n    return (\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\n\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>CFS:</Text>\n                <TextInput\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\n            </View>\n\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Place of Delivery:</Text>\n                <TextInput\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\n            </View>\n\n            <View style={{ margin: 5, }}>\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\n                <SelectPortOfDeparture />\n            </View>\n\n            <View style={{ margin: 5, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\n                <SelectSalesPerson />\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\n\n            <View style={{ margin: 2, }}>\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\n                {/*Select Discharge*/}\n                <SelectPortOfDischarge />\n            </View>\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\n\n            <ConsigneeInput />\n\n            <PaymentDetails />\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginTop: 4, }} />\n\n            <BankInformation />\n\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, marginTop: 4, }} />{/* Horizontal Line */}\n\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\n                <View\n\n                    // onTouchEnd={() => confirmInvoice()}\n                    style={{\n                        flex: 1,\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\n                        borderRadius: 5,\n                        padding: 5,\n                    }}\n\n                // onMouseEnter={() => setIsConfirmHovered(true)}\n                // onMouseLeave={() => setIsConfirmHovered(false)}\n                >\n                    {!isConfirmLoading ? (\n                        <Pressable onPress={() => confirmInvoice()}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\n                                Confirm\n                            </Text>\n                        </Pressable>\n\n                    ) : (\n                        <Spinner size={'sm'} color={'white'} />)}\n\n                </View>\n            </View>\n        </ScrollView>\n    );\n}\n\n\nconst ProfitCalculator = () => {\n\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n\n    const inputPriceRef = useRef(null);\n\n\n    const [portsData, setPortsData] = useState({});\n    const [origFreight, setOrigFreight] = useState(0);\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\n\n\n    const parseDollars = (baseValue) => {\n\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\n            if (invoiceData.selectedCurrencyExchange == 'None' || invoiceData.selectedCurrencyExchange == 'USD' || !invoiceData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.eurToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.audToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.gbpToUsd)).toFixed(2)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(invoiceData.currency.cadToUsd)).toFixed(2)}`;\n            }\n        } else {\n            if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n                return `${Number(baseValue).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.eurToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.audToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.gbpToUsd)).toFixed(2)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n                return `${(Number(baseValue) * Number(selectedChatData.currency.cadToUsd)).toFixed(2)}`;\n            }\n        }\n        // Fallback in case no conditions are met\n        return `${Number(baseValue).toFixed(2)}`;\n    };\n\n\n    const convertedCurrency = (baseValue) => {\n\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\n            if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n                return `${Number(baseValue)}`\n            }\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\n                return `${(euroValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\n                return `${(audValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\n                return `${(gbpValue)}`;\n            }\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\n                return `${(cadValue)}`;\n            }\n        }\n\n        else {\n            if (selectedChatData.selectedCurrencyExchange == 'None' || !selectedChatData.selectedCurrencyExchange || selectedChatData.selectedCurrencyExchange == 'USD') {\n                return `${Number(baseValue)}`\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\n                return `${(euroValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\n                return `${(audValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\n                return `${(gbpValue)}`;\n            }\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\n                return `${(cadValue)}`;\n            }\n        }\n\n    }\n\n    // Function to fetch ports data from Firestore\n    const fetchPortsData = async () => {\n        const currentPort = invoiceData.discharge.port;\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\n\n        // Fetch data if the current port is different from the last fetched port\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\n\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n            try {\n                const docSnap = await getDoc(docRef);\n\n                if (docSnap.exists()) {\n                    const data = docSnap.data();\n                    if (data[currentPort]?.kobePrice !== undefined) {\n\n                        if (invoiceData.departurePort == \"Nagoya\") {\n\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\n                            });\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\n\n                        }\n                        else if (invoiceData.departurePort == \"Yokohama\") {\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\n                            });\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\n\n                        }\n                        else if (invoiceData.departurePort == \"Kyushu\") {\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                                freightOrigPrice: data[currentPort].kyushuPrice,\n                            });\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\n\n                        }\n                        else if (invoiceData.departurePort == \"Kobe\") {\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                                freightOrigPrice: data[currentPort].kobePrice,\n                            });\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\n\n                        }\n\n                        setLastFetchedPort(currentPort); // Update last fetched port\n                    } else {\n                        console.log('Port data not found for the given port');\n                    }\n                } else {\n                    console.log('No such document!');\n                }\n            } catch (error) {\n                console.error('Error fetching document:', error);\n            }\n        } else {\n            console.log('No need to fetch new data');\n        }\n    };\n\n\n    // useEffect for fetching ports data\n    // useEffect(() => {\n    //     // Fetch ports data\n    //     const fetchPortsData = async () => {\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n    //         try {\n    //             const docSnap = await getDoc(docRef);\n\n    //             if (docSnap.exists()) {\n    //                 const data = docSnap.data();\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\n    //             } else {\n    //                 console.log('No such document!');\n    //             }\n    //         } catch (error) {\n    //             console.error('Error fetching document:', error);\n    //         }\n    //     };\n\n    //     fetchPortsData();\n\n    // }, [invoiceData]);\n\n\n    const handleModalOpen = () => {\n        setModalVisible(true);\n        inputPriceRef.current.value = defaultInputPrice;\n        calculateTotalAmount();\n\n    };\n\n    const handleModalClose = () => {\n        setModalVisible(false);\n\n    };\n\n\n    const fee = {\n        auction: 10000,\n        transport: 10000,\n        shippingAgent: 15000,\n    };\n\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const auctionFee = Number(fee.auction);\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const transportFee = Number(fee.transport);\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const shippingAgentFee = Number(fee.shippingAgent);\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\n        Number(selectedChatData.freightPrice));\n\n\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n            selectedChatData.carData.fobPrice : 0) *\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\n\n    const defaultInputPrice = Math.round(convertedCurrency(\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\n            : totalPriceCalculation\n    ));\n\n\n\n\n    const safelyParseNumber = (value) => {\n        const number = Number(value.replace(/,/g, ''));\n        return isNaN(number) ? 0 : number;\n    };\n\n    const calculateTotalAmount = () => {\n\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\n\n        const totalAmountDollars = Math.round(parseDollars(inputPrice) - realTotalPriceDollars);\n        setTotalProfitAmountDollars(totalAmountDollars);\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\n        // setTotalAmountCalculated(total);\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\n    };\n\n    const handleInputPriceChangeText = (text) => {\n        const filteredText = text.replace(/[^0-9]/g, '');\n        inputPriceRef.current.value = filteredText;\n\n        calculateTotalAmount();\n    };\n\n    useEffect(() => {\n\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\n\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\n                const expenseName = Object.keys(item)[0];\n                const expenseData = item[expenseName];\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\n            });\n\n            // Use reduce to add up all the amounts\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\n\n            setTotalSCCAmount(totalAmount);\n            setFormattedTotalSCCAmount(formattedTotalAmount);\n\n\n            // console.log(defaultInputPrice);\n            // console.log(realTotalPriceDollars);\n            // console.log(formattedRealTotalPriceDollars);\n            // console.log(realTotalPriceYen);\n\n        }\n\n\n\n\n    }, []);\n\n    useEffect(() => {\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\n\n        if (modalVisible && !freightOrigPrice) {\n            fetchPortsData();\n        }\n\n\n    }, [modalVisible]);\n\n    useEffect(() => {\n\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\n            setTotalProfitAmountDollars(totalAmountDollars);\n        }\n\n\n    }, [totalSCCAmount]);\n\n\n    const CurrencySymbol = () => {\n        switch (selectedChatData.selectedCurrencyExchange) {\n            case 'USD':\n                return '$';\n            case 'EURO':\n                return '€';\n            case 'AUD':\n                return 'A$';\n            case 'GBP':\n                return '£';\n            case 'CAD':\n                return 'C$';\n            default:\n                return '$';\n        }\n    }\n\n    const CurrencyName = () => {\n        switch (selectedChatData.selectedCurrencyExchange) {\n            case 'USD':\n                return '$ USD';\n            case 'EURO':\n                return '€ EUR';\n            case 'AUD':\n                return 'A$ AUD';\n            case 'GBP':\n                return '£ GBP';\n            case 'CAD':\n                return 'C$ CAD';\n            default:\n                return '$';\n        }\n    }\n\n    return (\n\n        <>\n            <Pressable\n                onPress={handleModalOpen}\n                focusable={false}\n                variant='ghost'\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\n                }}>\n                <Ionicons size={15} color={'white'} name='calculator' />\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\n            </Pressable>\n\n            <Modal\n                isOpen={modalVisible}\n                onClose={() => {\n                    handleModalClose()\n                }}\n                initialFocusRef={inputPriceRef}\n                size={'lg'}\n            >\n                <Modal.Content>\n                    <Modal.CloseButton />\n                    <Modal.Header>Profit Calculator</Modal.Header>\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\n\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', maxHeight: 500, }}>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Yen):</Text>\n                                <Text selectable style={{\n                                    fontWeight: '700', fontSize: 18,\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\n                                }}>\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (US Dollars):</Text>\n                                <Text selectable style={{\n                                    fontWeight: '700', fontSize: 18,\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\n                                }}>\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\n                                </Text>\n                            </View>\n\n\n                            {selectedChatData.selectedCurrencyExchange !== 'USD' && <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit ({CurrencyName()}):</Text>\n                                <Text selectable style={{\n                                    fontWeight: '700', fontSize: 18,\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#0772AD',\n                                }}>\n                                    {`${CurrencySymbol()}${Math.round(convertedCurrency(Number(totalProfitAmountDollars))).toLocaleString('en-US',)}`}\n                                </Text>\n                            </View>}\n\n\n\n\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Percentage):</Text>\n                                <Text selectable style={{\n                                    fontWeight: '700', fontSize: 18,\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\n                                }}>\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\n                                </Text>\n                            </View>\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83' }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, color: 'white' }}>\n                                    Price to calculate:\n                                </Text>\n                                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\n                                    <Text style={{\n                                        fontWeight: 'bold',\n                                        marginRight: 5, // provides spacing between the Text and TextInput\n                                        fontSize: 20,\n                                        color: 'white',\n                                    }}>\n                                        {CurrencySymbol()}\n                                    </Text>\n                                    <TextInput\n                                        onChangeText={handleInputPriceChangeText}\n                                        defaultValue={defaultInputPrice}\n                                        ref={inputPriceRef}\n                                        placeholder=\"Input Price\"\n                                        placeholderTextColor=\"#9B9E9F\"\n                                        style={{\n                                            backgroundColor: 'white',\n                                            height: 40,\n                                            flex: 1, // uses flex grow and flex shrink\n                                            flexShrink: 1, // allows the text input to shrink if needed\n                                            width: 100,\n                                            paddingHorizontal: 10,\n                                            borderRadius: 4,\n                                            borderWidth: 1,\n                                            borderColor: 'white',\n                                            fontSize: 18,\n                                            fontWeight: '700',\n                                        }}\n                                    />\n                                </View>\n                            </View>\n\n\n\n                        </View>\n\n\n                        <View style={{ flex: 1, marginLeft: 3 }}>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Purchased Price:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedPurchasedPrice}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Auction Fee:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedAuctionFee}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Transport Fee:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedTransportFee}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Shipping Agent Fee:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedShippingAgentFee}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Supply Chains Costs:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedTotalSCCAmount}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cubic Meter:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${cubicMeter}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cost per Cubic Meter:</Text>\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\n                                </Text>\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#16A34A', }}>\n                                    {`${formattedTotalCubicMeterCostDollars}`}\n                                </Text>\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#8D7777', }}>\n                                    {`${formattedTotalCubicMeterCostYen}`}\n                                </Text>\n                            </View>\n\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Total:</Text>\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\n                                    {`${formattedRealTotalPriceYen}`}\n                                </Text>\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\n                                    {`${formattedRealTotalPriceDollars}`}\n                                </Text>\n                            </View>\n\n                        </View>\n\n\n\n                    </Modal.Body>\n                </Modal.Content>\n            </Modal>\n        </>\n\n    );\n}\n\n\n\nconst GenerateCustomInvoice = () => {\n\n    let invoiceNameExtension = '';\n    let divideInvoice = 1;\n    let additionalPriceLocal;\n    let additionalNameLocal;\n    // npm install html2canvas jspdf\n    // import jsPDF from 'jspdf';\n    // import html2canvas from 'html2canvas';\n    const dispatch = useDispatch();\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const customInvoiceVisible = useSelector((state) => state.customInvoiceVisible);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\n    const screenWidth = Dimensions.get('window').width;\n    const invoiceRef = useRef(null);\n    const qrCodeRef = useRef(null);\n    const [capturedImageUri, setCapturedImageUri] = useState('');\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : false);\n\n    const [invoiceNumber, setInvoiceNumber] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.id : '');\n    const [invoiceViewKey, setInvoiceViewKey] = useState(0);\n\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState('');\n\n    const issuingDateRef = useRef(null);\n    const [issuingDate, setIssuingDate] = useState('');\n\n    const dueDateRef = useRef(null);\n    const [dueDate, setDueDate] = useState('');\n\n\n    const shippedFromRef = useRef(null);\n    const [shippedFrom, setShippedFrom] = useState('');\n\n    const shippedToRef = useRef(null);\n    const [shippedTo, setShippedTo] = useState('');\n\n    const placeOfDeliveryRef = useRef(null);\n    const [placeOfDelivery, setPlaceOfDelivery] = useState('');\n\n    const cfsRef = useRef(null);\n    const [cfs, setCfs] = useState('');\n\n    const consigneeNameRef = useRef(null);\n    const [consigneeName, setConsigneeName] = useState('');\n\n    const consigneeAddressRef = useRef(null);\n    const [consigneeAddress, setConsigneeAddress] = useState('');\n\n    const consigneeEmailRef = useRef(null);\n    const [consigneeEmail, setConsigneeEmail] = useState('');\n\n    const consigneeContactRef = useRef(null);\n    const [consigneeContact, setConsigneeContact] = useState('');\n\n    const consigneeFaxRef = useRef(null);\n    const [consigneeFax, setConsigneeFax] = useState('');\n\n    const notifyPartyNameRef = useRef(null);\n    const [notifyPartyName, setNotifyPartyName] = useState('');\n\n    const notifyPartyAddressRef = useRef(null);\n    const [notifyPartyAddress, setNotifyPartyAddress] = useState('');\n\n    const notifyPartyEmailRef = useRef(null);\n    const [notifyPartyEmail, setNotifyPartyEmail] = useState('');\n\n    const notifyPartyContactRef = useRef(null);\n    const [notifyPartyContact, setNotifyPartyContact] = useState('');\n\n    const notifyPartyFaxRef = useRef(null);\n    const [notifyPartyFax, setNotifyPartyFax] = useState('');\n\n    const carNameRef = useRef(null);\n    const [carName, setCarName] = useState('');\n\n    const specificationsRef = useRef(null);\n    const [specifications, setSpecifications] = useState('');\n\n    const itemNoteRef = useRef(null);\n    const [itemNote, setItemNote] = useState('');\n\n    const fobTextRef = useRef(null);\n    const [fobText, setFobText] = useState('');\n\n    const fobPriceRef = useRef(null);\n    const [fobPrice, setFobPrice] = useState('');\n\n    const freightTextRef = useRef(null);\n    const [freightText, setFreightText] = useState('');\n\n    const freightPriceRef = useRef(null);\n    const [freightPrice, setFreightPrice] = useState('');\n\n    const inspectionTextRef = useRef(null);\n    const [inspectionText, setInspectionText] = useState('');\n\n    const inspectionPriceRef = useRef(null);\n    const [inspectionPrice, setInspectionPrice] = useState('');\n\n    const insuranceTextRef = useRef(null);\n    const [insuranceText, setInsuranceText] = useState('');\n\n    const insurancePriceRef = useRef(null);\n    const [insurancePrice, setInsurancePrice] = useState('');\n\n    const totalPriceRef = useRef(null);\n    const [totalPrice, setTotalPrice] = useState('');\n\n\n    const additionalNameRef = useRef(null);\n    const [additionalName, setAdditionalName] = useState([]);\n\n    const additionalPriceRef = useRef(null);\n    const [additionalPrice, setAdditionalPrice] = useState([]);\n\n    const dividedByRef = useRef(null);\n    const [dividedBy, setDividedBy] = useState('');\n\n\n    // const convertedCurrencyCustomInvoice = (baseValue) => {\n    //     if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n    //         return `${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\n    //     }\n    //     if (invoiceData.selectedCurrencyExchange == 'EURO') {\n    //         const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\n    //         return `${(euroValue * Number(selectedChatData.currency.jpyToEur)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (invoiceData.selectedCurrencyExchange == 'AUD') {\n    //         const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\n    //         return `${(audValue * Number(selectedChatData.currency.jpyToAud)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (invoiceData.selectedCurrencyExchange == 'GBP') {\n    //         const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\n    //         return `${(gbpValue * Number(selectedChatData.currency.jpyToGbp)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (invoiceData.selectedCurrencyExchange == 'CAD') {\n    //         const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\n    //         return `${(cadValue * Number(selectedChatData.currency.cadToJpy)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    // }\n    const convertedCurrencyCustomInvoice = (baseValue) => {\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\n        }\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\n            return `${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\n            return `${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\n            return `${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\n            return `${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n    const handleModalClose = () => {\n        dispatch(setCustomInvoiceVisible(false))\n        dispatch(setPreviewInvoiceVisible(true))\n        setSelectedCurrencyExchange(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD')\n        setCapturedImageUri('');\n    }\n\n    function countTrueValuesInCarData(invoiceData) {\n        let count = 0;\n\n        // Check if carData exists in invoiceData\n        if (invoiceData.carData) {\n            // List of fields to check within carData\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\n\n            fields.forEach(field => {\n                if (invoiceData.carData[field]) {\n                    // Count true values in each field of carData\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\n                }\n            });\n        }\n\n        return count;\n    }\n\n\n    // useEffect(() => {\n    //     let generatedImageUri = '';\n    //     const captureImageAsync = async () => {\n    //         try {\n    //             if (invoiceRef.current && modalVisible == true) {\n    //                 // Adjust the scale to control the captured image resolution\n    //                 const scale = 0.85; // Experiment with different scale values\n    //                 const width = 2480 * scale;\n    //                 const height = 3508 * scale;\n\n    //                 const imageUri = await captureRef(invoiceRef, {\n    //                     format: 'jpg',\n    //                     quality: 1, // Adjust quality if needed\n    //                     result: 'base64',\n    //                     width: width,\n    //                     height: height,\n    //                 });\n\n    //                 generatedImageUri = `data:image/jpeg;base64,${imageUri}`\n    //                 setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\n\n    //                 // console.log(`data:image/jpeg;base64,${imageUri}`);\n    //             }\n    //         } catch (error) {\n    //             console.error(\"Error capturing view:\", error);\n    //         }\n    //     };\n\n    //     captureImageAsync();\n\n    // }, [invoiceRef.current, invoiceData, modalVisible]);\n\n    useEffect(() => {\n        setCapturedImageUri(capturedImageUri);\n        setSelectedCurrencyExchange(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD')\n    }, [capturedImageUri])\n\n\n\n\n\n\n    const captureImage = async () => {\n\n\n\n\n        try {\n            // Adjust the scale to control the captured image resolution\n            const scale = 0.9; // Experiment with different scale values\n            const width = 2480 * scale;\n            const height = 3508 * scale;\n\n            const imageUri = await captureRef(invoiceRef, {\n                format: 'jpg',\n                quality: 1, // Adjust quality if needed\n                result: 'base64',\n                width: width,\n                height: height,\n            });\n\n            // generatedImageUri = `data:image/jpeg;base64,${imageUri}`\n            setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\n            await createPDF(`data:image/jpeg;base64,${imageUri}`);\n            return `data:image/jpeg;base64,${imageUri}`;\n        } catch (error) {\n            console.error(\"Error capturing view:\", error);\n        }\n    };\n\n    const createPDF = async () => {\n\n\n\n        const element = invoiceRef.current;\n        if (element) {\n            // Reduce the scale slightly for smaller file size\n            const scale = 1; // Fine-tune this value for balance\n\n            const canvas = await html2canvas(element, {\n                scale: scale,\n            });\n\n            // Experiment with JPEG quality for a balance between quality and file size\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\n\n            // A4 size dimensions in mm\n            const pdfWidth = 210;\n            const pdfHeight = 297;\n\n            const pdf = new jsPDF({\n                orientation: 'portrait',\n                unit: 'mm',\n                format: 'a4'\n            });\n\n            // Adjust PDF compression settings\n            const options = {\n                imageCompression: 'JPEG',\n                imageQuality: 1, // Fine-tune this value as well\n            };\n\n            const imgProps = pdf.getImageProperties(imageData);\n            const pdfWidthFit = pdfWidth;\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\n\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\n\n            // Filename logic\n            selectedChatData.stepIndicator.value < 3 ?\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\n                pdf.save(`Invoice No. ${invoiceData.id}${invoiceNameExtension} (A4 Paper Size).pdf`);\n        } else {\n            console.error(\"No element to capture\");\n        }\n    };\n\n    const handleCaptureAndCreatePDF = async () => {\n\n        handleAdditionalNameTextChange(additionalNameRef.current.value)\n        handleAdditionalPriceTextChange(additionalPriceRef.current.value)\n\n        setIssuingDate(issuingDateRef.current.value);\n        setDueDate(dueDateRef.current.value);\n        setShippedFrom(shippedFromRef.current.value);\n        setShippedTo(shippedToRef.current.value);\n        setPlaceOfDelivery(placeOfDeliveryRef.current.value);\n        setCfs(cfsRef.current.value);\n        setConsigneeName(consigneeNameRef.current.value);\n        setConsigneeAddress(consigneeAddressRef.current.value);\n        setConsigneeEmail(consigneeEmailRef.current.value);\n        setConsigneeContact(consigneeContactRef.current.value);\n        setConsigneeFax(consigneeFaxRef.current.value);\n        setNotifyPartyName(notifyPartyNameRef.current.value);\n        setNotifyPartyAddress(notifyPartyAddressRef.current.value);\n        setNotifyPartyEmail(notifyPartyEmailRef.current.value);\n        setNotifyPartyContact(notifyPartyContactRef.current.value);\n        setNotifyPartyFax(notifyPartyFaxRef.current.value);\n        setCarName(carNameRef.current.value);\n        setSpecifications(specificationsRef.current.value);\n        setItemNote(itemNoteRef.current.value);\n        setFobText(fobTextRef.current.value);\n        setFobPrice(fobPriceRef.current.value);\n        setFreightText(freightTextRef.current.value);\n        setFreightPrice(freightPriceRef.current.value);\n        setInspectionText(inspectionTextRef.current.value);\n        setInspectionPrice(inspectionPriceRef.current.value);\n        setInsuranceText(insuranceTextRef.current.value);\n        setInsurancePrice(insurancePriceRef.current.value);\n        setTotalPrice(totalPriceRef.current.value);\n        setAdditionalName(additionalNameLocal);\n        setAdditionalPrice(additionalPriceLocal);\n        setDividedBy(dividedByRef.current.value);\n\n\n        if (Number(divideInvoice) > 1) {\n            for (let i = 0; i < Number(divideInvoice); i++) {\n                // Update the invoice number for each iteration based on 'i'\n                setInvoiceNumber(`${invoiceData.id}-${i + 1}`);\n                invoiceNameExtension = `-${i + 1}`;\n                // Await the capturing of the image\n                await captureImage();  // Assuming this is defined elsewhere and works asynchronously\n            }\n        } else if (Number(divideInvoice) === 1) {\n            // If dividedBy is exactly 1, you've already set the invoice number above\n            setInvoiceNumber(`${invoiceData.id}`);\n            invoiceNameExtension = '';\n            await captureImage();  // Just capture the image once\n        }\n\n        // if (capturedImageUri) {\n        // await createPDF(capturedImageUri);\n        // }\n\n    };\n\n\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\n        const dueDateString = invoiceData.bankInformations.dueDate;\n        const issuingDateObject = new Date(issuingDateString);\n        const dueDateObject = new Date(dueDateString);\n\n\n        const options = {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        };\n\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\n\n    }\n\n    const originalWidth = 794;\n    const originalHeight = 1123;\n\n\n    const originalSmallWidth = 794;\n    const originalSmallHeight = 1123;\n\n    const newWidth = 2480;\n    const newHeight = 3508;\n\n    const smallWidth = 377;\n    const smallHeight = 541;\n\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\n\n    const widthScaleFactor = newWidth / originalWidth;\n    const heightScaleFactor = newHeight / originalHeight;\n\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\n        const dueDateString = invoiceData.bankInformations.dueDate;\n        const issuingDateObject = new Date(issuingDateString);\n        const dueDateObject = new Date(dueDateString);\n\n\n        const options = {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        };\n\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\n\n    }\n\n    // additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\n    // additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\n\n    const handleAdditionalPriceTextChange = (text) => {\n        // Process and filter each line\n        const filteredLines = text.split('\\n').map(line => {\n            let filteredLine = line.replace(/[^0-9.]/g, '');\n            const parts = filteredLine.split('.');\n            if (parts.length > 2) {\n                filteredLine = parts[0] + '.' + parts[1];\n            }\n            return filteredLine;\n        });\n\n        // Update the ref and the state\n        additionalPriceRef.current.value = filteredLines.join('\\n');\n        // setAdditionalPriceArray(filteredLines);\n        // globalAdditionalPriceArray = filteredLines;\n        additionalPriceLocal = filteredLines;\n\n    };\n\n    const handleAdditionalNameTextChange = (text) => {\n        // Update the ref\n        additionalNameRef.current.value = text;\n\n        // Split the text into lines and update the state\n        const lines = text.split('\\n');\n        // setAdditionalNameArray(lines);\n        additionalNameLocal = lines;\n    };\n\n    const handleFreightTextChange = (value) => {\n        // Remove any non-numeric characters and leading zeros\n        const numericValue = value.replace(/[^0-9]/g, '');\n        // Update your variable only if the result is not an empty string and not 0\n        freightPriceRef.current.value = numericValue;\n\n    }\n\n    const handleInspectionTextChange = (value) => {\n        // Remove any non-numeric characters and leading zeros\n        const numericValue = value.replace(/[^0-9]/g, '');\n        // Update your variable only if the result is not an empty string and not 0\n        inspectionPriceRef.current.value = numericValue;\n\n    }\n\n    const handleInsuranceTextChange = (value) => {\n        // Remove any non-numeric characters and leading zeros\n        const numericValue = value.replace(/[^0-9]/g, '');\n        // Update your variable only if the result is not an empty string and not 0\n        insurancePriceRef.current.value = numericValue;\n\n    }\n\n\n    const handleFobTextChange = (value) => {\n        // Remove any non-numeric characters and leading zeros\n        const numericValue = value.replace(/[^0-9]/g, '');\n        // Update your variable only if the result is not an empty string and not 0\n        fobPriceRef.current.value = numericValue;\n\n    }\n\n    const handleDividedByTextChange = (value) => {\n        // Remove any non-numeric characters and leading zeros\n        const numericValue = value.replace(/[^0-9]/g, '').replace(/^0+/g, '');\n        // Update your variable only if the result is not an empty string and not 0\n        dividedByRef.current.value = numericValue;\n        divideInvoice = numericValue;\n\n    }\n\n    const CurrencySymbol = (value) => {\n        switch (value) {\n            case 'USD':\n                return '$ USD';\n\n            case 'EURO':\n                return '€ EURO';\n\n            case 'AUD':\n                return 'A$ AUD';\n\n            case 'GBP':\n                return '£ GBP';\n\n            case 'CAD':\n                return 'C$ CAD';\n        }\n    }\n\n    const CurrencySign = (value) => {\n        switch (value) {\n            case 'USD':\n                return '$';\n\n            case 'EURO':\n                return '€';\n\n            case 'AUD':\n                return 'A$';\n\n            case 'GBP':\n                return '£';\n\n            case 'CAD':\n                return 'C$';\n        }\n    }\n\n    const CurrencyPopover = () => {\n\n\n        const currencies = [\n            { label: '$ USD', value: 'USD' },\n            { label: '€ EURO', value: 'EURO' },\n            { label: 'A$ AUD', value: 'AUD' },\n            { label: '£ GBP', value: 'GBP' },\n            { label: 'C$ CAD', value: 'CAD' },\n        ];\n\n\n\n\n\n        return (\n            <Box>\n                <Popover\n                    trigger={(triggerProps) => {\n                        return (\n                            <NativePressable {...triggerProps}\n                                marginLeft={'5px'}\n                                width=\"100px\"\n                                bg=\"white\"\n                                _hover={{\n                                    bg: '#f3f3f3',\n                                }}\n                                borderColor={'#D9D9D9'}\n                                borderWidth={1}\n                                borderRadius={'5px'}\n                                flexDirection={'row'}\n                            >\n                                <Text style={{ marginLeft: 1, textAlign: 'center ', color: 'black', fontWeight: 'bold', }}>{CurrencySymbol(selectedCurrencyExchange)}</Text>\n\n                                <View\n                                    style={{\n                                        alignSelf: 'center',\n                                        marginLeft: 24,\n                                        marginRight: 2,\n                                    }}>\n                                    <FontAwesome name='caret-down' size='12' color='black' />\n                                </View>\n                            </NativePressable>\n                        );\n                    }}\n                >\n                    <Popover.Content width=\"100px\">\n                        <Box backgroundColor={'white'}>\n                            <VStack space={1}>\n                                {currencies.map((currency) => (\n                                    <NativePressable\n                                        key={currency.value}\n                                        onPress={() => {\n                                            setSelectedCurrencyExchange(currency.value);\n                                            // UpdateCurrency(currency.value)\n                                            // Perform additional logic if necessary, e.g., updating global state\n                                        }}\n                                        _hover={{\n                                            bg: '#f3f3f3',\n                                        }}\n                                    >\n                                        <Text fontSize=\"sm\" textAlign={'center'} color='black' fontWeight={'bold'}>\n                                            {currency.label}\n                                        </Text>\n                                    </NativePressable>\n                                ))}\n                            </VStack>\n                        </Box>\n                    </Popover.Content>\n                </Popover>\n            </Box>\n        );\n    }\n\n    const totalPriceCalculated = () => {\n\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\n            const converted = Number(price); // Convert each price using your currency conversion function\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\n            return total + parseFloat(numericPart); // Add the numeric value to the total\n        }, 0);\n\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice))\n            // * Number(invoiceData.currency.jpyToEur)\n            ;\n\n\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToEur)\n        );\n\n\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\n        //         : 0)\n        //     + totalAdditionalPrice;\n\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToAud))\n\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToGbp))\n\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToCad))\n\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            return `${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            return `${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            return `${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            return `${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n    const FormContent = () => {\n\n\n        return (\n\n            <View\n                style={{\n                    width: screenWidth < mobileViewBreakpoint ? '98%' : 500\n                }}\n            >\n                <View\n                    style={{\n                        flex: 1\n                    }}\n                >\n\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', padding: 10, alignSelf: 'center', }}>Generate Custom Invoice</Text>\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text key={invoiceViewKey} style={{ margin: 2, fontWeight: 'bold', }}>Issuing Date:</Text>\n\n                    <TextInput\n                        ref={issuingDateRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedIssuingDate : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Issuing Date'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, fontWeight: 'bold', }}>Due Date:</Text>\n\n                    <TextInput\n                        ref={dueDateRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedDueDate : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Due Date'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped from:</Text>\n\n                    <TextInput\n                        ref={shippedFromRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.departurePort}, ${invoiceData.departureCountry}` : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Shipped from'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped to:</Text>\n\n                    <TextInput\n                        ref={shippedToRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.discharge.port}, ${invoiceData.discharge.country}` : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Shipped to'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Place of Delivery:</Text>\n\n                    <TextInput\n                        ref={placeOfDeliveryRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.placeOfDelivery > 0 ? invoiceData.placeOfDelivery : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Place of Delivery'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>CFS:</Text>\n\n                    <TextInput\n                        ref={cfsRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.cfs > 0 ? invoiceData.cfs : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='CFS'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#0A78BE', }}>Consignee</Text>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\n\n                    <TextInput\n                        ref={consigneeNameRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.name : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Name'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\n\n                    <TextInput\n                        ref={consigneeAddressRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.address : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Address'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\n\n                    <TextInput\n                        ref={consigneeEmailRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.email : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Email'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\n\n                    <TextInput\n                        ref={consigneeContactRef}\n                        multiline\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.contactNumber : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Contact Number'\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\n\n                    <TextInput\n                        ref={consigneeFaxRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.fax : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Fax'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#FF0000', }}>Notify Party</Text>\n\n                    <Checkbox\n                        isChecked={isChecked}\n                        onChange={value => {\n                            setIsChecked(value)\n                            globalInvoiceVariable.consignee.sameAsBuyer = value;\n                        }}\n                        style={{ margin: 2, borderColor: '#0A9FDC' }}\n                        size=\"sm\"\n                        _text={{ fontWeight: 700 }}\n                    >\n                        Same as consignee\n                    </Checkbox>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\n\n                    <TextInput\n                        ref={notifyPartyNameRef}\n                        disabled={isChecked}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.name : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Name'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\n\n                    <TextInput\n                        ref={notifyPartyAddressRef}\n                        disabled={isChecked}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.address : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Address'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\n\n                    <TextInput\n                        ref={notifyPartyEmailRef}\n                        disabled={isChecked}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.email : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Email'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\n\n                    <TextInput\n                        ref={notifyPartyContactRef}\n                        disabled={isChecked}\n                        multiline\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.contactNumber : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Contact Number'\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\n\n                    <TextInput\n                        ref={notifyPartyFaxRef}\n                        disabled={isChecked}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.fax : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Fax'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Car name:</Text>\n\n                    <TextInput\n                        ref={carNameRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.carData.carName : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Date'\n                        style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Specifications:</Text>\n\n                    <TextInput\n                        ref={specificationsRef}\n                        multiline\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.carData.chassisNumber}\\n${invoiceData.carData.exteriorColor}\\n${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n${invoiceData.carData.fuel}\\n${invoiceData.carData.transmission}` : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Specifications'\n                        style={{ height: 120, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Item note:</Text>\n\n                    <TextInput\n                        ref={itemNoteRef}\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}` : ''}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Item note'\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    />\n\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Currency:</Text>\n\n                    <CurrencyPopover />\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>FOB:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n\n                        <TextInput\n                            ref={fobTextRef}\n                            defaultValue={'FOB'}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Fob'\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none' }}\n                            onChangeText={(text) => {\n                                const filteredText = text.replace(/[^0-9]/g, ''); // Remove non-numeric characters\n\n                                fobTextRef.current.value = filteredText;\n\n                            }}\n                        />\n\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\n\n                        <TextInput\n                            ref={fobPriceRef}\n                            onChangeText={handleFobTextChange}\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.fobPrice) : 0)}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='FOB Price'\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Freight:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n                        <TextInput\n                            ref={freightTextRef}\n                            defaultValue={'Freight'}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Freight'\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\n\n                        <TextInput\n                            ref={freightPriceRef}\n                            onChangeText={handleFreightTextChange}\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.freightPrice) : 0)}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Freight Price'\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Inspection:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n                        <TextInput\n                            ref={inspectionTextRef}\n                            onChangeText={handleInspectionTextChange}\n                            defaultValue={`Inspection ${invoiceData && Object.keys(invoiceData).length > 0 ? `[${invoiceData.paymentDetails.inspectionName}]` : ''}`}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Inspection'\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\n\n                        <TextInput\n                            ref={inspectionPriceRef}\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.inspectionPrice) : 0)}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Inspection Price'\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Insurance:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n                        <TextInput\n                            ref={insuranceTextRef}\n                            onChangeText={handleInsuranceTextChange}\n                            defaultValue={`Insurance`}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Insurance'\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\n\n                        <TextInput\n                            ref={insurancePriceRef}\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.insurancePrice) : 0)}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Inspection Price'\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Additional:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n                        <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : ''}\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                        <TextInput ref={additionalPriceRef}\n                            onChangeText={handleAdditionalPriceTextChange}\n                            multiline\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Price'\n                            defaultValue={invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\n                                ? invoiceData.paymentDetails.additionalPrice.map(price => {\n                                    const converted = convertedCurrencyCustomInvoice(Number(price));\n                                    return converted;\n                                }).join('\\n')\n                                : ' '}\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Total price:</Text>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                        }}\n                    >\n\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\n\n                        <TextInput\n                            ref={totalPriceRef}\n                            defaultValue={totalPriceCalculated().replace(/,/g, '')}\n                            placeholderTextColor='#9B9E9F'\n                            placeholder='Total price'\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                        />\n                    </View>\n\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Divided by:</Text>\n\n                    <TextInput\n                        ref={dividedByRef}\n                        defaultValue={'1'}\n                        placeholderTextColor='#9B9E9F'\n                        placeholder='Total price'\n                        onChangeText={handleDividedByTextChange}\n                        keyboardType='numeric' // This prop prompts the user with a numeric keypad\n                        style={{\n                            flex: 1,\n                            height: 25,\n                            margin: 2,\n                            padding: 1,\n                            borderRadius: 2,\n                            borderWidth: 1,\n                            borderColor: '#D9D9D9',\n                            outlineStyle: 'none',\n                        }}\n                    />\n\n                </View>\n            </View>\n        )\n    }\n\n    return (\n        <>\n\n\n            <Modal\n                isOpen={customInvoiceVisible}\n                onClose={() => {\n                    handleModalClose();\n                }}\n                size={'lg'}\n            // useRNModal\n            >\n\n                <Modal.Content>\n\n                    {customInvoiceVisible &&\n                        <ScrollView\n                            style={{ maxHeight: 600, maxWidth: screenWidth < mobileViewBreakpoint ? '100%' : 520, }}\n                        >\n                            <View style={{\n                                position: 'absolute',\n                                top: 0,\n                                bottom: 0,\n                                right: 0,\n                                left: 0,\n                                backgroundColor: 'white',\n                                zIndex: 999,\n                                flex: 1,\n                                alignItems: 'center', // Center horizontally\n                            }}>\n                                <FormContent />\n                                <View style={{ flexDirection: 'row', margin: 5, width: '100%', justifyContent: 'center', }}>\n                                    <Pressable\n                                        focusable={false}\n                                        onPress={() => {\n                                            handleCaptureAndCreatePDF()\n                                        }}\n                                        style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginHorizontal: 10, backgroundColor: '#16A34A', width: '100%' }}>\n                                        <MaterialCommunityIcons size={20} name='download' color='white' />\n                                        <Text style={{ color: 'white', }}>Download as PDF</Text>\n                                    </Pressable>\n                                </View>\n                            </View>\n\n                            {/* Main content with invoice details */}\n                            {\n\n                                <View\n                                    ref={invoiceRef}\n                                    key={invoiceViewKey}\n                                    style={{\n                                        width: newWidth,\n                                        height: newHeight,\n                                        backgroundColor: 'white',\n                                        zIndex: 1\n                                    }}>\n\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\n                                        <NativeImage\n                                            source={require('../../assets/RMJ logo for invoice.png')}\n                                            style={{\n                                                width: 95 * widthScaleFactor,\n                                                height: 85 * heightScaleFactor,\n                                                resizeMode: 'stretch',\n                                            }}\n                                        />\n                                    </View>\n\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\n                                        {/* Title */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\n                                        }\n                                    </View>\n\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\n                                        {/* QR CODE */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            null :\n                                            <View\n                                                ref={qrCodeRef}\n                                            >\n                                                <QRCode\n                                                    value={invoiceData.cryptoNumber}\n                                                    size={80 * widthScaleFactor}\n                                                    color=\"black\"\n                                                    backgroundColor=\"white\"\n                                                />\n                                            </View>\n\n                                        }\n                                    </View>\n\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\n                                        {/* Invoice Number */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            null :\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceNumber}`}</Text>\n                                        }\n                                    </View>\n\n                                    {selectedChatData.stepIndicator.value < 3 ?\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\n                                            {/* Issuing Date */}\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\n                                            </View>\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\n                                            </View>\n\n                                        </View>\n                                        :\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\n                                            {/* Issuing Date */}\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\n                                        </View>\n                                    }\n\n                                    <View style={{\n                                        position: 'absolute',\n                                        left: 40 * widthScaleFactor,\n                                        top: 134 * heightScaleFactor,\n                                        width: 280 * widthScaleFactor,\n                                    }}>\n                                        {/* Shipper */}\n                                        <Text style={{\n                                            fontWeight: 750,\n                                            fontSize: 16 * widthScaleFactor,\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\n                                            width: 'fit-content', // Make the underline cover the text width\n                                            marginBottom: 5, // Add some space between text and underline\n                                        }}>\n                                            {`Shipper`}\n                                        </Text>\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\n\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedFrom}</Text>\n\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedTo}</Text>\n                                        {placeOfDelivery !== '' ?\n                                            <>\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{placeOfDelivery}</Text>\n                                            </>\n                                            : null}\n                                        {cfs !== '' ?\n                                            <>\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{cfs}</Text>\n                                            </>\n                                            : null}\n\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\n\n                                            <View style={{\n                                                flex: 1, width: 280 * widthScaleFactor,\n                                            }}>\n                                                {/* Buyer Information */}\n                                                <Text style={{\n                                                    fontWeight: 750,\n                                                    fontSize: 18 * widthScaleFactor,\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                    borderBottomColor: '#0A78BE',\n                                                    width: 'fit-content', // Make the underline cover the text width\n                                                    marginBottom: 5, // Add some space between text and underline\n                                                    color: '#0A78BE',\n                                                    marginTop: 25 * heightScaleFactor,\n\n                                                }}>\n                                                    {`Buyer Information`}\n                                                </Text>\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{consigneeName}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeAddress}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeEmail}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeContact}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${consigneeFax == '' ? 'N/A' : consigneeFax}`}</Text>\n\n                                            </View>\n\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\n                                                {/* Notify Party */}\n                                                <Text style={{\n                                                    fontWeight: 750,\n                                                    fontSize: 18 * widthScaleFactor,\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                    borderBottomColor: '#FF0000',\n                                                    width: 'fit-content', // Make the underline cover the text width\n                                                    marginBottom: 5, // Add some space between text and underline\n                                                    color: '#FF0000',\n                                                    marginTop: 25 * heightScaleFactor,\n                                                }}>\n                                                    {`Notify Party`}\n                                                </Text>\n                                                {isChecked == true ? (\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\n                                                    (<>\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyName}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyAddress}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyEmail}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyContact}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${notifyPartyFax == '' ? 'N/A' : notifyPartyFax}`}</Text>\n                                                    </>)}\n                                            </View>\n\n                                        </View>\n\n\n                                    </View>\n                                    {selectedChatData.stepIndicator.value < 3 ?\n\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\n                                            </View>\n                                        </View>\n                                        :\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\n\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\n                                            </View>\n\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\n\n                                                    <Text style={{\n                                                        fontWeight: 750,\n                                                        fontSize: 14 * widthScaleFactor,\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                        width: 'fit-content', // Make the underline cover the text width\n                                                        marginBottom: 2, // Add some space between text and underline\n                                                    }}>\n                                                        {`Bank Account`}\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\n                                                    </Text>\n                                                </View>\n\n                                                <View style={{ flex: 1 }}>\n\n                                                    <Text style={{\n                                                        fontWeight: 750,\n                                                        fontSize: 14 * widthScaleFactor,\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                        width: 'fit-content', // Make the underline cover the text width\n                                                        marginBottom: 2, // Add some space between text and underline\n                                                    }}>\n                                                        {`Payment Terms`}\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\n                                                    </Text>\n\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\n\n                                                        <Text style={{\n                                                            fontWeight: 750,\n                                                            fontSize: 14 * widthScaleFactor,\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                            width: 'fit-content', // Make the underline cover the text width\n                                                            marginBottom: 2, // Add some space between text and underline\n                                                            color: '#F00A0A',\n                                                            borderBottomColor: '#F00A0A',\n                                                        }}>\n                                                            {`Payment Due`}\n                                                        </Text>\n\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\n                                                        </Text>\n\n                                                    </View>\n\n                                                </View>\n\n                                            </View>\n\n                                        </View>}\n\n\n                                    <View style={{\n                                        position: 'absolute',\n                                        left: 38 * widthScaleFactor,\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\n                                        width: 718 * widthScaleFactor,\n                                        borderWidth: 1 * widthScaleFactor,\n                                        borderColor: '#C2E2F4',\n                                        alignSelf: 'center',\n                                    }}>\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Description`}\n                                                </Text>\n\n                                            </View>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Notes`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Quantity`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Amount`}\n                                                </Text>\n                                            </View>\n\n                                        </View>\n                                        {(fobText !== '' && fobPrice > 0) &&\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 5,\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            marginLeft: 2 * widthScaleFactor,\n                                                        }}>\n                                                        {`${fobText}`}\n                                                    </Text>\n                                                </View>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 2,\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        {fobPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(fobPrice).toFixed(2).toLocaleString('en-US')}` : ''}\n                                                    </Text>\n                                                </View>\n\n                                            </View>\n                                        }\n\n                                        {(freightText !== '' && freightPrice > 0) &&\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 5,\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            marginLeft: 2 * widthScaleFactor,\n                                                        }}>\n                                                        {`${freightText}`}\n                                                    </Text>\n                                                </View>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 2,\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        {freightPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(freightPrice).toFixed(2).toLocaleString('en-US')}` : ''}\n                                                    </Text>\n                                                </View>\n\n                                            </View>\n                                        }\n\n\n                                        {(inspectionText !== '' && inspectionPrice > 0) &&\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 5,\n                                                    flexDirection: 'row',\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            marginLeft: 2 * widthScaleFactor,\n                                                        }}>\n                                                        {`${inspectionText} ${insuranceText !== '' && insurancePrice > 0 ? `+ ${insuranceText}` : ''}`}\n                                                    </Text>\n\n                                                </View>\n\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 2,\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}\n                                                    >\n                                                        {inspectionPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(inspectionPrice).toFixed(2).toLocaleString('en-US', { useGrouping: true })}` : ''}\n                                                        {insuranceText !== '' && insurancePrice > 0 ? ` + ${CurrencySign(selectedCurrencyExchange)}${Number(insurancePrice).toFixed(2).toLocaleString('en-US', { useGrouping: true })}` : ''}\n                                                    </Text>\n\n\n\n                                                </View>\n\n\n                                            </View>\n                                        }\n                                        {(additionalName && additionalName.length > 0) &&\n                                            (additionalPrice && additionalPrice.length > 0) &&\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 5,\n                                                    flexDirection: 'row',\n                                                }}>\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            marginLeft: 2 * widthScaleFactor,\n                                                        }}>\n                                                        {additionalName && additionalName.length > 0 ? `${additionalName.join(' + ')}` : ' '}\n                                                    </Text>\n\n\n                                                </View>\n\n                                                <View style={{\n                                                    borderTopWidth: 1 * widthScaleFactor,\n                                                    borderColor: '#C2E2F4',\n                                                    flex: 2,\n                                                }}>\n\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        {additionalPrice && additionalPrice.length > 0\n                                                            ? additionalPrice.map(price =>\n                                                                !isNaN(parseFloat(price)) ? // Check if the price is a number\n                                                                    `${CurrencySign(selectedCurrencyExchange)}${parseFloat(price).toLocaleString('en-US', {\n                                                                        style: 'currency',\n                                                                        currency: 'USD',\n                                                                        minimumFractionDigits: 2,\n                                                                        maximumFractionDigits: 2\n                                                                    }).slice(1)}` : ''\n                                                            ).join(' + ')\n                                                            : ' '}\n\n\n                                                    </Text>\n                                                </View>\n\n                                            </View>\n                                        }\n\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                flexDirection: 'row',\n                                                paddingVertical: 2 * heightScaleFactor,\n\n                                            }}>\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\n                                                    <Text style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                        {\"Used Vehicle\\n\"}\n                                                        <Text style={{\n                                                            fontWeight: 700,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${carName}\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${specifications}\\n`}\n                                                        </Text>\n                                                    </Text>\n\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n\n\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                flexDirection: 'row',\n                                                justifyContent: 'center',\n                                            }}>\n\n                                                <Text style={{\n                                                    fontWeight: 400,\n                                                    fontSize: 12 * widthScaleFactor,\n                                                    lineHeight: 14 * widthScaleFactor,\n                                                    marginBottom: 3 * heightScaleFactor,\n                                                    alignSelf: 'center',\n                                                }}>\n                                                    {`${itemNote}`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 1,\n                                                flexDirection: 'row',\n                                                justifyContent: 'center',\n                                            }}>\n                                                {carName !== '' ? (\n                                                    <Text style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                        {'1'}\n                                                    </Text>\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n\n\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                justifyContent: 'center',\n                                                flexDirection: 'row',\n                                            }}>\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\n                                                    <>\n                                                        <Text style={{\n                                                            fontWeight: 700,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            color: '#008AC6',\n                                                            marginRight: 10 * widthScaleFactor,\n                                                            top: 51 * heightScaleFactor,\n                                                            left: 50 * widthScaleFactor,\n                                                            position: 'absolute',\n                                                        }}>\n                                                            {\"Total\"}\n                                                            <Text style={{\n                                                                fontWeight: 700,\n                                                                fontSize: 12 * widthScaleFactor,\n                                                                lineHeight: 14 * widthScaleFactor,\n                                                                marginBottom: 3 * heightScaleFactor,\n                                                                alignSelf: 'center',\n                                                                color: '#00720B',\n                                                                marginLeft: 5 * widthScaleFactor,\n                                                            }}>\n                                                                {`${CurrencySign(selectedCurrencyExchange)}${(Number(totalPrice) / Number(dividedBy)).toLocaleString('en-US')}`}\n                                                            </Text>\n                                                        </Text>\n\n                                                    </>\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n                                            </View>\n\n                                        </View>\n\n                                    </View>\n\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Payment Information:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n                                        }}>\n                                            {'No warranty service is provided on used vehicles.'}\n                                        </Text>\n\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Conditions for order cancellation:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n\n                                        }}>\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\n                                        </Text>\n\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Intermediary Banking Information:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'Swift code: SMBCUS33'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Address: 277 Park Avenue'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'City: New York, NY'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'Postal Code: 10172'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n\n                                        }}>\n                                            {'Country: United States'}\n                                        </Text>\n                                    </View>\n\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\n                                            <View style={{\n                                                width: 300 * widthScaleFactor,\n                                                alignItems: 'center',\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\n                                            }}>\n                                                <NativeImage\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\n                                                    style={{\n                                                        width: 276 * widthScaleFactor,\n                                                        height: 81 * heightScaleFactor,\n                                                        resizeMode: 'contain',\n                                                        alignSelf: 'center',\n                                                        marginBottom: 0, // Minimize margin to keep the line close\n                                                    }}\n                                                />\n                                                <View style={{\n                                                    borderBottomWidth: 1 * heightScaleFactor,\n                                                    borderColor: 'black', // Change the color as needed\n                                                    width: '100%', // Line width as per your requirement\n                                                }} />\n                                                <Text italic style={{\n                                                    fontWeight: 700,\n                                                    fontSize: 16 * widthScaleFactor,\n                                                }}>\n                                                    {'Real Motor Japan'}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{\n                                                width: 300 * widthScaleFactor,\n                                                alignItems: 'center',\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\n                                            }}>\n\n                                                <View style={{\n                                                    borderBottomWidth: 1 * heightScaleFactor,\n                                                    borderColor: 'black', // Change the color as needed\n                                                    width: '100%', // Line width as per your requirement\n                                                }} />\n                                                <Text italic style={{\n                                                    fontWeight: 700,\n                                                    fontSize: 16 * widthScaleFactor,\n                                                }}>\n                                                    {'Your Signature'}\n                                                </Text>\n                                            </View>\n                                        </View>}\n\n\n                                </View>\n                            }\n\n\n                        </ScrollView>\n\n                    }\n                </Modal.Content>\n\n\n            </Modal>\n        </>\n    );\n\n}\n\n\nconst PreviewInvoice = () => {\n\n    // npm install html2canvas jspdf\n    // import jsPDF from 'jspdf';\n    // import html2canvas from 'html2canvas';\n    const dispatch = useDispatch();\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\n    const screenWidth = Dimensions.get('window').width;\n    const invoiceRef = useRef(null);\n    const qrCodeRef = useRef(null);\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\n    const [firstCaptureUri, setFirstCaptureUri] = useState('');\n    const [capturedImageUri, setCapturedImageUri] = useState('');\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\n    const [rerenderState, setRerenderState] = useState(0);\n    const [imagePreviewKey, setImagePreviewKey] = useState(0);\n    const handlePreviewInvoiceModalOpen = () => {\n        dispatch(setPreviewInvoiceVisible(true));\n    };\n\n    const handlePreviewInvoiceModalClose = () => {\n        dispatch(setPreviewInvoiceVisible(false));\n        setCapturedImageUri('');\n    }\n\n    function countTrueValuesInCarData(invoiceData) {\n        let count = 0;\n\n        // Check if carData exists in invoiceData\n        if (invoiceData.carData) {\n            // List of fields to check within carData\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\n\n            fields.forEach(field => {\n                if (invoiceData.carData[field]) {\n                    // Count true values in each field of carData\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\n                }\n            });\n        }\n\n        return count;\n    }\n\n    useEffect(() => {\n\n        if (previewInvoiceVisible) {\n            setRerenderState(rerenderState + 1);\n        }\n    }, [previewInvoiceVisible])\n\n\n    useEffect(() => {\n        let generatedImageUri = '';\n        const captureImageAsync = async () => {\n            try {\n                if (invoiceRef.current) {\n                    // Adjust the scale to control the captured image resolution\n                    const scale = 0.85; // Experiment with different scale values\n                    const width = 2480 * scale;\n                    const height = 3508 * scale;\n\n\n                    const imageUri = await captureRef(invoiceRef, {\n                        format: 'jpg',\n                        quality: 1, // Adjust quality if needed\n                        result: 'base64',\n                        width: width,\n                        height: height,\n                    });\n\n                    const trueCount = countTrueValuesInCarData(invoiceData);\n                    setFeaturesTrueCount(trueCount);\n                    generatedImageUri = `data:image/jpeg;base64,${imageUri}`\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\n\n                    // console.log(`data:image/jpeg;base64,${imageUri}`);\n                }\n            } catch (error) {\n                console.error(\"Error capturing view:\", error);\n            }\n        };\n\n\n        captureImageAsync();\n\n\n    }, [invoiceRef.current, invoiceData]);\n\n    useEffect(() => {\n        setCapturedImageUri(capturedImageUri);\n    }, [capturedImageUri])\n\n    const captureImage = async () => {\n        try {\n            // Adjust the scale to control the captured image resolution\n            const scale = 0.9; // Experiment with different scale values\n            const width = 2480 * scale;\n            const height = 3508 * scale;\n\n            const imageUri = await captureRef(invoiceRef, {\n                format: 'jpg',\n                quality: 1, // Adjust quality if needed\n                result: 'base64',\n                width: width,\n                height: height,\n            });\n            return `data:image/jpeg;base64,${imageUri}`;\n        } catch (error) {\n            console.error(\"Error capturing view:\", error);\n        }\n    };\n\n    const createPDF = async () => {\n        const element = invoiceRef.current;\n        if (element) {\n            // Reduce the scale slightly for smaller file size\n            const scale = 1; // Fine-tune this value for balance\n\n            const canvas = await html2canvas(element, {\n                scale: scale,\n            });\n\n            // Experiment with JPEG quality for a balance between quality and file size\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\n\n            // A4 size dimensions in mm\n            const pdfWidth = 210;\n            const pdfHeight = 297;\n\n            const pdf = new jsPDF({\n                orientation: 'portrait',\n                unit: 'mm',\n                format: 'a4'\n            });\n\n            // Adjust PDF compression settings\n            const options = {\n                imageCompression: 'JPEG',\n                imageQuality: 1, // Fine-tune this value as well\n            };\n\n            const imgProps = pdf.getImageProperties(imageData);\n            const pdfWidthFit = pdfWidth;\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\n\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\n\n            // Filename logic\n            selectedChatData.stepIndicator.value < 3 ?\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\n        } else {\n            console.error(\"No element to capture\");\n        }\n    };\n\n\n    const handleCaptureAndCreatePDF = async () => {\n        const capturedImageUri = await captureImage();\n        if (capturedImageUri) {\n            await createPDF(capturedImageUri);\n        }\n    };\n\n\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\n        const dueDateString = invoiceData.bankInformations.dueDate;\n        const issuingDateObject = new Date(issuingDateString);\n        const dueDateObject = new Date(dueDateString);\n\n\n        const options = {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        };\n\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\n\n    }\n\n    const originalWidth = 794;\n    const originalHeight = 1123;\n\n\n    const originalSmallWidth = 794;\n    const originalSmallHeight = 1123;\n\n    const newWidth = 2480;\n    const newHeight = 3508;\n\n    const smallWidth = 377;\n    const smallHeight = 541;\n\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\n\n    const widthScaleFactor = newWidth / originalWidth;\n    const heightScaleFactor = newHeight / originalHeight;\n\n    const openImage = () => {\n        if (Platform.OS === 'web') {\n            const imageWindow = window.open();\n            imageWindow.document.write(`\n                <style>\n                    body {\n                        margin: 0;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        height: 100vh;\n                        overflow: hidden;\n                    }\n                    img {\n                        width: 595px;\n                        height: 842px;\n                        object-fit: contain;\n                        transition: transform 0.25s ease;\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\n                    }\n                    .zoomed {\n                        transform: scale(3);\n                        transform-origin: center;\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\n                    }\n                </style>\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\n                <script>\n                    const image = document.getElementById('zoomableImage');\n    \n                    image.addEventListener('mousedown', function(e) {\n                        const rect = this.getBoundingClientRect();\n                        const x = e.clientX - rect.left;\n                        const y = e.clientY - rect.top;\n    \n                        // Set the transform origin to the mouse position\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\n                        this.classList.add('zoomed');\n                    });\n    \n                    document.addEventListener('mouseup', function() {\n                        image.classList.remove('zoomed');\n                    });\n                </script>\n            `);\n        } else {\n            console.log('This feature is only available in a web environment');\n        }\n    };\n\n\n    const s2ab = (s) => {\n        const buf = new ArrayBuffer(s.length);\n        const view = new Uint8Array(buf);\n        for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n        return buf;\n    };\n\n    const modifyAndDownloadExcel = (file, dataToInsert) => {\n        // Read the file using SheetJS\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const workbook = XLSX.read(e.target.result, { type: 'binary' });\n\n            // Assuming the data is for the first sheet\n            const sheetName = workbook.SheetNames[0];\n            const sheet = workbook.Sheets[sheetName];\n\n            // Insert your data into the sheet\n            // Example: Inserting data starting from the second row, in columns A, B, and C\n            dataToInsert.forEach((row, index) => {\n                const rowIndex = index + 2; // Adjust based on where you want to start inserting data\n                ['A', 'B', 'C'].forEach((col, colIndex) => {\n                    const cellRef = `${col}${rowIndex}`;\n                    XLSX.utils.sheet_add_aoa(sheet, [[row[colIndex]]], { origin: cellRef });\n                });\n            });\n\n            // Write the modified workbook to a binary string\n            const wbOut = XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });\n\n            // Convert the binary string to a Blob and trigger a download\n            const blob = new Blob([s2ab(wbOut)], { type: 'application/octet-stream' });\n            saveAs(blob, `Invoice No.${selectedChatData.invoiceNumber} Excel.xlsx`);\n        };\n        reader.readAsBinaryString(file);\n    };\n\n\n\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\n        Number(selectedChatData.freightPrice));\n\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n            selectedChatData.carData.fobPrice : 0) *\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\n\n    const convertedCurrency = (baseValue) => {\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `$${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\n        }\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur);\n            return `€${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud);\n            return `A$${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp);\n            return `£${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad);\n            return `C$${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n    const totalPriceCalculated = () => {\n\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\n            const converted = Number(price); // Convert each price using your currency conversion function\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\n            return total + parseFloat(numericPart); // Add the numeric value to the total\n        }, 0);\n\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice))\n            // * Number(invoiceData.currency.jpyToEur)\n            ;\n\n\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToEur));\n\n\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\n        //         : 0)\n        //     + totalAdditionalPrice;\n\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToAud))\n\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToGbp))\n\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToCad))\n\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `$${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            return `€${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            return `A$${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            return `£${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            return `C$${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n    const PreviewInvoiceForMobile = () => {\n\n        return (\n            <View\n                style={{\n                    width: smallWidth,\n                    height: smallHeight,\n                    backgroundColor: 'white',\n                    zIndex: 1\n                }}>\n\n                <View\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        zIndex: 999,\n                    }}\n                />\n\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\n                    <NativeImage\n                        source={require('../../assets/RMJ logo for invoice.png')}\n                        style={{\n                            width: 95 * smallWidthScaleFactor,\n                            height: 85 * smallHeightScaleFactor,\n                            resizeMode: 'stretch',\n                        }}\n                    />\n                </View>\n\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\n                    {/* Title */}\n                    {selectedChatData.stepIndicator.value < 3 ?\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\n                    }\n                </View>\n\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\n                    {/* QR CODE */}\n                    {selectedChatData.stepIndicator.value < 3 ?\n                        null :\n                        <QRCode\n                            value={invoiceData.cryptoNumber}\n                            size={80 * smallWidthScaleFactor}\n                            color=\"black\"\n                            backgroundColor=\"white\"\n                        />\n                    }\n                </View>\n\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\n                    {/* Invoice Number */}\n                    {selectedChatData.stepIndicator.value < 3 ?\n                        null :\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\n                    }\n                </View>\n\n                {selectedChatData.stepIndicator.value < 3 ?\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor, }}>\n                        {/* Issuing Date */}\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\n                        </View>\n\n                    </View>\n                    :\n                    <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\n                        {/* Issuing Date */}\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\n                        <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\n                    </View>\n                }\n\n                <View style={{\n                    position: 'absolute',\n                    left: 40 * smallWidthScaleFactor,\n                    top: 134 * smallHeightScaleFactor,\n                    width: 280 * smallWidthScaleFactor,\n                }}>\n                    {/* Shipper */}\n                    <Text style={{\n                        fontWeight: 750,\n                        fontSize: 16 * smallWidthScaleFactor,\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                        width: 'fit-content', // Make the underline cover the text width\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                    }}>\n                        {`Shipper`}\n                    </Text>\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\n\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\n\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\n                        <>\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\n                        </>\n                        : null}\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\n                        <>\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\n                        </>\n                        : null}\n\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\n\n                        <View style={{\n                            flex: 1, width: 280 * smallWidthScaleFactor,\n                        }}>\n                            {/* Buyer Information */}\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 18 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                borderBottomColor: '#0A78BE',\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                                color: '#0A78BE',\n                                marginTop: 45 * smallHeightScaleFactor,\n\n                            }}>\n                                {`Buyer Information`}\n                            </Text>\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\n\n                        </View>\n\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\n                            {/* Notify Party */}\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 18 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                borderBottomColor: '#FF0000',\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                                color: '#FF0000',\n                                marginTop: 45 * smallHeightScaleFactor,\n                            }}>\n                                {`Notify Party`}\n                            </Text>\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\n                                (<>\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\n                                </>)}\n                        </View>\n\n                    </View>\n\n\n                </View>\n                {selectedChatData.stepIndicator.value < 3 ?\n\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#FF5C00', height: 194 * smallHeightScaleFactor, }}>\n                        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\n                            <Entypo size={50 * smallWidthScaleFactor} name='warning' color={'#FF0000'} style={{ marginLeft: 15 * smallWidthScaleFactor, }} />\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#FF0000', marginLeft: 20 * smallWidthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\n                        </View>\n                    </View>\n                    :\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\n\n                        <View style={{ flex: 1, alignItems: 'center', }}>\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\n                        </View>\n\n                        <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\n                            <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\n                                <Text style={{\n                                    fontWeight: 750,\n                                    fontSize: 14 * smallWidthScaleFactor,\n                                    borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                    width: 'fit-content', // Make the underline cover the text width\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                                }}>\n                                    {`Bank Account`}\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\n                                </Text>\n                            </View>\n\n                            <View style={{ flex: 1 }}>\n\n                                <Text style={{\n                                    fontWeight: 750,\n                                    fontSize: 14 * smallWidthScaleFactor,\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                                    width: 'fit-content', // Make the underline cover the text width\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                                }}>\n                                    {`Payment Terms`}\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\n                                </Text>\n\n                                <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\n\n                                    <Text style={{\n                                        fontWeight: 750,\n                                        fontSize: 14 * smallWidthScaleFactor,\n                                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                                        width: 'fit-content', // Make the underline cover the text width\n                                        marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                                        color: '#F00A0A',\n                                        borderBottomColor: '#F00A0A',\n                                    }}>\n                                        {`Payment Due`}\n                                    </Text>\n\n                                    <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\n                                        <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\n                                    </Text>\n\n                                </View>\n\n                            </View>\n\n                        </View>\n\n                    </View>}\n\n\n\n                <View style={{\n                    position: 'absolute',\n                    left: 38 * smallWidthScaleFactor,\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\n                    width: 718 * smallWidthScaleFactor,\n                    borderWidth: 1 * smallWidthScaleFactor,\n                    borderColor: '#C2E2F4',\n                    alignSelf: 'center',\n                }}>\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Description`}\n                            </Text>\n\n                        </View>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Notes`}\n                            </Text>\n                        </View>\n\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Quantity`}\n                            </Text>\n                        </View>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Amount`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {`FOB`}\n                            </Text>\n                        </View>\n\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.fobPrice))}`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {`Freight`}\n                            </Text>\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                            </Text>}\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <>\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            marginLeft: 2 * smallWidthScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            marginLeft: 2 * smallWidthScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\n                                    </Text>\n                                </>\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        marginLeft: 2 * smallWidthScaleFactor,\n                                    }}>\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\n                                </Text>\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                    }}>\n                                    {' '}\n                                </Text>\n                            }\n\n\n                        </View>\n\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                            </Text>}\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                    </Text>\n                                </Text>\n\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n\n                                    }}>\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                </Text>\n                            }\n\n                        </View>\n\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\n                            </Text>}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price => {\n                                        const converted = convertedCurrency(Number(price));\n                                        return converted;\n                                    }).join(' + ')\n                                    : ' '}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            flexDirection: 'row',\n                            paddingVertical: 2 * smallHeightScaleFactor,\n\n                        }}>\n                            {invoiceData.carData && invoiceData.carData.carName ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                    {\"Used Vehicle\\n\"}\n                                    <Text style={{\n                                        fontWeight: 700,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.carName}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.fuel}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.transmission}\\n`}\n                                    </Text>\n                                </Text>\n\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            flexDirection: 'row',\n                            justifyContent: 'center',\n                        }}>\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\n                                </Text>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 1,\n                            flexDirection: 'row',\n                            justifyContent: 'center',\n                        }}>\n                            {invoiceData.carData && invoiceData.carData.carName ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                    {'1'}\n                                </Text>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            justifyContent: 'center',\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\n                                <>\n                                    <Text style={{\n                                        fontWeight: 700,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        color: '#008AC6',\n                                        marginRight: 10 * smallWidthScaleFactor,\n                                        top: 51 * smallHeightScaleFactor,\n                                        left: 50 * smallWidthScaleFactor,\n                                        position: 'absolute',\n                                    }}>\n                                        {\"Total\"}\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            alignSelf: 'center',\n                                            color: '#00720B',\n                                            marginLeft: 5 * smallWidthScaleFactor,\n                                        }}>\n                                            {`${totalPriceCalculated()}`}\n                                        </Text>\n                                    </Text>\n\n                                </>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n                        </View>\n\n                    </View>\n\n                </View>\n\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Payment Information:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n                    }}>\n                        {'No warranty service is provided on used vehicles.'}\n                    </Text>\n\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Conditions for order cancellation:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n\n                    }}>\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\n                    </Text>\n\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Intermediary Banking Information:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Swift code: SMBCUS33'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Address: 277 Park Avenue'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'City: New York, NY'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Postal Code: 10172'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Country: United States'}\n                    </Text>\n                </View>\n\n                {selectedChatData.stepIndicator.value < 3 ? null :\n                    <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\n                        <View style={{\n                            width: 300 * smallWidthScaleFactor,\n                            alignItems: 'center',\n                            paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\n                        }}>\n                            <NativeImage\n                                source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\n                                style={{\n                                    width: 276 * smallWidthScaleFactor,\n                                    height: 81 * smallHeightScaleFactor,\n                                    resizeMode: 'contain',\n                                    alignSelf: 'center',\n                                    marginBottom: 0, // Minimize margin to keep the line close\n                                }}\n                            />\n                            <View style={{\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\n                                borderColor: 'black', // Change the color as needed\n                                width: '100%', // Line width as per your requirement\n                            }} />\n                            <Text italic style={{\n                                fontWeight: 700,\n                                fontSize: 16 * smallWidthScaleFactor,\n                            }}>\n                                {'Real Motor Japan'}\n                            </Text>\n                        </View>\n\n                        <View style={{\n                            width: 300 * smallWidthScaleFactor,\n                            alignItems: 'center',\n                            paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\n                        }}>\n\n                            <View style={{\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\n                                borderColor: 'black', // Change the color as needed\n                                width: '100%', // Line width as per your requirement\n                            }} />\n                            <Text italic style={{\n                                fontWeight: 700,\n                                fontSize: 16 * smallWidthScaleFactor,\n                            }}>\n                                {'Your Signature'}\n                            </Text>\n                        </View>\n                    </View>}\n\n\n            </View>\n        )\n    }\n\n\n\n    return (\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\n\n            <>{!selectedChatData.isCancelled && <Pressable\n                onPress={handlePreviewInvoiceModalOpen}\n                focusable={false}\n                variant='ghost'\n                onHoverIn={hoverPreviewIn}\n                onHoverOut={hoverPreviewOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\n                }}>\n\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\n                    </Text>\n                    :\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\n                        {`Preview Invoice`}\n                    </Text>}\n            </Pressable>}\n\n                <Modal\n                    isOpen={previewInvoiceVisible}\n                    onClose={() => {\n                        handlePreviewInvoiceModalClose();\n                    }}\n                    size={'full'}\n                    useRNModal\n                >\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\n                        <Pressable onPress={() => {\n                            capturedImageUri ? handleCaptureAndCreatePDF() : null;\n                        }}\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginRight: 5, backgroundColor: '#16A34A', }}>\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\n                        </Pressable>\n\n                        {selectedChatData.isCancelled && selectedChatData.stepIndicator.value < 3 ?\n                            null :\n                            <Pressable\n                                onPress={() => {\n                                    dispatch(setCustomInvoiceVisible(true))\n                                    dispatch(setPreviewInvoiceVisible(false))\n                                }}\n                                focusable={false}\n                                variant='ghost'\n                                style={{\n                                    justifyContent: 'center',\n                                    flexDirection: 'row',\n                                    padding: 5,\n                                    borderRadius: 5,\n                                    backgroundColor: '#0A8DD5',\n                                }}>\n                                <MaterialCommunityIcons size={20} name='file-document-edit' color='white' />\n                                <Text style={{ fontWeight: 400, color: 'white', }}>\n                                    {`Generate Custom Invoice`}\n                                </Text>\n                            </Pressable>\n\n                        }\n\n                        <Pressable\n                            onPress={() => {\n                                capturedImageUri ? openImage() : null;\n                            }}\n                            style={{ position: 'absolute', top: -2, right: -285, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\n                            <Entypo size={20} name='images' color='white' />\n                            <Text style={{ color: 'white', }}>View Image</Text>\n                        </Pressable>\n\n                    </View>\n                    <Modal.CloseButton />\n                    {previewInvoiceVisible &&\n                        <ScrollView\n                            style={{ maxHeight: screenWidth < 960 ? 520 : 720, maxWidth: screenWidth < 960 ? '90%' : 900 }}\n                        >\n                            <View style={{\n                                position: 'absolute',\n                                top: 0,\n                                bottom: 0,\n                                right: 0,\n                                left: 0,\n                                backgroundColor: 'white',\n                                zIndex: 999,\n                                flex: 1,\n                                alignItems: 'center', // Center horizontally\n                            }}>\n                                {capturedImageUri ? (\n                                    (screenWidth < mobileViewBreakpoint ? <PreviewInvoiceForMobile /> :\n                                        <RNImage\n                                            key={imagePreviewKey}\n                                            source={{ uri: capturedImageUri.toString() }}\n                                            style={{\n                                                marginTop: 5,\n                                                width: screenWidth < mobileViewBreakpoint ? 377 : 595,\n                                                height: screenWidth < mobileViewBreakpoint ? 541 : 842,\n                                                resizeMode: 'stretch',\n                                                borderWidth: 1,\n                                                borderColor: '#DADDE1',\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />\n                                )}\n                            </View>\n\n                            {/* Main content with invoice details */}\n                            {\n\n                                <View ref={invoiceRef}\n                                    style={{\n                                        width: newWidth,\n                                        height: newHeight,\n                                        backgroundColor: 'white',\n                                        zIndex: 1\n                                    }}>\n\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\n                                        <NativeImage\n                                            source={require('../../assets/RMJ logo for invoice.png')}\n                                            style={{\n                                                width: 95 * widthScaleFactor,\n                                                height: 85 * heightScaleFactor,\n                                                resizeMode: 'stretch',\n                                            }}\n                                        />\n                                    </View>\n\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\n                                        {/* Title */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\n                                        }\n                                    </View>\n\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\n                                        {/* QR CODE */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            null :\n                                            <View\n                                                ref={qrCodeRef}\n                                            >\n                                                <QRCode\n                                                    value={invoiceData.cryptoNumber}\n                                                    size={80 * widthScaleFactor}\n                                                    color=\"black\"\n                                                    backgroundColor=\"white\"\n                                                />\n                                            </View>\n\n                                        }\n                                    </View>\n\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\n                                        {/* Invoice Number */}\n                                        {selectedChatData.stepIndicator.value < 3 ?\n                                            null :\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\n                                        }\n                                    </View>\n\n                                    {selectedChatData.stepIndicator.value < 3 ?\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\n                                            {/* Issuing Date */}\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\n                                            </View>\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\n                                            </View>\n\n                                        </View>\n                                        :\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\n                                            {/* Issuing Date */}\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\n                                        </View>\n                                    }\n\n                                    <View style={{\n                                        position: 'absolute',\n                                        left: 40 * widthScaleFactor,\n                                        top: 134 * heightScaleFactor,\n                                        width: 280 * widthScaleFactor,\n                                    }}>\n                                        {/* Shipper */}\n                                        <Text style={{\n                                            fontWeight: 750,\n                                            fontSize: 16 * widthScaleFactor,\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\n                                            width: 'fit-content', // Make the underline cover the text width\n                                            marginBottom: 5, // Add some space between text and underline\n                                        }}>\n                                            {`Shipper`}\n                                        </Text>\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\n\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\n\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\n                                            <>\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\n                                            </>\n                                            : null}\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\n                                            <>\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\n                                            </>\n                                            : null}\n\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\n\n                                            <View style={{\n                                                flex: 1, width: 280 * widthScaleFactor,\n                                            }}>\n                                                {/* Buyer Information */}\n                                                <Text style={{\n                                                    fontWeight: 750,\n                                                    fontSize: 18 * widthScaleFactor,\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                    borderBottomColor: '#0A78BE',\n                                                    width: 'fit-content', // Make the underline cover the text width\n                                                    marginBottom: 5, // Add some space between text and underline\n                                                    color: '#0A78BE',\n                                                    marginTop: 25 * heightScaleFactor,\n\n                                                }}>\n                                                    {`Buyer Information`}\n                                                </Text>\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\n\n                                            </View>\n\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\n                                                {/* Notify Party */}\n                                                <Text style={{\n                                                    fontWeight: 750,\n                                                    fontSize: 18 * widthScaleFactor,\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                    borderBottomColor: '#FF0000',\n                                                    width: 'fit-content', // Make the underline cover the text width\n                                                    marginBottom: 5, // Add some space between text and underline\n                                                    color: '#FF0000',\n                                                    marginTop: 25 * heightScaleFactor,\n                                                }}>\n                                                    {`Notify Party`}\n                                                </Text>\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\n                                                    (<>\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\n                                                    </>)}\n                                            </View>\n\n                                        </View>\n\n\n                                    </View>\n                                    {selectedChatData.stepIndicator.value < 3 ?\n\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\n                                            </View>\n                                        </View>\n                                        :\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\n\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\n                                            </View>\n\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\n                                                    <Text style={{\n                                                        fontWeight: 750,\n                                                        fontSize: 14 * widthScaleFactor,\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                        width: 'fit-content', // Make the underline cover the text width\n                                                        marginBottom: 2, // Add some space between text and underline\n                                                    }}>\n                                                        {`Bank Account`}\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\n                                                    </Text>\n                                                </View>\n\n                                                <View style={{ flex: 1 }}>\n\n                                                    <Text style={{\n                                                        fontWeight: 750,\n                                                        fontSize: 14 * widthScaleFactor,\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                        width: 'fit-content', // Make the underline cover the text width\n                                                        marginBottom: 2, // Add some space between text and underline\n                                                    }}>\n                                                        {`Payment Terms`}\n                                                    </Text>\n\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\n                                                    </Text>\n\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\n\n                                                        <Text style={{\n                                                            fontWeight: 750,\n                                                            fontSize: 14 * widthScaleFactor,\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\n                                                            width: 'fit-content', // Make the underline cover the text width\n                                                            marginBottom: 2, // Add some space between text and underline\n                                                            color: '#F00A0A',\n                                                            borderBottomColor: '#F00A0A',\n                                                        }}>\n                                                            {`Payment Due`}\n                                                        </Text>\n\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\n                                                        </Text>\n\n                                                    </View>\n\n                                                </View>\n\n                                            </View>\n\n                                        </View>}\n\n\n                                    <View style={{\n                                        position: 'absolute',\n                                        left: 38 * widthScaleFactor,\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\n                                        width: 718 * widthScaleFactor,\n                                        borderWidth: 1 * widthScaleFactor,\n                                        borderColor: '#C2E2F4',\n                                        alignSelf: 'center',\n                                    }}>\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Description`}\n                                                </Text>\n\n                                            </View>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Notes`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Quantity`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 'bold',\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        color: '#008AC6',\n                                                    }}>\n                                                    {`Amount`}\n                                                </Text>\n                                            </View>\n\n                                        </View>\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 5,\n                                            }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                    {`FOB`}\n                                                </Text>\n                                            </View>\n\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                            }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                    {`${convertedCurrency(Number(invoiceData.paymentDetails.fobPrice))}`}\n                                                </Text>\n                                            </View>\n\n                                        </View>\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 5,\n                                            }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                    {`Freight`}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                            }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                    {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\n                                                </Text>\n                                            </View>\n\n                                        </View>\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 5,\n                                                flexDirection: 'row',\n                                            }}>\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                                                </Text>}\n\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                                    <>\n                                                        <Text\n                                                            style={{\n                                                                fontWeight: 400,\n                                                                fontSize: 12 * widthScaleFactor,\n                                                                lineHeight: 14 * widthScaleFactor,\n                                                                marginBottom: 3 * heightScaleFactor,\n                                                                marginLeft: 2 * widthScaleFactor,\n                                                            }}>\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                                                        </Text>\n                                                        <Text\n                                                            style={{\n                                                                fontWeight: 400,\n                                                                fontSize: 12 * widthScaleFactor,\n                                                                lineHeight: 14 * widthScaleFactor,\n                                                                marginBottom: 3 * heightScaleFactor,\n                                                                marginLeft: 2 * widthScaleFactor,\n                                                            }}>\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\n                                                        </Text>\n                                                    </>\n                                                }\n\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            marginLeft: 2 * widthScaleFactor,\n                                                        }}>\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\n                                                    </Text>\n                                                }\n\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                        }}>\n                                                        {' '}\n                                                    </Text>\n                                                }\n\n\n                                            </View>\n\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                            }}>\n\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice))}` : ' '}\n                                                </Text>}\n\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice))}` : ' '}\n                                                        <Text\n                                                            style={{\n                                                                fontWeight: 400,\n                                                                fontSize: 12 * widthScaleFactor,\n                                                                lineHeight: 14 * widthScaleFactor,\n                                                                marginBottom: 3 * heightScaleFactor,\n                                                            }}>\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice))}` : ' '}\n                                                        </Text>\n                                                    </Text>\n\n                                                }\n\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                                    <Text\n                                                        style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n\n                                                        }}>\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice))}` : ' '}\n                                                    </Text>\n                                                }\n\n                                            </View>\n\n\n                                        </View>\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 5,\n                                                flexDirection: 'row',\n                                            }}>\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\n                                                </Text>}\n\n\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                            }}>\n                                                <Text\n                                                    style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price => {\n                                                            const converted = convertedCurrency(Number(price));\n                                                            return converted;\n                                                        }).join(' + ')\n                                                        : ' '}\n                                                </Text>\n                                            </View>\n\n                                        </View>\n\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                flexDirection: 'row',\n                                                paddingVertical: 2 * heightScaleFactor,\n\n                                            }}>\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\n                                                    <Text style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                        marginLeft: 2 * widthScaleFactor,\n                                                    }}>\n                                                        {\"Used Vehicle\\n\"}\n                                                        <Text style={{\n                                                            fontWeight: 700,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${invoiceData.carData.carName}\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${invoiceData.carData.fuel}\\n`}\n                                                        </Text>\n                                                        <Text style={{\n                                                            fontWeight: 400,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                            {`${invoiceData.carData.transmission}\\n`}\n                                                        </Text>\n                                                    </Text>\n\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n\n\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                flexDirection: 'row',\n                                                justifyContent: 'center',\n                                            }}>\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\n                                                    <Text style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\n                                                    </Text>\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 1,\n                                                flexDirection: 'row',\n                                                justifyContent: 'center',\n                                            }}>\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\n                                                    <Text style={{\n                                                        fontWeight: 400,\n                                                        fontSize: 12 * widthScaleFactor,\n                                                        lineHeight: 14 * widthScaleFactor,\n                                                        marginBottom: 3 * heightScaleFactor,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                        {'1'}\n                                                    </Text>\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n\n\n                                            </View>\n\n                                            <View style={{\n                                                borderTopWidth: 1 * widthScaleFactor,\n                                                borderColor: '#C2E2F4',\n                                                flex: 2,\n                                                justifyContent: 'center',\n                                                flexDirection: 'row',\n                                            }}>\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\n                                                    <>\n                                                        <Text style={{\n                                                            fontWeight: 700,\n                                                            fontSize: 12 * widthScaleFactor,\n                                                            lineHeight: 14 * widthScaleFactor,\n                                                            marginBottom: 3 * heightScaleFactor,\n                                                            color: '#008AC6',\n                                                            marginRight: 10 * widthScaleFactor,\n                                                            top: 51 * heightScaleFactor,\n                                                            left: 50 * widthScaleFactor,\n                                                            position: 'absolute',\n                                                        }}>\n                                                            {\"Total\"}\n                                                            <Text style={{\n                                                                fontWeight: 700,\n                                                                fontSize: 12 * widthScaleFactor,\n                                                                lineHeight: 14 * widthScaleFactor,\n                                                                marginBottom: 3 * heightScaleFactor,\n                                                                alignSelf: 'center',\n                                                                color: '#00720B',\n                                                                marginLeft: 5 * widthScaleFactor,\n                                                            }}>\n                                                                {`${totalPriceCalculated()}`}\n                                                            </Text>\n                                                        </Text>\n\n                                                    </>\n                                                ) : (\n                                                    <Text>{' '}</Text>\n                                                )}\n                                            </View>\n\n                                        </View>\n\n                                    </View>\n\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Payment Information:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n                                        }}>\n                                            {'No warranty service is provided on used vehicles.'}\n                                        </Text>\n\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Conditions for order cancellation:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n\n                                        }}>\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\n                                        </Text>\n\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Intermediary Banking Information:'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'Swift code: SMBCUS33'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                        }}>\n                                            {'Address: 277 Park Avenue'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'City: New York, NY'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n\n                                        }}>\n                                            {'Postal Code: 10172'}\n                                        </Text>\n                                        <Text style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * widthScaleFactor,\n                                            lineHeight: 14 * heightScaleFactor,\n                                            marginBottom: 5 * heightScaleFactor,\n\n                                        }}>\n                                            {'Country: United States'}\n                                        </Text>\n                                    </View>\n\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\n                                            <View style={{\n                                                width: 300 * widthScaleFactor,\n                                                alignItems: 'center',\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\n                                            }}>\n                                                <NativeImage\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\n                                                    style={{\n                                                        width: 276 * widthScaleFactor,\n                                                        height: 81 * heightScaleFactor,\n                                                        resizeMode: 'contain',\n                                                        alignSelf: 'center',\n                                                        marginBottom: 0, // Minimize margin to keep the line close\n                                                    }}\n                                                />\n                                                <View style={{\n                                                    borderBottomWidth: 1 * heightScaleFactor,\n                                                    borderColor: 'black', // Change the color as needed\n                                                    width: '100%', // Line width as per your requirement\n                                                }} />\n                                                <Text italic style={{\n                                                    fontWeight: 700,\n                                                    fontSize: 16 * widthScaleFactor,\n                                                }}>\n                                                    {'Real Motor Japan'}\n                                                </Text>\n                                            </View>\n\n                                            <View style={{\n                                                width: 300 * widthScaleFactor,\n                                                alignItems: 'center',\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\n                                            }}>\n\n                                                <View style={{\n                                                    borderBottomWidth: 1 * heightScaleFactor,\n                                                    borderColor: 'black', // Change the color as needed\n                                                    width: '100%', // Line width as per your requirement\n                                                }} />\n                                                <Text italic style={{\n                                                    fontWeight: 700,\n                                                    fontSize: 16 * widthScaleFactor,\n                                                }}>\n                                                    {'Your Signature'}\n                                                </Text>\n                                            </View>\n                                        </View>}\n\n\n                                </View>\n                            }\n\n\n                        </ScrollView>\n\n                    }\n\n                </Modal>\n            </>\n        }\n        </>\n    );\n\n}\n\nconst ReopenTransaction = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData)\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\n    const [isHovered, setIsHovered] = useState(false);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isYesHovered, setIsYesHovered] = useState(false);\n    const [isNoHovered, setIsNoHovered] = useState(false);\n    const [isYesLoading, setIsYesLoading] = useState(false);\n\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n\n\n    const yesHoverIn = () => setIsYesHovered(true);\n    const yesHoverOut = () => setIsYesHovered(false);\n\n    const noHoverIn = () => setIsNoHovered(true);\n    const noHoverOut = () => setIsNoHovered(false);\n\n    const handleModalOpen = () => {\n        setIsModalVisible(true);\n\n    }\n\n    const handleModalClose = () => {\n        setIsModalVisible(false);\n\n    }\n\n\n    const reopenTransactionMessage = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `The transaction has been reopened by the seller.`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `The transaction has been reopened by the seller.`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n    const handleReopenTransaction = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\n\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\n\n        setIsYesLoading(true);\n        try {\n            await updateDoc(docRef, {\n                'isCancelled': false, // Update the specific field\n                'orderPlaced': true\n            });\n            try {\n                await updateDoc(docRefChatId, {\n                    'isCancelled': false // Update the specific field\n                });\n\n                try {\n                    await updateDoc(docRefVehicle, {\n                        'stockStatus': 'Reserved', // Update the specific field\n                        'reservedTo': selectedCustomerData.textEmail,\n                    });\n                } catch (error) {\n                    console.error(\"Error updating document: \", error);\n                }\n                await reopenTransactionMessage();\n\n                setIsYesLoading(false);\n                console.log(\"Document successfully updated\");\n            } catch (error) {\n                console.error(\"Error updating document: \", error);\n            }\n            console.log(\"Document successfully updated\");\n        } catch (error) {\n            console.error(\"Error updating document: \", error);\n        }\n\n\n    };\n\n    return (\n        <>\n            <Pressable\n                focusable={false}\n                variant='ghost'\n                onPress={handleModalOpen}\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\n                    padding: 10,\n                }}>\n\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\n            </Pressable>\n\n            <Modal\n                isOpen={isModalVisible}\n                onClose={() => {\n                    handleModalClose()\n                }}\n\n            >\n                <Modal.Content>\n                    <Modal.Header>Reopen Transaction</Modal.Header>\n                    <Modal.Body>\n                        Do you want to reopen the transaction?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\n                            <Pressable\n                                focusable={false}\n                                variant='ghost'\n                                onPress={handleModalClose}\n                                onHoverIn={noHoverIn}\n                                onHoverOut={noHoverOut}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\n                                    flex: 1,\n                                }}\n                            >\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\n                            </Pressable>\n\n                            <View style={{ flex: 1 }} />\n\n                            <Pressable\n                                onPress={handleReopenTransaction}\n                                focusable={false}\n                                variant='ghost'\n                                onHoverIn={yesHoverIn}\n                                onHoverOut={yesHoverOut}\n                                disabled={isYesLoading}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\n                                    flex: 1,\n                                }}\n                            >\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\n                            </Pressable>\n                        </View>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </>\n\n\n    );\n}\n\n\n\nconst CancelTransaction = () => {\n    const selectedChatData = useSelector((state) => state.selectedChatData)\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\n    const [isHovered, setIsHovered] = useState(false);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isYesHovered, setIsYesHovered] = useState(false);\n    const [isNoHovered, setIsNoHovered] = useState(false);\n    const [isYesLoading, setIsYesLoading] = useState(false);\n\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n\n\n    const yesHoverIn = () => setIsYesHovered(true);\n    const yesHoverOut = () => setIsYesHovered(false);\n\n    const noHoverIn = () => setIsNoHovered(true);\n    const noHoverOut = () => setIsNoHovered(false);\n\n    const handleModalOpen = () => {\n        setIsModalVisible(true);\n\n    }\n\n    const handleModalClose = () => {\n        setIsModalVisible(false);\n\n    }\n\n\n    const sendEmail = async (to, subject, htmlContent) => {\n        try {\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    to,\n                    subject,\n                    htmlContent,\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Email sent successfully');\n            } else {\n                console.error('Failed to send email');\n            }\n        } catch (error) {\n            console.error('Error sending email:', error);\n        }\n    };\n\n    const htmlContent = `<html><head>\n    <title>Transaction Cancellation Notice</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: #f4f4f4;\n            color: #333;\n            padding: 10px;\n            margin: 0;\n        }\n        .container {\n            background-color: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin: 20px auto;\n            max-width: 600px;\n            padding: 20px;\n        }\n        .highlight-red {\n            color: #FF0000; /* Red */\n            font-weight: bold;\n        }\n        .highlight-bold {\n            font-weight: bold;\n        }\n        p {\n            font-size: 16px;\n            line-height: 1.6;\n            margin: 10px 0 20px;\n        }\n        .signature {\n            font-weight: bold;\n            margin-top: 40px;\n            text-align: left;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <p><strong>Dear Valued Customer,</strong></p>\n\n        <p>I hope this message finds you well.</p>\n        \n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\n\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\n\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\n\n        <p>Please reach out if you have any questions or require assistance.</p>\n\n        <p>Thank you for your understanding.</p>\n        \n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\n    </div>\n\n</body></html>`;\n\n    const cancelTransactionMessage = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `The transaction has been cancelled.`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `The transaction has been cancelled.`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n    const handleCancelTransaction = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\n\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\n\n        setIsYesLoading(true);\n        try {\n            await updateDoc(docRef, {\n                'isCancelled': true, // Update the specific field\n                'orderPlaced': false\n            });\n            try {\n                await updateDoc(docRefChatId, {\n                    'isCancelled': true // Update the specific field\n                });\n\n                try {\n                    await updateDoc(docRefVehicle, {\n                        'stockStatus': 'On-Sale', // Update the specific field\n                        'reservedTo': ''\n                    });\n                } catch (error) {\n                    console.error(\"Error updating document: \", error);\n                }\n                await cancelTransactionMessage();\n\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\n\n                setIsYesLoading(false);\n                console.log(\"Document successfully updated\");\n            } catch (error) {\n                console.error(\"Error updating document: \", error);\n            }\n            console.log(\"Document successfully updated\");\n        } catch (error) {\n            console.error(\"Error updating document: \", error);\n        }\n\n\n    };\n\n    return (\n        <>\n\n            <Pressable\n                focusable={false}\n                variant='ghost'\n                onPress={handleModalOpen}\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\n                }}\n            >\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\n            </Pressable>\n\n\n            <Modal\n                isOpen={isModalVisible}\n                onClose={() => {\n                    handleModalClose()\n                }}\n            >\n                <Modal.Content>\n                    <Modal.Header>Cancel Transaction</Modal.Header>\n                    <Modal.Body>\n                        Do you want to cancel the transation?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\n                            <Pressable\n                                focusable={false}\n                                variant='ghost'\n                                onPress={handleModalClose}\n                                onHoverIn={noHoverIn}\n                                onHoverOut={noHoverOut}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\n                                    flex: 1,\n                                }}\n                            >\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\n                            </Pressable>\n\n                            <View style={{ flex: 1 }} />\n\n                            <Pressable\n                                onPress={handleCancelTransaction}\n                                focusable={false}\n                                variant='ghost'\n                                onHoverIn={yesHoverIn}\n                                onHoverOut={yesHoverOut}\n                                disabled={isYesLoading}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\n                                    flex: 1,\n                                }}\n                            >\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\n                            </Pressable>\n                        </View>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n\n        </>\n\n\n    )\n}\n\nconst ExtendDueDateButton = () => {\n    const [isHovered, setIsHovered] = useState(false);\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\n    const [selectedDueDate, setSelectedDueDate] = useState('');\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\n\n    let invoiceSelectedDueDate = '';\n\n    const currentDate = useSelector((state) => state.currentDate);\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n\n\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n\n\n    const confirmHoverIn = () => setIsConfirmHovered(true);\n    const confirmHoverOut = () => setIsConfirmHovered(false);\n\n    const cancelHoverIn = () => setIsCancelHovered(true);\n    const cancelHoverOut = () => setIsCancelHovered(false);\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const dispatch = useDispatch();\n\n    const handleModalOpen = () => {\n        setModalVisible(true);\n    }\n\n    const handleModalClose = () => {\n        setModalVisible(false);\n    }\n\n    const handleConfirm = async () => {\n\n        try {\n            await confirmExtendDueDate();\n            handleModalClose();\n        } catch (error) {\n\n        }\n\n    }\n\n\n    const extendDueDateMessage = async () => {\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        try {\n\n            // Adding the message to the 'messages' subcollection\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `The due date has been changed to ${selectedDueDate\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                    })\n                    : 'Invalid Date'\n                    }`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n\n            // Updating the main chat document with the latest message details\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                lastMessageSender: email,\n                lastMessage: `The due date has been changed to ${selectedDueDate\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                    })\n                    : 'Invalid Date'\n                    }`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        } catch (e) {\n            console.error('Error adding document: ', e);\n        }\n    }\n\n    const confirmExtendDueDate = async () => {\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\n        setIsConfirmLoading(true);\n        try {\n            await updateDoc(docRef, {\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\n            });\n            await extendDueDateMessage();\n            setIsConfirmLoading(false);\n            console.log(\"Document successfully updated\");\n        } catch (error) {\n            console.error(\"Error updating document: \", error);\n        }\n    };\n\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\n\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n\n        const handleModalCalendarOpen = () => {\n            setModalCalendarVisible(true);\n        };\n\n        const handleModalCalendarClose = () => {\n            setModalCalendarVisible(false);\n        };\n\n\n        return (\n\n            <>\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\n                    onPress={handleModalCalendarOpen}>\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\n                </Pressable>\n\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\n                    <Modal.CloseButton />\n                    <Modal.Content>\n                        <View style={{ height: '100%', flex: 1 }}>\n                            <Calendar\n                                onDayPress={useCallback(day => {\n                                    setSelectedDate(day.dateString);\n                                    invoiceSelectedDueDate = day.dateString;\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\n                                    handleModalCalendarClose();\n                                }, [])}\n                                markedDates={{\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\n                                }}\n                                renderArrow={(direction) => (\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\n                                )}\n                                enableSwipeMonths={true}\n                                initialDate={selectedDate}\n                                // minDate={currentDate}\n                                showSixWeeks />\n\n                        </View>\n\n                    </Modal.Content>\n\n                </Modal>\n            </>\n\n        );\n\n    }\n\n    useEffect(() => {\n\n        if (currentDate) {\n            const date = new Date(currentDate);\n\n            // Check the day of the week\n            const dayOfWeek = date.getDay();\n\n            if (dayOfWeek === 5) { // Friday\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\n            } else if (dayOfWeek === 6) { // Saturday\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\n            } else {\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\n            }\n\n            // Format the date back to string\n            const adjustedDate = date.toISOString().split('T')[0];\n            setSelectedDueDate(adjustedDate);\n        }\n\n    }, []);\n\n    return (\n        <>\n            <Pressable\n                focusable={false}\n                variant='ghost'\n                onPress={handleModalOpen}\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\n                }}\n            >\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\n            </Pressable>\n\n            <Modal\n                isOpen={modalVisible}\n                onClose={handleModalClose}\n                useRNModal\n            >\n                <Modal.Content>\n                    <Modal.Header >Extend Due Date</Modal.Header>\n                    <View style={{ margin: 2, }}>\n                        <Text style={{ fontWeight: 700, marginLeft: 3, }}>Due Date:</Text>\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\n                    </View>\n                    <Modal.Footer>\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\n                            <Pressable\n                                focusable={false}\n                                variant='ghost'\n                                onPress={handleModalClose}\n                                onHoverIn={cancelHoverIn}\n                                onHoverOut={cancelHoverOut}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\n                                    flex: 1,\n                                }}\n                            >\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\n                            </Pressable>\n\n                            <View style={{ flex: 1 }} />\n\n                            <Pressable\n                                onPress={handleConfirm}\n                                focusable={false}\n                                variant='ghost'\n                                onHoverIn={confirmHoverIn}\n                                onHoverOut={confirmHoverOut}\n                                disabled={isConfirmLoading}\n                                style={{\n                                    marginTop: 3,\n                                    paddingVertical: 3,\n                                    alignItems: 'center', // Center items vertically\n                                    justifyContent: 'center',\n                                    borderRadius: 5,\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\n                                    flex: 1,\n                                }}\n                            >\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\n                            </Pressable>\n                        </View>\n\n\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </>\n\n\n\n    )\n}\n\nconst TransactionModal = () => {\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\n    const dispatch = useDispatch();\n\n\n    const handleTransactionModalClose = () => {\n        dispatch(setTransactionModalVisible(false));\n    }\n    return (\n\n        <Modal\n            isOpen={transactionModalVisible}\n            onClose={() => {\n                handleTransactionModalClose()\n            }}\n            size={'lg'}\n            useRNModal\n        >\n            {transactionModalVisible &&\n                <Modal.Content>\n                    <Modal.CloseButton />\n\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\n\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\n                        <IssueProformaInvoiceModalContent />\n                    }\n\n                    {transactionModalContentValue == 3 &&\n                        <InputPaymentModalContent />\n                    }\n                </Modal.Content>\n            }\n        </Modal>\n    )\n}\n\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\n\n    const [isHovered, setIsHovered] = useState(false);\n\n\n    const hoverIn = () => setIsHovered(true);\n    const hoverOut = () => setIsHovered(false);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const dispatch = useDispatch();\n\n\n    const handleTransactionModalOpen = () => {\n        dispatch(setTransactionModalVisible(true));\n        transactionModalTitle = title;\n        transactionModalContentValue = transactionValue;\n    }\n\n\n    return (\n        <>\n            <Pressable\n                focusable={false}\n                variant='ghost'\n                onPress={handleTransactionModalOpen}\n                onHoverIn={hoverIn}\n                onHoverOut={hoverOut}\n                style={{\n                    marginTop: 3,\n                    paddingVertical: 3,\n                    paddingHorizontal: 5,\n                    flexDirection: 'row', // Align items in a row\n                    alignItems: 'center', // Center items vertically\n                    justifyContent: 'center',\n                    borderRadius: 5,\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\n                }}\n            >\n                <FastImage\n                    source={{\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\n                        priority: FastImage.priority.normal\n                    }}\n                    style={{\n                        tintColor: 'rgba(128, 128, 128, 1)',\n                        width: 15,\n                        height: 15,\n                        alignSelf: 'center',\n                    }}\n                    resizeMode={FastImage.resizeMode.stretch}\n                />\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\n            </Pressable>\n\n        </>\n\n    );\n};\n\n\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\n    return (\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\n            displayedTransactions.map((transaction, index) => {\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\n\n                return (\n                    <Pressable\n                        key={index}\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\n                        onMouseLeave={() => setIsHovered(false)}\n                        style={{\n                            marginBottom: 15,\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\n                            borderRadius: 10,\n                            shadowColor: '#000',\n                            shadowOffset: { width: 0, height: 2 },\n                            shadowOpacity: 0.1,\n                            shadowRadius: 2,\n                            elevation: 3,\n                            padding: 5,\n                            borderBottomWidth: 1,\n                            borderBottomColor: '#eee',\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <View>\n                            <FastImage\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\n                                style={{\n                                    width: 60,\n                                    height: 60,\n                                    borderRadius: 30,\n                                    alignSelf: 'center',\n                                    margin: 10,\n                                }}\n                                resizeMode={FastImage.resizeMode.stretch}\n                            />\n                        </View>\n                        <View>\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                <Text style={{ color: '#0A78BE' }} selectable={false} numberOfLines={1} ellipsizeMode='tail'>\n                                    {transaction.carName}\n                                </Text>\n                            </Text>\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                <Text style={{ color: '#333' }} selectable={false} numberOfLines={1} ellipsizeMode='tail'>\n                                    {transaction.referenceNumber}\n                                </Text>\n                            </Text>\n                        </View>\n                    </Pressable>\n                );\n            })\n        ) : (\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\n        )\n    );\n};\n\nconst TransactionHistoryModal = () => {\n\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const screenWidth = Dimensions.get('window').width;\n\n    const navigate = useNavigate();\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n\n    const hoverStyle = isHovered ? {\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\n        // Any other style changes on hover\n    } : {};\n\n    const loadMorePayments = () => {\n        if (loadingMore) return; // Prevent multiple loads\n\n        setLoadingMore(true);\n        const nextItems = selectedCustomerData.transactions.slice(\n            displayedTransactions.length,\n            displayedTransactions.length + 5\n        );\n\n        setTimeout(() => { // Simulate network request\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\n            setLoadingMore(false);\n        }, 500); // Adjust the timeout as needed\n    };\n\n    const handleTransactionHistoryModalOpen = () => {\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\n        setTransactionHistoryVisible(true);\n\n    };\n\n    const handleTransactionHistoryModalClose = () => {\n        setTransactionHistoryVisible(false);\n    };\n\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\n    };\n\n    const handleChatPress = (chatId) => {\n        const encryptedChatId = encryptData(chatId);\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\n        // navigate(`/top/chat-messages/${encodedChatId}`);\n        const path = `/top/chat-messages/${encodedChatId}`;\n        // Construct the URL for hash-based routing\n        const baseUrl = window.location.origin + window.location.pathname;\n        const fullPath = `${baseUrl}#${path}`;\n        window.open(fullPath, '_blank');\n    }\n\n    return (\n\n        <>\n\n\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\n                    {`View Transactions`}\n                </Text>\n            </Pressable>\n\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\n                    <Modal.CloseButton />\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\n                        Transactions History\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ScrollView\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\n                            onScroll={({ nativeEvent }) => {\n                                if (isCloseToBottom(nativeEvent)) {\n                                    loadMorePayments();\n                                }\n                            }}\n                            scrollEventThrottle={400} // Adjust as needed\n                        >\n\n                            <TransactionList\n                                displayedTransactions={displayedTransactions}\n                                handleChatPress={handleChatPress}\n                                selectedCustomerData={selectedCustomerData}\n                            />\n\n                            <View style={{ height: 20, }}>\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\n                            </View>\n\n                        </ScrollView>\n\n\n\n                    </Modal.Body>\n                </Modal.Content>\n            </Modal>\n        </>\n\n    )\n}\n\n\n\nconst PaymentHistoryModal = () => {\n\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const screenWidth = Dimensions.get('window').width;\n\n    const sortedPayments = selectedCustomerData.paymentsHistory\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\n            const dateA = new Date(a.date);\n            const dateB = new Date(b.date);\n            return dateB - dateA; // Sorts in descending order\n        })\n        : [];\n\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\n    const [loadingMore, setLoadingMore] = useState(false);\n\n    const loadMorePayments = () => {\n        if (loadingMore) return; // Prevent multiple loads\n\n        setLoadingMore(true);\n        const nextItems = sortedPayments.slice(\n            displayedPayments.length,\n            displayedPayments.length + 5\n        );\n\n        setTimeout(() => { // Simulate network request\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\n            setLoadingMore(false);\n        }, 500); // Adjust the timeout as needed\n    };\n\n    const handlePaymentHistoryModalOpen = () => {\n        setDisplayedPayments(sortedPayments.slice(0, 5));\n        setPaymentHistoryVisible(true);\n\n    };\n\n    const handlePaymentHistoryModalClose = () => {\n        setPaymentHistoryVisible(false);\n    };\n\n\n\n\n\n\n    function formatDate(dateString) {\n        // Remove ' at ' from the date string\n        const cleanedDateString = dateString.replace(' at ', ' ');\n        const date = new Date(cleanedDateString);\n\n        if (isNaN(date.getTime())) {\n            // Date is not valid\n            console.error(\"Invalid Date:\", dateString);\n            return \"Invalid Date\";\n        }\n\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const year = date.getFullYear();\n        const month = months[date.getMonth()];\n        const day = date.getDate().toString().padStart(2, '0');\n\n        let hours = date.getHours();\n        const minutes = date.getMinutes().toString().padStart(2, '0');\n        const ampm = hours >= 12 ? 'pm' : 'am';\n\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n\n        // return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\n        return `${year} ${month} ${day}`;\n\n    }\n\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\n    };\n\n    return (\n\n        <>\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\n                    {`View Payments History`}\n                </Text>\n            </Pressable>\n\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\n                    <Modal.CloseButton />\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\n                        Payment History\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ScrollView\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\n                            onScroll={({ nativeEvent }) => {\n                                if (isCloseToBottom(nativeEvent)) {\n                                    loadMorePayments();\n                                }\n                            }}\n                            scrollEventThrottle={400} // Adjust as needed\n                        >\n                            {\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\n                                    displayedPayments.map((payment, index) => (\n                                        <View key={index} style={{\n                                            marginBottom: 15,\n                                            backgroundColor: '#F8F9FF', // Card background color\n                                            borderRadius: 10, // Rounded corners for the card\n                                            shadowColor: '#000', // Shadow color\n                                            shadowOffset: { width: 0, height: 2 },\n                                            shadowOpacity: 0.1,\n                                            shadowRadius: 2,\n                                            elevation: 3, // Elevation for Android\n                                            padding: 15, // Padding inside the card\n                                            borderBottomWidth: 1,\n                                            borderBottomColor: '#eee',\n                                        }}>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\n                                                <Text style={{ color: '#333' }}>\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\n                                                </Text>\n                                            </Text>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\n                                                </Text>\n                                            </Text>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\n                                            </Text>\n\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\n                                            </Text>\n\n                                        </View>\n\n                                    )) :\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\n                            }\n                            <View style={{ height: 20, }}>\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\n                            </View>\n\n                        </ScrollView>\n\n\n\n                    </Modal.Body>\n                </Modal.Content>\n            </Modal>\n        </>\n\n    )\n}\n\nconst CustomerProfileModal = () => {\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const screenWidth = Dimensions.get('window').width;\n\n\n    const handleModalOpen = () => {\n        setCustomerModalVisible(true);\n    }\n\n    const handleModalClose = () => {\n        setCustomerModalVisible(false);\n    }\n\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\n            const value = Number(payment.value);\n            return sum + (isNaN(value) ? 0 : value);\n        }, 0)\n        : 0;\n\n\n    return (\n        <>\n            <Pressable\n                onPress={handleModalOpen}\n                style={{ width: 'fit-content', }}\n            >\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\n            </Pressable>\n\n            <Modal\n                isOpen={customerModalVisible}\n                onClose={handleModalClose}\n                size={'lg'}\n\n            >\n                <Modal.Content background={'white'}>\n\n                    <Modal.Body>\n\n                        <View\n                            style={{\n                                flex: 1,\n                                alignItems: 'center',\n                            }}>\n\n                            <View style={{\n                                borderRadius: 10,\n                                backgroundColor: '#F8F9FF',\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\n                                alignItems: 'center',\n                                paddingBottom: 15,\n\n                            }}>\n\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 24 : 26, color: '#0A78BE', }} selectable>\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\n                                </Text>\n\n                                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\n                                </Text>\n\n                                <View\n                                    style={{\n                                        flex: 1,\n                                        flexDirection: 'row',\n                                        paddingTop: 20,\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                    }}\n                                >\n\n                                    <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', textAlign: 'center', paddingTop: 2, }} selectable>\n                                        {`${selectedCustomerData.textPhoneNumber}`}\n                                    </Text>\n\n                                    {/* Separator */}\n\n                                    <View style={{\n                                        height: '100%', // Full height of the parent View\n                                        width: 2, // Width of the line\n                                        backgroundColor: '#DCDCDC', // Line color\n                                        marginHorizontal: 10, // Space on the sides of the line\n                                    }} />\n\n                                    <Hyperlink\n                                        linkDefault={true}\n                                        linkStyle={{ color: '#8A64F6', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14 }}\n\n                                    >\n                                        <Text style={{ textAlign: 'center' }} selectable>\n                                            {selectedCustomerData.textEmail}\n                                        </Text>\n                                    </Hyperlink>\n\n                                </View>\n\n\n                            </View>\n\n                        </View>\n\n                        <View\n                            style={{\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\n                                justifyContent: 'center',\n                                marginTop: 50,\n                                flexDirection: 'row',\n                                alignSelf: 'center',\n                            }}>\n\n                            <View style={{ flex: 1, alignItems: 'center', }}>\n\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#009922', textAlign: 'center', }} selectable>\n                                    {`$${(totalPaymentValue).toLocaleString('en-US', {\n                                        minimumFractionDigits: 2,\n                                        maximumFractionDigits: 2,\n                                        useGrouping: true\n                                    })}`}\n                                </Text>\n\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\n                                    {`Total Payment`}\n                                </Text>\n\n                                <PaymentHistoryModal />\n\n                            </View>\n\n\n                            <View style={{ flex: 1, alignItems: 'center', }}>\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#990000', textAlign: 'center', }} selectable>\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US', {\n                                        minimumFractionDigits: 2,\n                                        maximumFractionDigits: 2,\n                                        useGrouping: true\n                                    }) : 0}`}\n                                </Text>\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\n                                    {`Overbalance`}\n                                </Text>\n\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\n                                    {`-----`}\n                                </Text>\n\n\n                            </View>\n\n                            <View style={{ flex: 1, alignItems: 'center', }}>\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#0029A3', textAlign: 'center', }} selectable>\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\n                                </Text>\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\n                                    {`Transactions`}\n                                </Text>\n\n                                <TransactionHistoryModal />\n\n                            </View>\n\n                        </View>\n\n                    </Modal.Body>\n\n\n                </Modal.Content>\n            </Modal>\n\n\n\n\n        </>\n\n    )\n}\n\nconst ChatMessageHeader = () => {\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\n    const activeChatId = useSelector((state) => state.activeChatId);\n\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const invoiceData = useSelector((state) => state.invoiceData);\n    const carImageUrl = useSelector((state) => state.carImageUrl);\n    const dispatch = useDispatch();\n    const [reRenderKey, setReRenderKey] = useState(0);\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\n    const screenWidth = Dimensions.get('window').width;\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD');\n\n\n    // const convertedCurrency = (baseValue) => {\n\n    //     if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n    //         return `$${Math.round(Number(baseValue)).toLocaleString('en-US', { useGrouping: true })}`\n    //     }\n    //     if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n    //         return `€${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToEur))).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n    //         return `A$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToAud))).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n    //         return `£${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToGbp))).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n    //     if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n    //         return `C$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.cadToJpy))).toLocaleString('en-US', { useGrouping: true })}`;\n    //     }\n\n    // }\n\n    const convertedCurrency = (baseValue) => {\n        if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\n            return `$${Math.round(Number(baseValue)).toLocaleString('en-US', { useGrouping: true })}`\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\n            return `€${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToEur)))).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\n            return `A$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToAud)))).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\n            return `£${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToGbp)))).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\n            return `C$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToCad)))).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\n        Number(selectedChatData.freightPrice));\n\n    const inspectionPriceCondition = (selectedChatData.inspection === true ? Number(valueInspectionPrice) : 0);\n    const insurancePriceCondition = (selectedChatData.insurance === true ? Number(valueInsurancePrice) : 0);\n\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n            selectedChatData.carData.fobPrice : 0) *\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                selectedChatData.currency.jpyToUsd : 0)))\n        + freightCalculation\n        + inspectionPriceCondition\n        + insurancePriceCondition;\n\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\n            selectedChatData.carData.fobPrice : 0) *\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\n                selectedChatData.currency.jpyToUsd : 0)));\n\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\n\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\n\n\n    useEffect(() => {\n\n        setReRenderKey(reRenderKey + 1)\n        dispatch(setChatMessageBoxLoading(false));\n\n    }, [activeChatId]);\n\n    const CurrencySymbol = (value) => {\n        switch (value) {\n            case 'USD':\n                return '$ USD';\n\n            case 'EURO':\n                return '€ EURO';\n\n            case 'AUD':\n                return 'A$ AUD';\n\n            case 'GBP':\n                return '£ GBP';\n\n            case 'CAD':\n                return 'C$ CAD';\n        }\n    }\n\n\n\n    const UpdateCurrency = async (currencyValue) => {\n\n        const oldSelectedCurrency = selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : '$ USD';\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n        if (oldSelectedCurrency !== currencyValue) {\n\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\n                text: `Transaction currency has been changed to ${CurrencySymbol(currencyValue)}`,\n                sender: email,\n                timestamp: formattedTime, // Using the fetched timestamp\n                ip: ip, // IP Address\n                ipCountry: ipCountry // Country of the IP Address\n            });\n\n            if (invoiceData && Object.keys(invoiceData).length > 0) {\n                await setDoc(doc(projectExtensionFirestore, 'IssuedInvoice', selectedChatData.invoiceNumber), {\n                    selectedCurrencyExchange: currencyValue,\n                }, { merge: true });\n            }\n\n\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\n                selectedCurrencyExchange: currencyValue,\n                lastMessage: `Transaction currency has been changed to ${CurrencySymbol(currencyValue)}`,\n                lastMessageDate: formattedTime,\n                customerRead: false,\n                read: true,\n                readBy: [email],\n            });\n\n        }\n\n    }\n\n    const totalPriceCalculated = () => {\n        // Safely access deeply nested properties using optional chaining and provide default values\n        const additionalPrices = invoiceData?.paymentDetails?.additionalPrice || [];\n        const fobPrice = Number(invoiceData?.paymentDetails?.fobPrice || 0);\n        const freightPrice = Number(invoiceData?.paymentDetails?.freightPrice || 0);\n        const inspectionPrice = invoiceData?.paymentDetails?.inspectionIsChecked ? Number(invoiceData.paymentDetails.inspectionPrice || 0) : 0;\n        const usdToEur = Number(invoiceData?.currency?.usdToEur || 1);\n        const usdToJpy = Number(invoiceData?.currency?.usdToJpy || 1);\n        const jpyToAud = Number(invoiceData?.currency?.jpyToAud || 1);\n        const jpyToGbp = Number(invoiceData?.currency?.jpyToGbp || 1);\n        const cadToJpy = Number(invoiceData?.currency?.cadToJpy || 1);\n\n        const totalAdditionalPrice = additionalPrices.reduce((total, price) => {\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\n            return total + parseFloat(numericPart); // Add the numeric value to the total\n        }, 0);\n\n        const baseTotal = fobPrice + freightPrice + inspectionPrice + totalAdditionalPrice + (invoiceData?.paymentDetails?.incoterms == 'CIF' ? Number(invoiceData.paymentDetails.insurancePrice) : 0);\n\n        // Calculating total in different currencies\n        const totalUsd = baseTotal;\n        const totalEur = baseTotal * usdToEur;\n        const totalAud = baseTotal * usdToJpy * jpyToAud;\n        const totalGbp = baseTotal * usdToJpy * jpyToGbp;\n        const totalCad = baseTotal * usdToJpy * cadToJpy;\n\n        switch (invoiceData?.selectedCurrencyExchange) {\n            case 'EURO':\n                return `€${Math.round(Number(totalEur)).toLocaleString('en-US', { useGrouping: true })}`;\n            case 'AUD':\n                return `A$${Math.round(Number(totalAud)).toLocaleString('en-US', { useGrouping: true })}`;\n            case 'GBP':\n                return `£${Math.round(Number(totalGbp)).toLocaleString('en-US', { useGrouping: true })}`;\n            case 'CAD':\n                return `C$${Math.round(Number(totalCad)).toLocaleString('en-US', { useGrouping: true })}`;\n            case 'None':\n            case 'USD':\n            default:\n                return `$${Math.round(Number(totalUsd)).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n\n\n    const CurrencyPopover = () => {\n\n\n        const currencies = [\n            { label: '$ USD', value: 'USD' },\n            { label: '€ EURO', value: 'EURO' },\n            { label: 'A$ AUD', value: 'AUD' },\n            { label: '£ GBP', value: 'GBP' },\n            { label: 'C$ CAD', value: 'CAD' },\n        ];\n\n\n\n\n\n        return (\n            <Box>\n                <Popover\n                    trigger={(triggerProps) => {\n                        return (\n                            <NativePressable {...triggerProps}\n                                marginLeft={'5px'}\n                                width=\"auto\"\n                                bg=\"#303030\"\n                                _hover={{\n                                    bg: '#595959',\n                                }}\n                                borderColor={'#D9D9D9'}\n                                borderWidth={1}\n                                borderRadius={'5px'}\n                                flexDirection={'row'}\n                            >\n                                <Text style={{ marginLeft: 1, textAlign: 'center ', color: '#E4DCAC', fontWeight: 'bold', }}>{CurrencySymbol(selectedCurrencyExchange)}</Text>\n\n                                <View\n                                    style={{\n                                        alignSelf: 'center',\n                                        marginLeft: 24,\n                                        marginRight: 2,\n                                    }}>\n                                    <FontAwesome name='caret-down' size='12' color='#E4DCAC' />\n                                </View>\n                            </NativePressable>\n                        );\n                    }}\n                >\n                    <Popover.Content width=\"85px\">\n                        <Box backgroundColor={'#303030'}>\n                            <VStack space={1}>\n                                {currencies.map((currency) => (\n                                    <NativePressable\n                                        key={currency.value}\n                                        onPress={() => {\n                                            setSelectedCurrencyExchange(currency.value);\n                                            UpdateCurrency(currency.value)\n                                            // Perform additional logic if necessary, e.g., updating global state\n                                        }}\n                                        _hover={{\n                                            bg: '#595959',\n                                        }}\n                                    >\n                                        <Text fontSize=\"sm\" textAlign={'center'} color='#E4DCAC' fontWeight={'bold'}>\n                                            {currency.label}\n                                        </Text>\n                                    </NativePressable>\n                                ))}\n                            </VStack>\n                        </Box>\n                    </Popover.Content>\n                </Popover>\n            </Box>\n        );\n    }\n\n    return (\n\n        <View style={{\n            flex: 1,\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n        }}>\n\n\n            {carImageUrl ? (\n                <FastImage\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\n                    style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        alignSelf: 'center',\n                        margin: 10,\n                    }}\n                    resizeMode={FastImage.resizeMode.stretch}\n                />\n            ) : (\n                <View\n                    style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        alignSelf: 'center',\n                        backgroundColor: '#e0e0e0',\n                        marginRight: 10,\n                    }}\n                />\n            )}\n\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\n\n                <CustomerProfileModal />\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\n                    </Text>\n                </View>\n\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\n                <TimelineStatus data={statusData} />\n\n            </View>\n\n            {/* <HorizontalTimeline /> */}\n\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\n                        {selectedChatData.carData && selectedChatData.carData.mileage\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\n                            : 'Mileage N/A'} km\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\n                    </Text>\n                </View>\n\n            </View>\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\n                        {`${convertedCurrency(totalPriceCalculation)}`}\n                    </Text>\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\n                        ({`¥${Number(\n                            totalPriceCalculation /\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\n                                    0)\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\n                    </Text>\n                    <View style={{ marginTop: 3 }}>\n                        {!selectedChatData.isCancelled && <CurrencyPopover />}\n                    </View>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\n                        {`${convertedCurrency(fobPriceDollars)}`}\n                    </Text>\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\n                        {`${convertedCurrency(freightCalculation)}`}\n                    </Text>\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\n                    </Text>\n                </View>\n\n                <View style={{ flexDirection: 'row', }}>\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\n                </View>\n            </View>\n\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\n                null :\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\n                        <>\n                            <ProfitCalculator />\n\n                            <TransactionButton\n                                key={'Issue Proforma Invoice'}\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\n                                colorHoverIn={'#0f7534'}\n                                colorHoverOut={'#16A34A'}\n                                transactionValue={2}\n                                buttonValue={2}\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\n\n                            <PreviewInvoice />\n\n                            <View style={{ flexDirection: 'row' }}>\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\n                                    {totalPriceCalculated()}\n                                </Text>\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\n                                </Text>\n                            </View>\n                        </>\n                    }\n\n                    {(selectedChatData.stepIndicator.value == 3) &&\n\n\n                        (\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\n                                {\n                                    selectedChatData.isCancelled == true && (\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\n                                            <View style={{ paddingLeft: 10, }}>\n                                                <ReopenTransaction />\n                                            </View>\n                                        </View>\n                                    )\n                                }\n                                <View style={{ paddingLeft: 10, }}>\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\n\n                                    {!selectedChatData.isCancelled && <TransactionButton\n                                        key={'Input Payment'}\n                                        title={'Input Payment'}\n                                        colorHoverOut={'#FF0000'}\n                                        colorHoverIn={'#800101'}\n                                        transactionValue={3}\n                                        buttonValue={4}\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\n\n                                    <PreviewInvoice />\n\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\n                                            {(totalPriceCalculated())}\n                                        </Text>\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\n                                        </Text>\n                                    </View>}\n                                </View>\n\n                                <View style={{ paddingLeft: 10, }}>\n\n                                    {!selectedChatData.isCancelled && <TransactionButton\n                                        key={'Issue Proforma Invoice'}\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\n                                        colorHoverIn={'#0f7534'}\n                                        colorHoverOut={'#16A34A'}\n                                        transactionValue={2}\n                                        buttonValue={2}\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\n\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\n\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\n\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\n                                            <>\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\n                                                    {\n                                                        invoiceData.bankInformations.dueDate\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\n                                                                year: 'numeric',\n                                                                month: 'long',\n                                                                day: 'numeric',\n                                                            })\n                                                            : 'Invalid Date'\n                                                    }\n                                                </Text>\n                                            </>}\n                                    </View>}\n\n                                </View>\n                            </View>)\n                    }\n                </View>)\n\n            }\n\n            <GenerateCustomInvoice />\n\n            <TransactionModal />\n        </View>\n\n    );\n};\n\n\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\n\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\n    const selectedChatData = useSelector((state) => state.selectedChatData)\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\n\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n\n    return (\n\n        <Modal\n            isOpen={readByListModalVisible}\n            onClose={() => handleReadByListModalClose()}\n            useRNModal\n            size={'xs'}\n        >\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\n                <Modal.CloseButton />\n\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\n\n                <Modal.Body>\n                    {\n                        selectedChatData.readBy.length > 0 ? (\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\n                                {/* Sort and map over the readBy list */}\n                                {\n                                    [...selectedChatData.readBy]\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\n                                        .map(item => (\n                                            <View key={item} style={{ flex: 1, flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\n                                                {item === 'RMJ-Bot' ?\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\n                                                <View style={{ flex: 1 }}> {/* Ensure text has its own block and can wrap */}\n                                                    <Text style={{ color: '#555', flexWrap: 'wrap' }}>{email === item ? 'You' : item}</Text>\n                                                </View>\n                                            </View>\n                                        ))\n                                }\n                            </ScrollView>\n                        ) : (\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\n                        )\n                    }\n                </Modal.Body>\n            </Modal.Content>\n        </Modal>\n\n    );\n}\n\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\n    return (\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\n            <Modal.Content\n                style={{\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    width: '80%',\n                    height: '80%',\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                }}>\n                <Modal.CloseButton />\n                <FastImage\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\n                    resizeMode={FastImage.resizeMode.contain}\n                />\n            </Modal.Content>\n        </Modal>\n    );\n};\n\n\nconst HoverablePressable = ({ url, printComponent }) => {\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\n    const baseStyle = {\n        marginRight: 10,\n        borderRadius: 16,\n        borderWidth: 1,\n        borderColor: 'white',\n        width: 26,\n        height: 26,\n        justifyContent: 'center',\n        alignItems: 'center',\n    };\n\n    const hoverStyle = {\n        backgroundColor: '#ddd', // Example hover style\n    };\n\n    return (\n        <>\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\n                <Pressable\n                    style={{\n                        marginRight: 8,\n                        borderRadius: 16,\n                        width: 32,\n                        height: 32,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\n                    }}\n                    onPress={async () => {\n                        await Linking.openURL(url);\n                    }}\n                    onMouseEnter={() => setIsHoveredDownload(true)}\n                    onMouseLeave={() => setIsHoveredDownload(false)}\n                >\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\n                </Pressable>\n            </Tooltip>\n\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\n                <Pressable\n                    style={{\n                        marginRight: 8,\n                        borderRadius: 16,\n                        width: 32,\n                        height: 32,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\n                    }}\n                    onMouseEnter={() => setIsHoveredPrint(true)}\n                    onMouseLeave={() => setIsHoveredPrint(false)}\n                    onPress={printComponent}\n                >\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\n                </Pressable>\n            </Tooltip> */}\n        </>\n    );\n};\n\nconst DocumentPreviewModal = () => {\n\n    const dispatch = useDispatch();\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\n    const screenWidth = Dimensions.get('window').width;\n\n    const [iframeKey, setIframeKey] = useState(0);\n\n\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\n    const [isLoading, setLoading] = useState(true); // Loading state\n\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\n\n\n    const handleIframeLoad = () => {\n        setLoading(false); // Set loading to false when iframe content is loaded\n    };\n\n    const handleModalClose = () => {\n\n        dispatch(setPdfViewerModalVisible(false))\n        dispatch(setSelectedFileUrl(''))\n        setLoading(true);\n        globalSelectedFileType = '';\n        globalSelectedPDFUrl = '';\n    }\n\n    const printIframe = () => {\n        // const iframe = document.getElementById('documentIframe');\n        // iframe.contentWindow.print();\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\n        printWindow.focus();\n        printWindow.print();\n\n    };\n\n    useEffect(() => {\n\n        const timeout = setTimeout(() => {\n\n            if (isLoading) {\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\n                console.log(\"Current URL:\", selectedFileUrl);\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\n\n                setIsLoading(false);\n                setIframeKey(prevKey => prevKey + 1);\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\n\n            }\n\n        }, 5000); // Timeout set to 5 seconds\n\n        return () => clearTimeout(timeout);\n\n    }, [isLoading,]);\n\n\n\n    return (\n        <Modal isOpen={pdfViewerModalVisible}\n            onClose={() => {\n                handleModalClose();\n            }\n            } size=\"xl\">\n            <Modal.Content>\n                {globalSelectedFileType !== 'pdf' ?\n\n                    (<>\n                        {isLoading && (\n                            <View style={{\n                                top: 0,\n                                bottom: 0,\n                                left: 0,\n                                right: 0,\n                                position: 'absolute',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '700px'  // Same height as the iframe for consistent layout\n                            }}>\n                                <Spinner\n                                    animating\n                                    size=\"lg\"\n                                    color={'#7B9CFF'}\n                                />\n                            </View>\n                        )}\n                        {selectedFileUrl !== '' &&\n                            <>\n                                {!isLoading &&\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\n                                    </View>\n                                }\n\n                                <iframe\n                                    key={iframeKey}\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\n                                    id='documentIframe'\n                                    style={{ width: '100%', height: '700px' }}\n                                    title=\"Document Viewer\"\n                                    onLoad={() => {\n                                        handleIframeLoad();\n                                    }}\n                                />\n                            </>\n                        }\n                    </>\n                    )\n\n                    : (\n                        <>\n                            {isLoading && (\n                                <View style={{\n                                    top: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    right: 0,\n                                    position: 'absolute',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    height: '700px'  // Same height as the iframe for consistent layout\n                                }}>\n                                    <Spinner\n                                        animating\n                                        size=\"lg\"\n                                        color={'#7B9CFF'}\n                                    />\n                                </View>\n                            )}\n                            {selectedFileUrl !== '' &&\n                                (\n                                    screenWidth < mobileViewBreakpoint ?\n                                        (<>\n                                            {!isLoading &&\n                                                <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\n\n                                                    <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\n                                                </View>\n                                            }\n\n                                            <iframe\n                                                key={iframeKey}\n                                                src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\n                                                id='mobilePdfIframe'\n                                                style={{ width: '100%', height: '700px' }}\n                                                title=\"PDF Viewer\"\n                                                onLoad={handleIframeLoad}\n                                            />\n                                        </>) :\n                                        (<iframe\n                                            src={selectedFileUrl}\n                                            style={{ width: '100%', height: '700px' }}\n                                            title=\"PDF Viewer\"\n                                            onLoad={handleIframeLoad} // Event when iframe has loaded\n                                        />)\n                                )\n                            }\n                        </>\n                    )\n\n\n                }\n\n            </Modal.Content>\n        </Modal>\n    );\n\n};\n\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\n    const chatListData = useSelector((state) => state.chatListData);\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\n    const selectedChatData = useSelector((state) => state.selectedChatData);\n    const activeChatId = useSelector((state) => state.activeChatId);\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\n    const flatListRef = useRef();\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\n\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\n\n    const screenWidth = Dimensions.get('window').width;\n    const screenHeight = Dimensions.get('window').height;\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        // Store the current path\n        const handlePopState = () => {\n            if (screenWidth < mobileViewBreakpoint && activeChatId !== '') {\n                dispatch(setMessageTextInputValue(''));\n                dispatch(setChatMessagesData([]));\n                dispatch(setActiveChatId(''));\n                navigate('/top/chat-messages');\n            }\n        };\n\n        // Add event listener when component mounts or when dependencies change\n        window.addEventListener('popstate', handlePopState);\n\n        // Cleanup function to remove event listener when component unmounts or dependencies change\n        return () => {\n            window.removeEventListener('popstate', handlePopState);\n        };\n\n    }, []);\n\n    const openPreview = (index) => {\n        setSelectedImageIndex(index);\n        setIsPreviewVisible(true);\n    };\n\n    const closePreview = () => {\n        setIsPreviewVisible(false);\n        setSelectedImageIndex(null);\n    };\n\n    const handleImageMessageMouseEnter = (index) => {\n        setHoveredImageIndex(index);\n    };\n\n    const handleImageMessageMouseLeave = () => {\n        setHoveredImageIndex(null);\n    };\n\n    const dispatch = useDispatch();\n\n    const [read, setRead] = useState(selectedChatData.read);\n\n    const handleReadByListModalOpen = () => {\n        dispatch(setReadByListModalVisible(true));\n    };\n\n    const handleReadByListModalClose = () => {\n        dispatch(setReadByListModalVisible(false));\n    };\n\n    const animatedValue = useRef(new Animated.Value(0)).current;\n\n    useEffect(() => {\n        Animated.loop(\n            Animated.sequence([\n                Animated.timing(animatedValue, {\n                    toValue: 1,\n                    duration: 2000,\n                    useNativeDriver: true\n                }),\n                Animated.timing(animatedValue, {\n                    toValue: 0,\n                    duration: 2000,\n                    useNativeDriver: true\n                })\n            ])\n        ).start();\n    }, [selectedChatData, chatMessagesData, animatedValue]);\n\n    const borderColor = animatedValue.interpolate({\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\n        outputRange: [\n            'rgb(255, 100, 100)', // Red\n            'rgb(100, 255, 100)', // Green\n            'rgb(100, 100, 255)', // Blue\n            'rgb(255, 255, 100)', // Yellow\n            'rgb(255, 100, 255)'  // Magenta\n        ]\n    });\n\n    const renderFooter = () => {\n        return (\n            <>\n                {!noMoreMessagesData && (\n                    <View style={{ paddingVertical: 20, height: 60, }}>\n                        {loadMoreMessagesLoading && (\n                            <Spinner\n                                animating\n                                size=\"sm\"\n                                color={'#7B9CFF'}\n                            />\n                        )}\n                    </View>\n                )}\n            </>\n\n        );\n    };\n\n    const handleLoadMoreMessages = async () => {\n        dispatch(setLoadMoreMessagesLoading(true));\n        dispatch(setNoMoreMessagesData(false));\n\n        let nextQuery;\n        if (!globalMessagesLastVisible) {\n            // No more data to load or globalLastVisible is undefined\n            dispatch(setLoadMoreMessagesLoading(false));\n            dispatch(setNoMoreMessagesData(true));\n        }\n\n        else {\n            dispatch(setLoadMoreMessagesLoading(true));\n            dispatch(setNoMoreMessagesData(false));\n\n            nextQuery = query(\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\n                orderBy('timestamp', 'desc'),\n                startAfter(globalMessagesLastVisible),\n                limit(10)\n            );\n            try {\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\n                    if (snapshot.empty) {\n                        // Handle the case when there's no more data\n                        console.log(\"No more data to load\");\n                        setTimeout(() => {\n                            dispatch(setLoadMoreMessagesLoading(false));\n                            dispatch(setNoMoreMessagesData(true));\n                            globalMessagesLastVisible = null;\n                        }, 0);  // Delay setting loading and no more data flags\n                        return;\n                    }\n\n                    const chatsData = [];\n                    snapshot.forEach((doc) => {\n                        chatsData.push({\n                            id: doc.id,\n                            ...doc.data(),\n                        });\n                    });\n\n\n                    // Append new data to the existing list\n\n                    setTimeout(() => {\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\n                        dispatch(setLoadMoreMessagesLoading(false));\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\n                    }, 0);\n\n                });\n\n                return unsubscribe;\n            } catch (error) {\n                console.error('Error fetching data from Firebase:', error);\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\n            }\n\n        }\n\n    };\n\n    const updateChatToRead = async () => {\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\n        if (email !== '') {\n            try {\n\n                await updateDoc(docRef, {\n                    read: true,\n                    readBy: arrayUnion(email),\n                });\n            } catch (error) {\n                console.error(\"Error updating document: \", error);\n            }\n        }\n\n    };\n\n    useEffect(() => {\n        if (activeChatId == selectedChatData.id) {\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\n                dispatch(setChatMessagesData([]));\n                dispatch(setMessageTextInputValue(''));\n                dispatch(setActiveChatId(''));\n            }\n            else {\n                updateChatToRead();\n            }\n\n        }\n\n\n    }, [selectedChatData]);\n\n    const handlePreviewInvoiceModalOpen = () => {\n        dispatch(setPreviewInvoiceVisible(true));\n    };\n\n    const formatDate = (timestamp) => {\n        // Parse the original timestamp\n        // Expected format: \"2024/01/15 at 12:17:50\"\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\n        if (!parts) return timestamp; // Return original if parsing fails\n\n        // Create a new Date object\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\n\n        // Format month names\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n        // Convert to 12-hour format and determine AM or PM\n        const hours = date.getHours();\n        const isPM = hours >= 12;\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\n        const amPm = isPM ? 'PM' : 'AM';\n\n        // Construct the new format with year at the beginning\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\n    };\n\n    const extractUsernameFromEmail = (email) => {\n        const [username] = email.split('@');\n        return username;\n    };\n\n\n    const breakUrl = (url, maxUrlLength = 30) => {\n        let brokenUrl = '';\n        while (url.length > 0) {\n            brokenUrl += url.substring(0, maxUrlLength);\n            if (url.length > maxUrlLength) {\n                brokenUrl += '\\u200B'; // Zero-width space\n            }\n            url = url.substring(maxUrlLength);\n        }\n        return brokenUrl;\n    };\n\n    const isUrl = (text) => {\n        // Simple URL check\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return !!urlPattern.test(text);\n    };\n\n    const handleLinkPress = (url) => {\n        Linking.canOpenURL(url).then(supported => {\n            if (supported) {\n                Linking.openURL(url);\n            } else {\n                console.log(\"Don't know how to open URI: \" + url);\n            }\n        });\n    };\n\n    const cleanUrl = (url) => {\n        // Removing Zero Width Space and other potential invisible characters\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\n    };\n\n\n    const renderItemText = (isGlobalCustomerSender, text) => {\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\n        let segments = text.split(urlPattern);\n\n        const insertBreaks = (str, n) => {\n            // Inserts a zero-width space every 'n' characters in 'str'\n            let result = '';\n            while (str.length > 0) {\n                result += str.substring(0, n) + '\\u200B';\n                str = str.substring(n);\n            }\n            return result;\n        };\n\n        return segments.map((segment, index) => {\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\n\n            if (isUrlForText(segment)) {\n                // Apply breaks for long URLs\n                return (\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\n                        <Text\n                            selectable\n                            style={{\n                                fontWeight: '400',\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\n                                fontSize: 16,\n                                flexShrink: 1,\n                                textDecorationLine: 'underline',\n                                flexWrap: 'wrap',\n                            }}\n                        >\n                            {segmentWithBreaks}\n                        </Text>\n                    </Pressable>\n                );\n            } else {\n                return (\n                    <Text\n                        selectable\n                        key={index}\n                        style={{\n                            fontWeight: '400',\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\n                            fontSize: screenWidth < mobileViewBreakpoint ? 14 : 16,\n                            flexShrink: 1,\n                            flexWrap: 'wrap',\n                        }}\n                    >\n                        {segmentWithBreaks}\n                    </Text>\n                );\n            }\n        });\n    };\n\n\n\n    const getFileIcon = (fileName) => {\n        const iconSize = 24;\n        const lowerFileName = fileName.toLowerCase();\n\n        if (lowerFileName.endsWith('.pdf')) {\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\n        }\n        // Add more conditions for other file types as needed\n        // Example for .docx files\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\n        }\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\n        }\n\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\n            return <FastImage\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\n                style={{\n                    width: iconSize,\n                    height: iconSize,\n                }}\n                resizeMode={FastImage.resizeMode.cover}\n            />;\n        }\n        // Default icon if no specific type is matched\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\n    };\n\n    const isUrlForText = (text) => {\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\n        return urlPattern.test(text);\n    }\n\n    const renderItem = ({ item, index }) => {\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\n        const isHovered = hoveredImageIndex === index;\n        const textFontSize = screenWidth < mobileViewBreakpoint ? 14 : 16;\n\n        return (\n            <View style={{\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                width: '100%',\n                height: '100%',\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\n                marginVertical: 4,\n                maxWidth: screenWidth < mobileViewBreakpoint ? '80%' : '60%', // Max width for long messages\n                // borderWidth: 1,\n                // borderColor: 'red',\n            }}>\n                {item.messageType == 'IssuedInvoice' &&\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\n                            <Animated.View style={{\n                                padding: 7,\n                                flex: 1,\n                                borderRadius: 5,\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\n                                borderWidth: 3,\n                                borderColor: borderColor,\n                            }}>\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\n                                    <Text underline selectable style={{\n                                        fontWeight: 400,\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\n                                        fontSize: textFontSize,\n                                    }}>\n                                        {item.text.trim()}\n                                    </Text>\n                                </Pressable>\n                            </Animated.View>\n                            <View style={{\n                                position: 'absolute',\n                                left: -60,\n                                top: '50%',\n                                bottom: '50%',\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                            }}>\n                                {/* Display read status text outside of the message bubble */}\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\n                                    <View style={{\n                                        alignSelf: 'flex-end',\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\n                                        alignSelf: 'center',\n                                    }}>\n                                        <Pressable\n                                            focusable={false}\n                                            onHoverIn={() => setIsEyeHovered(true)}\n                                            onHoverOut={() => setIsEyeHovered(false)}\n                                            onPress={handleReadByListModalOpen}\n                                        >\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\n                                        </Pressable>\n                                    </View>\n                                )}\n                            </View>\n                        </View>\n\n                        {/* Additional message properties like timestamp and sender */}\n                        <Text style={{\n                            fontWeight: '300',\n                            color: '#888c96',\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\n                            marginTop: 4,\n                            marginBottom: 4,\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\n                        }}\n                            selectable>\n                            {!isGlobalCustomerSender ?\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\n                            }\n                        </Text>\n\n                    </View>\n                }\n\n\n                {item.messageType == 'InputPayment' &&\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\n                            <Animated.View style={{\n                                padding: 7,\n                                flex: 1,\n                                borderRadius: 5,\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\n                                borderWidth: 3,\n                                borderColor: borderColor,\n                            }}>\n                                <Text selectable style={{\n                                    fontWeight: 400,\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\n                                    fontSize: textFontSize,\n                                }}>\n                                    {item.text.trim()}\n                                </Text>\n                            </Animated.View>\n                            <View style={{\n                                position: 'absolute',\n                                left: -60,\n                                top: '50%',\n                                bottom: '50%',\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                            }}>\n                                {/* Display read status text outside of the message bubble */}\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\n                                    <View style={{\n                                        alignSelf: 'flex-end',\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\n                                        alignSelf: 'center',\n                                    }}>\n                                        <Pressable\n                                            focusable={false}\n                                            onHoverIn={() => setIsEyeHovered(true)}\n                                            onHoverOut={() => setIsEyeHovered(false)}\n                                            onPress={handleReadByListModalOpen}\n                                        >\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\n                                        </Pressable>\n                                    </View>\n                                )}\n                            </View>\n                        </View>\n\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\n                        <Text style={{\n                            fontWeight: '300',\n                            color: 'gray',\n                            fontSize: 11,\n                            marginTop: 4,\n                            marginBottom: 4,\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\n                        }}\n                            selectable>\n                            {!isGlobalCustomerSender ?\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\n                            }\n                        </Text>\n                    </View>\n                }\n\n\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\n                        {item.text && item.text !== '' &&\n                            <View style={{\n                                marginBottom: 5,\n                                padding: 10,\n                                borderRadius: 5,\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\n                                flexShrink: 1,\n                            }}>\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\n                            </View>\n                        }\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\n\n                            <View style={{\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                                flex: 1,\n                            }}>\n                                <View style={{\n                                    marginBottom: 5,\n                                    padding: 10,\n                                    borderRadius: 5,\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\n                                    flexShrink: 1,\n                                }}>\n                                    <Pressable\n                                        onPress={() => {\n                                            if (item.file.name.endsWith('.pdf')) {\n                                                globalSelectedFileType = 'pdf'\n                                                dispatch(setPdfViewerModalVisible(true));\n                                                dispatch(setSelectedFileUrl(item.file.url));\n                                                globalSelectedPDFUrl = item.file.url;\n\n                                            }\n                                            else {\n                                                globalSelectedFileType = 'not-pdf'\n                                                dispatch(setPdfViewerModalVisible(true));\n                                                dispatch(setSelectedFileUrl(item.file.url));\n                                                globalSelectedPDFUrl = item.file.url;\n\n\n\n                                            }\n                                            // dispatch(setSelectedFileUrl(item.file.url));\n                                            // // globalSelectedPDFUrl = item.file.url\n                                            // dispatch(setPdfViewerModalVisible(true));\n\n                                        }}\n                                        style={{ flexDirection: 'row', }}\n                                    >\n                                        <View style={{ marginRight: 5, }}>\n                                            {getFileIcon(item.file.name)}\n                                        </View>\n\n                                        <Text underline selectable style={{\n                                            fontWeight: 400,\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\n                                            fontSize: textFontSize,\n                                        }}>\n                                            {item.file.name.trim()}\n                                        </Text>\n                                    </Pressable>\n                                </View>\n                            </View>\n\n                            <View style={{\n                                position: 'absolute',\n                                left: -60,\n                                top: '50%',\n                                bottom: '50%',\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                            }}>\n                                {/* Display read status text outside of the message bubble */}\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\n                                    <View style={{\n                                        alignSelf: 'flex-end',\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\n                                        alignSelf: 'center',\n                                    }}>\n                                        <Pressable\n                                            focusable={false}\n                                            onHoverIn={() => setIsEyeHovered(true)}\n                                            onHoverOut={() => setIsEyeHovered(false)}\n                                            onPress={handleReadByListModalOpen}\n                                        >\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\n                                        </Pressable>\n                                    </View>\n                                )}\n                            </View>\n                        </View>\n\n                        {/* Additional message properties like timestamp and sender */}\n                        <Text style={{\n                            fontWeight: '300',\n                            color: '#888c96',\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\n                            marginTop: 4,\n                            marginBottom: 4,\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\n                        }}\n                            selectable>\n                            {!isGlobalCustomerSender ?\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\n                            }\n                        </Text>\n\n\n                    </View>}\n\n\n                {!item.messageType && item.file && item.file.type == 'image' &&\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\n                        {item.text && item.text !== '' &&\n                            <View style={{\n                                marginBottom: 5,\n                                padding: 10,\n                                borderRadius: 5,\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\n                                flexShrink: 1,\n                            }}>\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\n                            </View>\n                        }\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\n                            <View style={{\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                                flex: 1,\n                            }}>\n                                <View style={{\n                                    padding: 0,\n                                    borderRadius: 10,\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\n                                    flexShrink: 1,\n                                }}>\n                                    <Pressable\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\n                                        onMouseLeave={handleImageMessageMouseLeave}\n                                        onPress={() => openPreview(index)}\n                                        style={{\n                                            position: 'relative', // Ensure relative positioning for the overlay\n                                            width: 250,\n                                            height: 250,\n                                            alignSelf: 'center',\n                                        }}\n                                    >\n                                        <FastImage\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\n                                            style={{\n                                                width: '100%',\n                                                height: '100%',\n                                                borderRadius: 10,\n                                                borderWidth: 1,\n                                                borderColor: '#DADDE1',\n                                            }}\n                                            resizeMode={FastImage.resizeMode.contain}\n                                        />\n                                        {isHovered && (\n                                            <View style={{\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\n                                                borderRadius: 10, // Match the border radius of the image\n                                            }} />\n                                        )}\n                                    </Pressable>\n                                </View>\n                            </View>\n\n                            <View style={{\n                                position: 'absolute',\n                                left: -60,\n                                top: '50%',\n                                bottom: '50%',\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                            }}>\n                                {/* Display read status text outside of the message bubble */}\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\n                                    <View style={{\n                                        alignSelf: 'flex-end',\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\n                                        alignSelf: 'center',\n                                    }}>\n                                        <Pressable\n                                            focusable={false}\n                                            onHoverIn={() => setIsEyeHovered(true)}\n                                            onHoverOut={() => setIsEyeHovered(false)}\n                                            onPress={handleReadByListModalOpen}\n                                        >\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\n                                        </Pressable>\n                                    </View>\n                                )}\n                            </View>\n                        </View>\n\n                        {/* Additional message properties like timestamp and sender */}\n                        <Text style={{\n                            fontWeight: '300',\n                            color: '#888c96',\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\n                            marginTop: 4,\n                            marginBottom: 4,\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\n                        }}\n                            selectable>\n                            {!isGlobalCustomerSender ?\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\n                            }\n                        </Text>\n\n\n                    </View>}\n\n                {!item.messageType && !item.file &&\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\n                            <View style={{\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                                flex: 1,\n                            }}>\n                                <View style={{\n                                    padding: 10,\n                                    borderRadius: 5,\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\n                                    flexShrink: 1,\n                                }}>\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\n                                </View>\n                            </View>\n\n                            <View style={{\n                                position: 'absolute',\n                                left: isGlobalCustomerSender ? '100%' : -60,\n                                top: '50%',\n                                bottom: '50%',\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\n                            }}>\n                                {/* Display read status text outside of the message bubble */}\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\n                                        <View style={{\n                                            alignSelf: 'flex-end',\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\n                                            alignSelf: 'center',\n                                        }}>\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\n                                        </View>\n                                    </Tooltip>\n                                )}\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\n                                    <View style={{\n                                        alignSelf: 'flex-end',\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\n                                        alignSelf: 'center',\n                                    }}>\n                                        <Pressable\n                                            focusable={false}\n                                            onHoverIn={() => setIsEyeHovered(true)}\n                                            onHoverOut={() => setIsEyeHovered(false)}\n                                            onPress={handleReadByListModalOpen}\n                                        >\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\n                                        </Pressable>\n                                    </View>\n                                )}\n                            </View>\n\n                        </View>\n\n                        {/* Additional message properties like timestamp and sender */}\n                        <Text style={{\n                            fontWeight: '300',\n                            color: '#888c96',\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\n                            marginTop: 4,\n                            marginBottom: 4,\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\n                        }}\n                            selectable>\n                            {!isGlobalCustomerSender ?\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\n                            }\n                        </Text>\n\n                    </View>}\n\n            </View>\n        );\n    };\n\n\n    return (\n        chatMessagesData.length > 0 ? (\n            <>\n                <FlatList\n                    style={{ height: 100 }}\n                    ref={flatListRef}\n                    data={chatMessagesData}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.id}\n                    initialNumToRender={10} // Adjust based on your average message size and performance\n                    maxToRenderPerBatch={10}\n                    windowSize={100}\n                    onEndReachedThreshold={0.05}\n                    ListFooterComponent={renderFooter}\n                    onEndReached={handleLoadMoreMessages}\n                    inverted\n                />\n                {selectedImageIndex !== null && (\n                    <ImagePreviewModal\n                        isVisible={isPreviewVisible}\n                        onClose={closePreview}\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\n                    />\n                )}\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\n            </>\n        ) : null\n    );\n};\n\n\nconst ReservedStatusViewForHeader = () => {\n\n    return (\n        <View style={{\n            zIndex: 999,\n            flex: 1,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: '#FFFFCC',\n            padding: 10,\n            borderRadius: 5,\n            opacity: 0.7, // Set border color\n        }}>\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\n        </View>\n    );\n};\n\nconst CancelledViewForHeader = () => {\n\n    return (\n        <View style={{\n            zIndex: 999,\n            flex: 1,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: 'red',\n            padding: 10,\n            borderRadius: 5,\n            opacity: 0.7, // Set border color\n        }}>\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\n        </View>\n    );\n};\n\nexport default function ChatMessages() {\n    const navigate = useNavigate();\n    const selectedChatData = useSelector(state => state.selectedChatData);\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\n    const [email, setEmail] = useState('');\n    const chatListData = useSelector((state) => state.chatListData);\n    const activeChatId = useSelector((state) => state.activeChatId);\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\n    const loginName = useSelector((state) => state.loginName);\n\n    const [name, setName] = useState(loginName);\n\n    // const screenWidth = Dimensions.get('window').width;\n\n    const [activeButton, setActiveButton] = useState('All messages');\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\n\n    const [activeFilterButton, setActiveFilterButton] = useState('');\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\n    const [readButtonValue, setReadButtonValue] = useState(false);\n    const [lastVisible, setLastVisible] = useState(null);\n    const [unreadCount, setUnreadCount] = useState(0);\n    const dispatch = useDispatch();\n\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n\n\n\n\n    useEffect(() => {\n        // globalImageUrl = '';\n        // navigate(`/devadmin/chat-messages/#`);\n        // console.log(encryptDataAPI('rmj-marc'));\n\n        const updateWidth = () => {\n            const newWidth = Dimensions.get('window').width;\n            setScreenWidth(newWidth); // Update the screenWidth state\n        };\n\n        // Add event listener for window resize\n        Dimensions.addEventListener('change', updateWidth);\n\n        // Clean up the event listener when the component unmounts or re-renders\n\n        const fetchIpAndCountry = async () => {\n            try {\n                // dispatch(setChatMessageBoxLoading(true));\n                // Fetch IP Address\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\n                const fetchedIp = ipResponse.data.ip;\n                ip = fetchedIp;\n\n                // Fetch IP Country\n                if (fetchedIp) {\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\n                    const fetchedIpCountry = countryResponse.data.country_name;\n                    ipCountry = fetchedIpCountry;\n                    // dispatch(setChatMessageBoxLoading(false));\n                }\n\n            } catch (error) {\n                console.error('Error fetching IP data:', error);\n            }\n        };\n\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\n        const unrepliedQuery = query(\n            collectionRef,\n            where('read', '==', false),\n            limit(10) // Limit the query to 10 documents\n        );\n\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\n            setUnreadCount(querySnapshot.size); // Update state with the new count\n            fetchIpAndCountry();\n\n        }, (error) => {\n            console.error(\"Error fetching documents: \", error);\n        });\n\n\n\n        // Clean up function to unsubscribe from the listener when the component unmounts\n        return () => {\n            Dimensions.removeEventListener('change', updateWidth);\n            unsubscribe();\n        };\n\n    }, []);\n\n    const handlePress = (buttonTitle, buttonTitleValue) => {\n        if (activeButton == buttonTitle) {\n        }\n        else {\n            setActiveButton(buttonTitle);\n            setActiveButtonValue(buttonTitleValue);\n            setActiveFilterButton('');\n            setUnreadButtonValue(false);\n\n            dispatch(setActiveChatId(''));\n\n            dispatch(setLoadMoreLoading(false));\n            dispatch(setNoMoreData(false));\n        }\n    };\n\n\n    const handleUnreadPress = (buttonTitle) => {\n\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\n        setUnreadButtonValue(prevState => !prevState);\n        setReadButtonValue(false);\n    };\n\n    const handleReadPress = (buttonTitle) => {\n\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\n        setReadButtonValue(prevState => !prevState);\n        setUnreadButtonValue(false);\n\n    };\n\n\n    //Main fetch\n    useEffect(() => {\n        let queryRef;\n        dispatch(setMessageTextInputValue(''));\n        dispatch(setChatMessagesData([]));\n        dispatch(setChatMessageBoxLoading(false));\n        dispatch(setActiveChatId(''));\n\n        // Helper function to build the query\n        const buildQuery = () => {\n            const searchValue = chatListSearchText.toUpperCase();\n\n            if (unreadButtonValue) {\n                if (activeButtonValue === 0) {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                } else {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                }\n            }\n            else if (readButtonValue) {\n                if (activeButtonValue === 0) {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                } else {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                }\n            }\n            else {\n                if (activeButtonValue === 0) {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                } else {\n                    return searchValue === '' ?\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\n                }\n            }\n        };\n\n        // Build and execute the query\n        queryRef = buildQuery();\n\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\n            const chatsData = [];\n            snapshot.forEach((doc) => {\n                chatsData.push({\n                    id: doc.id,\n                    ...doc.data(),\n                });\n            });\n\n            dispatch(setChatListData(chatsData));\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\n            dispatch(setNoMoreData(false));\n            dispatch(setLoadMoreLoading(false));\n            dispatch(setLoadingModalVisible(false));\n\n        }, (error) => {\n            console.error('Error fetching data from Firebase:', error);\n        });\n\n        // Cleanup function\n        return () => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\n\n\n    useEffect(() => {\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\n            if (!user) {\n                navigate(\"/login\")\n            }\n\n        })\n\n        return unsubscribe\n    }, [])\n\n\n    const handleDocumentChange = (snapshot) => {\n        if (snapshot.exists()) {\n            const data = snapshot.data();\n            const isActive = data.active;\n\n            if (!isActive) {\n                signOut(projectControlAuth)\n                    .then(() => {\n                        navigate(\"/login\")\n                    })\n                    .catch((error) => {\n                        console.error('Error signing out:', error);\n                    });\n            }\n        } else {\n            signOut(projectControlAuth)\n                .then(() => {\n                    navigate(\"/login\")\n                })\n                .catch((error) => {\n                    console.error('Error signing out:', error);\n                });\n        }\n    };\n\n    const subscribeToFieldChange = () => {\n        const userId = projectControlAuth.currentUser?.email;\n        if (userId) {\n            const userRef = doc(firestore, 'accounts', userId);\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n            return unsubscribe;\n        } else {\n            // Return a no-op function if there's no user\n            return () => {\n                navigate(\"/login\")\n            };\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = subscribeToFieldChange();\n\n        return () => {\n            // This will now always be a function\n            unsubscribe();\n        };\n    }, []);\n\n    useEffect(() => {\n\n        const currentUserEmail = getEmailOfCurrentUser();\n        if (currentUserEmail) {\n            getFieldValueByEmail(currentUserEmail);\n            setEmail(currentUserEmail)\n            const documentId = currentUserEmail;\n            listenForNameChange(documentId);\n        }\n    }, []);\n\n\n    const listenForNameChange = (documentId) => {\n\n\n        // To stop listening for updates, you can call unsubscribe()\n        // unsubscribe();\n    };\n\n    const getFieldValueByEmail = async (email) => {\n        try {\n            const accountDocRef = doc(firestore, 'accounts', email);\n            const accountDocSnapshot = await getDoc(accountDocRef);\n\n            onSnapshot(accountDocRef, (docSnapshot) => {\n                if (docSnapshot.exists()) {\n                    const data = docSnapshot.data();\n                    const fieldType = data.type;\n                    const fieldName = data.name;\n                    dispatch(setLoginName(fieldName));\n\n                } else {\n                    // Handle the case where the document does not exist\n                }\n            });\n        } catch (error) {\n            console.error('Error fetching field value:', error);\n        }\n    };\n\n\n    const handleSignOut = () => {\n        // Check if currentUser exists before signing out\n        if (projectControlAuth.currentUser) {\n            signOut(projectControlAuth).then(() => {\n                navigate(\"/login\")\n                setEmail('');\n                setName('');\n            }).catch(() => {\n                // Handle any sign out errors here\n            });\n        } else {\n            // Handle the case where there is no user currently signed in\n            console.log('No user signed in to sign out');\n            // Optionally navigate to the login screen or show a message\n            navigate(\"/login\")\n        }\n    }\n\n    // useEffect(() => {\n    //   const handleScreenResize = () => {\n    //     const screenWidth = Dimensions.get('window').width;\n    //     setIsMobileView(screenWidth < 1200);\n    //   };\n\n    //   // Initial check on component mount\n    //   handleScreenResize();\n\n    //   // Listen for screen dimension changes\n    //   Dimensions.addEventListener('change', handleScreenResize);\n\n    //   // Cleanup event listener on component unmount\n    //   return () => {\n    //     Dimensions.removeEventListener('change', handleScreenResize);\n    //   };\n    // }, []);\n\n\n    const NamePopover = ({ name, handleSignOut }) => {\n        const [showNamePopover, setShowNamePopover] = useState(false);\n\n        const showPopover = () => {\n            setShowNamePopover(!showNamePopover);\n        };\n\n        return (\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n                <Flex direction=\"row-reverse\">\n\n                    <Popover\n                        isOpen={showNamePopover}\n                        trigger={(triggerProps) => (\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                            </Text>\n                        )}\n                        onClose={() => setShowNamePopover(!showNamePopover)}\n                        placement='bottom right'\n                        trapFocus={false}\n                    >\n                        <Popover.Content backgroundColor={'#0642F4'}>\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n                            <Popover.Body backgroundColor={'#0642F4'}>\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                                    Logout\n                                </Button>\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n\n\n\n                </Flex>\n            </Box>\n        );\n    };\n\n    const slideAnim = useRef(new Animated.Value(screenWidth)).current;\n    const isVisible = chatMessagesData.length > 0;\n\n    useEffect(() => {\n        if (isVisible) {\n            // Delayed slide in from right to left with smooth easing\n            Animated.timing(slideAnim, {\n                toValue: 0, // Final position on the screen\n                duration: 300, // Slightly longer duration for smoother effect\n                useNativeDriver: true, // Use native driver for better performance\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\n                delay: 100, // Start with a slight delay for a smoother transition\n            }).start();\n        } else {\n            // Delayed slide out to the right with smooth easing when not visible\n            Animated.timing(slideAnim, {\n                toValue: screenWidth,\n                duration: 300, // Slightly longer duration for smoother effect\n                useNativeDriver: true,\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\n                delay: 100, // Start with a slight delay for a smoother transition\n            }).start();\n        }\n    }, [isVisible, screenWidth, slideAnim]);\n\n    const handlePressBack = () => {\n        dispatch(setMessageTextInputValue(''));\n        dispatch(setChatMessagesData([]));\n        dispatch(setActiveChatId(''));\n        navigate(`/top/chat-messages`);\n    }\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        image: {\n            flex: 1,\n        },\n    });\n\n    return (\n        <>\n            <NativeBaseProvider>\n                <View style={{ backgroundColor: \"white\", height: '100%', width: '100%', flexDirection: 'column', maxHeight: '100vh', overflow: 'hidden', }} >\n                    {/* Header */}\n                    <Box\n                        px=\"3\"\n                        bgColor='#0642f4'\n                        height={54}\n                        position=\"sticky\"\n                        top={0}\n                        zIndex={999}\n                        flexDirection=\"row\"\n                        alignItems=\"center\"\n                        borderBottomWidth={0}\n                        borderBottomColor={'cyan.500'}\n                    >\n\n                        <SideDrawer\n                            selectedScreen={selectedScreen} />\n\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n\n                            <FastImage\n                                source={{\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\n                                    priority: FastImage.priority.high,\n                                }}\n                                resizeMode={FastImage.resizeMode.stretch}\n                                style={styles.image} />\n                        </Box>\n\n                        <View style={{ alignItems: 'center', flex: 1 }}>\n                            <QRCodeScanner />\n                        </View>\n\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\n\n\n                    </Box>\n\n                    {/* Content */}\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                        {/* Sidebar */}\n                        {/* <SideDrawer\n                            selectedScreen={selectedScreen} /> */}\n\n                        {/* Main Content */}\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\n                        {/* Main Content Content */}\n\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\n                        <View style={{ flex: 1, backgroundColor: \"white\", height: '100%' }}>\n                            <View style={{ flex: 1, height: '100%' }}>\n\n                                <View style={{\n                                    display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex',\n                                    borderBottomWidth: 1,\n                                    borderColor: '#f5f5f5',\n                                    width: '100%',\n                                    backgroundColor: 'white',\n                                    height: 60,\n                                }}>\n                                    {/* Chat Header */}\n                                    <View style={{\n                                        flex: 1,\n                                        flexDirection: 'row',\n                                    }}>\n                                        <View style={{\n                                            flex: 1,\n                                            flexDirection: 'row',\n                                        }}>\n                                            <ScrollView scrollEnabled horizontal>\n\n                                                <HeaderButton\n                                                    key={'All messages'}\n                                                    title={'All messages'}\n                                                    onPress={() => handlePress('All messages', 0)}\n                                                    isActive={activeButton === 'All messages'}\n                                                    headerCount={\n                                                        unreadCount > 0 ?\n                                                            (<View style={{\n                                                                backgroundColor: '#FF0000',\n                                                                borderRadius: 100, // Half of width and height\n                                                                width: 20,\n                                                                height: 20, // Same as width for a perfect circle\n                                                                marginLeft: 10,\n                                                                justifyContent: 'center', // Center children vertically\n                                                                alignItems: 'center', // Center children horizontally\n                                                            }}>\n                                                                <Text style={{\n                                                                    color: 'white',\n                                                                    fontWeight: 700,\n                                                                    fontSize: 14,\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\n                                                            </View>) : (<></>)}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Negotiation'}\n                                                    title={'Negotiation'}\n                                                    onPress={() => handlePress('Negotiation', 1)}\n                                                    isActive={activeButton === 'Negotiation'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Issued Proforma Invoice'}\n                                                    title={'Issued Proforma Invoice'}\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Order Item'}\n                                                    title={'Order Item'}\n                                                    onPress={() => handlePress('Order Item', 3)}\n                                                    isActive={activeButton === 'Order Item'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Payment Confirmed'}\n                                                    title={'Payment Confirmed'}\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\n                                                    isActive={activeButton === 'Payment Confirmed'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Shipping Schedule'}\n                                                    title={'Shipping Schedule'}\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\n                                                    isActive={activeButton === 'Shipping Schedule'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Documents'}\n                                                    title={'Documents'}\n                                                    onPress={() => handlePress('Documents', 6)}\n                                                    isActive={activeButton === 'Documents'}\n                                                />\n\n                                                <HeaderButton\n                                                    key={'Vehicle Received'}\n                                                    title={'Vehicle Received'}\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\n                                                    isActive={activeButton === 'Vehicle Received'}\n                                                />\n                                            </ScrollView>\n                                        </View>\n\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', height: '100%', }}>\n                                    {/* Chat Body */}\n\n                                    <View style={{ flex: screenWidth > mobileViewBreakpoint ? '' : 1, display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex', }}>\n\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\n                                            {/* Chat Search */}\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\n                                                {/* <Pressable\n                                                variant=\"ghost\"\n                                                style={{\n                                                    padding: 3,\n                                                    width: 100,\n                                                    flexDirection: 'row', // Align items in a row\n                                                    alignItems: 'center', // Center items vertically\n                                                    borderRadius: 5,\n                                                }}\n                                                backgroundColor='#ECEDF0'\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\n                                            >\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\n                                            </Pressable> */}\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\n                                                    <FilterButton\n                                                        key={'Unread'}\n                                                        title={'Unread '}\n                                                        onPress={() => handleUnreadPress('Unread')}\n                                                        isActive={activeFilterButton === 'Unread'}\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\n                                                    />\n\n                                                    <FilterButton\n                                                        key={'Read'}\n                                                        title={'Read '}\n                                                        onPress={() => handleReadPress('Read')}\n                                                        isActive={activeFilterButton === 'Read'}\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\n                                                    />\n\n                                                </View>\n\n                                            </View>\n                                        </View>\n\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', }}>\n                                            {/* Chat List */}\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\n                                        </View>\n\n                                    </View>\n\n                                    {screenWidth > mobileViewBreakpoint && (chatMessageBoxLoading ? (\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', height: '100%', }}>\n                                            <Spinner\n                                                animating\n                                                size=\"lg\"\n                                                color={'#7B9CFF'}\n                                            />\n                                        </View>) : (\n                                        <View style={{ flex: 1, }}>\n\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\n                                                {/* Chat Message Header */}\n\n                                                <ScrollView scrollEnabled horizontal>\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\n                                                </ScrollView>\n\n                                            </View>\n\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\n\n                                                <View style={{ flex: 1, }}>\n\n                                                    {(selectedChatData && chatMessagesData.length > 0 && selectedCustomerData && selectedVehicleData) &&\n                                                        (selectedChatData && chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\n                                                            (selectedVehicleData.reservedTo !== selectedCustomerData.textEmail))\n                                                        ? <ReservedStatusViewForHeader /> :\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\n                                                    }\n\n                                                    {/* Chat Message Box */}\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\n                                                    <DocumentPreviewModal />\n                                                </View>\n\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\n                                                    {/* Chat Input Text */}\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\n                                                </View>\n\n                                            </View>\n\n                                        </View>\n                                    ))}\n\n                                    {screenWidth < mobileViewBreakpoint && activeChatId !== '' && (chatMessageBoxLoading ? (\n\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\n                                            <Spinner\n                                                animating\n                                                size=\"lg\"\n                                                color={'#7B9CFF'}\n                                            />\n                                        </View>) : (\n\n                                        <Animated.View\n                                            style={{\n                                                backgroundColor: '#E5EBFE',\n                                                height: '100%',\n                                                flex: 1,\n                                                transform: [{ translateX: slideAnim }]\n                                            }}\n\n                                        >\n\n                                            <View style={{ flex: 1 }}>\n                                                <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\n                                                    {/* Chat Message Header */}\n                                                    {(screenWidth < mobileViewBreakpoint && chatMessagesData.length > 0) &&\n                                                        <Pressable onPress={handlePressBack} style={{ justifyContent: 'center', alignItems: 'center', }}>\n                                                            <Ionicons name=\"chevron-back\" size={40} color='black' />\n                                                        </Pressable>\n                                                    }\n\n                                                    <ScrollView scrollEnabled horizontal>\n                                                        {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\n                                                    </ScrollView>\n                                                </View>\n\n                                                <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\n                                                    <View style={{ flex: 1, }}>\n                                                        {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\n                                                            selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\n                                                            ? <ReservedStatusViewForHeader /> :\n                                                            (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\n                                                        }\n                                                        {/* Chat Message Box */}\n                                                        <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\n                                                        <DocumentPreviewModal />\n\n                                                    </View>\n                                                </View>\n                                            </View>\n\n                                            {/* Absolute Positioned Chat Input Text at the Bottom */}\n                                            <View style={{ alignItems: 'center', paddingBottom: 10 }}>\n                                                {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\n                                            </View>\n\n                                        </Animated.View>\n                                    ))}\n                                </View>\n                            </View>\n                            {/* <SuccessModal /> */}\n                        </View>\n                    </View>\n                </View>\n                <LoadingModal />\n            </NativeBaseProvider>\n\n\n        </>\n\n    );\n}","import {\n    Box,\n    Button,\n    Center,\n    Flex,\n    HStack,\n    Icon,\n    Image as NativeImage,\n    Input,\n    Modal,\n    NativeBaseProvider,\n    Popover,\n    Pressable,\n    Spinner,\n    Stack,\n    Text,\n    VStack,\n    useBreakpointValue,\n    TextArea,\n    InputRightAddon,\n    InputGroup,\n    InputLeftAddon,\n    Select,\n    CheckIcon,\n    PresenceTransition,\n    CloseIcon,\n    ScrollView as ScrollViewNative,\n    Divider,\n    useDisclosure,\n    useDisclose,\n    FormControl,\n    Checkbox,\n    useToast,\n} from 'native-base';\nimport { DataTable } from 'react-native-paper';\n\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport {\n    Dimensions,\n    ImageBackground,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    StyleSheet,\n    View,\n    PanResponder,\n    Animated,\n    InputAccessoryView,\n    FlatList,\n    ScrollView,\n    TouchableHighlight,\n    TextInput,\n    Image as RNImage\n} from 'react-native';\nimport 'react-native-gesture-handler';\nimport {\n    AntDesign,\n    FontAwesome,\n    Ionicons,\n    MaterialCommunityIcons,\n    MaterialIcons,\n    Entypo,\n    FontAwesome5,\n    EvilIcons\n} from 'react-native-vector-icons';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { debounce } from 'lodash';\nimport { useNavigation } from '@react-navigation/core';\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\nimport moment from 'moment';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport './../style.css';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\nimport FastImage from 'react-native-fast-image-web-support';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\nimport { DragSortableView } from 'react-native-drag-sort';\nimport {\n    setVehicleListData,\n    setSupplyChainsCostsData,\n    setSelectedPaidTo,\n    setSelectedExpenseName,\n    setSupplyChainsCostsModalVisible,\n    setVehicleListSupplyChainsCostsData,\n    setDeleteImageVisible,\n    setSelectedImages,\n    setAddAnotherImages,\n    setIsAddPhotoVisible,\n    setUploadImagesModalVisible,\n    setUploadImagesButtonLoading,\n    setViewImagesModalVisible,\n    setViewImagesData,\n    setLoadingModalVisible,\n    setAddVehicleListData,\n    setEditVehicleModalVisible,\n    setFobPriceHistoryModalVisible,\n    setSelectedButton,\n    setAddCountryModalVisible,\n    setAddPortModalVisible,\n    setDeletePortModalVisible,\n    setAddPortsForCountriesModalVisible,\n    setCountryPortsData,\n    setDeleteCountryModalVisible,\n    setLoginName\n} from './redux/store';\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\n// import { TextInput } from 'react-native-gesture-handler';\nimport { nanoid } from 'nanoid';\nimport { cloneDeep, merge } from 'lodash';\nimport StickyHeader from './Header/StickyHeader';\nimport { UsePagination } from './VehicleListComponent/UsePagination';\nimport { useNavigate } from 'react-router-dom';\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\n// import { CollectionGroup } from 'firebase-admin/firestore';\nconst { width } = Dimensions.get('window');\nlet selectedScreen = 'FREIGHT'\n\nlet nameVariable = {\n    text: ''\n}\n\nlet defaultSelectedButton = 'countries';\n\nlet selectedPort = '';\nlet selectedCountry = '';\nlet selectedPortForCountry = '';\n\nconst firestore = getFirestore();\n\nconst getEmailOfCurrentUser = () => {\n    const user = projectControlAuth.currentUser;\n    if (user) {\n        const email = user.email;\n        return email;\n    } else {\n        // console.log('No user is currently authenticated');\n        return null;\n    }\n};\n\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\n    // const [selectedItem, setSelectedItem] = useState(null);\n    const [query, setQuery] = useState('');\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n    const [data, setData] = useState([]); // Initialize data state with an empty array\n    const searchRef = useRef(null);\n\n    useEffect(() => {\n        // Your data fetching logic here\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n        // This will start the listener\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\n            if (docSnap.exists()) {\n                const data = docSnap.data();\n                const formattedData = Object.keys(data)\n                    .map((key) => ({\n                        ports: key.replace(/_/g, '.'),\n                        ...data[key],\n                    }))\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\n                setData(formattedData);\n            } else {\n                console.log('No such document!');\n            }\n        }, (error) => {\n            console.error('Error fetching countries: ', error);\n        });\n\n        // This will unsubscribe from the listener when the component is unmounted\n        return () => unsubscribe();\n    }, []);\n\n    const filteredData = data.filter((item) =>\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\n    );\n\n    const renderItem = ({ item }) => (\n        <TouchableOpacity\n            style={{\n                padding: 10,\n                borderBottomWidth: 1,\n                borderBottomColor: '#ccc',\n                width: '100%',\n                backgroundColor: '#85929F',\n            }}\n            onPress={() => {\n                // setSelectedItem(item);\n                selectedPortForCountry = item;\n                setQuery('');\n                setIsDropdownVisible(false);\n\n            }}\n        >\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\n        </TouchableOpacity>\n    );\n\n    useEffect(() => {\n\n        searchRef.current.focus();\n\n    }, [isDropdownVisible])\n\n    useEffect(() => {\n\n        searchRef.current.focus();\n        setIsDropdownVisible(false);\n        selectedPortForCountry = '';\n\n    }, [modalAddOpen])\n\n    return (\n        <View style={{ flex: 1, width: '100%' }}>\n            <Button\n                title=\"Show Dropdown\"\n                onPress={() => {\n                    setIsDropdownVisible(!isDropdownVisible)\n\n                }}\n                bgColor={'#102A43'}\n                style={{ borderWidth: 1 }}\n                flex={1}\n            >\n                <View style={{\n                    flex: 1,\n                    flexDirection: 'row',\n                    justifyContent: 'space-between', // This will position the children at opposite ends\n                }}>\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\n                </View>\n            </Button>\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\n                <TextInput\n                    ref={searchRef}\n                    style={{\n                        outlineStyle: 'none',\n                        padding: 10,\n                        borderWidth: 1,\n                        borderColor: '#102A43',\n                        flex: 1,\n                    }}\n                    placeholder=\"Search...\"\n                    value={query}\n                    onChangeText={(text) => setQuery(text)}\n                />\n                <FlatList\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\n                    data={filteredData}\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item.ports.toString()}\n                />\n            </View>\n\n        </View>\n    );\n};\n\n\n\nconst LoadingModal = () => {\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\n\n\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                flex: 1,\n                display: loadingModalVisible ? 'flex' : 'none',\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            {/* Content within the modal */}\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <Spinner size=\"lg\" color=\"white\" />\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\n            </View>\n        </View>\n\n    );\n\n}\n\n\n//     const dispatch = useDispatch();\n//     const toast = useToast();\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\n//     const [key, setKey] = useState(nanoid());\n\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\n//     const screenWidth = Dimensions.get('window').width;\n\n\n\n//     const handleSaveStockStatus = async () => {\n\n//         dispatch(setLoadingModalVisible(true));\n\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\n//         const { datetime } = response.data;\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n//         const year = moment(datetime).format('YYYY');\n//         const month = moment(datetime).format('MM');\n//         const monthWithDay = moment(datetime).format('MM/DD');\n//         const date = moment(datetime).format('YYYY/MM/DD');\n//         const day = moment(datetime).format('DD');\n//         const time = moment(datetime).format('HH:mm');\n\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\n//             dispatch(setLoadingModalVisible(false));\n//         }\n\n//         else {\n\n//             const stockStatusHistoryData = {\n//                 date: formattedTime,\n//                 stockStatus: selectedStockStatusValue,\n//                 changedBy: nameVariable.text,\n//             };\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\n\n//             try {\n//                 await updateDoc(vehicleProductRef, {\n//                     stockStatus: selectedStockStatusValue,\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\n//                 });\n//                 const logData = {\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\n//                     timestamp: formattedTime,\n//                     colorScheme: true,\n//                     keywords: [\n//                         formattedTime.toLowerCase(),\n//                         globalCurrentStockID.toLowerCase(),\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\n//                         'Stock Status'.toLowerCase(),\n//                         'Stock Status Updated'.toLowerCase(),\n//                         'Stock'.toLowerCase(),\n//                         'Status Updated'.toLowerCase(),\n//                         'Updated'.toLowerCase(),\n//                         globalSelectedCarName.toLowerCase(),\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\n//                         nameVariable.text.toLowerCase(),\n//                         year.toLowerCase(),\n//                         month.toLowerCase(),\n//                         monthWithDay.toLowerCase(),\n//                         date.toLowerCase(),\n//                         day.toLowerCase(),\n//                         time.toLowerCase(),\n//                         timeWithMinutesSeconds.toLowerCase(),\n//                     ],\n//                 };\n//                 addLogToCollection(logData);\n//                 dispatch(setLoadingModalVisible(false));\n\n//                 // console.log('FOB Price updated successfully');\n//                 toast.show({\n//                     render: () => {\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\n//                         </View>;\n//                     }\n//                 })\n//             } catch (error) {\n//                 console.error(error);\n//                 toast.show({\n//                     render: () => {\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\n//                         </View>;\n//                     }\n//                 })\n//             }\n//         }\n//     }\n\n//     return (\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\n//                 <Select\n//                     selectedValue={selectedStockStatusValue}\n//                     onValueChange={(value) => {\n//                         setSelectedStockStatusValue(value);\n//                     }}\n//                     flex={3}\n//                     accessibilityLabel=\"---\"\n//                     placeholder=\"---\"\n//                     _selectedItem={{\n//                         bg: \"teal.600\",\n//                         endIcon: <CheckIcon size=\"5\" />\n//                     }}\n//                 >\n//                     {stockStatusData.map((item) => (\n//                         <Select.Item key={item} label={item} value={item} />\n//                     ))}\n//                 </Select>\n//             </View>\n\n//             <TouchableHighlight\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\n//                 onPress={handleSaveStockStatus}\n//                 style={{\n//                     backgroundColor: '#16A34A',\n//                     borderRadius: 5,\n//                     padding: 3,\n//                     margin: 2,\n//                     alignSelf: 'center',\n//                 }}>\n//                 <MaterialIcons name='update' color='white' size={22} />\n//             </TouchableHighlight>\n//         </View>\n\n\n\n\n//     );\n// };\n\nconst addLogToCollection = async (data) => {\n    try {\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n        // Add a new document to the \"logs\" collection\n        await addDoc(logsCollectionRef, data);\n\n        console.log('Document added successfully!');\n    } catch (error) {\n        console.error('Error adding document:', error);\n    }\n};\n\n\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\n    const [modalSortOpen, setModalSortOpen] = useState(false);\n    const [modalAddOpen, setModalAddOpen] = useState(false);\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\n    const [modalSave, setModalSave] = useState(false);\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\n    const [modalData, setModalData] = useState(data);\n    const [modalIsLoading, setModalIsLoading] = useState(false);\n\n    const handleDeleteItemPress = useCallback(\n        (item) => {\n            setModalData((prevData) => {\n                const updatedData = prevData.filter((value) => value !== item);\n                return updatedData;\n            });\n        },\n        []\n    );\n\n    // useEffect(() => {\n\n    //   fetchData();\n\n    // }, [modalSortOpen]);\n\n\n\n    const fetchData = useCallback(async () => {\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\n        const modalDocSnap = await getDoc(modalDocRef);\n        if (modalDocSnap.exists()) {\n            // setModalData(modalDocSnap.data()?.dataName || []);\n            setModalData(modalDocSnap.data()?.[dataName] || []);\n        }\n    }, [databaseInit, modalData]);\n\n    // useEffect(() => {\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\n    //     setModalData(snapshot.data()?.[dataName] || []);\n    //   });\n\n    //   return () => unsubscribe();\n    // }, [dataName, databaseInit, docName]);\n\n    const handleSave = useCallback(async () => {\n        setModalSaveLoading(true);\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        try {\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\n            setModalSaveLoading(false);\n            setModalSortOpen(true);\n            setModalSave(false);\n\n\n            const logData = {\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\n                timestamp: formattedTime,\n                colorScheme: true,\n                keywords: [\n                    formattedTime.toLowerCase(),\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\n                    `${title} updated`.toLowerCase(),\n                    `\"${title}\" updated`.toLowerCase(),\n                    'updated'.toLowerCase(),\n                    title.toLowerCase(),\n                    nameVariable.text.toLowerCase(),\n                    year.toLowerCase(),\n                    month.toLowerCase(),\n                    monthWithDay.toLowerCase(),\n                    date.toLowerCase(),\n                    day.toLowerCase(),\n                    time.toLowerCase(),\n                    timeWithMinutesSeconds.toLowerCase(),\n                ],\n            };\n\n            addLogToCollection(logData);\n\n        } catch (error) {\n            setModalSaveLoading(false);\n            handleModalSaveClose();\n            console.error(error);\n        }\n\n\n    }, [databaseInit, modalData, dataName, docName]);\n\n\n    const handleSortModalOpen = useCallback(() => {\n        setModalIsLoading(true);\n        fetchData();\n        setModalSortOpen(true);\n        // handleFirstModalClose();\n    }, [modalSortOpen, modalIsLoading]);\n\n    const handleSortModalClose = useCallback(async () => {\n        setModalSortOpen(false);\n        setModalIsLoading(false);\n        // handleFirstModalOpen();\n    }, [modalSortOpen, modalIsLoading]);\n\n    // const handleAddTextChange = () => {\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\n    // };\n\n\n    const handleModalAddOpen = useCallback(() => {\n        setModalAddOpen(true);\n        handleSortModalClose();\n        setModalIsLoading(true);\n        // handleFirstModalClose();\n\n    }, [])\n\n    const handleModalAddClose = useCallback(() => {\n        setModalAddOpen(false);\n        handleSortModalOpen();\n        textAreaAdd.current?.clear();\n    }, [modalAddOpen])\n\n    const handleModalAddSuccessClose = useCallback(() => {\n        setModalAddSuccess(false);\n        // setIsLoading(false);\n        handleSortModalOpen();\n    }, [modalAddSuccess])\n\n    const handleModalAddSuccessOpen = useCallback(() => {\n        setModalAddSuccess(true);\n        handleSortModalClose();\n        setModalAddOpen(false);\n        setModalIsLoading(true);\n        // handleFirstModalClose();\n\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\n\n    const handleModalSaveOpen = useCallback(() => {\n        setModalSave(true);\n        setModalSortOpen(false);\n        setModalIsLoading(true);\n    }, [modalSave, modalSortOpen, modalIsLoading])\n\n    const handleModalSaveClose = useCallback(() => {\n        setModalSave(false);\n        setModalSortOpen(true);\n    }, [modalSave, modalSortOpen]);\n\n    const handleAddSubmit = async () => {\n\n        const data = textAreaAdd.current?.value;\n        const dataArray = data.split('\\n').map((item) => item.trim());\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n        if (data !== '') {\n\n            setModalSaveLoading(true);\n\n            try {\n                const modalCollectionRef = collection(databaseInit, collectionName);\n                const modalDocRef = doc(modalCollectionRef, docName);\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\n\n                const logData = {\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\n                        `${title} added`.toLowerCase(),\n                        `\"${title}\" added`.toLowerCase(),\n                        'added'.toLowerCase(),\n                        title.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                        timeWithMinutesSeconds.toLowerCase(),\n                    ],\n                };\n                addLogToCollection(logData);\n                setModalSaveLoading(false);\n\n                handleModalAddSuccessOpen();\n\n\n\n                console.log('Data added to Firestore');\n            } catch (error) {\n                console.error('Error adding data to Firestore:', error);\n                setModalSaveLoading(false);\n            }\n        }\n        else {\n\n        }\n\n\n    };\n\n    return (\n        <>\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\n\n                {!modalIsLoading ? (\n                    <TouchableOpacity onPress={handleSortModalOpen} >\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\n                    </TouchableOpacity>\n                ) : (\n                    <Spinner color=\"white\" size={20} />\n                )}\n\n\n            </Box>\n\n            <Modal\n                isOpen={modalSortOpen}\n                onClose={handleSortModalClose}>\n                <Modal.Content>\n                    <Modal.CloseButton />\n                    <Modal.Header borderBottomWidth={0}>\n                        <Text color={'#102A43'} bold>{headerText}</Text>\n                    </Modal.Header>\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n                        <Box w={'full'} flexDir={'column'}>\n                            <Box alignItems={'flex-end'}>\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\n                            </Box>\n\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\n\n                                <DraggableFlatList\n                                    style={{ alignContent: 'center', flex: 1, }}\n                                    data={modalData}\n                                    keyExtractor={(item) => item}\n                                    renderItem={({ item, drag }) => (\n\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\n\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\n                                        </Box>\n\n                                    )}\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\n\n                            </Box>\n\n                        </Box>\n\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0}>\n                        <HStack space={5} flex={1}>\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\n                        </HStack>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n\n\n            <Modal\n                isOpen={modalSave}\n                onClose={handleModalSaveClose}>\n                <Modal.Content >\n                    <Modal.CloseButton />\n                    <Modal.Header borderBottomWidth={0}>\n                        <Text color={'#102A43'} bold>Save Order?</Text>\n                    </Modal.Header>\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n                        <Text>Are you sure you want to save changes?</Text>\n\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0} >\n                        <HStack space={5} flex={1}>\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\n                        </HStack>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n\n\n            <Modal\n                isOpen={modalAddOpen}\n                onClose={handleModalAddClose}\n                initialFocusRef={textAreaAdd}>\n                <Modal.Content >\n                    <Modal.CloseButton />\n                    <Modal.Header borderBottomWidth={0}>\n                        <Text color={'#102A43'} bold>Add {title}</Text>\n                    </Modal.Header>\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n                        <TextArea\n                            textAlign={'center'}\n                            w={'full'}\n                            ref={textAreaAdd}\n                            multiline\n                            onChangeText={handleAddTextChange}\n                            totalLines={4}\n                            placeholder=\"Enter your data, separated by new lines\" />\n\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0} >\n                        <HStack space={5} flex={1}>\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\n                        </HStack>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\n                <Modal.Content bgColor={'green.100'}>\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n                        <Text textAlign={'center'} color={'#102A43'} bold>\n                            😊😎 Success! 😎😊\n                        </Text>\n                    </Modal.Header>\n                    <Modal.Body\n                        justifyContent={'center'}\n                        alignItems={'center'}\n                        bgColor={'green.200'}\n                        borderLeftWidth={4}\n                        borderLeftColor={'green.600'}\n                        margin={5}\n                    >\n                        <Box flex={1}>\n                            <Text color={'green.600'} bold>\n                                Added successfully!\n                            </Text>\n                            <Text color={'green.600'}>\n                                Added successfully!\n                            </Text>\n                        </Box>\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n                        <HStack space={5} flex={1}>\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\n                                Ok\n                            </Button>\n                        </HStack>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n\n\n        </>\n\n\n    );\n};\n\n\n\nconst FreightNavigation = () => {\n\n    const screenWidth = Dimensions.get('window').width;\n\n    const dispatch = useDispatch();\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\n\n\n    const handlePress = (button) => {\n        if (button !== selectedButtonState) {\n            dispatch(setLoadingModalVisible(true));\n        }\n        dispatch(setSelectedButton(button));\n        setSelectedButtonState(button);\n    };\n\n    return (\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\n\n            <TouchableOpacity\n                onPress={() => handlePress('countries')}\n                style={{\n                    borderRadius: 5,\n                    flex: 1,\n                    padding: 10,\n                    margin: 10,\n                    borderWidth: 1,\n                    borderColor: 'white',\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\n                    flexDirection: 'row',\n                }}\n            >\n                <MaterialIcons\n                    name=\"flag\" // The icon name from MaterialIcons\n                    size={20} // Set the size of the icon\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\n                />\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => handlePress('ports')}\n                style={{\n                    borderRadius: 5,\n                    flex: 1,\n                    padding: 10,\n                    margin: 10,\n                    borderWidth: 1,\n                    borderColor: 'white',\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\n                    flexDirection: 'row',\n                }}\n            >\n                <MaterialIcons\n                    name=\"directions-boat\" // The icon name from MaterialIcons\n                    size={20} // Set the size of the icon\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\n                />\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\n            </TouchableOpacity>\n\n        </View>\n    );\n}\n\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\n    const [selectedMethod, setSelectedMethod] = useState('');\n    const methodData = useSelector((state) => state.methodData);\n\n    const dispatch = useDispatch();\n    const toast = useToast();\n    let currentValue = '';\n\n\n\n\n    const updatePortMethod = async (portCode, newValue) => {\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n        dispatch(setLoadingModalVisible(true));\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const methodField = `${formattedCountryCode}.method`;\n\n            try {\n                if (currentValue == selectedMethod) {\n\n                    dispatch(setLoadingModalVisible(false));\n\n                }\n                else {\n\n                    await updateDoc(documentRef, {\n                        [methodField]: newValue\n                    });\n\n                    dispatch(setLoadingModalVisible(false));\n                    const logData = {\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\n                            'Method'.toLowerCase(),\n                            'Method Updated'.toLowerCase(),\n                            'Updated'.toLowerCase(),\n                            portCode.toLowerCase(),\n                            newValue.toLowerCase(),\n                            nameVariable.text.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                        ],\n                    };\n                    addLogToCollection(logData);\n                    toast.show({\n                        render: () => {\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\n                            </View>;\n                        }\n                    })\n                    console.log('Method updated successfully');\n                }\n                // Perform the update\n\n            } catch (error) {\n                console.error('Error updating method:', error);\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    };\n\n\n\n    useEffect(() => {\n        // Replace dots with underscores in the country code\n        const formattedPortCode = portCode.replace(/\\./g, '_');\n        // Reference to your document\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n        // Listen for document updates\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\n            if (documentSnapshot.exists()) {\n                // Use bracket notation to access the property using the variable\n                const portData = documentSnapshot.data()[formattedPortCode];\n                // Make sure to check if portData exists before trying to access its properties\n                if (portData && portData.method) {\n                    const method = portData.method;\n                    setSelectedMethod(method);\n                    currentValue = method;\n                }\n                else {\n                    setSelectedMethod('__NativeBasePlaceHolder__');\n                }\n            } else {\n                // documentSnapshot.data() will be undefined in this case\n                console.log('No such document!');\n            }\n        },\n            (error) => {\n                // Handle the error\n                console.error(\"Error getting document: \", error);\n            });\n\n        // Detach the listener when the component unmounts\n        return () => unsubscribe();\n    }, [page, searchQuery]);\n\n    return (\n        <View style={{ flexDirection: 'row', width: '100%', }}>\n\n\n            <Select\n                selectedValue={selectedMethod}\n                onValueChange={(value) => {\n                    setSelectedMethod(value);\n                }}\n                bgColor={'white'}\n                flex={1}\n                accessibilityLabel=\"---\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />\n                }}\n            >\n                {methodData.map((item) => (\n                    <Select.Item key={item} label={item} value={item} />\n                ))}\n            </Select>\n            <TouchableHighlight\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\n                style={{\n                    backgroundColor: '#16A34A',\n                    borderRadius: 5,\n                    padding: 5,\n                    margin: 2,\n                    alignSelf: 'center',\n                }}>\n                <MaterialIcons name='update' color='white' size={22} />\n            </TouchableHighlight>\n        </View>\n    );\n}\n\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\n\n    const dispatch = useDispatch();\n    const toast = useToast();\n    let currentValue = '';\n\n\n\n\n    const updateCountryInspection = async (countryCode, newValue) => {\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        dispatch(setLoadingModalVisible(true));\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\n\n            try {\n                if (currentValue == selectedInspectionIsRequired) {\n\n                    dispatch(setLoadingModalVisible(false));\n\n                }\n                else {\n\n                    await updateDoc(documentRef, {\n                        [inspectionIsRequiredField]: newValue\n                    });\n\n                    dispatch(setLoadingModalVisible(false));\n                    const logData = {\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\n                            'Inspection'.toLowerCase(),\n                            'Inspection Updated'.toLowerCase(),\n                            'Updated'.toLowerCase(),\n                            countryCode.toLowerCase(),\n                            newValue.toLowerCase(),\n                            nameVariable.text.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                        ],\n                    };\n                    addLogToCollection(logData);\n                    toast.show({\n                        render: () => {\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\n                            </View>;\n                        }\n                    })\n                    console.log('Inspection updated successfully');\n                }\n                // Perform the update\n\n            } catch (error) {\n                console.error('Error updating inspection:', error);\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    };\n\n\n\n    useEffect(() => {\n        // Replace dots with underscores in the country code\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\n        // Reference to your document\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n\n        // Listen for document updates\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\n            if (documentSnapshot.exists()) {\n                // Use bracket notation to access the property using the variable\n                const countryData = documentSnapshot.data()[formattedCountryCode];\n                // Make sure to check if countryData exists before trying to access its properties\n                if (countryData && countryData.inspectionIsRequired) {\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\n                    currentValue = inspectionIsRequired;\n\n\n                }\n            } else {\n                // documentSnapshot.data() will be undefined in this case\n                console.log('No such document!');\n            }\n        },\n            (error) => {\n                // Handle the error\n                console.error(\"Error getting document: \", error);\n            });\n\n        // Detach the listener when the component unmounts\n        return () => unsubscribe();\n    }, [page, searchQuery]);\n\n    return (\n        <View style={{ flexDirection: 'row', width: width, }}>\n\n\n            <Select\n                selectedValue={selectedInspectionIsRequired}\n                onValueChange={(value) => {\n                    setSelectedInspectionIsRequired(value);\n                }}\n                bgColor={'white'}\n                flex={1}\n                accessibilityLabel=\"---\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />\n                }}\n            >\n                {inspectionIsRequiredData.map((item) => (\n                    <Select.Item key={item} label={item} value={item} />\n                ))}\n            </Select>\n            <TouchableHighlight\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\n                style={{\n                    backgroundColor: '#16A34A',\n                    borderRadius: 5,\n                    padding: 5,\n                    margin: 2,\n                    alignSelf: 'center',\n                }}>\n                <MaterialIcons name='update' color='white' size={22} />\n            </TouchableHighlight>\n        </View>\n    );\n}\n\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\n    const dispatch = useDispatch();\n    const toast = useToast();\n    let currentValue = '';\n\n\n\n\n    const updateCountryInspectionName = async (countryCode, newValue) => {\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        dispatch(setLoadingModalVisible(true));\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\n\n            try {\n                if (currentValue == selectedInspectionName) {\n\n                    dispatch(setLoadingModalVisible(false));\n\n                }\n                else {\n\n                    await updateDoc(documentRef, {\n                        [inspectionNameField]: newValue\n                    });\n\n                    dispatch(setLoadingModalVisible(false));\n                    const logData = {\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\n                            'Inspection Name'.toLowerCase(),\n                            'Inspection'.toLowerCase(),\n                            'Inspection Name Updated'.toLowerCase(),\n                            'Name'.toLowerCase(),\n                            'Updated'.toLowerCase(),\n                            newValue.toLowerCase(),\n                            countryCode.toLowerCase(),\n                            nameVariable.text.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                        ],\n                    };\n                    addLogToCollection(logData);\n                    toast.show({\n                        render: () => {\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\n                            </View>;\n                        }\n                    })\n                    console.log('Inspection Name updated successfully');\n                }\n                // Perform the update\n\n            } catch (error) {\n                console.error('Error updating inspection:', error);\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    };\n\n    useEffect(() => {\n        // Replace dots with underscores in the country code\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\n\n        // Reference to your document\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n\n        // Listen for document updates\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\n            if (documentSnapshot.exists()) {\n                // Use bracket notation to access the property using the variable\n                const countryData = documentSnapshot.data()[formattedCountryCode];\n                // Make sure to check if countryData exists before trying to access its properties\n                if (countryData && countryData.inspectionName) {\n                    const inspectionName = countryData.inspectionName;\n                    setSelectedInspectionName(inspectionName);\n                    currentValue = inspectionName;\n\n                }\n                else {\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\n                    currentValue = '__NativeBasePlaceHolder__';\n                }\n            } else {\n                // documentSnapshot.data() will be undefined in this case\n\n                console.log('No such document!');\n            }\n        },\n            (error) => {\n                // Handle the error\n                console.error(\"Error getting document: \", error);\n            });\n\n        // Detach the listener when the component unmounts\n        return () => unsubscribe();\n    }, [page, searchQuery]);\n\n    return (\n        <View style={{ flexDirection: 'row', width: width, }}>\n            <Select\n                selectedValue={selectedInspectionName}\n                onValueChange={(value) => {\n                    setSelectedInspectionName(value);\n                }}\n                bgColor={'white'}\n                flex={1}\n                accessibilityLabel=\"---\"\n                placeholder=\"---\"\n                _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <CheckIcon />\n                }}\n            >\n                {inspectionNameData.map((item) => (\n                    <Select.Item key={item} label={item} value={item} />\n                ))}\n            </Select>\n            <TouchableHighlight\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\n                style={{\n                    backgroundColor: '#16A34A',\n                    borderRadius: 5,\n                    padding: 5,\n                    margin: 2,\n                    alignSelf: 'center',\n                }}>\n                <MaterialIcons name='update' color='white' size={22} />\n            </TouchableHighlight>\n        </View>\n    );\n}\n\n\nconst countriesList = [\n    \"Zambia\",\n    \"D.R.Congo\",\n    \"Mozambique\",\n    \"Zimbabwe\",\n    \"Uganda\",\n    \"Tanzania\",\n    \"Malawi\",\n    \"Burundi\",\n    \"Lesotho\",\n    \"South Sudan\",\n    \"Botswana\",\n    \"Kenya\",\n    \"Republic of South Africa\",\n    \"Djibouti\",\n    \"Ethiopia\",\n    \"Angola\",\n    \"Benin\",\n    \"Cameroon\",\n    \"Gabon\",\n    \"Ghana\",\n    \"Guinea\",\n    \"Madagascar\",\n    \"Mali\",\n    \"Namibia\",\n    \"Nigeria\",\n    \"Rwanda\",\n    \"Sierra Leone\",\n    \"Sudan\",\n    \"Algeria\",\n    \"Canary Islands\",\n    \"Cape Verde\",\n    \"Central African Republic\",\n    \"Chad\",\n    \"Equatorial Guinea\",\n    \"Eritrea\",\n    \"Gambia\",\n    \"Liberia\",\n    \"Mahe\",\n    \"Maldives\",\n    \"Mauritania\",\n    \"Mayotte\",\n    \"Morocco\",\n    \"Niger\",\n    \"Republic of Guinea-Bissau\",\n    \"Republic of the Congo\",\n    \"Reunion\",\n    \"Saint Helena\",\n    \"Sao Tome and Principe\",\n    \"Seychelles\",\n    \"Swaziland\",\n    \"Tunisia\",\n    \"Afghanistan\",\n    \"Albania\",\n    \"American Samoa\",\n    \"Anguilla\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Aruba\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas\",\n    \"Bahrain\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Belgium\",\n    \"Belize\",\n    \"Bermuda\",\n    \"Bhutan\",\n    \"Bolivia\",\n    \"Bonaire/Netherlands Antilles\",\n    \"Brazil\",\n    \"British Virgin Islands\",\n    \"Brunei Darussalam\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Cambodia\",\n    \"Canada\",\n    \"Cayman Islands\",\n    \"Chile\",\n    \"Colombia\",\n    \"Commonwealth of Dominica\",\n    \"Comoros\",\n    \"Cook Islands\",\n    \"Costa Rica\",\n    \"Cote D'Ivoire\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Curacao/Netherlands Antilles\",\n    \"Cyprus\",\n    \"Czech Republic\",\n    \"Denmark\",\n    \"Dominican Republic\",\n    \"East Timor\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"Estonia\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"French Guiana\",\n    \"French Polynesia\",\n    \"Georgia\",\n    \"Germany\",\n    \"Greece\",\n    \"Grenada\",\n    \"Guadeloupe\",\n    \"Guatemala\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Honduras\",\n    \"Hong Kong\",\n    \"Hungary\",\n    \"Iceland\",\n    \"India\",\n    \"Indonesia\",\n    \"Iran\",\n    \"Iraq\",\n    \"Ireland\",\n    \"Israel\",\n    \"Italy\",\n    \"Jamaica\",\n    \"Japan\",\n    \"Jordan\",\n    \"Kazakhstan\",\n    \"Kiribati\",\n    \"Korea\",\n    \"Kuwait\",\n    \"Kyrgyzstan\",\n    \"LAO PDR\",\n    \"Latvia\",\n    \"Lebanon\",\n    \"Libya\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Macau\",\n    \"Malaysia\",\n    \"Malta\",\n    \"Marshall Islands\",\n    \"Martinique\",\n    \"Mauritius\",\n    \"Mexico\",\n    \"Micronesia\",\n    \"Moldova\",\n    \"Mongolia\",\n    \"Montenegro\",\n    \"Montserrat\",\n    \"Myanmar\",\n    \"Nauru\",\n    \"Nepal\",\n    \"Netherlands\",\n    \"Netherlands Antilles\",\n    \"New Caledonia\",\n    \"New Zealand\",\n    \"Niue\",\n    \"Norway\",\n    \"Oman\",\n    \"Pakistan\",\n    \"Palau\",\n    \"Panama\",\n    \"Papua New Guinea\",\n    \"Paraguay\",\n    \"People's Republic of China\",\n    \"Peru\",\n    \"Philippines\",\n    \"Poland\",\n    \"Portugal\",\n    \"Puerto Rico\",\n    \"Qatar\",\n    \"Republic of Belarus\",\n    \"Republic of El Salvador\",\n    \"Republic of Macedonia\",\n    \"Republic of Nicaragua\",\n    \"Romania\",\n    \"Russian Federation\",\n    \"Saba Island\",\n    \"Saint Eustatius\",\n    \"Saint Kitts And Nevis\",\n    \"Samoa\",\n    \"Saudi Arabia\",\n    \"Senegal\",\n    \"Serbia\",\n    \"Singapore\",\n    \"Slovak Republic\",\n    \"Slovenia\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"Spain\",\n    \"Sri Lanka\",\n    \"St. Barthelemy\",\n    \"St. Croix\",\n    \"St. Lucia\",\n    \"St. Maarten\",\n    \"St. Thomas\",\n    \"St. Vincent\",\n    \"Suriname\",\n    \"Sweden\",\n    \"Switzerland\",\n    \"Syria\",\n    \"Taiwan\",\n    \"Tajikistan\",\n    \"Thailand\",\n    \"Togo\",\n    \"Tonga\",\n    \"Tortola\",\n    \"Trinidad and Tobago\",\n    \"Turkey\",\n    \"Turkmenistan\",\n    \"Turks and Caicos Islands\",\n    \"Tuvalu\",\n    \"UAE\",\n    \"Ukraine\",\n    \"United Kingdom\",\n    \"Uruguay\",\n    \"US Virgin Islands\",\n    \"USA\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela\",\n    \"Vietnam\",\n    \"Wallis et Futuna\",\n    \"Yemen\",\n    \"Somaliland\",\n\n];\n\n\nconst addPort = async (portName, country, sortOrder) => {\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n\n    // New country data\n    const newCountryData = {\n        [portName]: {\n            country: country,\n            sortOrder: sortOrder,\n            method: '',\n        }\n    };\n\n    // Set document with merge option\n    try {\n        await setDoc(docRef, newCountryData, { merge: true });\n        console.log(\"Country added/updated successfully!\");\n\n    } catch (error) {\n        console.error(\"Error adding/updating country: \", error);\n    }\n};\n\n\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n\n    // New country data\n    const newCountryData = {\n        [countryName]: {\n            inspectionIsRequired: inspectionIsRequired,\n            inspectionName: inspectionName,\n            sortOrder: sortOrder\n        }\n    };\n\n    // Set document with merge option\n    try {\n        await setDoc(docRef, newCountryData, { merge: true });\n        console.log(\"Country added/updated successfully!\");\n\n    } catch (error) {\n        console.error(\"Error adding/updating country: \", error);\n    }\n};\n\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\n\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\n    const inputCountryText = useRef(null);\n    const textAreaAddInspectionIsRequired = useRef(null);\n    const textAreaAddInspectionName = useRef(null);\n    const dispatch = useDispatch();\n    const toast = useToast();\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\n\n    const handleAddInspectionIsRequiredTextChange = () => {\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\n        if (textAreaValue) {\n            const newText = textAreaValue\n                .split('\\n')\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n                .join('\\n');\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\n        }\n    };\n\n    const handleAddInspectionNameTextChange = () => {\n        const textAreaValue = textAreaAddInspectionName.current?.value;\n        if (textAreaValue) {\n            const newText = textAreaValue\n                .split('\\n')\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n                .join('\\n');\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\n        }\n    };\n\n    const handleAddButton = async () => {\n        setAddButtonLoading(true);\n        const countryCode = inputCountryText.current?.value;\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n        if (inputCountryText.current?.value !== '') {\n            try {\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\n                const logData = {\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\n                        'Country'.toLowerCase(),\n                        'Country Added'.toLowerCase(),\n                        'Added'.toLowerCase(),\n                        'Freight'.toLowerCase(),\n                        countryCode.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n\n                addLogToCollection(logData);\n                toast.show({\n                    render: () => {\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\n                        </View>;\n                    }\n                })\n                dispatch(setAddCountryModalVisible(false));\n                setAddButtonLoading(false);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        else {\n            setAddButtonLoading(false);\n        }\n\n\n    }\n\n    const handleFirstModalClose = () => {\n        dispatch(setAddCountryModalVisible(false));\n\n    };\n    const handleFirstModalOpen = () => {\n        dispatch(setAddCountryModalVisible(true));\n    }\n\n    const filterInput = (inputRef) => {\n        const currentValue = inputRef.current.value;\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\n        if (currentValue !== filteredValue) {\n            inputRef.current.setNativeProps({ text: filteredValue });\n        }\n    };\n    return (\n        <Modal\n            isOpen={addCountryModalVisible}\n            onClose={() => {\n                handleAddCountryModalClose();\n                inputCountryText.current.value = '';\n            }}\n            size={'md'}>\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\n                <Modal.Body >\n                    <View style={{ marginVertical: 5, }}>\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\n                        </View>\n                        <TextInput\n                            ref={inputCountryText}\n                            onChangeText={() => filterInput(inputCountryText)}\n                            style={{\n                                outlineStyle: 'none',\n                                flex: 1,\n                                padding: 5,\n                                backgroundColor: 'white',\n                                borderBottomLeftRadius: 5,\n                                borderBottomRightRadius: 5,\n                                placeholderTextColor: '#ACADA3',\n                                borderColor: '#D4D4D4',\n                                borderWidth: 1,\n                            }}\n                            placeholder='Input Country' />\n\n                    </View>\n\n\n                </Modal.Body>\n                <Modal.Footer >\n                    <Button.Group variant=\"solid\" space=\"2\">\n                        <Button colorScheme={'gray'} onPress={() => {\n                            handleAddCountryModalClose();\n                            inputCountryText.current.value = '';\n                        }}>Cancel</Button>\n                        {addButtonLoading ?\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\n                        }\n\n                    </Button.Group>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n\n    );\n\n}\n\nconst NavigatePage = () => {\n    const selectedButton = useSelector((state) => state.selectedButton);\n\n    if (selectedButton === 'countries') {\n        return <CountriesTable />;\n    }\n    if (selectedButton === 'ports') {\n        return <PortsTable />;\n    }\n};\n\n\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\n\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\n    const countryPortsData = useSelector((state) => state.countryPortsData);\n    const [data, setData] = useState([]);\n    const [modalSortOpen, setModalSortOpen] = useState(false);\n    const [modalAddOpen, setModalAddOpen] = useState(false);\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\n    const [modalSave, setModalSave] = useState(false);\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\n    const [modalIsLoading, setModalIsLoading] = useState(false);\n    const dispatch = useDispatch();\n    const toast = useToast();\n\n    useEffect(() => {\n        // Replace dots with underscores in the country code\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\n\n        // Reference to your document\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n\n        // Listen for document updates\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\n            if (documentSnapshot.exists()) {\n                // Use bracket notation to access the property using the variable\n                const countryData = documentSnapshot.data()[formattedCountryCode];\n                // Make sure to check if countryData exists before trying to access its properties\n                if (countryData && countryData.nearestPorts) {\n                    const nearestPorts = countryData.nearestPorts;\n                    setData(nearestPorts);\n\n                }\n                else {\n                    setData([]);\n                }\n            } else {\n                // documentSnapshot.data() will be undefined in this case\n\n                console.log('No such document!');\n            }\n        },\n            (error) => {\n                // Handle the error\n                console.error(\"Error getting document: \", error);\n            });\n\n        // Detach the listener when the component unmounts\n        return () => unsubscribe();\n    }, [addPortsForCountriesModalVisible]);\n\n    const handleDeleteItemPress = useCallback(\n        (item) => {\n            setData((prevData) => {\n                const updatedData = prevData.filter((value) => value !== item);\n                return updatedData;\n            });\n        },\n        []\n    );\n\n    const handleModalAddOpen = useCallback(() => {\n        setModalAddOpen(true);\n        handleAddPortsForCountriesModalClose();\n        setModalIsLoading(true);\n        // handleFirstModalClose();\n\n    }, []);\n\n    const handleModalAddClose = useCallback(() => {\n        setModalAddOpen(false);\n        dispatch(setAddPortsForCountriesModalVisible(true));\n    }, []);\n\n    const addPortForCountryField = async (newValue) => {\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        setModalSaveLoading(true);\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n\n        if (selectedPortForCountry.ports !== '') {\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\n\n            try {\n                // Fetch the current nearestPorts array from Firestore\n                const docSnap = await getDoc(documentRef);\n                if (docSnap.exists()) {\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\n\n                    // Check if selectedPortForCountry is already in the nearestPorts array\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\n                        // Update the document with the new value\n                        await updateDoc(documentRef, {\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\n                        });\n\n                        const logData = {\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\n                            timestamp: formattedTime,\n                            colorScheme: true,\n                            keywords: [\n                                formattedTime.toLowerCase(),\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\n                                'Nearest Ports'.toLowerCase(),\n                                'Nearest'.toLowerCase(),\n                                'Nearest Ports Added'.toLowerCase(),\n                                'Ports'.toLowerCase(),\n                                'Added'.toLowerCase(),\n                                selectedPortForCountry.ports.toLowerCase(),\n                                selectedCountry.toLowerCase(),\n                                nameVariable.text.toLowerCase(),\n                                year.toLowerCase(),\n                                month.toLowerCase(),\n                                monthWithDay.toLowerCase(),\n                                date.toLowerCase(),\n                                day.toLowerCase(),\n                                time.toLowerCase(),\n                            ],\n                        };\n                        addLogToCollection(logData);\n                        handleAddPortsForCountriesModalClose();\n                        toast.show({\n                            render: () => {\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\n                                </View>;\n                            }\n                        })\n                        console.log('Nearest Ports added successfully');\n                        setModalSaveLoading(false);\n                        handleModalAddClose();\n                        // ...\n                    } else {\n                        // Handle the case where the port already exists\n                        console.log('Port already exists in the nearest ports list');\n                        setModalSaveLoading(false);\n\n                        // You can show a message to the user here if needed\n                    }\n                } else {\n                    console.log('No such document!');\n                    setModalSaveLoading(false);\n                }\n            } catch (error) {\n                console.error('Error updating inspection:', error);\n                setModalSaveLoading(false);\n                // Error handling...\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n            console.log(newValue);\n\n        }\n\n    };\n\n\n    const updateCountryPortsField = async (newValue) => {\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        setModalSaveLoading(true);\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\n\n            try {\n\n\n                await updateDoc(documentRef, {\n                    [nearestPortsField]: newValue\n                });\n\n                dispatch(setLoadingModalVisible(false));\n                const logData = {\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\n                        'Nearest Ports'.toLowerCase(),\n                        'Nearest'.toLowerCase(),\n                        'Nearest Ports Updated'.toLowerCase(),\n                        'Ports'.toLowerCase(),\n                        'Updated'.toLowerCase(),\n                        selectedCountry.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n                addLogToCollection(logData);\n                handleAddPortsForCountriesModalClose();\n                toast.show({\n                    render: () => {\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\n                        </View>;\n                    }\n                })\n                console.log('Nearest Ports updated successfully');\n                setModalSaveLoading(false);\n\n                // Perform the update\n\n            } catch (error) {\n                console.error('Error updating inspection:', error);\n                setModalSaveLoading(false);\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n            console.log(newValue);\n\n        }\n\n    };\n\n\n\n    return (\n        <><Modal\n            isOpen={addPortsForCountriesModalVisible}\n            onClose={handleAddPortsForCountriesModalClose}>\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header borderBottomWidth={0}>\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\n                </Modal.Header>\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n                    <View style={{ width: '100%' }}>\n                        <View style={{ alignItems: 'flex-end', }}>\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\n                        </View>\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\n                            <DraggableFlatList\n                                style={{ alignContent: 'center', flex: 1, }}\n                                data={data}\n                                keyExtractor={(item) => item}\n                                renderItem={({ item, drag }) => (\n\n                                    <View style={{\n                                        flex: 1,\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\n                                        borderBottomWidth: 1,\n                                        borderBottomColor: '#A8A29E',\n                                        flexDirection: 'row',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                    }}>\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\n                                    </View>\n\n                                )}\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\n\n\n                        </View>\n\n                    </View>\n                </Modal.Body>\n                <Modal.Footer borderTopWidth={0}>\n                    <HStack space={5} flex={1}>\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n                        {modalSaveLoading ?\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\n                            </Button>) :\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\n                        }\n\n                    </HStack>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n            <Modal\n                isOpen={modalAddOpen}\n                onClose={handleModalAddClose}\n            // initialFocusRef={textAreaAdd}\n            >\n                <Modal.Content>\n                    <Modal.CloseButton />\n                    <Modal.Header borderBottomWidth={0}>\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\n                    </Modal.Header>\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\n\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0}>\n                        <HStack space={5} flex={1}>\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\n                        </HStack>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal></>\n    );\n\n}\n\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\n    const [buttonLoading, setButtonLoading] = useState(false);\n\n    const handleDeleteCountry = async () => {\n        setButtonLoading(true);\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        updateDoc(documentRef, {\n            [formattedFieldCode]: deleteField()\n        })\n            .then(() => {\n                console.log('Field deleted successfully');\n                handleDeleteCountryModalClose();\n                setButtonLoading(false);\n                const logData = {\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\n                    timestamp: formattedTime,\n                    colorScheme: false,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\n                        'Country'.toLowerCase(),\n                        'Country Deleted'.toLowerCase(),\n                        'Deleted'.toLowerCase(),\n                        'Freight'.toLowerCase(),\n                        selectedCountry.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n\n                addLogToCollection(logData);\n            })\n            .catch((error) => {\n                console.error('Error deleting field: ', error);\n            });\n\n    }\n\n    return (\n\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header>Delete Country?</Modal.Header>\n                <Modal.Body>\n                    Are you sure you want to delete the selected country?\n                </Modal.Body>\n                <Modal.Footer>\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                        <TouchableOpacity\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\n                            onPress={handleDeleteCountryModalClose}\n                        >\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\n                        </TouchableOpacity>\n                        {buttonLoading ?\n                            (<TouchableOpacity\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\n                            ><Spinner size={18} color={'white'} />\n                            </TouchableOpacity>) :\n                            (<TouchableOpacity\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\n                                onPress={handleDeleteCountry}\n                            >\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\n                            </TouchableOpacity>)\n                        }\n\n\n                    </View>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n\n\n    );\n}\n\nconst CountriesTable = () => {\n\n\n    const dispatch = useDispatch();\n\n    const optionsPerPage = [10, 20, 50];\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\n    const [data, setData] = useState([]); // This will hold all the countries data   \n    const [page, setPage] = useState(0);\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filteredData, setFilteredData] = useState([]);\n\n    const inputSearchRef = useRef(null);\n    const inputSortOrder = useRef([]);\n    const toast = useToast();\n    const textAreaAddInspectionIsRequired = useRef(null);\n    const textAreaAddInspectionName = useRef(null);\n    const screenWidth = Dimensions.get('window').width;\n\n    useEffect(() => {\n        setPage(0);\n    }, [itemsPerPage]);\n\n    const filtered = useMemo(() => {\n        return data.filter((item) =>\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            item.sortOrder.toString().includes(searchQuery)\n        );\n    }, [searchQuery, data]);\n\n    const paginatedData = useMemo(() => {\n        const startIndex = page * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        return filtered.slice(startIndex, endIndex);\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\n\n\n    const handleSearch = debounce(() => {\n        setSearchQuery(inputSearchRef.current?.value);\n    }, 50);\n\n    const startIndex = page * itemsPerPage;\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\n\n    // useEffect(() => {\n    //     const addCountriesToFirestore = async () => {\n    //         // Create a new list with dots replaced by underscores\n    //         const sanitizedCountriesList = countriesList.map(country =>\n    //             country.replace(/\\./g, '_')\n    //         );\n\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\n    //             // The index of an array is zero-based, to make it one-based add 1\n    //             // (If you really need a one-based index, otherwise just use index)\n    //             const sortOrder = index;\n    //             try {\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\n    //             } catch (error) {\n    //                 console.error(`Error adding country: ${country}`, error);\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\n    //                 // break; // Stop the loop if an error occurs\n    //                 // continue; // Skip to the next iteration\n    //             }\n    //             // Optionally add a delay here if necessary\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\n    //         }\n    //     };\n\n    //     addCountriesToFirestore();\n    // }, []);\n    const handleAddInspectionNameTextChange = () => {\n        const textAreaValue = textAreaAddInspectionName.current?.value;\n        if (textAreaValue) {\n            const newText = textAreaValue\n                .split('\\n')\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n                .join('\\n');\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\n        }\n    };\n\n    const handleAddInspectionIsRequiredTextChange = () => {\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\n        if (textAreaValue) {\n            const newText = textAreaValue\n                .split('\\n')\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n                .join('\\n');\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\n        }\n    };\n\n\n    useEffect(() => {\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        dispatch(setLoadingModalVisible(true));\n\n        // This will start the listener\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\n            if (docSnap.exists()) {\n                const data = docSnap.data();\n                const formattedData = Object.keys(data)\n                    .map(key => ({\n                        country: key.replace(/_/g, '.'),\n                        ...data[key],\n                    }))\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\n                setData(formattedData);\n                setFilteredData(formattedData);\n                dispatch(setLoadingModalVisible(false));\n            } else {\n                console.log(\"No such document!\");\n\n            }\n        }, (error) => {\n            console.error(\"Error fetching countries: \", error);\n\n        });\n\n        // This will unsubscribe from the listener when the component is unmounted\n        return () => unsubscribe();\n    }, []);\n\n\n    const handleAddCountryModalOpen = () => {\n\n        dispatch(setAddCountryModalVisible(true));\n\n    }\n\n    const handleAddCountryModalClose = () => {\n\n        dispatch(setAddCountryModalVisible(false));\n\n    }\n\n\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\n\n        dispatch(setAddPortsForCountriesModalVisible(true));\n        dispatch(setCountryPortsData(nearestPorts));\n        // setSelectedCountry(selectedCountry);\n        selectedCountry = country;\n    }\n\n\n    const handleAddPortsForCountriesModalClose = () => {\n\n        dispatch(setAddPortsForCountriesModalVisible(false));\n    }\n\n    useEffect(() => {\n        paginatedData.forEach(item => {\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\n        });\n        // setInputMemoValues(initialValues);\n\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\n    // Now, to update a specific field\n\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\n        // Specify the document reference\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        dispatch(setLoadingModalVisible(true));\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\n\n            try {\n                // Perform the update\n                await updateDoc(documentRef, {\n                    [sortOrderField]: newValue\n                });\n\n\n\n                const logData = {\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\n                        'Sort'.toLowerCase(),\n                        'Sort Order'.toLowerCase(),\n                        'Sort Order Updated'.toLowerCase(),\n                        'Order Updated'.toLowerCase(),\n                        'Order'.toLowerCase(),\n                        'Updated'.toLowerCase(),\n                        countryCode.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n                toast.show({\n                    render: () => {\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\n                        </View>;\n                    }\n                })\n                addLogToCollection(logData);\n                dispatch(setLoadingModalVisible(false));\n                console.log('Sort order updated successfully');\n            } catch (error) {\n                console.error('Error updating sort order:', error);\n\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    };\n    // Call the function to update the field\n\n\n\n\n    const handleSortOrderTextChange = (text, item) => {\n        // Remove any non-numeric characters from the input text and limit to 3 digits\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\n\n        inputSortOrder.current[item.country].value = numericValue;\n\n    };\n\n\n\n\n    const handleDeleteCountryModalOpen = (selectedValue) => {\n\n        dispatch(setDeleteCountryModalVisible(true));\n        selectedCountry = selectedValue;\n\n    }\n\n    const handleDeleteCountryModalClose = () => {\n\n        dispatch(setDeleteCountryModalVisible(false));\n\n    }\n\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\n\n        // Specify the document reference\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\n        dispatch(setLoadingModalVisible(true));\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const insuranceField = `${formattedCountryCode}.insurance`;\n\n            try {\n                if (currentValue == newValue) {\n\n                    dispatch(setLoadingModalVisible(false));\n\n                }\n                else {\n\n                    await updateDoc(documentRef, {\n                        [insuranceField]: newValue,\n                    });\n\n                    dispatch(setLoadingModalVisible(false));\n                    const logData = {\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\n                        timestamp: formattedTime,\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\n                            'Insurance'.toLowerCase(),\n                            'Inspection'.toLowerCase(),\n                            'Insurance Updated'.toLowerCase(),\n                            'Updated'.toLowerCase(),\n                            newValue.toString().toLowerCase(),\n                            countryCode.toLowerCase(),\n                            nameVariable.text.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                        ],\n                    };\n                    addLogToCollection(logData);\n                    toast.show({\n                        render: () => {\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\n                            </View>;\n                        }\n                    })\n                    console.log('Insurance updated successfully');\n                }\n                // Perform the update\n\n            } catch (error) {\n                console.error('Error updating inspection:', error);\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    }\n\n    return (\n        <>\n            {screenWidth >= 1280 ? (\n                <View style={{ flex: 1, }}>\n                    {/* Search Bar */}\n                    <View style={{ padding: 10 }}>\n                        <TextInput\n                            ref={inputSearchRef}\n                            onSubmitEditing={handleSearch}\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\n                            placeholder='Search'\n                            returnKeyType='search'\n                            autoCapitalize='none'\n                        />\n                    </View>\n\n                    {/* Add Country Button */}\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\n                        <TouchableOpacity\n                            onPress={handleAddCountryModalOpen}\n                            style={{\n                                borderRadius: 5,\n                                padding: 10,\n                                borderWidth: 1,\n                                borderColor: 'white',\n                                backgroundColor: '#16A34A',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\n                        </TouchableOpacity>\n                    </View>\n\n                    {/* Table Headers */}\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            borderBottomWidth: 1,\n                            borderBottomColor: '#E4E4E7',\n                            backgroundColor: '#0642F4',\n                            padding: 10,\n                            borderRadius: 5,\n                            marginTop: 10,\n                        }}\n                    >\n                        <View style={{ flex: 1, padding: 2, }}>\n                            <Text style={{ color: 'white', }} bold>Country</Text>\n                        </View>\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\n                        </View>\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\n                            <SortAndAddModal\n                                collectionName='CustomerCountryPort'\n                                docName='InspectionIsRequiredDoc'\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\n                                textAreaAdd={textAreaAddInspectionIsRequired}\n                                title='Inspection'\n                                dataName={'inspectionIsRequiredData'}\n                                databaseInit={projectExtensionFirestore}\n                                headerText=\"Rearrange/Add Inspection\"\n                                data={inspectionIsRequiredData}\n                            />\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\n                        </View>\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\n                            <SortAndAddModal\n                                collectionName='CustomerCountryPort'\n                                docName='InspectionNameDoc'\n                                handleAddTextChange={handleAddInspectionNameTextChange}\n                                textAreaAdd={textAreaAddInspectionName}\n                                title='Inspection Name'\n                                dataName={'inspectionNameData'}\n                                databaseInit={projectExtensionFirestore}\n                                headerText=\"Rearrange/Add Inspection\"\n                                data={inspectionNameData}\n                            />\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\n                        </View>\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\n                        </View>\n\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\n                        </View>\n\n                    </View>\n\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\n                        {paginatedData.map((item, index) => (\n                            <View\n                                key={index}\n                                style={{\n                                    flex: 1,\n                                    flexDirection: 'row',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    borderBottomWidth: 1,\n                                    borderBottomColor: '#E4E4E7',\n                                    backgroundColor: '#BFDBFE',\n                                    paddingVertical: 10,\n                                }}>\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\n                                    <TextInput\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n\n                                </View>\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\n\n                                </View>\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\n                                </View>\n\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\n                                    <BouncyCheckbox\n                                        size={25}\n                                        fillColor=\"#0642F4\"\n                                        unfillColor=\"#FFFFFF\"\n                                        innerIconStyle={{ borderWidth: 2 }}\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\n                                        isChecked={item.insurance ? item.insurance : false}\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\n                                    />\n                                </View>\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\n                                    <TouchableOpacity\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\n                                    >\n                                        <MaterialIcons\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\n                                            size={20} // Set the size of the icon\n                                            color={'white'} // Set the color based on active state\n                                        />\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\n                                    </TouchableOpacity>\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\n                                <Text>Add Ports</Text>\n                            </TouchableOpacity> */}\n                                </View>\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\n\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#DC2626',\n                                                borderRadius: 5,\n                                                padding: 10,\n                                                alignSelf: 'center',\n                                                height: '100%',\n                                                justifyContent: 'center',\n                                                alignItems: 'center',\n                                            }}>\n                                            <AntDesign name='delete' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\n            <Text key={portIndex}>Nearest Port: {port}</Text>\n          ))} */}\n                            </View>\n                        ))}\n                        <DataTable.Pagination\n                            page={page}\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\n                            onPageChange={(page) => setPage(page)}\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\n                            optionsPerPage={optionsPerPage}\n                            itemsPerPage={itemsPerPage}\n                            setItemsPerPage={setItemsPerPage}\n                            showFastPagination\n                            optionsLabel={'Rows per page'}\n                        />\n                    </DataTable>\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\n                </View>\n            ) :\n\n                (\n                    //Countries Table Mobile View\n                    <View style={{ flex: 1, }}>\n                        {/* Search Bar */}\n                        <View style={{ padding: 10 }}>\n                            <TextInput\n                                ref={inputSearchRef}\n                                onSubmitEditing={handleSearch}\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\n                                placeholder='Search'\n                                returnKeyType='search'\n                                autoCapitalize='none'\n                            />\n                        </View>\n\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\n                            <TouchableOpacity\n                                onPress={handleAddCountryModalOpen}\n                                style={{\n                                    borderRadius: 5,\n                                    padding: 10,\n                                    borderWidth: 1,\n                                    borderColor: 'white',\n                                    backgroundColor: '#16A34A',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\n                            </TouchableOpacity>\n                        </View>\n\n\n                        {/* Table Headers */}\n\n\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\n                            {paginatedData.map((item, index) => (\n                                <View\n                                    key={index}\n                                    style={{\n                                        flex: 1,\n                                        flexDirection: 'column',\n                                        borderWidth: 1,\n                                        borderColor: '#E4E4E7',\n                                        backgroundColor: '#BFDBFE',\n                                        margin: 10,\n                                    }}>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\n                                        </View>\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\n                                            <TextInput\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\n                                            />\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                <TouchableHighlight\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                    style={{\n                                                        backgroundColor: '#16A34A',\n                                                        borderRadius: 5,\n                                                        padding: 5,\n                                                        margin: 2,\n                                                        alignSelf: 'center',\n                                                    }}>\n                                                    <MaterialIcons name='update' color='white' size={22} />\n                                                </TouchableHighlight>\n                                            </View>\n\n                                        </View>\n                                    </View>\n\n\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\n                                        </View>\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\n\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\n                                        </View>\n\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\n                                        </View>\n\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <BouncyCheckbox\n                                                size={25}\n                                                fillColor=\"#0642F4\"\n                                                unfillColor=\"#FFFFFF\"\n                                                innerIconStyle={{ borderWidth: 2 }}\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\n                                                isChecked={item.insurance ? item.insurance : false}\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\n                                            />\n                                        </View>\n                                    </View>\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\n                                        </View>\n\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\n                                                <TouchableOpacity\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\n                                                >\n                                                    <MaterialIcons\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\n                                                        size={20} // Set the size of the icon\n                                                        color={'white'} // Set the color based on active state\n                                                    />\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\n                                                </TouchableOpacity>\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\n                                        </View>\n\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\n\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\n                                                        <AntDesign name='delete' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                </View>\n                            ))}\n                            <DataTable.Pagination\n                                page={page}\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\n                                onPageChange={(page) => setPage(page)}\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\n                                optionsPerPage={optionsPerPage}\n                                itemsPerPage={itemsPerPage}\n                                setItemsPerPage={setItemsPerPage}\n                                showFastPagination\n                                optionsLabel={'Rows per page'}\n                            />\n                        </DataTable>\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\n                    </View>\n                )}\n\n\n        </>\n\n    );\n\n}\n\nconst portsList = {\n    \"Dar es Salaam\": { country: \"Tanzania\" },\n    \"Durban\": { country: \"Republic of South Africa\" },\n    \"Maputo\": { country: \"Mozambique\" },\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\n    \"Mombasa\": { country: \"Kenya\" },\n    \"Lusaka\": { country: \"Zambia\" },\n    \"Matadi\": { country: \"D.R. Congo\" },\n    \"Zanzibar\": { country: \"Tanzania\" },\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\n    \"Aarhus\": { country: \"Denmark\" },\n    \"Abadan\": { country: \"Iran\" },\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\n    \"Acapulco\": { country: \"Mexico\" },\n    \"Adelaide\": { country: \"Australia\" },\n    \"Aden\": { country: \"Yemen\" },\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\n    \"Al Mukalla\": { country: \"Yemen\" },\n    \"Al Qusayr\": { country: \"Egypt\" },\n    \"Al Ruwais\": { country: \"Qatar\" },\n    \"Alexandria\": { country: \"Egypt\" },\n    \"Algiers\": { country: \"Algeria\" },\n    \"Antwerp\": { country: \"Belgium\" },\n    \"Apia\": { country: \"Samoa\" },\n    \"Aqaba\": { country: \"Jordan\" },\n    \"Arwad\": { country: \"Syria\" },\n    \"As Salif\": { country: \"Yemen\" },\n    \"Ash Shihr\": { country: \"Yemen\" },\n    \"Ashdod\": { country: \"Israel\" },\n    \"Ashgabat\": { country: \"Turkmenistan\" },\n    \"Ashkelon\": { country: \"Israel\" },\n    \"Assab\": { country: \"Eritrea\" },\n    \"Assumption Island\": { country: \"Seychelles\" },\n    \"Asunción\": { country: \"Paraguay\" },\n    \"Auckland\": { country: \"New Zealand\" },\n    \"Avarua\": { country: \"Cook Islands\" },\n    \"Balboa\": { country: \"Panama\" },\n    \"Balhaf\": { country: \"Yemen\" },\n    \"Banana\": { country: \"D.R.Congo\" },\n    \"Bandar Abbas\": { country: \"Iran\" },\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\n    \"Bangkok\": { country: \"Thailand\" },\n    \"Baniyas\": { country: \"Syria\" },\n    \"Banjul\": { country: \"Gambia\" },\n    \"Bar\": { country: \"Montenegro\" },\n    \"Barcelona\": { country: \"Spain\" },\n    \"Barranquilla\": { country: \"Colombia\" },\n    \"Basra\": { country: \"Iraq\" },\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\n    \"Batroun\": { country: \"Lebanon\" },\n    \"Batumi\": { country: \"Georgia\" },\n    \"Beira\": { country: \"Mozambique\" },\n    \"Beirut\": { country: \"Lebanon\" },\n    \"Belize City\": { country: \"Belize\" },\n    \"Benghazi\": { country: \"Libya\" },\n    \"Berbera\": { country: \"Somalia\" },\n    \"Berbera\": { country: \"Somaliland\" },\n    \"Bissau\": { country: \"Guinea-Bissau\" },\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\n    \"Blantyre\": { country: \"Malawi\" },\n    \"Bo\": { country: \"Sierra Leone\" },\n    \"Boma\": { country: \"D.R.Congo\" },\n    \"Bosaso\": { country: \"Somalia\" },\n    \"Brava\": { country: \"Somalia\" },\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\n    \"Bridgetown\": { country: \"Barbados\" },\n    \"Brisbane\": { country: \"Australia\" },\n    \"Buchanan\": { country: \"Liberia\" },\n    \"Bucharest\": { country: \"Romania\" },\n    \"Buenos Aires\": { country: \"Argentina\" },\n    \"Busan\": { country: \"South Korea\" },\n    \"Byblos\": { country: \"Lebanon\" },\n    \"Cabinda\": { country: \"Angola\" },\n    \"Calabar\": { country: \"Nigeria\" },\n    \"Calais\": { country: \"France\" },\n    \"Callao\": { country: \"Peru\" },\n    \"Cap-Haitien\": { country: \"Haiti\" },\n    \"Cape Town\": { country: \"South Africa\" },\n    \"Caracas\": { country: \"Venezuela\" },\n    \"Cartagena\": { country: \"Colombia\" },\n    \"Casablanca\": { country: \"Morocco\" },\n    \"Cayenne\": { country: \"French Guiana\" },\n    \"Cebu\": { country: \"Philippines\" },\n    \"Chabahar\": { country: \"Iran\" },\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\n    \"Chekka\": { country: \"Lebanon\" },\n    \"Chisinau\": { country: \"Moldova\" },\n    \"Chittagong\": { country: \"Bangladesh\" },\n    \"Christchurch\": { country: \"New Zealand\" },\n    \"Colombo\": { country: \"Sri Lanka\" },\n    \"Colonia\": { country: \"Micronesia\" },\n    \"Comoros\": { country: \"Comoros\" },\n    \"Conakry\": { country: \"Guinea\" },\n    \"Constanta\": { country: \"Romania\" },\n    \"Constanța\": { country: \"Romania\" },\n    \"Copenhagen\": { country: \"Denmark\" },\n    \"Cork\": { country: \"Ireland\" },\n    \"Cotonou\": { country: \"Benin\" },\n    \"Cristóbal\": { country: \"Panama\" },\n    \"Dakar\": { country: \"Senegal\" },\n    \"Dammam\": { country: \"Saudi Arabia\" },\n    \"Darwin\": { country: \"Australia\" },\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\n    \"Dili\": { country: \"East Timor\" },\n    \"Djibouti\": { country: \"Djibouti\" },\n    \"Doha\": { country: \"Qatar\" },\n    \"Doraleh\": { country: \"Djibouti\" },\n    \"Douala\": { country: \"Cameroon\" },\n    \"Dubai\": { country: \"UAE\" },\n    \"Dublin\": { country: \"Ireland\" },\n    \"Duqm\": { country: \"Oman\" },\n    \"Durrës\": { country: \"Albania\" },\n    \"Dzaoudzi\": { country: \"Mayotte\" },\n    \"Ehoala\": { country: \"Madagascar\" },\n    \"Eil\": { country: \"Somalia\" },\n    \"Eilat\": { country: \"Israel\" },\n    \"El Arish\": { country: \"Egypt\" },\n    \"El Ma'an\": { country: \"Somalia\" },\n    \"El Tor\": { country: \"Egypt\" },\n    \"Famagusta\": { country: \"Cyprus\" },\n    \"Freeport\": { country: \"Bahamas\" },\n    \"Freetown\": { country: \"Sierra Leone\" },\n    \"Fremantle\": { country: \"Australia\" },\n    \"Funafuti\": { country: \"Tuvalu\" },\n    \"Garoua\": { country: \"Cameroon\" },\n    \"Gdansk\": { country: \"Poland\" },\n    \"Gdańsk\": { country: \"Poland\" },\n    \"Gdynia\": { country: \"Poland\" },\n    \"Genoa\": { country: \"Italy\" },\n    \"George Town\": { country: \"Cayman Islands\" },\n    \"Georgetown\": { country: \"Guyana\" },\n    \"Gizo\": { country: \"Solomon Islands\" },\n    \"Gothenburg\": { country: \"Sweden\" },\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\n    \"Greenville\": { country: \"Liberia\" },\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\n    \"Guayaquil\": { country: \"Ecuador\" },\n    \"Gwadar\": { country: \"Pakistan\" },\n    \"Gydnia\": { country: \"Poland\" },\n    \"Hadera\": { country: \"Israel\" },\n    \"Haifa\": { country: \"Israel\" },\n    \"Hamburg\": { country: \"Germany\" },\n    \"Hamilton\": { country: \"Bermuda\" },\n    \"Hargeisa\": { country: \"Somaliland\" },\n    \"Harper\": { country: \"Liberia\" },\n    \"Havana\": { country: \"Cuba\" },\n    \"Helsinki\": { country: \"Finland\" },\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\n    \"Hobyo\": { country: \"Somalia\" },\n    \"Hodeida\": { country: \"Yemen\" },\n    \"Hodeidah\": { country: \"Yemen\" },\n    \"Hong Kong\": { country: \"Hong Kong\" },\n    \"Honiara\": { country: \"Solomon Islands\" },\n    \"Incheon\": { country: \"South Korea\" },\n    \"Inchon\": { country: \"South Korea\" },\n    \"Istanbul\": { country: \"Turkey\" },\n    \"Jaffna\": { country: \"Sri Lanka\" },\n    \"Jakarta\": { country: \"Indonesia\" },\n    \"Jamestown\": { country: \"Saint Helena\" },\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\n    \"Jeddah\": { country: \"Saudi Arabia\" },\n    \"Jizan\": { country: \"Saudi Arabia\" },\n    \"Jounieh\": { country: \"Lebanon\" },\n    \"Jubail\": { country: \"Saudi Arabia\" },\n    \"Jurong\": { country: \"Singapore\" },\n    \"Kandla\": { country: \"India\" },\n    \"Kaohsiung\": { country: \"Taiwan\" },\n    \"Karachi\": { country: \"Pakistan\" },\n    \"Kathmandu\": { country: \"Nepal\" },\n    \"Khartoum\": { country: \"Sudan\" },\n    \"Khasab\": { country: \"Oman\" },\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\n    \"Kingston\": { country: \"Jamaica\" },\n    \"Kinshasa\": { country: \"D.R.Congo\" },\n    \"Kismayo\": { country: \"Somalia\" },\n    \"Klaipeda\": { country: \"Lithuania\" },\n    \"Kobe\": { country: \"Japan\" },\n    \"Kolkata\": { country: \"India\" },\n    \"Koror\": { country: \"Palau\" },\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\n    \"Kribi\": { country: \"Cameroon\" },\n    \"Kuching Port\": { country: \"Malaysia\" },\n    \"Kuwait City\": { country: \"Kuwait\" },\n    \"Kyrenia\": { country: \"Cyprus\" },\n    \"La Ceiba\": { country: \"Honduras\" },\n    \"La Digue\": { country: \"Seychelles\" },\n    \"La Guaira\": { country: \"Venezuela\" },\n    \"La Libertad\": { country: \"El Salvador\" },\n    \"Lae\": { country: \"Papua New Guinea\" },\n    \"Lagos\": { country: \"Nigeria\" },\n    \"Larnaca\": { country: \"Cyprus\" },\n    \"Las Palmas\": { country: \"Canary Islands\" },\n    \"Latakia\": { country: \"Syria\" },\n    \"Le Havre\": { country: \"France\" },\n    \"Le Port\": { country: \"Reunion\" },\n    \"Libreville\": { country: \"Gabon\" },\n    \"Limassol\": { country: \"Cyprus\" },\n    \"Limbe\": { country: \"Cameroon\" },\n    \"Limón\": { country: \"Costa Rica\" },\n    \"Lisbon\": { country: \"Portugal\" },\n    \"Lobito\": { country: \"Angola\" },\n    \"Lomé\": { country: \"Togo\" },\n    \"London\": { country: \"United Kingdom\" },\n    \"Luanda\": { country: \"Angola\" },\n    \"Luganville\": { country: \"Vanuatu\" },\n    \"Lüderitz\": { country: \"Namibia\" },\n    \"Mahé\": { country: \"Seychelles\" },\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\n    \"Majuro\": { country: \"Marshall Islands\" },\n    \"Malabo\": { country: \"Equatorial Guinea\" },\n    \"Male\": { country: \"Maldives\" },\n    \"Malé\": { country: \"Maldives\" },\n    \"Manama\": { country: \"Bahrain\" },\n    \"Manila\": { country: \"Philippines\" },\n    \"Manta\": { country: \"Ecuador\" },\n    \"Manzanillo\": { country: \"Mexico\" },\n    \"Marsa Matruh\": { country: \"Egypt\" },\n    \"MARSAXLOKK\": { country: \"Malta\" },\n    \"Marsaxlokk\": { country: \"Malta\" },\n    \"Marseille\": { country: \"France\" },\n    \"Massawa\": { country: \"Eritrea\" },\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\n    \"Matadi\": { country: \"D.R.Congo\" },\n    \"Matarani\": { country: \"Peru\" },\n    \"Mayumba\": { country: \"Gabon\" },\n    \"Melbourne\": { country: \"Australia\" },\n    \"Merca\": { country: \"Somalia\" },\n    \"Mindelo\": { country: \"Cape Verde\" },\n    \"Miri Port\": { country: \"Malaysia\" },\n    \"Mocha\": { country: \"Yemen\" },\n    \"Mogadishu\": { country: \"Somalia\" },\n    \"Monaco\": { country: \"Monaco\" },\n    \"Monrovia\": { country: \"Liberia\" },\n    \"Montego Bay\": { country: \"Jamaica\" },\n    \"Montevideo\": { country: \"Uruguay\" },\n    \"Moroni\": { country: \"Comoros\" },\n    \"Muara\": { country: \"Brunei Darussalam\" },\n    \"Mukalla\": { country: \"Yemen\" },\n    \"Mumbai\": { country: \"India\" },\n    \"Muscat\": { country: \"Oman\" },\n    \"Nacala\": { country: \"Mozambique\" },\n    \"Naha\": { country: \"Japan\" },\n    \"Namibe\": { country: \"Angola\" },\n    \"Naples\": { country: \"Italy\" },\n    \"Nassau\": { country: \"Bahamas\" },\n    \"Neiafu\": { country: \"Tonga\" },\n    \"New Westminster\": { country: \"Canada\" },\n    \"New York\": { country: \"USA\" },\n    \"Newcastle\": { country: \"Australia\" },\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\n    \"Nishtun\": { country: \"Yemen\" },\n    \"Nouadhibou\": { country: \"Mauritania\" },\n    \"Nouakchott\": { country: \"Mauritania\" },\n    \"Noumea\": { country: \"New Caledonia\" },\n    \"Novorossiysk\": { country: \"Russian Federation\" },\n    \"Nuku'alofa\": { country: \"Tonga\" },\n    \"Obock\": { country: \"Djibouti\" },\n    \"Odessa\": { country: \"Ukraine\" },\n    \"Omboue\": { country: \"Gabon\" },\n    \"Onne\": { country: \"Nigeria\" },\n    \"Oran\": { country: \"Algeria\" },\n    \"Oranjestad\": { country: \"Aruba\" },\n    \"Osaka\": { country: \"Japan\" },\n    \"Padang\": { country: \"Indonesia\" },\n    \"Palermo\": { country: \"Italy\" },\n    \"Papeete\": { country: \"French Polynesia\" },\n    \"Paramaribo\": { country: \"Suriname\" },\n    \"Pattaya\": { country: \"Thailand\" },\n    \"Pemba\": { country: \"Mozambique\" },\n    \"Penang Port\": { country: \"Malaysia\" },\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\n    \"Piraeus\": { country: \"Greece\" },\n    \"Plymouth\": { country: \"Montserrat\" },\n    \"Pohnpei\": { country: \"Micronesia\" },\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\n    \"Ponce\": { country: \"Puerto Rico\" },\n    \"Port Castries\": { country: \"St. Lucia\" },\n    \"Port Elizabeth\": { country: \"South Africa\" },\n    \"Port Gentil\": { country: \"Gabon\" },\n    \"Port Harcourt\": { country: \"Nigeria\" },\n    \"Port Kelang\": { country: \"Malaysia\" },\n    \"Port Kembla\": { country: \"Australia\" },\n    \"Port Louis\": { country: \"Mauritius\" },\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\n    \"Port Réunion\": { country: \"Reunion\" },\n    \"Port Sudan\": { country: \"Sudan\" },\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\n    \"Port Victoria\": { country: \"Seychelles\" },\n    \"Port Vila\": { country: \"Vanuatu\" },\n    \"Port Villa\": { country: \"Vanuatu\" },\n    \"Port-au-Prince\": { country: \"Haiti\" },\n    \"Port-Louis\": { country: \"Mauritius\" },\n    \"Port-Vila\": { country: \"Vanuatu\" },\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\n    \"Porto-Novo\": { country: \"Benin\" },\n    \"Porto\": { country: \"Portugal\" },\n    \"Poti\": { country: \"Georgia\" },\n    \"Praslin\": { country: \"Seychelles\" },\n    \"Principe\": { country: \"Sao Tome and Principe\" },\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\n    \"Puerto Barrios\": { country: \"Guatemala\" },\n    \"Puerto Cabello\": { country: \"Venezuela\" },\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\n    \"Puerto Madryn\": { country: \"Argentina\" },\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\n    \"Puerto Sucre\": { country: \"Venezuela\" },\n    \"Punta del Este\": { country: \"Uruguay\" },\n    \"Puntarenas\": { country: \"Costa Rica\" },\n    \"Quelimane\": { country: \"Mozambique\" },\n    \"Quetzal\": { country: \"Guatemala\" },\n    \"Rabaul\": { country: \"Papua New Guinea\" },\n    \"Rabigh\": { country: \"Saudi Arabia\" },\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\n    \"Ras al-Arah\": { country: \"Yemen\" },\n    \"Ras Gharib\": { country: \"Egypt\" },\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\n    \"Ras Isa\": { country: \"Yemen\" },\n    \"Ras Shukheir\": { country: \"Egypt\" },\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\n    \"Reykjavik\": { country: \"Iceland\" },\n    \"Riga\": { country: \"Latvia\" },\n    \"Rijeka\": { country: \"Croatia\" },\n    \"Rio de Janeiro\": { country: \"Brazil\" },\n    \"Road Town\": { country: \"British Virgin Islands\" },\n    \"Robertsport\": { country: \"Liberia\" },\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\n    \"Rotterdam\": { country: \"Netherlands\" },\n    \"Saida\": { country: \"Lebanon\" },\n    \"Saint George's\": { country: \"Grenada\" },\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\n    \"Saint John\": { country: \"Barbados\" },\n    \"Saint Louis\": { country: \"Senegal\" },\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\n    \"Saint-Denis\": { country: \"Reunion\" },\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\n    \"Salalah\": { country: \"Oman\" },\n    \"Saleef\": { country: \"Yemen\" },\n    \"San Antonio\": { country: \"Chile\" },\n    \"San Jose\": { country: \"Antigua\" },\n    \"San Juan\": { country: \"Puerto Rico\" },\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\n    \"Sana'a\": { country: \"Yemen\" },\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\n    \"Santo\": { country: \"Vanuatu\" },\n    \"Santos\": { country: \"Brazil\" },\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\n    \"Sevastopol\": { country: \"Ukraine\" },\n    \"Sfax\": { country: \"Tunisia\" },\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\n    \"Sharjah\": { country: \"United Arab Emirates\" },\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\n    \"Sibu Port\": { country: \"Malaysia\" },\n    \"Sidon\": { country: \"Lebanon\" },\n    \"Sihanoukville\": { country: \"Cambodia\" },\n    \"Singapore\": { country: \"Singapore\" },\n    \"Sinop\": { country: \"Turkey\" },\n    \"Sittwe\": { country: \"Myanmar\" },\n    \"Sochi\": { country: \"Russian Federation\" },\n    \"Socotra\": { country: \"Yemen\" },\n    \"Sohar\": { country: \"Oman\" },\n    \"Sokodé\": { country: \"Togo\" },\n    \"Southampton\": { country: \"United Kingdom\" },\n    \"Soyo\": { country: \"Angola\" },\n    \"Split\": { country: \"Croatia\" },\n    \"St. Croix\": { country: \"US Virgin Islands\" },\n    \"St. George\": { country: \"Grenada\" },\n    \"Stockholm\": { country: \"Sweden\" },\n    \"Suakin\": { country: \"Sudan\" },\n    \"Sur\": { country: \"Lebanon\" },\n    \"Surabaya\": { country: \"Indonesia\" },\n    \"Suva\": { country: \"Fiji\" },\n    \"Sydney\": { country: \"Australia\" },\n    \"Szczecin\": { country: \"Poland\" },\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\n    \"Tadjoura\": { country: \"Djibouti\" },\n    \"Tainan\": { country: \"Taiwan\" },\n    \"Tallinn\": { country: \"Estonia\" },\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\n    \"Tanajib\": { country: \"Saudi Arabia\" },\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\n    \"Tarawa\": { country: \"Kiribati\" },\n    \"Tartus\": { country: \"Syria\" },\n    \"Tauranga\": { country: \"New Zealand\" },\n    \"Tekirdag\": { country: \"Turkey\" },\n    \"Tema\": { country: \"Ghana\" },\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\n    \"Tin Can Island\": { country: \"Nigeria\" },\n    \"Toamasina\": { country: \"Madagascar\" },\n    \"Toliara\": { country: \"Madagascar\" },\n    \"Tonga\": { country: \"Tonga\" },\n    \"Toripoli\": { country: \"Libya\" },\n    \"Trabzon\": { country: \"Turkey\" },\n    \"Trieste\": { country: \"Italy\" },\n    \"Trincomalee\": { country: \"Sri Lanka\" },\n    \"Tripoli\": { country: \"Lebanon\" },\n    \"Tunis\": { country: \"Tunisia\" },\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\n    \"Tyre\": { country: \"Lebanon\" },\n    \"Tórshavn\": { country: \"Faroe Islands\" },\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\n    \"Ulcinj\": { country: \"Montenegro\" },\n    \"Umm Qasr\": { country: \"Iraq\" },\n    \"Ushuaia\": { country: \"Argentina\" },\n    \"Valletta\": { country: \"Malta\" },\n    \"Valparaíso\": { country: \"Chile\" },\n    \"Vancouver\": { country: \"Canada\" },\n    \"Varna\": { country: \"Bulgaria\" },\n    \"Veracruz\": { country: \"Mexico\" },\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\n    \"Visakhapatnam\": { country: \"India\" },\n    \"Vladivostok\": { country: \"Russian Federation\" },\n    \"Walvis Bay\": { country: \"Namibia\" },\n    \"Warri\": { country: \"Nigeria\" },\n    \"Wellington\": { country: \"New Zealand\" },\n    \"Willemstad\": { country: \"Curacao\" },\n    \"Yanbu\": { country: \"Saudi Arabia\" },\n    \"Yangon\": { country: \"Myanmar\" },\n    \"Yap\": { country: \"Micronesia\" },\n    \"Yaren\": { country: \"Nauru\" },\n    \"Yokohama\": { country: \"Japan\" },\n    \"Zeebrugge\": { country: \"Belgium\" },\n    \"Ziguinchor\": { country: \"Senegal\" },\n    \"Zonguldak\": { country: \"Turkey\" },\n}\n\n\nconst AddPortModal = ({ handleAddPortModalClose }) => {\n\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\n    const inputPortText = useRef(null);\n    const inputCountryText = useRef(null);\n    const dispatch = useDispatch();\n    const toast = useToast();\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\n\n    const handleAddButton = async () => {\n        setAddButtonLoading(true);\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\n            const countryCode = inputCountryText.current?.value;\n            const portCode = inputPortText.current?.value;\n            const formattedPortCode = portCode.replace(/\\./g, '_');\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n            const { datetime } = response.data;\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n            const year = moment(datetime).format('YYYY');\n            const month = moment(datetime).format('MM');\n            const monthWithDay = moment(datetime).format('MM/DD');\n            const date = moment(datetime).format('YYYY/MM/DD');\n            const day = moment(datetime).format('DD');\n            const time = moment(datetime).format('HH:mm');\n            try {\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\n                const logData = {\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\n                        'Port'.toLowerCase(),\n                        'Port Added'.toLowerCase(),\n                        'Added'.toLowerCase(),\n                        'Freight'.toLowerCase(),\n                        portCode.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n\n                addLogToCollection(logData);\n                toast.show({\n                    render: () => {\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\n                        </View>;\n                    }\n\n                })\n                dispatch(setAddPortModalVisible(false));\n                setAddButtonLoading(false);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        else {\n            setAddButtonLoading(false);\n\n        }\n\n\n    }\n\n    const filterInput = (inputRef) => {\n        const currentValue = inputRef.current.value;\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\n        if (currentValue !== filteredValue) {\n            inputRef.current.setNativeProps({ text: filteredValue });\n        }\n    };\n\n    return (\n        <Modal\n            isOpen={addPortModalVisible}\n            onClose={() => {\n                handleAddPortModalClose();\n                inputPortText.current.value = '';\n            }}\n            size={'md'}>\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\n                <Modal.Body >\n                    <View style={{ marginVertical: 5, }}>\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\n                        </View>\n                        <TextInput\n                            ref={inputPortText}\n                            onChangeText={() => filterInput(inputPortText)}\n                            style={{\n                                outlineStyle: 'none',\n                                flex: 1,\n                                padding: 5,\n                                backgroundColor: 'white',\n                                borderBottomLeftRadius: 5,\n                                borderBottomRightRadius: 5,\n                                placeholderTextColor: '#ACADA3',\n                                borderColor: '#D4D4D4',\n                                borderWidth: 1,\n                            }}\n                            placeholder='Input Port' />\n\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\n                        </View>\n                        <TextInput\n                            ref={inputCountryText}\n                            onChangeText={() => filterInput(inputCountryText)}\n                            style={{\n                                outlineStyle: 'none',\n                                flex: 1,\n                                padding: 5,\n                                backgroundColor: 'white',\n                                borderBottomLeftRadius: 5,\n                                borderBottomRightRadius: 5,\n                                placeholderTextColor: '#ACADA3',\n                                borderColor: '#D4D4D4',\n                                borderWidth: 1,\n                            }}\n                            placeholder='Input Country' />\n\n                    </View>\n\n\n                </Modal.Body>\n                <Modal.Footer >\n                    <Button.Group variant=\"solid\" space=\"2\">\n                        <Button colorScheme={'gray'} onPress={() => {\n                            handleAddPortModalClose();\n                            inputPortText.current.value = '';\n                        }}>Cancel</Button>\n                        {addButtonLoading ?\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\n                        }\n\n                    </Button.Group>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n\n    );\n\n}\n\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\n    const [buttonLoading, setButtonLoading] = useState(false);\n\n    const handleDeletePort = async () => {\n        setButtonLoading(true);\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\n\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n        updateDoc(documentRef, {\n            [formattedFieldCode]: deleteField()\n        })\n            .then(() => {\n                console.log('Field deleted successfully');\n                handleDeletePortModalClose();\n                setButtonLoading(false);\n                const logData = {\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\n                    timestamp: formattedTime,\n                    colorScheme: false,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\n                        'Port'.toLowerCase(),\n                        'Port Deleted'.toLowerCase(),\n                        'Deleted'.toLowerCase(),\n                        'Freight'.toLowerCase(),\n                        selectedPort.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n\n                addLogToCollection(logData);\n            })\n            .catch((error) => {\n                console.error('Error deleting field: ', error);\n            });\n\n    }\n\n    return (\n\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\n            <Modal.Content>\n                <Modal.CloseButton />\n                <Modal.Header>Delete Port?</Modal.Header>\n                <Modal.Body>\n                    Are you sure you want to delete the selected port?\n                </Modal.Body>\n                <Modal.Footer>\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\n                        <TouchableOpacity\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\n                            onPress={handleDeletePortModalClose}\n                        >\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\n                        </TouchableOpacity>\n                        {buttonLoading ?\n                            (<TouchableOpacity\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\n                            ><Spinner size={18} color={'white'} />\n                            </TouchableOpacity>) :\n                            (<TouchableOpacity\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\n                                onPress={handleDeletePort}\n                            >\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\n                            </TouchableOpacity>)\n                        }\n\n\n                    </View>\n                </Modal.Footer>\n            </Modal.Content>\n        </Modal>\n\n\n    );\n}\n\n\n\nconst PortsTable = () => {\n    const dispatch = useDispatch();\n    const methodData = useSelector((state) => state.methodData);\n    const toast = useToast();\n    const [data, setData] = useState([]);\n    const [page, setPage] = useState(0);\n    const optionsPerPage = [10, 20, 50];\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const inputSearchRef = useRef(null);\n    const textAreaAddMethod = useRef(null);\n\n    const inputSortOrder = useRef([]);\n    const inputProfitPrice = useRef([]);\n    const inputNagoyaPrice = useRef([]);\n    const inputYokohamaPrice = useRef([]);\n    const inputKyushuPrice = useRef([]);\n    const inputKobePrice = useRef([]);\n    const inputMemo = useRef([]);\n\n    const [inputMemoValues, setInputMemoValues] = useState({});\n\n    const screenWidth = Dimensions.get('window').width;\n\n    const handleSortOrderTextChange = (text, item) => {\n        // Remove any non-numeric characters from the input text and limit to 3 digits\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\n\n        inputSortOrder.current[item.ports].value = numericValue;\n\n    };\n\n    const handleProfitPriceTextChange = (text, item) => {\n        // Remove any non-numeric characters from the input text and limit to 3 digits\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\n\n        inputProfitPrice.current[item.ports].value = numericValue;\n\n    };\n\n\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\n        // Specify the document reference\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n        const { datetime } = response.data;\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n        const year = moment(datetime).format('YYYY');\n        const month = moment(datetime).format('MM');\n        const monthWithDay = moment(datetime).format('MM/DD');\n        const date = moment(datetime).format('YYYY/MM/DD');\n        const day = moment(datetime).format('DD');\n        const time = moment(datetime).format('HH:mm');\n\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n        dispatch(setLoadingModalVisible(true));\n        if (newValue !== '') {\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\n\n            // Specify the field using dot notation for the nested field\n            const field = `${formattedCountryCode}.${fieldName}`;\n\n            try {\n                // Perform the update\n                await updateDoc(documentRef, {\n                    [field]: newValue\n                });\n\n                const logData = {\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\n                    timestamp: formattedTime,\n                    colorScheme: true,\n                    keywords: [\n                        formattedTime.toLowerCase(),\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\n                        `Sort`.toLowerCase(),\n                        `${title}`.toLowerCase(),\n                        `${title} Updated`.toLowerCase(),\n                        `Updated`.toLowerCase(),\n                        portCode.toLowerCase(),\n                        nameVariable.text.toLowerCase(),\n                        year.toLowerCase(),\n                        month.toLowerCase(),\n                        monthWithDay.toLowerCase(),\n                        date.toLowerCase(),\n                        day.toLowerCase(),\n                        time.toLowerCase(),\n                    ],\n                };\n                toast.show({\n                    render: () => {\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\n                        </View>;\n                    }\n                })\n                addLogToCollection(logData);\n                dispatch(setLoadingModalVisible(false));\n                console.log(`${title} updated successfully`);\n            } catch (error) {\n                console.error(`Error updating ${title}:`, error);\n\n            }\n        }\n        else {\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n    };\n\n    useEffect(() => {\n        setPage(0);\n    }, [itemsPerPage]);\n\n    const filtered = useMemo(() => {\n        return data.filter((item) =>\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            item.sortOrder.toString().includes(searchQuery)\n        );\n    }, [searchQuery, data]);\n\n    const paginatedData = useMemo(() => {\n        const startIndex = page * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        return filtered.slice(startIndex, endIndex);\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\n\n\n    const handleSearch = debounce(() => {\n        setSearchQuery(inputSearchRef.current?.value);\n    }, 50);\n\n    const startIndex = page * itemsPerPage;\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\n\n    // useEffect(() => {\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\n    //         // Replace dots in portName with underscores\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\n    //         return acc;\n    //     }, {});\n\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\n    //         .then(() => {\n    //             console.log(\"Document successfully written!\");\n    //             dispatch(setLoadingModalVisible(false));\n    //         })\n    //         .catch((error) => {\n    //             console.error(\"Error writing document: \", error);\n    //         });\n    // }, []);\n\n    useEffect(() => {\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\n        dispatch(setLoadingModalVisible(true));\n\n        // This will start the listener\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\n            if (docSnap.exists()) {\n                const data = docSnap.data();\n                const formattedData = Object.keys(data)\n                    .map(key => ({\n                        ports: key.replace(/_/g, '.'),\n                        ...data[key],\n                    }))\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\n                setData(formattedData);\n                // setFilteredData(formattedData);\n                dispatch(setLoadingModalVisible(false));\n            } else {\n                console.log(\"No such document!\");\n                dispatch(setLoadingModalVisible(false));\n\n\n            }\n        }, (error) => {\n            console.error(\"Error fetching countries: \", error);\n\n        });\n\n        // This will unsubscribe from the listener when the component is unmounted\n        return () => unsubscribe();\n    }, []);\n\n\n    const handleAddMethodTextChange = () => {\n        const textAreaValue = textAreaAddMethod.current?.value;\n        if (textAreaValue) {\n            const newText = textAreaValue\n                .split('\\n')\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n                .join('\\n');\n            textAreaAddMethod.current.setNativeProps({ text: newText });\n        }\n    };\n\n    useEffect(() => {\n        paginatedData.forEach(item => {\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\n\n\n\n        });\n        // setInputMemoValues(initialValues);\n\n    }, [paginatedData]); // Run this effect when 'items' changes\n\n    const handleAddPortModalOpen = () => {\n\n        dispatch(setAddPortModalVisible(true));\n\n    }\n\n    const handleAddPortModalClose = () => {\n\n        dispatch(setAddPortModalVisible(false));\n\n    }\n\n    const handleDeletePortModalOpen = (selectedValue) => {\n\n        dispatch(setDeletePortModalVisible(true));\n        selectedPort = selectedValue;\n\n    }\n\n    const handleDeletePortModalClose = () => {\n\n        dispatch(setDeletePortModalVisible(false));\n\n    }\n\n\n\n\n    return (\n        <>\n            {screenWidth >= 1280 ? (\n                <View style={{ flex: 1, }}>\n                    {/* Search Bar */}\n                    <View style={{ padding: 10 }}>\n                        <TextInput\n                            ref={inputSearchRef}\n                            onSubmitEditing={handleSearch}\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\n                            placeholder='Search'\n                            returnKeyType='search'\n                            autoCapitalize='none'\n                        />\n                    </View>\n\n                    {/* Add Port Button */}\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\n                        <TouchableOpacity\n                            onPress={handleAddPortModalOpen}\n                            style={{\n                                borderRadius: 5,\n                                padding: 10,\n                                borderWidth: 1,\n                                borderColor: 'white',\n                                backgroundColor: '#16A34A',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\n                        </TouchableOpacity>\n                    </View>\n\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            borderBottomWidth: 1,\n                            borderBottomColor: '#E4E4E7',\n                            backgroundColor: '#0642F4',\n                            padding: 10,\n                            borderRadius: 5,\n                            marginTop: 10,\n                        }}\n                    >\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Country</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2 }}>\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\n                        </View>\n\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\n                            <SortAndAddModal\n                                collectionName='CustomerCountryPort'\n                                docName='MethodDoc'\n                                handleAddTextChange={handleAddMethodTextChange}\n                                textAreaAdd={textAreaAddMethod}\n                                title='Method'\n                                dataName={'methodData'}\n                                databaseInit={projectExtensionFirestore}\n                                headerText=\"Rearrange/Add Method\"\n                                data={methodData}\n                            />\n                            <Text style={{ color: 'white', }} bold>Method</Text>\n                        </View>\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\n                        </View>\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\n                        </View>\n\n\n                    </View>\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\n                        {paginatedData.map((item, index) => (\n                            <View\n                                key={index}\n                                style={{\n                                    flex: 1,\n                                    flexDirection: 'row',\n                                    justifyContent: 'space-between',\n                                    alignItems: 'center',\n                                    borderBottomWidth: 1,\n                                    borderBottomColor: '#E4E4E7',\n                                    backgroundColor: '#BFDBFE',\n                                    paddingVertical: 10,\n                                }}>\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\n                                        <TextInput\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\n                                        />\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                            <TouchableHighlight\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                style={{\n                                                    backgroundColor: '#16A34A',\n                                                    borderRadius: 5,\n                                                    padding: 5,\n                                                    margin: 2,\n                                                    alignSelf: 'center',\n                                                }}>\n                                                <MaterialIcons name='update' color='white' size={22} />\n                                            </TouchableHighlight>\n                                        </View>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\n                                    <TextInput\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\n                                    <TextInput\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\n                                    <TextInput\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\n                                    <TextInput\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\n                                    <TextInput\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                    />\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                margin: 2,\n                                                alignSelf: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\n                                </View>\n\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\n                                    <TextInput\n                                        multiline\n                                        // value={inputMemoValues[item.ports] || ''}\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\n                                    />\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#16A34A',\n                                                borderRadius: 5,\n                                                padding: 5,\n                                                alignSelf: 'center',\n                                                height: '100%',\n                                                justifyContent: 'center',\n                                                alignItems: 'center',\n                                            }}>\n                                            <MaterialIcons name='update' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\n\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                        <TouchableHighlight\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                            style={{\n                                                backgroundColor: '#DC2626',\n                                                borderRadius: 5,\n                                                padding: 10,\n                                                alignSelf: 'center',\n                                                height: '100%',\n                                                justifyContent: 'center',\n                                                alignItems: 'center',\n                                            }}>\n                                            <AntDesign name='delete' color='white' size={22} />\n                                        </TouchableHighlight>\n                                    </View>\n                                </View>\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\n\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\n            <Text key={portIndex}>Nearest Port: {port}</Text>\n          ))} */}\n                            </View>\n                        ))}\n                        <DataTable.Pagination\n                            page={page}\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\n                            onPageChange={(page) => setPage(page)}\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\n                            optionsPerPage={optionsPerPage}\n                            itemsPerPage={itemsPerPage}\n                            setItemsPerPage={setItemsPerPage}\n                            showFastPagination\n                            optionsLabel={'Rows per page'}\n                        />\n                    </DataTable>\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\n                </View>) :\n                (\n                    //Ports Table Mobile View\n                    <View style={{ flex: 1, }}>\n                        {/* Search Bar */}\n                        <View style={{ padding: 10 }}>\n                            <TextInput\n                                ref={inputSearchRef}\n                                onSubmitEditing={handleSearch}\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\n                                placeholder='Search'\n                                returnKeyType='search'\n                                autoCapitalize='none'\n                            />\n                        </View>\n\n                        {/* Add Port Button */}\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\n                            <TouchableOpacity\n                                onPress={handleAddPortModalOpen}\n                                style={{\n                                    borderRadius: 5,\n                                    padding: 10,\n                                    borderWidth: 1,\n                                    borderColor: 'white',\n                                    backgroundColor: '#16A34A',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\n                            </TouchableOpacity>\n                        </View>\n\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\n                            {paginatedData.map((item, index) => (\n                                <View\n                                    key={index}\n                                    style={{\n                                        flex: 1,\n                                        flexDirection: 'column',\n                                        borderWidth: 1,\n                                        borderColor: '#E4E4E7',\n                                        backgroundColor: '#BFDBFE',\n                                        margin: 10,\n                                    }}>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\n                                                    <TextInput\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\n                                                    />\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                        <TouchableHighlight\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                            style={{\n                                                                backgroundColor: '#16A34A',\n                                                                borderRadius: 5,\n                                                                padding: 5,\n                                                                margin: 2,\n                                                                alignSelf: 'center',\n                                                            }}>\n                                                            <MaterialIcons name='update' color='white' size={22} />\n                                                        </TouchableHighlight>\n                                                    </View>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\n                                                <TextInput\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                />\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            margin: 2,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\n                                                <TextInput\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                />\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            margin: 2,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\n                                                <TextInput\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                />\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            margin: 2,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\n                                                <TextInput\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                />\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            margin: 2,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\n                                                <TextInput\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\n                                                />\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            margin: 2,\n                                                            alignSelf: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n\n\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\n                                                <TextInput\n                                                    multiline\n                                                    // value={inputMemoValues[item.ports] || ''}\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\n                                                />\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{\n                                                            backgroundColor: '#16A34A',\n                                                            borderRadius: 5,\n                                                            padding: 5,\n                                                            alignSelf: 'center',\n                                                            height: '100%',\n                                                            justifyContent: 'center',\n                                                            alignItems: 'center',\n                                                        }}>\n                                                        <MaterialIcons name='update' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n                                    <View style={{ flexDirection: 'row' }}>\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\n                                        </View>\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\n                                                    <TouchableHighlight\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\n                                                        <AntDesign name='delete' color='white' size={22} />\n                                                    </TouchableHighlight>\n                                                </View>\n                                            </View>\n                                        </View>\n                                    </View>\n\n\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\n\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\n            <Text key={portIndex}>Nearest Port: {port}</Text>\n          ))} */}\n                                </View>\n                            ))}\n                            <DataTable.Pagination\n                                page={page}\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\n                                onPageChange={(page) => setPage(page)}\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\n                                optionsPerPage={optionsPerPage}\n                                itemsPerPage={itemsPerPage}\n                                setItemsPerPage={setItemsPerPage}\n                                showFastPagination\n                                optionsLabel={'Rows per page'}\n                            />\n                        </DataTable>\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\n                    </View>\n                )}\n        </>\n\n\n\n    );\n}\n\n\n\n\nexport default function Freight() {\n\n    const [email, setEmail] = useState('');\n    const logo = require('../../assets/C-Hub.png');\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\n    const [isMobileView, setIsMobileView] = useState(false);\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    // const navigation = useNavigation();\n    const navigate = useNavigate();\n\n    const dispatch = useDispatch();\n\n\n    const [typeOfAccount, setTypeOfAccount] = useState('');\n\n\n    const loginName = useSelector((state) => state.loginName);\n    nameVariable.text = loginName;\n    const [name, setName] = useState(loginName);\n    const [time, setTime] = useState('');\n\n    const [selectedImages, setSelectedImages] = useState([]);\n\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n\n\n\n\n    useEffect(() => {\n        const updateWidth = () => {\n            const newWidth = Dimensions.get('window').width;\n            setScreenWidth(newWidth); // Update the screenWidth state\n        };\n\n        // Add event listener for window resize\n        Dimensions.addEventListener('change', updateWidth);\n\n        // Clean up the event listener when the component unmounts or re-renders\n        return () => {\n            Dimensions.removeEventListener('change', updateWidth);\n        };\n    }, []);\n\n\n    useEffect(() => {\n        dispatch(setSelectedButton(defaultSelectedButton));\n    }, [])\n\n    useEffect(() => {\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\n            if (!user) {\n                // navigation.navigate(\"Login\")\n                navigate(\"/Login\");\n            }\n        })\n        return unsubscribe\n    }, [])\n\n\n\n\n\n\n\n\n\n\n\n\n    const handleDocumentChange = (snapshot) => {\n        if (snapshot.exists()) {\n            const data = snapshot.data();\n            const isActive = data.active;\n\n            if (!isActive) {\n                signOut(projectControlAuth)\n                    .then(() => {\n                        // navigation.navigate('Login');\n                        navigate(\"/Login\");\n\n                    })\n                    .catch((error) => {\n                        console.error('Error signing out:', error);\n                    });\n            }\n        } else {\n            signOut(projectControlAuth)\n                .then(() => {\n                    // navigation.navigate('Login');\n                    navigate(\"/Login\");\n\n                })\n                .catch((error) => {\n                    console.error('Error signing out:', error);\n                });\n        }\n    };\n\n    const subscribeToFieldChange = () => {\n        const userId = projectControlAuth.currentUser?.email;\n        if (userId) {\n            const userRef = doc(firestore, 'accounts', userId);\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n            return unsubscribe;\n        } else {\n            // Return a no-op function if there's no user\n            return () => {\n                navigate(\"/login\")\n            };\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = subscribeToFieldChange();\n\n        return () => {\n            // This will now always be a function\n            unsubscribe();\n        };\n    }, []);\n\n\n    useEffect(() => {\n        const currentUserEmail = getEmailOfCurrentUser();\n        if (currentUserEmail) {\n            getFieldValueByEmail(currentUserEmail);\n            setEmail(currentUserEmail)\n            const documentId = currentUserEmail;\n            listenForNameChange(documentId);\n        }\n    }, []);\n\n\n    const listenForNameChange = (documentId) => {\n\n\n        // To stop listening for updates, you can call unsubscribe()\n        // unsubscribe();\n    };\n\n\n\n    const getFieldValueByEmail = async (email) => {\n        try {\n            const accountDocRef = doc(firestore, 'accounts', email);\n            const accountDocSnapshot = await getDoc(accountDocRef);\n\n            if (accountDocSnapshot.exists()) {\n                const data = accountDocSnapshot.data();\n                const fieldType = data.type;\n                const fieldName = data.name;\n                dispatch(setLoginName(data.name));\n\n            } else {\n                console.log('Document does not exist');\n            }\n        } catch (error) {\n            console.error('Error fetching field value:', error);\n        }\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const handleSignOut = () => {\n\n        signOut(projectControlAuth).then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\");\n\n            setEmail('');\n            setName('');\n        }).catch(() => {\n            // An error happened.\n        });\n\n\n    }\n\n\n\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const NamePopover = ({ name, handleSignOut }) => {\n        const [showNamePopover, setShowNamePopover] = useState(false);\n\n        const showPopover = () => {\n            setShowNamePopover(!showNamePopover);\n        };\n\n        return (\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n                <Flex direction=\"row-reverse\">\n                    <Popover\n                        isOpen={showNamePopover}\n                        trigger={(triggerProps) => (\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                            </Text>\n                        )}\n                        onClose={() => setShowNamePopover(!showNamePopover)}\n                        placement='bottom right'\n                        trapFocus={false}\n                    >\n                        <Popover.Content backgroundColor={'#0642F4'}>\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n                            <Popover.Body backgroundColor={'#0642F4'}>\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                                    Logout\n                                </Button>\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n                </Flex>\n            </Box>\n        );\n    };\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        image: {\n            flex: 1,\n        },\n    });\n\n    return (\n        <NativeBaseProvider>\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n                {/* Header */}\n                <Box\n                    px=\"3\"\n                    bgColor='#0642f4'\n                    height={54}\n                    position=\"sticky\"\n                    top={0}\n                    zIndex={999}\n                    flexDirection=\"row\"\n                    alignItems=\"center\"\n                    borderBottomWidth={0}\n                    borderBottomColor={'cyan.500'}\n                >\n\n                    <SideDrawer\n                        selectedScreen={selectedScreen} />\n\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n\n                        <FastImage\n                            source={{\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image} />\n                    </Box>\n                    {/* \n                    {screenWidth <= 960 && <MobileViewDrawer\n                        selectedScreen={selectedScreen} />} */}\n\n\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\n\n                        <FastImage\n                            source={{\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image} />\n                    </Box>\n\n\n                    <View style={{ alignItems: 'center', flex: 1 }}>\n                        <QRCodeScanner />\n                    </View>\n\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\n\n\n                </Box>\n\n                {/* Content */}\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\n\n\n                    {/* Main Content */}\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\n                    {/* Main Content Content */}\n\n\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\n                            <View style={{ flex: 1, }}>\n\n                                <FreightNavigation />\n                                <NavigatePage />\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\n                            </View>\n                        </ScrollView>\n                        {/* <SuccessModal /> */}\n\n                    </View>\n\n\n                    {/* </Box> */}\n\n                    {/* </Box> */}\n                </View>\n\n            </View>\n            <LoadingModal />\n\n        </NativeBaseProvider>\n    );\n}","import { useState } from \"react\";\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\nimport FastImage from \"react-native-fast-image-web-support\";\nimport {\n  AntDesign,\n  FontAwesome,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Entypo,\n  FontAwesome5,\n  EvilIcons\n} from 'react-native-vector-icons';\n\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\nimport { useSelector } from \"react-redux\";\n\n\n\nconst NamePopover = ({ name, handleSignOut }) => {\n  const [showNamePopover, setShowNamePopover] = useState(false);\n\n  const showPopover = () => {\n    setShowNamePopover(!showNamePopover);\n  };\n\n  return (\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n      <Flex direction=\"row-reverse\">\n        <Popover\n          isOpen={showNamePopover}\n          trigger={(triggerProps) => (\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n            </Text>\n          )}\n          onClose={() => setShowNamePopover(!showNamePopover)}\n          placement='bottom right'\n          trapFocus={false}\n        >\n          <Popover.Content backgroundColor={'#7B9CFF'}>\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n            <Popover.Body backgroundColor={'#7B9CFF'}>\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                Logout\n              </Button>\n            </Popover.Body>\n          </Popover.Content>\n        </Popover>\n      </Flex>\n    </Box>\n  );\n};\n\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\n  const loginName = useSelector((state) => state.loginName);\n\n  const screenWidth = Dimensions.get('window').width;\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    image: {\n      flex: 1,\n    },\n  });\n\n  return (\n\n    <Box\n      px=\"3\"\n      bgColor='#7b9cff'\n      height={54}\n      position=\"sticky\"\n      top={0}\n      zIndex={999}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      borderBottomWidth={2}\n      borderBottomColor={'cyan.500'} >\n\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\n        <Image\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\n          style={styles.image}\n          resizeMode=\"stretch\"\n        />\n      </Box>\n\n      {screenWidth <= 960 && <MobileViewDrawer\n        selectedScreen={selectedScreen}\n      />}\n\n\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\n      <Image\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\n          style={styles.image}\n          resizeMode=\"stretch\"\n        />\n      </Box>\n\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\n    </Box>\n\n  );\n}\n\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\nimport {\n    Input,\n    Icon,\n    Stack,\n    Pressable,\n    Center,\n    PresenceTransition,\n    NativeBaseProvider,\n    Button,\n    Box,\n    HStack,\n    Image,\n    Container,\n    Header,\n    Left,\n    Body,\n    Title,\n    Content,\n    Text,\n    Heading,\n    Flex,\n    VStack,\n    ScrollView,\n    SectionList,\n    useBreakpointValue,\n    Spinner,\n    Modal,\n    Divider,\n    IconButton,\n    Popover,\n    Select,\n    CheckIcon\n} from \"native-base\";\nimport { DataTable } from 'react-native-paper';\nimport {\n    FontAwesome,\n    Entypo,\n    MaterialIcons,\n    Ionicons,\n    Fontisto,\n    EvilIcons,\n    AntDesign,\n    MaterialCommunityIcons,\n    Feather,\n    FontAwesome5Brands\n} from 'react-native-vector-icons';\nimport 'react-native-gesture-handler';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\nimport { useNavigation } from '@react-navigation/core'\nimport './../style.css';\nimport { debounce, set, throttle } from 'lodash';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { bg } from 'date-fns/locale';\nimport FastImage from 'react-native-fast-image-web-support';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setLoginName } from './redux/store';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { LineChart, BarChart } from 'react-native-chart-kit';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory';\nimport {\n    OPEN_EXCHANGE_API_KEY\n} from '@env';\nimport { format, parseISO, subMonths } from \"date-fns\";\n\nconst { width, height } = Dimensions.get('window');\n\nconst firestore = getFirestore();\nconst getEmailOfCurrentUser = () => {\n    const user = auth.currentUser;\n    if (user) {\n        const email = user.email;\n        return email;\n    } else {\n        // console.log('No user is currently authenticated');\n        return null;\n    }\n};\n\n// const Drawer = createDrawerNavigator();\n\nimport {\n    setLogsData,\n    setLoadingModalVisible,\n} from './redux/store';\nimport { useNavigate } from 'react-router-dom';\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\nlet selectedScreen = 'LOGS'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const addKeywordsToLogs = async () =>{\n//     const logsRef = collection(projectControlFirestore, \"logs\");\n\n//     try {\n//       const querySnapshot = await getDocs(logsRef);\n\n//       querySnapshot.forEach((doc) => {\n//         const data = doc.data();\n//         const keywords = [\n//           data.timestamp,\n//           data.message,\n//         ];\n\n//         updateDoc(doc.ref, {\n//           keywords: arrayUnion(...keywords)\n//         });\n//       });\n\n//       console.log(\"Keywords added successfully to logs collection.\");\n//     } catch (error) {\n//       console.error(\"Error adding keywords to logs collection:\", error);\n//     }\n//   }\nconst LoadingModal = () => {\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\n\n\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                flex: 1,\n                display: loadingModalVisible ? 'flex' : 'none',\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            {/* Content within the modal */}\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <Spinner size=\"lg\" color=\"white\" />\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\n            </View>\n        </View>\n\n    );\n\n}\n\n\nconst LogsTable = () => {\n\n    const dispatch = useDispatch();\n    const [pageSize, setPageSize] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [lastVisible, setLastVisible] = useState(null);\n    const [firstVisible, setFirstVisible] = useState(null);\n    const [searchText, setSearchText] = useState('');\n    const searchInputRef = useRef(null);\n    const logsData = useSelector((state) => state.logsData);\n    const screenWidth = Dimensions.get('window').width;\n\n    useEffect(() => {\n        const q = query(\n            collection(projectControlFirestore, 'logs'),\n            orderBy('timestamp', 'desc'),\n            limit(pageSize)\n        );\n        const unsubscribe = onSnapshot(q, (documents) => {\n            const logsDatabaseData = [];\n            documents.forEach((document) => {\n                logsDatabaseData.push({\n                    id: document.id,\n                    ...document.data(),\n                });\n            });\n            dispatch(setLogsData(logsDatabaseData));\n            setLastVisible(documents.docs[documents.docs.length - 1]);\n            setFirstVisible(documents.docs[0]);\n        });\n        return () => unsubscribe();\n\n    }, []);\n\n    const fetchNextData = async () => {\n\n        if (searchText === '') {\n\n\n            const q = query(\n                collectionGroup(projectControlFirestore, 'logs'),\n                orderBy('timestamp', 'desc'),\n                startAfter(lastVisible),\n                limit(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'next');\n\n\n\n            dispatch(setLoadingModalVisible(false));\n\n\n        }\n\n        else {\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                startAfter(lastVisible),\n                limit(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'next');\n\n\n\n            dispatch(setLoadingModalVisible(false));\n        }\n\n    };\n\n\n    const fetchPreviousData = async () => {\n        if (searchText === '') {\n\n\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                orderBy('timestamp', 'desc'),\n                endBefore(firstVisible),\n                limitToLast(pageSize)\n            );\n\n\n            const documents = await getDocs(q);\n            updateState(documents, 'prev')\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n        else {\n\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                endBefore(firstVisible),\n                limitToLast(pageSize)\n            );\n\n            const documents = await getDocs(q);\n            updateState(documents, 'prev');\n            dispatch(setLoadingModalVisible(false));\n\n        }\n\n\n    }\n\n\n\n    const fetchFirstPage = (documents) => {\n\n\n        const logsDatabaseData = [];\n\n        documents.forEach((document) => {\n            logsDatabaseData.push({\n                id: document.id,\n                ...document.data(),\n            });\n        });\n\n        dispatch(setLogsData(logsDatabaseData));\n\n        if (documents?.docs[0]) {\n            setFirstVisible(documents.docs[0]);\n        }\n        if (documents?.docs[documents.docs.length - 1]) {\n            setLastVisible(documents.docs[documents.docs.length - 1]);\n        }\n\n\n\n\n\n    }\n\n    const updateState = async (documents, pageClicked) => {\n\n\n        if (!documents.empty) {\n            const logsDatabaseData = [];\n            documents.forEach((document) => {\n                logsDatabaseData.push({\n                    id: document.id,\n                    ...document.data(),\n                });\n            });\n\n\n\n            if (documents?.docs[0]) {\n                setFirstVisible(documents.docs[0]);\n            }\n            if (documents?.docs[documents.docs.length - 1]) {\n                setLastVisible(documents.docs[documents.docs.length - 1]);\n            }\n\n            if (pageClicked == 'next') {\n                setCurrentPage(currentPage + 1);\n            }\n            if (pageClicked == 'prev') {\n                setCurrentPage(currentPage - 1);\n            }\n\n            dispatch(setLogsData(logsDatabaseData));\n        }\n\n        else {\n\n            if (searchText == '') {\n                setCurrentPage(1);\n\n                const q = query(\n                    collection(projectControlFirestore, 'logs'),\n                    orderBy('timestamp', 'desc'),\n                    limit(pageSize)\n                );\n                const firstPageDocuments = await getDocs(q);\n                fetchFirstPage(firstPageDocuments);\n\n            }\n            else {\n\n                setCurrentPage(1);\n\n                const q = query(\n                    collection(projectControlFirestore, 'logs'),\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\n                    orderBy('timestamp', 'desc'),\n                    limit(pageSize)\n                );\n                const firstPageDocuments = await getDocs(q);\n                fetchFirstPage(firstPageDocuments);\n\n            }\n\n\n        }\n\n\n    };\n\n\n    const handleNextPage = async () => {\n        // setPageClicked('next');\n        dispatch(setLoadingModalVisible(true));\n        // setCurrentPage(currentPage + 1);\n        await fetchNextData();\n\n\n\n\n    };\n\n    const handlePreviousPage = async () => {\n        // setPageClicked('previous');\n        dispatch(setLoadingModalVisible(true));\n        // setCurrentPage(currentPage - 1);\n        await fetchPreviousData();\n\n\n    };\n\n\n    useEffect(() => {\n\n        searchData();\n\n    }, [searchText]);\n\n    const searchData = async () => {\n\n        dispatch(setLoadingModalVisible(true));\n\n        if (searchText === '') {\n\n            setCurrentPage(1);\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                orderBy('timestamp', 'desc'),\n                limit(pageSize)\n            );\n\n            const firstPageDocuments = await getDocs(q);\n            fetchFirstPage(firstPageDocuments);\n            dispatch(setLoadingModalVisible(false));\n\n\n\n        }\n\n        else {\n\n            setCurrentPage(1);\n            const q = query(\n                collection(projectControlFirestore, 'logs'),\n                where('keywords', 'array-contains', searchText.toLowerCase()),\n                orderBy('timestamp', 'desc'),\n                limit(pageSize)\n            );\n\n            const firstPageDocuments = await getDocs(q);\n            fetchFirstPage(firstPageDocuments);\n            dispatch(setLoadingModalVisible(false));\n        }\n    };\n\n    const handleSearchEnter = () => {\n\n        if (searchInputRef.current?.value !== '') {\n            setSearchText(searchInputRef.current.value.trim());\n        }\n        else {\n            setSearchText('');\n\n            if (searchText == '') {\n                searchData();\n            }\n\n\n        }\n\n    }\n\n    return (\n        <View style={{ flex: 1, }}>\n            <View>\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\n                    onSubmitEditing={handleSearchEnter}\n                    placeholder='Search'\n                    returnKeyType='search'\n                    keyboardType='default'\n                    autoCapitalize='none'\n                />\n            </View>\n            <View\n                style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    borderBottomWidth: 1,\n                    borderBottomColor: '#E4E4E7',\n                    backgroundColor: '#0642F4',\n                    padding: 2,\n                    borderRadius: 5,\n                }}>\n                <View style={{ flex: 1, padding: 2 }}>\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\n                </View>\n                <View style={{ flex: 1, padding: 2 }}>\n                    <Text style={{ color: 'white', }} bold>Action</Text>\n                </View>\n            </View>\n            {logsData.map((item) => (\n                <View\n                    key={item.id}\n                    style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        borderBottomWidth: 1,\n                        borderBottomColor: '#E4E4E7',\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\n                        paddingVertical: 10,\n                        flexGrow: 1,\n                    }}>\n                    <View style={{ flex: 1, }}>\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\n                    </View>\n                </View>\n            ))}\n\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\n\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                    <TouchableOpacity\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\n                        onPress={handlePreviousPage}>\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\n                        </View>\n                    </TouchableOpacity>\n                </View>\n\n\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\n                </View>\n\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n                    <TouchableOpacity\n                        onPress={handleNextPage}>\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\n                        </View>\n                    </TouchableOpacity>\n                </View>\n\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n            <TouchableOpacity\n              onPress={addKeywordsToVehicleProducts}>\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                <MaterialIcons name='save' size={40} color={'white'} />\n              </View>\n            </TouchableOpacity>\n          </View> */}\n\n            </View>\n        </View>\n\n    );\n\n\n};\n\nconst addLogToCollection = async (data) => {\n    try {\n        const firestore = getFirestore();\n        const logsCollectionRef = collection(firestore, 'logs');\n\n        // Add a new document to the \"logs\" collection\n        await addDoc(logsCollectionRef, data);\n\n        // console.log('Document added successfully!');\n    } catch (error) {\n        console.error('Error adding document:', error);\n    }\n};\n\nconst CurrencyConverterComponent = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isYesLoading, setIsYesLoading] = useState(false);\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\n    const [todayCurrency, setTodayCurrency] = useState([]);\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\n    const [exchangeRate, setExchangeRate] = useState('');\n    const [modalVisible, setModalVisible] = useState(false);\n    const [time, setTime] = useState('');\n    const [lastUpdate, setLastUpdate] = useState(null);\n    const loginName = useSelector((state) => state.loginName);\n    const screenWidth = Dimensions.get('window').width;\n\n    useEffect(() => {\n        const unsubscribe = onSnapshot(\n            doc(projectExtensionFirestore, 'currency', 'currency'),\n            (snapshot) => {\n                const data = snapshot.data();\n                setTodayCurrency(data?.todayCurrency);\n                setTimestampCurrency(data?.timestampCurrency);\n            }\n        );\n\n        return () => unsubscribe();\n    }, []);\n\n    const CurrencyConverter = async () => {\n\n        setIsLoading(true);\n        setIsYesLoading(true);\n        try {\n            const response = await axios.get(\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\n            );\n\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\n\n\n            const rates = response.data.rates;\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\n            const JpyToUsd = rates.JPY / 1;\n\n\n\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\n\n            const usdToEur = 1 / rates.EUR;\n            const eurToUsd = rates.EUR;\n\n            const usdToGbp = 1 / rates.GBP;\n            const gbpToUsd = rates.GBP;\n\n            const usdToAud = 1 / rates.AUD;\n            const audToUsd = rates.AUD;\n\n\n            const usdToCad = 1 / rates.CAD;\n            const cadToUsd = rates.CAD;\n\n            // Calculate Yen to Euro and Euro to Yen\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\n\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\n\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\n\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\n\n            // Format the new rates\n\n\n\n            setExchangeRate(yenToDollar);\n\n            const timestamp = response.data.timestamp;\n            const lastUpdateDate = new Date(timestamp * 1000);\n            setLastUpdate(lastUpdateDate);\n\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            });\n\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\n\n            try {\n                await setDoc(currencyRef, {\n                    jpyToUsd: Number(usdToJpy),\n                    usdToJpy: Number(JpyToUsd),\n                    jpyToEur: yenToEuro,\n                    eurToJpy: euroToYen,\n                    jpyToGbp: yenToGbp,\n                    gbpToJpy: gbpToYen,\n                    jpyToAud: yenToAud,\n                    audToJpy: audToYen,\n                    usdToEur: eurToUsd,\n                    eurToUsd: usdToEur,\n                    usdToGbp: gbpToUsd,\n                    gbpToUsd: usdToGbp,\n                    usdToAud: audToUsd,\n                    audToUsd: usdToAud,\n                    cadToUsd: usdToCad,\n                    usdToCad: cadToUsd,\n                    jpyToCad: cadToYen,\n                    cadToJpy: yenToCad,\n                    todayCurrency: newTodayCurrency,\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\n                }, { merge: true });\n                // console.log('Currency data updated successfully!');\n                setSuccessModalVisible(true);\n                setModalVisible(false);\n                setIsLoading(false);\n                setIsYesLoading(false);\n                try {\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n                    const { datetime } = response.data;\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n                    const year = moment(datetime).format('YYYY');\n                    const month = moment(datetime).format('MM');\n                    const monthWithDay = moment(datetime).format('MM/DD');\n                    const date = moment(datetime).format('YYYY/MM/DD');\n                    const day = moment(datetime).format('DD');\n                    const time = moment(datetime).format('HH:mm');\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n                    setTime(formattedTime);\n\n                    const logDataCurrency = {\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\n                        timestamp: formattedTime, // Use the formatted time here\n                        colorScheme: true,\n                        keywords: [\n                            formattedTime.toLowerCase(),\n                            loginName.toLowerCase(),\n                            '$'.toLowerCase(),\n                            '¥'.toLowerCase(),\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\n                            'Update'.toLowerCase(),\n                            'Currency'.toLowerCase(),\n                            formattedTime.toLowerCase(),\n                            year.toLowerCase(),\n                            month.toLowerCase(),\n                            monthWithDay.toLowerCase(),\n                            date.toLowerCase(),\n                            day.toLowerCase(),\n                            time.toLowerCase(),\n                            timeWithMinutesSeconds.toLowerCase(),\n                        ],\n\n                    };\n\n                    addLogToCollection(logDataCurrency);\n                }\n                catch (error) {\n                    console.error('Error fetching time:', error);\n                }\n\n            } catch (error) {\n                console.error('Error updating currency data:', error);\n            }\n        } catch (error) {\n            console.error('Error fetching exchange rate:', error);\n        }\n    };\n\n\n    const handleCloseCurrencyModal = () => {\n        setModalVisible(false);\n        setIsLoading(false);\n    };\n    const handleOpenCurrencyModal = () => {\n        setModalVisible(true);\n        setIsLoading(true);\n    };\n\n    const handleCloseSuccessModal = () => {\n        setSuccessModalVisible(false);\n        setIsLoading(false);\n    };\n\n\n    return (\n        <>\n            <Box\n                flex={1}\n                borderWidth={1}\n                borderColor=\"gray.200\"\n                borderRadius={4}\n                overflow=\"hidden\"\n                margin={1}\n                alignItems={'center'}\n                bg=\"#F5F5F5\">\n                <Image\n                    source={require('../../assets/currency_background.jpg')}\n                    alt=\"Background Image\"\n                    resizeMode=\"stretch\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    position={'absolute'}\n\n                />\n\n                <Center height=\"100%\">\n\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\n\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\n\n                    </Box>\n\n                </Center>\n\n            </Box>\n\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\n                <Modal.Content>\n                    <Modal.CloseButton />\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\n                    <Modal.Body>\n                        Do you want to update to the latest currency?\n                    </Modal.Body>\n                    <Modal.Footer borderTopWidth={0}>\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\n                <Modal.Content>\n                    <Modal.CloseButton />\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\n                    <Modal.Body bgColor={'green.200'}>\n                        <Text bold margin={1}>{todayCurrency}</Text>\n                        <Text margin={1}>{timestampCurrency}</Text>\n                    </Modal.Body>\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </>\n\n    );\n\n};\n\n\n\nconst fetchPaidStatsData = async (yearMonth, type) => {\n    try {\n        const documentRef = doc(projectExtensionFirestore, \"PaidStats\", `${yearMonth}`);\n        const documentSnapshot = await getDoc(documentRef);\n        const data = documentSnapshot.data() || {};\n\n        // Initialize an empty array of 31 objects\n        const days = Array.from({ length: 31 }, (_, index) => ({\n            day: String(index + 1).padStart(2, \"0\"),\n            count: 0\n        }));\n\n        // Update the days with the counts from Firestore\n        Object.keys(data).forEach(day => {\n            const index = Number(day) - 1;\n            days[index].count = data[day].length;\n        });\n\n        return days;\n    } catch (error) {\n        console.error(\"Error fetching data from Firestore:\", error);\n        return Array.from({ length: 31 }, (_, index) => ({\n            day: String(index + 1).padStart(2, \"0\"),\n            count: 0\n        }));\n    }\n};\n\nconst fetchCurrentDate = async () => {\n    try {\n        const response = await axios.get(\"https://worldtimeapi.org/api/timezone/Asia/Tokyo\");\n        const { datetime } = response.data;\n        return datetime.slice(0, 7); // Extracts YYYY-MM\n    } catch (error) {\n        console.error(\"Error fetching current date:\", error);\n        return new Date().toISOString().slice(0, 7); // Fallback to local time if API fails\n    }\n};\n\nconst calculateTotal = (data) => {\n    return data.reduce((sum, { count }) => sum + count, 0);\n}\n\nconst StatsChart = () => {\n    const [data, setData] = useState([]);\n    const [yearMonth, setYearMonth] = useState(\"\");\n    const [type, setType] = useState(\"Offer\");\n    const [period, setPeriod] = useState(\"Daily\");\n    const [currentTotal, setCurrentTotal] = useState(0);\n    const [previousTotal, setPreviousTotal] = useState(0);\n    const [currentMonthName, setCurrentMonthName] = useState(\"\");\n    const [previousMonthName, setPreviousMonthName] = useState(\"\");\n\n    useEffect(() => {\n        (async () => {\n            const currentDate = await fetchCurrentDate();\n            setYearMonth(currentDate);\n            const currentData = await fetchPaidStatsData(currentDate, type);\n            const previousDate = format(subMonths(parseISO(`${currentDate}-01`), 1), \"yyyy-MM\");\n            const previousData = await fetchPaidStatsData(previousDate, type);\n\n            setData(currentData);\n            setCurrentTotal(calculateTotal(currentData));\n            setPreviousTotal(calculateTotal(previousData));\n            setCurrentMonthName(format(parseISO(`${currentDate}-01`), \"MMMM\"));\n            setPreviousMonthName(format(parseISO(`${previousDate}-01`), \"MMMM\"));\n        })();\n    }, [type, period]);\n\n    const currentYear = parseInt(yearMonth.slice(0, 4), 10);\n    const currentMonth = parseInt(yearMonth.slice(5, 7), 10);\n    return (\n        <Box\n            flex={1}\n            borderWidth={1}\n            borderColor=\"#FFF\"\n            backgroundColor=\"#FFF\"\n            marginBottom={'5px'}\n            marginLeft={'5px'}\n            marginRight={'5px'}\n            borderRadius={5}\n            padding={3}\n        >\n            <HStack space={4} mb={3} justifyContent=\"center\">\n                <Box\n                    padding={2}\n                    backgroundColor=\"orange.100\"\n                    borderRadius={5}\n                    alignItems=\"center\"\n                >\n                    <Text style={{ fontSize: 14, color: \"orange.800\", fontWeight: \"bold\" }}>{`${previousMonthName}: ${previousTotal}`}</Text>\n                </Box>\n                <Box\n                    padding={2}\n                    backgroundColor=\"blue.100\"\n                    borderRadius={5}\n                    alignItems=\"center\"\n                >\n                    <Text style={{ fontSize: 14, color: \"teal.800\", fontWeight: \"bold\" }}>{`${currentMonthName}: ${currentTotal}`}</Text>\n                </Box>\n\n            </HStack>\n\n\n            <HStack space={4}>\n                <Box>\n                    <Text>Period</Text>\n                    <Select\n                        selectedValue={period}\n                        minWidth={120}\n                        accessibilityLabel=\"Select Period\"\n                        placeholder=\"Select Period\"\n                        _selectedItem={{\n                            bg: \"teal.600\",\n                            endIcon: <CheckIcon size=\"5\" />\n                        }}\n                        mt={1}\n                        onValueChange={((value) => setPeriod(value))}\n                    >\n                        <Select.Item label=\"Daily\" value=\"Daily\" />\n                        <Select.Item label=\"Weekly\" value=\"Weekly\" />\n                        <Select.Item label=\"Monthly\" value=\"Monthly\" />\n                    </Select>\n                </Box>\n                <Box>\n                    <Text>Type</Text>\n                    <Select\n                        selectedValue={type}\n                        minWidth={120}\n                        accessibilityLabel=\"Select Type\"\n                        placeholder=\"Select Type\"\n                        _selectedItem={{\n                            bg: \"teal.600\",\n                            endIcon: <CheckIcon size=\"5\" />\n                        }}\n                        mt={1}\n                        onValueChange={(value) => setType(value)}\n                    >\n                        <Select.Item label=\"Offer\" value=\"Offer\" />\n                        <Select.Item label=\"Orders\" value=\"Orders\" />\n                        <Select.Item label=\"Payment\" value=\"Payment\" />\n                    </Select>\n                </Box>\n                <Box>\n                    <Text>Year-Month</Text>\n                    <Select\n                        selectedValue={yearMonth}\n                        minWidth={120}\n                        accessibilityLabel=\"Select Year-Month\"\n                        placeholder=\"Select Year-Month\"\n                        _selectedItem={{\n                            bg: \"teal.600\",\n                            endIcon: <CheckIcon size=\"5\" />\n                        }}\n                        mt={1}\n                        onValueChange={(value) => setYearMonth(value)}\n                    >\n                        {Array.from({ length: currentMonth }, (_, i) => {\n                            const month = String(currentMonth - i).padStart(2, \"0\");\n                            return (\n                                <Select.Item key={month} label={`${currentYear}-${month}`} value={`${currentYear}-${month}`} />\n                            );\n                        })}\n                    </Select>\n                </Box>\n\n\n            </HStack>\n\n            <VictoryChart\n                width={1000}\n                theme={VictoryTheme.material}\n                domainPadding={{ x: 20 }}\n            >\n                <VictoryBar\n                    data={data}\n                    x=\"day\"\n                    y=\"count\"\n                    style={{\n                        data: {\n                            fill: \"rgba(6, 66, 244, 0.5)\",\n                            cornerRadius: { top: 5, bottom: 0 }, // Round the top corners\n                        },\n                        labels: { fontSize: 12, fill: \"#0642F4\" } // Label color\n                    }}\n                    labels={({ datum }) => `${datum.count === 0 ? '' : datum.count}`} // Display earnings as labels\n                    labelComponent={<VictoryLabel dy={-10} />} // Adjust label position\n                />\n                <VictoryAxis\n                    style={{\n                        grid: {\n                            stroke: \"none\" // Remove grid\n                        }\n                    }}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    style={{\n                        grid: {\n                            stroke: \"none\" // Remove grid\n                        }\n                    }}\n                />\n            </VictoryChart>\n        </Box>\n    );\n};\n\nexport default function Logs() {\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const loginName = useSelector((state) => state.loginName);\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n\n    // const navigation = useNavigation();\n    const navigate = useNavigate();\n\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\n    const [typeOfAccount, setTypeOfAccount] = useState('');\n    const [showModal, setShowModal] = React.useState(false);\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const [remainingTime, setRemainingTime] = useState(0);\n    const [todayCurrency, setTodayCurrency] = useState('')\n    const [timestampCurrency, setTimestampCurrency] = useState('');\n    const [exchangeRate, setExchangeRate] = useState(null);\n    const [lastUpdate, setLastUpdate] = useState(null);\n\n    const [time, setTime] = useState('');\n    const optionsPerPage = [13, 26, 52];\n    const [page, setPage] = useState(0);\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n    const [data, setData] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const searchInput = useRef(null);\n    const searchInputValue = searchInput.current?.value;\n\n\n    const dispatch = useDispatch();\n\n\n\n\n\n    useEffect(() => {\n\n        const updateWidth = () => {\n            const newWidth = Dimensions.get('window').width;\n            setScreenWidth(newWidth); // Update the screenWidth state\n        };\n\n        // Add event listener for window resize\n        Dimensions.addEventListener('change', updateWidth);\n\n        const fetchData = async () => {\n            try {\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\n                const unsubscribe = onSnapshot(q, (snapshot) => {\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n                    setData(documents);\n                });\n\n                return () => unsubscribe();\n            } catch (error) {\n                console.error('Error retrieving data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        setPage(0);\n    }, [itemsPerPage]);\n\n\n\n\n\n\n\n    // const delayedSearch = (text) => {\n    //     clearTimeout(timeoutId);\n    //     timeoutId = setTimeout(() => {\n    //         handleSearch(text);\n    //     }, 300); // Set the delay to 300 milliseconds\n    // };\n\n\n\n\n\n    // const handleChange = text => {\n    //     setEmail(text)\n    //     setErrorShow(false)\n    // };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const SuccessModal = () => {\n        return <Center>\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\n                    <Modal.Body >\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\n                    </Modal.Body>\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\n                        </Button>\n                    </Modal.Footer>\n                </Modal.Content>\n            </Modal>\n        </Center>;\n    };\n\n\n\n\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (!user) {\n                // navigation.navigate(\"Login\")\n                navigate(\"/Login\");\n            }\n\n        })\n\n        return unsubscribe\n    }, []);\n\n\n\n\n\n\n\n\n\n\n\n\n    const handleDocumentChange = (snapshot) => {\n        if (snapshot.exists()) {\n            const data = snapshot.data();\n            const isActive = data.active;\n\n            if (!isActive) {\n                signOut(auth)\n                    .then(() => {\n                        // navigation.navigate('Login');\n                        navigate(\"/Login\");\n\n                    })\n                    .catch((error) => {\n                        console.error('Error signing out:', error);\n                    });\n            }\n        } else {\n            signOut(auth)\n                .then(() => {\n                    // navigation.navigate('Login');\n                    navigate(\"/Login\");\n\n                })\n                .catch((error) => {\n                    console.error('Error signing out:', error);\n                });\n        }\n    };\n\n    const subscribeToFieldChange = () => {\n        const userId = auth.currentUser?.email;\n        if (userId) {\n            const userRef = doc(firestore, 'accounts', userId);\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n            return unsubscribe;\n        } else {\n            // Return a no-op function if there's no user\n            return () => {\n                navigate(\"/login\")\n            };\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = subscribeToFieldChange();\n\n        return () => {\n            // This will now always be a function\n            unsubscribe();\n        };\n    }, []);\n\n    useEffect(() => {\n        const currentUserEmail = getEmailOfCurrentUser();\n        if (currentUserEmail) {\n            getFieldValueByEmail(currentUserEmail);\n            setEmail(currentUserEmail)\n            const documentId = currentUserEmail;\n            listenForNameChange(documentId);\n        }\n    }, []);\n\n    const listenForNameChange = (documentId) => {\n        const userRef = doc(db, 'accounts', documentId);\n\n\n        // To stop listening for updates, you can call unsubscribe()\n        // unsubscribe();\n    };\n\n\n\n    const getFieldValueByEmail = async (email) => {\n        try {\n            const accountDocRef = doc(firestore, 'accounts', email);\n            const accountDocSnapshot = await getDoc(accountDocRef);\n\n            if (accountDocSnapshot.exists()) {\n                const data = accountDocSnapshot.data();\n                const fieldType = data.type;\n                const fieldName = data.name;\n                dispatch(setLoginName(data.name));\n\n            } else {\n                console.log('Document does not exist');\n            }\n        } catch (error) {\n            console.error('Error fetching field value:', error);\n        }\n    };\n\n\n\n\n\n    const handleSignOut = () => {\n\n        signOut(auth).then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\");\n            setEmail('');\n            setName('');\n        }).catch(() => {\n            // An error happened.\n        });\n\n\n    }\n\n\n\n\n\n\n\n\n\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n\n    // Function to hide the Popover\n\n    const NamePopover = ({ name, handleSignOut }) => {\n        const [showNamePopover, setShowNamePopover] = useState(false);\n\n        const showPopover = () => {\n            setShowNamePopover(!showNamePopover);\n        };\n\n        return (\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n                <Flex direction=\"row-reverse\">\n                    <Popover\n                        isOpen={showNamePopover}\n                        trigger={(triggerProps) => (\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n                            </Text>\n                        )}\n                        onClose={() => setShowNamePopover(!showNamePopover)}\n                        placement='bottom right'\n                        trapFocus={false}\n                    >\n                        <Popover.Content backgroundColor={'#0642F4'}>\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n                            <Popover.Body backgroundColor={'#0642F4'}>\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                                    Logout\n                                </Button>\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n                </Flex>\n            </Box>\n        );\n    };\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        image: {\n            flex: 1,\n        },\n    });\n    return (\n        <NativeBaseProvider>\n            <SuccessModal />\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n                {/* Header */}\n                <Box\n                    px=\"3\"\n                    bgColor='#0642f4'\n                    height={54}\n                    position=\"sticky\"\n                    top={0}\n                    zIndex={999}\n                    flexDirection=\"row\"\n                    alignItems=\"center\"\n                    borderBottomWidth={0}\n                    borderBottomColor={'cyan.500'} >\n\n                    <SideDrawer\n                        selectedScreen={selectedScreen} />\n\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n                        <FastImage\n                            source={{\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image}\n                        />\n                    </Box>\n                    {/* \n                    {showDrawerIcon && <MobileViewDrawer\n                        selectedScreen={selectedScreen} />} */}\n\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\n                        <FastImage\n                            source={{\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\n                                priority: FastImage.priority.high,\n                            }}\n                            resizeMode={FastImage.resizeMode.stretch}\n                            style={styles.image}\n                        />\n                    </Box>\n\n\n                    <View style={{ alignItems: 'center', flex: 1 }}>\n                        <QRCodeScanner />\n                    </View>\n\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\n\n                </Box>\n\n                {/* Content */}\n                <Box flex={[1]} flexDirection=\"row\" >\n\n\n                    {/* Main Content */}\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\n                        {/* Main Content Content */}\n\n\n\n                        <View style={{ flex: 1, }} >\n                            <CurrencyConverterComponent />\n                            <StatsChart />\n                        </View>\n\n\n\n                        <Box flex={1} height={'100%'}>\n                            <ScrollView flex={1}>\n                                <LogsTable />\n                            </ScrollView>\n\n\n                        </Box>\n\n\n\n\n\n\n\n\n                    </Box>\n                </Box>\n            </Box>\n            <LoadingModal />\n        </NativeBaseProvider>\n    );\n}\n\n\n","// QRCodeScanner.js\nimport {\n    Box,\n    Button,\n    Center,\n    Flex,\n    HStack,\n    Icon,\n    Image as NativeImage,\n    Input,\n    Modal,\n    NativeBaseProvider,\n    Popover,\n    Spinner,\n    Stack,\n    Text,\n    VStack,\n    TextArea,\n    InputRightAddon,\n    InputGroup,\n    InputLeftAddon,\n    Select,\n    CheckIcon,\n    PresenceTransition,\n    CloseIcon,\n    ScrollView as ScrollViewNative,\n    Divider,\n    useDisclosure,\n    useDisclose,\n    FormControl,\n    Checkbox,\n    useToast,\n    Tooltip,\n    Progress,\n    Alert\n} from 'native-base';\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport {\n    Dimensions,\n    ImageBackground,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    StyleSheet,\n    View,\n    PanResponder,\n    Animated,\n    Easing,\n    InputAccessoryView,\n    FlatList,\n    ScrollView,\n    TouchableHighlight,\n    TextInput,\n    Image as RNImage,\n    Pressable,\n    Linking,\n    Modal as RNModal,\n    Platform,\n    SafeAreaView,\n} from 'react-native';\nimport Webcam from 'react-webcam';\nimport {\n    AntDesign,\n    FontAwesome,\n    Ionicons,\n    MaterialCommunityIcons,\n    MaterialIcons,\n    Entypo,\n    FontAwesome5,\n    EvilIcons\n} from 'react-native-vector-icons';\n\nimport QRCode from 'react-native-qrcode-svg';\n\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from '../../../crossFirebase';\nimport jsQR from 'jsqr';\n\n\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\nlet formattedDueDate = '';\n\nconst mobileViewBreakpoint = 1367;\n\nconst QRCodeScanner = () => {\n    const webcamRef = React.useRef(null);\n    const [qrCode, setQrCode] = useState('');\n    const [isScanning, setIsScanning] = useState(false);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [invoiceData, setInvoiceData] = useState(null);\n    const screenWidth = Dimensions.get('window').width;\n\n    // QR code scanning logic\n    useEffect(() => {\n        const intervalId = isScanning ? setInterval(() => {\n            const video = webcamRef.current;\n            if (video) {\n                const canvas = document.createElement('canvas');\n                canvas.width = video.video.videoWidth;\n                canvas.height = video.video.videoHeight;\n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(video.video, 0, 0, canvas.width, canvas.height);\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                const code = jsQR(imageData.data, imageData.width, imageData.height);\n                if (code) {\n                    clearInterval(intervalId);\n                    setIsScanning(false);\n                    setQrCode(code.data);\n                    console.log(code.data);\n\n                }\n            }\n        }, 100) : null;\n\n        return () => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        };\n    }, [isScanning]);\n\n    const fetchInvoiceData = async (cryptoNumber) => {\n        const q = query(collection(projectExtensionFirestore, 'IssuedInvoice'), where('cryptoNumber', '==', cryptoNumber));\n        const querySnapshot = await getDocs(q);\n        querySnapshot.forEach((doc) => {\n            setInvoiceData({ ...doc.data(), id: doc.id });\n        });\n        setModalVisible(true); // Show the modal after fetching the data\n    };\n\n    // Listen for QR code detection\n    useEffect(() => {\n        if (qrCode) {\n            fetchInvoiceData(qrCode);\n        }\n    }, [qrCode]);\n\n    const toggleScanning = () => {\n        setIsScanning(!isScanning);\n\n    };\n\n    const handleModalClose = () => {\n        setModalVisible(false);\n        setQrCode('');\n    };\n\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\n        const dueDateString = invoiceData.bankInformations.dueDate;\n        const issuingDateObject = new Date(issuingDateString);\n        const dueDateObject = new Date(dueDateString);\n\n\n        const options = {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n        };\n\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\n\n    }\n\n    const originalWidth = 794;\n    const originalHeight = 1123;\n\n\n    const originalSmallWidth = 794;\n    const originalSmallHeight = 1123;\n\n    const newWidth = 2480;\n    const newHeight = 3508;\n\n    const smallWidth = screenWidth < mobileViewBreakpoint ? 377 : 574;\n    const smallHeight = screenWidth < mobileViewBreakpoint ? 541 : 903;\n\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\n\n    const widthScaleFactor = newWidth / originalWidth;\n    const heightScaleFactor = newHeight / originalHeight;\n\n    const valueCurrency = 0.5;\n\n    const convertedCurrency = (baseValue) => {\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `$${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\n        }\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            const euroValue = Number(baseValue) * Number(invoiceData.currency.usdToEur);\n            return `€${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            const audValue = Number(baseValue) * Number(invoiceData.currency.usdToAud);\n            return `A$${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            const gbpValue = Number(baseValue) * Number(invoiceData.currency.usdToGbp);\n            return `£${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            const cadValue = Number(baseValue) * Number(invoiceData.currency.usdToCad);\n            return `C$${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n    }\n\n    const totalPriceCalculated = () => {\n\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\n            const converted = Number(price); // Convert each price using your currency conversion function\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\n            return total + parseFloat(numericPart); // Add the numeric value to the total\n        }, 0);\n\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice))\n            // * Number(invoiceData.currency.jpyToEur)\n            ;\n\n\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToEur));\n\n\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\n        //         : 0)\n        //     + totalAdditionalPrice;\n\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToAud))\n\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToGbp))\n\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\n            + Number(invoiceData.paymentDetails.freightPrice)\n            + (invoiceData.paymentDetails.inspectionIsChecked\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\n                : 0)\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\n                ? Number(invoiceData.paymentDetails.insurancePrice)\n                : 0)\n            + totalAdditionalPrice)\n            * Number(invoiceData.currency.usdToCad))\n\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\n            return `$${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\n            return `€${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\n            return `A$${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\n            return `£${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\n            return `C$${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\n        }\n\n    }\n\n    const PreviewInvoice = () => {\n\n        return (\n            <View\n                style={{\n                    width: smallWidth,\n                    height: smallHeight,\n                    backgroundColor: 'white',\n                    zIndex: 1\n                }}>\n\n                <View\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        zIndex: 999,\n                    }}\n                />\n\n\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\n                    <NativeImage\n                        source={require('../../../assets/RMJ logo for invoice.png')}\n                        style={{\n                            width: 95 * smallWidthScaleFactor,\n                            height: 85 * smallHeightScaleFactor,\n                            resizeMode: 'stretch',\n                        }}\n                    />\n                </View>\n\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\n                    {/* Title */}\n\n                    <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\n\n                </View>\n\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\n                    {/* QR CODE */}\n\n                    <QRCode\n                        value={invoiceData.cryptoNumber}\n                        size={80 * smallWidthScaleFactor}\n                        color=\"black\"\n                        backgroundColor=\"white\"\n                    />\n\n                </View>\n\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\n                    {/* Invoice Number */}\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\n                </View>\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\n                    {/* Issuing Date */}\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\n                </View>\n\n\n                <View style={{\n                    position: 'absolute',\n                    left: 40 * smallWidthScaleFactor,\n                    top: 134 * smallHeightScaleFactor,\n                    width: 280 * smallWidthScaleFactor,\n                }}>\n                    {/* Shipper */}\n                    <Text style={{\n                        fontWeight: 750,\n                        fontSize: 16 * smallWidthScaleFactor,\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                        width: 'fit-content', // Make the underline cover the text width\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                    }}>\n                        {`Shipper`}\n                    </Text>\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\n\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\n\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\n                        <>\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\n                        </>\n                        : null}\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\n                        <>\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\n                        </>\n                        : null}\n\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\n\n                        <View style={{\n                            flex: 1, width: 280 * smallWidthScaleFactor,\n                        }}>\n                            {/* Buyer Information */}\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 18 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                borderBottomColor: '#0A78BE',\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                                color: '#0A78BE',\n                                marginTop: 45 * smallHeightScaleFactor,\n\n                            }}>\n                                {`Buyer Information`}\n                            </Text>\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\n\n                        </View>\n\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\n                            {/* Notify Party */}\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 18 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                borderBottomColor: '#FF0000',\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\n                                color: '#FF0000',\n                                marginTop: 45 * smallHeightScaleFactor,\n                            }}>\n                                {`Notify Party`}\n                            </Text>\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\n                                (<>\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\n                                </>)}\n                        </View>\n\n                    </View>\n\n\n                </View>\n\n\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\n\n                    <View style={{ flex: 1, alignItems: 'center', }}>\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\n                        <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 14 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                            }}>\n                                {`Bank Account`}\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\n                            </Text>\n                        </View>\n\n                        <View style={{ flex: 1 }}>\n\n                            <Text style={{\n                                fontWeight: 750,\n                                fontSize: 14 * smallWidthScaleFactor,\n                                borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                                width: 'fit-content', // Make the underline cover the text width\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                            }}>\n                                {`Payment Terms`}\n                            </Text>\n\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\n                            </Text>\n\n                            <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\n\n                                <Text style={{\n                                    fontWeight: 750,\n                                    fontSize: 14 * smallWidthScaleFactor,\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\n                                    width: 'fit-content', // Make the underline cover the text width\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\n                                    color: '#F00A0A',\n                                    borderBottomColor: '#F00A0A',\n                                }}>\n                                    {`Payment Due`}\n                                </Text>\n\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\n                                </Text>\n\n                            </View>\n\n                        </View>\n\n                    </View>\n\n                </View>\n\n\n\n                <View style={{\n                    position: 'absolute',\n                    left: 38 * smallWidthScaleFactor,\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\n                    width: 718 * smallWidthScaleFactor,\n                    borderWidth: 1 * smallWidthScaleFactor,\n                    borderColor: '#C2E2F4',\n                    alignSelf: 'center',\n                }}>\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Description`}\n                            </Text>\n\n                        </View>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Notes`}\n                            </Text>\n                        </View>\n\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Quantity`}\n                            </Text>\n                        </View>\n\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\n                            <Text\n                                style={{\n                                    fontWeight: 'bold',\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    color: '#008AC6',\n                                }}>\n                                {`Amount`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {`FOB`}\n                            </Text>\n                        </View>\n\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {`${convertedCurrency((Number(invoiceData.paymentDetails.fobPrice)))}`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {`Freight`}\n                            </Text>\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                            </Text>}\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <>\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            marginLeft: 2 * smallWidthScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            marginLeft: 2 * smallWidthScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\n                                    </Text>\n                                </>\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        marginLeft: 2 * smallWidthScaleFactor,\n                                    }}>\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\n                                </Text>\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                    }}>\n                                    {' '}\n                                </Text>\n                            }\n\n\n                        </View>\n\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                            </Text>}\n\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                    <Text\n                                        style={{\n                                            fontWeight: 400,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                        }}>\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                    </Text>\n                                </Text>\n\n                            }\n\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\n                                <Text\n                                    style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n\n                                    }}>\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\n                                </Text>\n                            }\n\n                        </View>\n\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 5,\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\n                            </Text>}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                        }}>\n                            <Text\n                                style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price => {\n                                        const converted = convertedCurrency(Number(price));\n                                        return converted;\n                                    }).join(' + ')\n                                    : ' '}\n                            </Text>\n                        </View>\n\n                    </View>\n\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            flexDirection: 'row',\n                            paddingVertical: 2 * smallHeightScaleFactor,\n\n                        }}>\n                            {invoiceData.carData && invoiceData.carData.carName ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                    marginLeft: 2 * smallWidthScaleFactor,\n                                }}>\n                                    {\"Used Vehicle\\n\"}\n                                    <Text style={{\n                                        fontWeight: 700,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.carName}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.fuel}\\n`}\n                                    </Text>\n                                    <Text style={{\n                                        fontWeight: 400,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        alignSelf: 'center',\n                                    }}>\n                                        {`${invoiceData.carData.transmission}\\n`}\n                                    </Text>\n                                </Text>\n\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            flexDirection: 'row',\n                            justifyContent: 'center',\n                        }}>\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\n                                </Text>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 1,\n                            flexDirection: 'row',\n                            justifyContent: 'center',\n                        }}>\n                            {invoiceData.carData && invoiceData.carData.carName ? (\n                                <Text style={{\n                                    fontWeight: 400,\n                                    fontSize: 12 * smallWidthScaleFactor,\n                                    lineHeight: 14 * smallWidthScaleFactor,\n                                    marginBottom: 3 * smallHeightScaleFactor,\n                                    alignSelf: 'center',\n                                }}>\n                                    {'1'}\n                                </Text>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n\n\n                        </View>\n\n                        <View style={{\n                            borderTopWidth: 1 * smallWidthScaleFactor,\n                            borderColor: '#C2E2F4',\n                            flex: 2,\n                            justifyContent: 'center',\n                            flexDirection: 'row',\n                        }}>\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\n                                <>\n                                    <Text style={{\n                                        fontWeight: 700,\n                                        fontSize: 12 * smallWidthScaleFactor,\n                                        lineHeight: 14 * smallWidthScaleFactor,\n                                        marginBottom: 3 * smallHeightScaleFactor,\n                                        color: '#008AC6',\n                                        marginRight: 10 * smallWidthScaleFactor,\n                                        top: 51 * smallHeightScaleFactor,\n                                        left: 50 * smallWidthScaleFactor,\n                                        position: 'absolute',\n                                    }}>\n                                        {\"Total\"}\n                                        <Text style={{\n                                            fontWeight: 700,\n                                            fontSize: 12 * smallWidthScaleFactor,\n                                            lineHeight: 14 * smallWidthScaleFactor,\n                                            marginBottom: 3 * smallHeightScaleFactor,\n                                            alignSelf: 'center',\n                                            color: '#00720B',\n                                            marginLeft: 5 * smallWidthScaleFactor,\n                                        }}>\n                                            {`${totalPriceCalculated()}`}\n                                        </Text>\n                                    </Text>\n\n                                </>\n                            ) : (\n                                <Text>{' '}</Text>\n                            )}\n                        </View>\n\n                    </View>\n\n                </View>\n\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Payment Information:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n                    }}>\n                        {'No warranty service is provided on used vehicles.'}\n                    </Text>\n\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Conditions for order cancellation:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n\n                    }}>\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\n                    </Text>\n\n                    <Text style={{\n                        fontWeight: 700,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Intermediary Banking Information:'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Swift code: SMBCUS33'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                    }}>\n                        {'Address: 277 Park Avenue'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'City: New York, NY'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Postal Code: 10172'}\n                    </Text>\n                    <Text style={{\n                        fontWeight: 400,\n                        fontSize: 12 * smallWidthScaleFactor,\n                        lineHeight: 14 * smallHeightScaleFactor,\n                        marginBottom: 5 * smallHeightScaleFactor,\n\n                    }}>\n                        {'Country: United States'}\n                    </Text>\n                </View>\n\n\n                <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\n                    <View style={{\n                        width: 300 * smallWidthScaleFactor,\n                        alignItems: 'center',\n                        paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\n                    }}>\n                        <NativeImage\n                            source={require('../../../assets/RMJ Invoice Signature with Hanko.png')}\n                            style={{\n                                width: 276 * smallWidthScaleFactor,\n                                height: 81 * smallHeightScaleFactor,\n                                resizeMode: 'contain',\n                                alignSelf: 'center',\n                                marginBottom: 0, // Minimize margin to keep the line close\n                            }}\n                        />\n                        <View style={{\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\n                            borderColor: 'black', // Change the color as needed\n                            width: '100%', // Line width as per your requirement\n                        }} />\n                        <Text italic style={{\n                            fontWeight: 700,\n                            fontSize: 16 * smallWidthScaleFactor,\n                        }}>\n                            {'Real Motor Japan'}\n                        </Text>\n                    </View>\n\n                    <View style={{\n                        width: 300 * smallWidthScaleFactor,\n                        alignItems: 'center',\n                        paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\n                    }}>\n\n                        <View style={{\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\n                            borderColor: 'black', // Change the color as needed\n                            width: '100%', // Line width as per your requirement\n                        }} />\n                        <Text italic style={{\n                            fontWeight: 700,\n                            fontSize: 16 * smallWidthScaleFactor,\n                        }}>\n                            {'Your Signature'}\n                        </Text>\n                    </View>\n                </View>\n\n\n            </View>\n        )\n    }\n\n    return (\n        <View\n            style={{\n                paddingRight: 20,\n\n            }}\n        >\n            {/* Modal for displaying invoice data */}\n            <Modal\n                isOpen={modalVisible}\n                onClose={handleModalClose}\n                size=\"lg\"\n                useRNModal\n            >\n\n                {invoiceData ? (\n                    <PreviewInvoice />\n                ) : (\n                    <Text>No data available</Text>\n                )}\n\n            </Modal>\n\n\n            <Modal isOpen={isScanning} onClose={() => setIsScanning(false)} size=\"lg\">\n                <View\n                    style={{ backgroundColor: 'black', }}\n                >\n                    {isScanning && <Webcam ref={webcamRef}\n                        style={{\n                            width: screenWidth < mobileViewBreakpoint ? 300 : 500,\n                            height: screenWidth < mobileViewBreakpoint ? 300 : 500,\n                        }} videoConstraints={{ facingMode: \"environment\" }} />}\n                </View>\n\n\n            </Modal>\n\n            {/* {isScanning && (\n                <View style={{\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    right: 0,\n                    left: 0,\n                    width: 300, // Adjust according to your needs\n                    height: 300, // Adjust according to your needs\n                    borderRadius: 20,\n                    overflow: 'hidden',\n                }}>\n                    <Webcam ref={webcamRef} style={styles.cameraView} videoConstraints={{ facingMode: \"environment\" }} />\n                </View>\n            )} */}\n\n            <Pressable\n                focusable={false}\n                onPress={toggleScanning}\n                style={{\n                    padding: 10,\n                    borderRadius: 5,\n                }}>\n                <MaterialCommunityIcons name='data-matrix-scan' size={30} color='white' />\n            </Pressable>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    cameraContainer: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: [{ translateX: -150 }, { translateY: -150 }], // Adjust based on your webcam view size\n        width: 300, // Adjust according to your needs\n        height: 300, // Adjust according to your needs\n        borderRadius: 20,\n        overflow: 'hidden',\n    },\n    cameraView: {\n        width: '100%',\n        height: '100%',\n    },\n});\n\nexport default QRCodeScanner;\n\n","\nimport {\n  Box,\n  Button,\n  Center,\n  HStack,\n  Modal,\n  Text,\n  VStack,\n  ScrollView,\n\n} from 'native-base';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n  AntDesign,\n  FontAwesome,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Entypo\n} from 'react-native-vector-icons';\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\nimport { TouchableHighlight } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/core';\n\n\n\nconst MobileViewDrawer = ({ selectedScreen }) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\n\n  const screenWidth = Dimensions.get('window').width;\n\n  const navigation = useNavigation();\n\n  const handleOpen = () => {\n\n    setIsOpen(true);\n\n  }\n  const handleClose = () => {\n\n    setIsOpen(false);\n\n  }\n\n  const handleToggleLogs = useCallback(() => {\n\n\n    navigation.navigate(\"LOGS\");\n  }, []);\n\n  const handleToggleAddAccount = useCallback(() => {\n\n\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\n  }, []);\n\n  const handleToggleAccountList = useCallback(() => {\n\n    navigation.navigate(\"ACCOUNT LIST\");\n  }, []);\n\n  const handleToggleAddVehicle = useCallback(() => {\n\n    navigation.navigate(\"ADD NEW VEHICLE\");\n  }, []);\n\n\n  const handleVehicleList = useCallback(() => {\n    navigation.navigate(\"VEHICLE LIST\");\n  }, []);\n\n\n  const handleFreight = useCallback(() => {\n    navigation.navigate(\"FREIGHT\");\n  }, []);\n\n  const handleChatMessages = useCallback(() => {\n    navigation.navigate(\"CHAT MESSAGES\");\n  }, []);\n\n\n  const slideAnimation = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    if (isOpen) {\n      Animated.timing(slideAnimation, {\n        toValue: 1,\n        duration: 500,\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(slideAnimation, {\n        toValue: 0,\n        duration: 500,\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [isOpen, slideAnimation]);\n\n  return (\n\n    <>\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\n      </TouchableHighlight>\n\n\n      <Modal\n        isOpen={isOpen}\n        onClose={handleClose}\n        useRNModal\n        style={{\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n          height: '100%',\n\n        }}\n      >\n        <Modal.Content\n          maxWidth={255}\n          borderRadius={0}\n          maxHeight=\"100%\"\n          height=\"full\"\n          bgColor={'transparent'}\n        >\n          <Animated.View\n            style={{\n              flex: 1,\n              transform: [\n                {\n                  translateX: slideAnimation.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [-255, 0],\n                  }),\n                },\n              ],\n            }}\n          >\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\n              <View style={{ flex: 1, }}>\n\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\n                    <Image\n                      source={{\n                        uri: logo2,\n                      }}\n                      resizeMode=\"stretch\"\n                      style={{ width: 170, height: 30 }}\n                    />\n                  </View>\n                  <TouchableOpacity\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\n                  >\n                    <MaterialIcons\n                      name=\"arrow-back\"\n                      size={30}\n                      color=\"white\"\n                      onPress={handleClose}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                {/* Sidebar Content */}\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\n                  <ScrollView>\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderTopWidth: 1,\n                        borderColor: 'white',\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleToggleLogs}\n                    >\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          LOGS\n                        </Text>\n                      </View>\n\n                    </TouchableOpacity>\n\n                    {/* ACCOUNT MANAGEMENT */}\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleToggleAddAccount}\n                    >\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          ADD C-HUB ACCOUNT\n                        </Text>\n                      </View>\n\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleToggleAccountList}\n                    >\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          ACCOUNT LIST\n                        </Text>\n                      </View>\n\n                    </TouchableOpacity>\n                    {/* VEHICLE INFORMATION INPUT */}\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleToggleAddVehicle}\n                    >\n\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <View style={{ marginLeft: 4, }}>\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\n                          <FontAwesome\n                            name=\"plus\"\n                            size={10}\n                            color=\"white\"\n                            style={{\n                              position: 'absolute', // Position it absolutely...\n                              top: -3, // ...at the top...\n                              left: -5 // ...and left.\n                            }}\n                          />\n                        </View>\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          UPDATE / ADD NEW VEHICLE\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleVehicleList}\n                    >\n\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <View style={{ marginLeft: 3, }}>\n                          <FontAwesome\n                            name=\"automobile\"\n                            size={15}\n                            color=\"white\" />\n\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\n                            style={{\n                              position: 'absolute', // Position it absolutely...\n                              top: -3, // ...at the top...\n                              left: -5 // ...and left.\n                            }}\n                          />\n\n                        </View>\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          VEHICLE LIST\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n\n\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleFreight}\n                    >\n\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <View style={{ marginLeft: 3, }}>\n                          <MaterialIcons\n                            name=\"public\"\n                            size={20}\n                            color=\"white\" />\n\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\n                            style={{\n                              position: 'absolute', // Position it absolutely...\n                              top: -3, // ...at the top...\n                              left: -5 // ...and left.\n                            }}\n                          />\n\n                        </View>\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          FREIGHT\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n\n\n                    <TouchableOpacity\n                      style={{\n                        borderBottomWidth: 1,\n                        borderBottomColor: 'white',\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\n                      }}\n                      onPress={handleChatMessages}\n                    >\n\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\n                        <View style={{ marginLeft: 3, }}>\n                          <Entypo\n                            name=\"chat\"\n                            size={20}\n                            color=\"white\" />\n\n                        </View>\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\n                          CHAT MESSAGES\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                    {/* Footer Content */}\n                    {/* <TouchableOpacity\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\n              onPress={handleSignOut}\n            >\n              <Text style={{ color: 'white', textAlign: 'center' }}>\n                Logout\n              </Text>\n            </TouchableOpacity> */}\n                  </ScrollView>\n                </View>\n              </View>\n            </View>\n          </Animated.View>\n        </Modal.Content>\n      </Modal>\n\n    </>\n\n\n  );\n};\n\nexport default MobileViewDrawer;","import {\n    Box,\n    Button,\n    Center,\n    HStack,\n    Modal,\n    Text,\n    VStack,\n    ScrollView,\n\n} from 'native-base';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n    AntDesign,\n    FontAwesome,\n    Ionicons,\n    MaterialCommunityIcons,\n    MaterialIcons,\n    Entypo\n} from 'react-native-vector-icons';\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\nimport { TouchableHighlight } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/core';\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\n\nconst SideDrawer = ({ selectedScreen }) => {\n\n    const loginAccountType = useSelector((state) => state.loginAccountType);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\n    const [onHover, setOnHover] = useState(false);\n\n    const screenWidth = Dimensions.get('window').width;\n\n    // const navigation = useNavigation();\n\n\n    const navigate = useNavigate();\n    const handleOpen = () => {\n\n        setIsOpen(true);\n\n    }\n    const handleClose = () => {\n\n        setIsOpen(false);\n\n    }\n\n    const handleToggleLogs = useCallback(() => {\n        navigate(\"/top/logs\");\n    }, []);\n\n    const handleToggleAddAccount = useCallback(() => {\n        navigate(\"/top/add-c-hub-account\");\n    }, []);\n\n    const handleToggleAccountList = useCallback(() => {\n\n        navigate(\"/top/account-list\");\n    }, []);\n\n    const handleToggleAddVehicle = useCallback(() => {\n\n        navigate(\"/top/add-new-vehicle\");\n    }, []);\n\n\n    const handleVehicleList = useCallback(() => {\n        navigate(\"/top/vehicle-list\");\n    }, []);\n\n\n    const handleFreight = useCallback(() => {\n        navigate(\"/top/freight\");\n    }, []);\n\n    const handleChatMessages = useCallback(() => {\n        navigate(\"/top/chat-messages\");\n    }, []);\n\n\n    const slideAnimation = useRef(new Animated.Value(0)).current;\n\n    useEffect(() => {\n        if (isOpen) {\n            Animated.timing(slideAnimation, {\n                toValue: 1,\n                duration: 500,\n                easing: Easing.inOut(Easing.ease),\n                useNativeDriver: true,\n            }).start();\n        } else {\n            Animated.timing(slideAnimation, {\n                toValue: 0,\n                duration: 500,\n                easing: Easing.inOut(Easing.ease),\n                useNativeDriver: true,\n            }).start();\n        }\n    }, [isOpen, slideAnimation]);\n\n\n\n\n\n    return (\n\n        <>\n            <Pressable\n                onHoverIn={() => {\n                    handleOpen()\n                    setOnHover(true);\n                }}\n                onHoverOut={() =>\n                    setTimeout(() => setOnHover(false), [100])\n                }\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\n                    borderRadius: 5,\n                }}>\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\n            </Pressable>\n\n            <Modal\n                isOpen={isOpen}\n                onClose={handleClose}\n                useRNModal\n                style={{\n                    alignItems: 'flex-start',\n                    justifyContent: 'flex-start',\n                    height: '100%',\n                }}\n            >\n                <Modal.Content\n                    maxWidth={255}\n                    borderRadius={0}\n                    maxHeight=\"100%\"\n                    height=\"full\"\n                    bgColor={'transparent'}\n                >\n                    <Animated.View\n                        style={{\n                            flex: 1,\n                            transform: [\n                                {\n                                    translateX: slideAnimation.interpolate({\n                                        inputRange: [0, 1],\n                                        outputRange: [-255, 0],\n                                    }),\n                                },\n                            ],\n                        }}\n                    >\n\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\n                            <View style={{ flex: 1, }}>\n\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\n                                        <Image\n                                            source={{\n                                                uri: logo2,\n                                            }}\n                                            resizeMode=\"stretch\"\n                                            style={{ width: 170, height: 30 }}\n                                        />\n                                    </View>\n                                    <TouchableOpacity\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\n                                    >\n                                        <MaterialIcons\n                                            name=\"arrow-back\"\n                                            size={30}\n                                            color=\"white\"\n                                            onPress={handleClose}\n                                        />\n                                    </TouchableOpacity>\n                                </View>\n\n                                {/* Sidebar Content */}\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\n                                    <ScrollView style={{ width: 245 }}>\n                                        <View style={{ height: 20 }}>\n                                            {/* Sidebar Content Items */}\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\n                                                <Button\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\n                                                    borderRadius={0}\n                                                    borderTopWidth={1}\n                                                    borderBottomWidth={1}\n                                                    borderColor={'white'}\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\n                                                    marginTop={0}\n                                                    w={'full'}\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\n                                                    colorScheme={undefined}\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\n                                                    justifyContent=\"flex-start\"\n                                                    alignItems=\"center\"\n                                                >\n                                                    LOGS\n                                                </Button>\n                                            }\n\n                                            {/* ACCOUNT MANAGEMENT */}\n                                            {loginAccountType == 'admin' && <Button\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\n                                                borderRadius={0}\n                                                borderTopWidth={1}\n                                                borderBottomWidth={1}\n                                                borderColor={'white'}\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\n                                                marginTop={0} w={'full'}\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\n                                                colorScheme={undefined}\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\n                                                justifyContent=\"flex-start\"\n                                                alignItems=\"center\"\n                                            >ADD C-HUB ACCOUNT</Button>}\n\n                                            {loginAccountType == 'admin' && <Button\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\n                                                borderRadius={0}\n                                                borderTopWidth={1}\n                                                borderBottomWidth={1}\n                                                borderColor={'white'}\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\n                                                marginTop={0}\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\n                                                colorScheme={undefined}\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\n                                                leftIcon={\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\n                                                    />\n\n                                                }\n                                                justifyContent=\"flex-start\"\n                                                alignItems=\"center\"\n                                            >ACCOUNT LIST</Button>}\n                                            {/* VEHICLE INFORMATION INPUT */}\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\n                                                <Button\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\n                                                    borderRadius={0}\n                                                    borderTopWidth={1}\n                                                    borderBottomWidth={1}\n                                                    borderColor={'white'}\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\n                                                    marginTop={0} w={'full'}\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\n                                                    colorScheme={undefined}\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\n                                                    leftIcon={\n                                                        <>\n                                                            <View>\n                                                                <FontAwesome name=\"automobile\" size={15}\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\n                                                                />\n                                                                <FontAwesome\n                                                                    name=\"plus\"\n                                                                    size={10}\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\n                                                                    style={{\n                                                                        position: 'absolute', // Position it absolutely...\n                                                                        top: -3, // ...at the top...\n                                                                        left: -5 // ...and left.\n                                                                    }}\n                                                                />\n                                                            </View>\n\n\n                                                        </>\n                                                    }\n                                                    justifyContent=\"flex-start\"\n                                                    alignItems=\"center\"\n                                                >UPDATE / ADD NEW VEHICLE</Button>\n                                            }\n\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\n                                                <Button\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\n                                                    borderRadius={0}\n                                                    borderTopWidth={1}\n                                                    borderBottomWidth={1}\n                                                    borderColor={'white'}\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\n                                                    marginTop={0}\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\n                                                    colorScheme={undefined}\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\n                                                    leftIcon={\n                                                        <>\n                                                            <View>\n                                                                <FontAwesome\n                                                                    name=\"automobile\"\n                                                                    size={15}\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\n                                                                />\n\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\n                                                                    style={{\n                                                                        position: 'absolute', // Position it absolutely...\n                                                                        top: -3, // ...at the top...\n                                                                        left: -5 // ...and left.\n                                                                    }}\n                                                                />\n\n                                                            </View>\n\n\n                                                        </>\n                                                    }\n                                                    justifyContent=\"flex-start\"\n                                                    alignItems=\"center\"\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\n                                                >VEHICLE LIST</Button>}\n\n                                            {loginAccountType == 'admin' && <Button\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\n                                                borderRadius={0}\n                                                borderTopWidth={1}\n                                                borderBottomWidth={1}\n                                                borderColor={'white'}\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\n                                                marginTop={0}\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\n                                                colorScheme={undefined}\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\n                                                leftIcon={\n                                                    <>\n                                                        <View>\n                                                            <MaterialIcons\n                                                                name=\"public\"\n                                                                size={20}\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\n                                                            />\n\n                                                            <MaterialIcons name=\"sync\" size={12}\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\n                                                                style={{\n                                                                    position: 'absolute', // Position it absolutely...\n                                                                    top: -3, // ...at the top...\n                                                                    left: -5 // ...and left.\n                                                                }}\n                                                            />\n\n                                                        </View>\n\n\n                                                    </>\n                                                }\n                                                justifyContent=\"flex-start\"\n                                                alignItems=\"center\"\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\n                                            >FREIGHT</Button>\n                                            }\n\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\n                                                borderRadius={0}\n                                                borderTopWidth={1}\n                                                borderBottomWidth={1}\n                                                borderColor={'white'}\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\n                                                marginTop={0}\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\n                                                colorScheme={undefined}\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\n                                                leftIcon={\n                                                    <>\n                                                        <View>\n                                                            <Entypo\n                                                                name=\"chat\"\n                                                                size={20}\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\n\n                                                            />\n\n                                                        </View>\n\n\n                                                    </>\n                                                }\n                                                justifyContent=\"flex-start\"\n                                                alignItems=\"center\"\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\n                                            >CHAT MESSAGES</Button>}\n                                        </View>\n                                        {/* Footer Content */}\n                                        {/* <TouchableOpacity\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\n            onPress={handleSignOut}\n          >\n            <Text style={{ color: 'white', textAlign: 'center' }}>\n              Logout\n            </Text>\n          </TouchableOpacity> */}\n                                    </ScrollView>\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\n                                        {/* Footer Content */}\n                                        {/* <Center marginBottom={1.5}>\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\n            </Button>\n          </Center> */}\n                                    </View>\n                                </View>\n                            </View>\n                        </View>\n\n                    </Animated.View>\n                </Modal.Content>\n            </Modal>\n        </>\n\n    );\n}\n\n\nexport default SideDrawer;","import {\n  Box,\n  Button,\n  Center,\n  Flex,\n  HStack,\n  Icon,\n  Image as NativeImage,\n  Input,\n  Modal,\n  NativeBaseProvider,\n  Popover,\n  Pressable,\n  Spinner,\n  Stack,\n  Text,\n  VStack,\n  useBreakpointValue,\n  TextArea,\n  InputRightAddon,\n  InputGroup,\n  InputLeftAddon,\n  Select,\n  CheckIcon,\n  PresenceTransition,\n  CloseIcon,\n  ScrollView as ScrollViewNative,\n  Divider,\n  useDisclosure,\n  useDisclose,\n  FormControl,\n  Checkbox,\n  useToast\n} from 'native-base';\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  PanResponder,\n  Animated,\n  InputAccessoryView,\n  FlatList,\n  ScrollView,\n  TouchableHighlight,\n  TextInput,\n  Image as RNImage\n} from 'react-native';\nimport 'react-native-gesture-handler';\nimport {\n  AntDesign,\n  FontAwesome,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Entypo,\n  FontAwesome5,\n  EvilIcons\n} from 'react-native-vector-icons';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useNavigation } from '@react-navigation/core';\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\nimport moment from 'moment';\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\nimport './../style.css';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\nimport FastImage from 'react-native-fast-image-web-support';\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\nimport { DragSortableView } from 'react-native-drag-sort';\nimport {\n  setVehicleListData,\n  setSupplyChainsCostsData,\n  setSelectedPaidTo,\n  setSelectedExpenseName,\n  setSupplyChainsCostsModalVisible,\n  setVehicleListSupplyChainsCostsData,\n  setDeleteImageVisible,\n  setSelectedImages,\n  setAddAnotherImages,\n  setIsAddPhotoVisible,\n  setUploadImagesModalVisible,\n  setUploadImagesButtonLoading,\n  setViewImagesModalVisible,\n  setViewImagesData,\n  setLoadingModalVisible,\n  setAddVehicleListData,\n  setEditVehicleModalVisible,\n  setFobPriceHistoryModalVisible,\n  setFobHistoryData,\n  setLoginName\n} from './redux/store';\n// import { TextInput } from 'react-native-gesture-handler';\nimport { nanoid } from 'nanoid';\nimport { cloneDeep } from 'lodash';\nimport StickyHeader from './Header/StickyHeader';\nimport { UsePagination } from './VehicleListComponent/UsePagination';\nimport { useNavigate } from 'react-router-dom';\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\n\n// import { CollectionGroup } from 'firebase-admin/firestore';\nconst { width } = Dimensions.get('window');\nlet selectedScreen = 'VEHICLE LIST'\n\nlet globalSupplyChainCostsData = [];\nlet globalCurrentSupplyChainCostsData = [];\nlet globalFobPriceHistoryData = [];\nlet globalCurrentStockID = '';\nlet globalSelectedPaidTo = '';\nlet globalSPCSelectedDate = '';\nlet globalSelectedExpenseName = '';\nlet globalSupplyChainCostsAmount = 0;\nlet globalSelectedImages = [];\nlet globalSelectedVehicle = '';\nlet globalSelectedVehicleReferenceNumber = '';\nlet globalSelectedCarName = '';\nconst nameVariable = {\n  text: \"\",\n};\n\nconst firestore = getFirestore();\n\nconst getEmailOfCurrentUser = () => {\n  const user = projectControlAuth.currentUser;\n  if (user) {\n    const email = user.email;\n    return email;\n  } else {\n    // console.log('No user is currently authenticated');\n    return null;\n  }\n};\n\n// const Drawer = createDrawerNavigator();\n\n\nconst storage = getStorage(projectExtensionFirebase);\n\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\n\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const stockStatusData = useSelector((state) => state.stockStatusData);\n  const [key, setKey] = useState(nanoid());\n\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\n  const screenWidth = Dimensions.get('window').width;\n\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\n      if (doc.exists()) {\n        const data = doc.data();\n        // Handle the data from the document\n        setSelectedStockStatusValue(data.stockStatus);\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\n\n      }\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => unsubscribe();\n  }, []);\n\n  const handleSaveStockStatus = async () => {\n\n    dispatch(setLoadingModalVisible(true));\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\n      dispatch(setLoadingModalVisible(false));\n\n    }\n    else {\n\n      const stockStatusHistoryData = {\n        date: formattedTime,\n        stockStatus: selectedStockStatusValue,\n        changedBy: nameVariable.text,\n      };\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\n\n      try {\n        await updateDoc(vehicleProductRef, {\n          stockStatus: selectedStockStatusValue,\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\n        });\n        const logData = {\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\n          timestamp: formattedTime,\n          colorScheme: true,\n          keywords: [\n            formattedTime.toLowerCase(),\n            globalCurrentStockID.toLowerCase(),\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\n            'Stock Status'.toLowerCase(),\n            'Stock Status Updated'.toLowerCase(),\n            'Stock'.toLowerCase(),\n            'Status Updated'.toLowerCase(),\n            'Updated'.toLowerCase(),\n            globalSelectedCarName.toLowerCase(),\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\n            nameVariable.text.toLowerCase(),\n            year.toLowerCase(),\n            month.toLowerCase(),\n            monthWithDay.toLowerCase(),\n            date.toLowerCase(),\n            day.toLowerCase(),\n            time.toLowerCase(),\n            timeWithMinutesSeconds.toLowerCase(),\n          ],\n        };\n        addLogToCollection(logData);\n        dispatch(setLoadingModalVisible(false));\n\n        // console.log('FOB Price updated successfully');\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\n            </View>;\n          }\n        })\n      } catch (error) {\n        console.error(error);\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\n            </View>;\n          }\n        })\n      }\n    }\n  }\n\n  return (\n    <View style={{ flex: 1, flexDirection: 'row' }}>\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\n        <Select\n          selectedValue={selectedStockStatusValue}\n          onValueChange={(value) => {\n            setSelectedStockStatusValue(value);\n          }}\n          flex={3}\n          accessibilityLabel=\"---\"\n          placeholder=\"---\"\n          _selectedItem={{\n            bg: \"teal.600\",\n            endIcon: <CheckIcon size=\"5\" />\n          }}\n        >\n          {stockStatusData.map((item) => (\n            <Select.Item key={item} label={item} value={item} />\n          ))}\n        </Select>\n      </View>\n\n      <TouchableHighlight\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\n        onPress={handleSaveStockStatus}\n        style={{\n          backgroundColor: '#16A34A',\n          borderRadius: 5,\n          padding: 3,\n          margin: 2,\n          alignSelf: 'center',\n        }}>\n        <MaterialIcons name='update' color='white' size={22} />\n      </TouchableHighlight>\n    </View>\n\n\n\n\n  );\n};\n\n\nconst addLogToCollection = async (data) => {\n  try {\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\n\n    // Add a new document to the \"logs\" collection\n    await addDoc(logsCollectionRef, data);\n\n    // console.log('Document added successfully!');\n  } catch (error) {\n    console.error('Error adding document:', error);\n  }\n};\n\nconst LoadingModal = () => {\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\n\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        flex: 1,\n        display: loadingModalVisible ? 'flex' : 'none',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {/* Content within the modal */}\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Spinner size=\"lg\" color=\"white\" />\n        <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\n      </View>\n    </View>\n\n  );\n\n}\n\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\n\n  const handleModalDeleteOpen = () => {\n    setModalDeleteImagesVisible(true);\n  };\n\n  const handleModalDeleteClose = () => {\n    setModalDeleteImagesVisible(false);\n  };\n\n  return (\n    <>\n      <View\n        style={{\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          backgroundColor: '#FF4136',\n          borderRadius: 3,\n          alignItems: 'center',\n          justifyContent: 'center',\n          display: isAddPhotoVisible ? 'none' : 'flex',\n        }}\n      >\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\n        </TouchableHighlight>\n      </View>\n\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\n        <Modal.Content bgColor={'error.100'}>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\n            <Text color={'#102A43'} bold>\n              Clear Images\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'error.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'danger.400'}\n            margin={5}\n          >\n            <View style={{ flex: 1 }}>\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\n              <Text style={{ color: '#FF4136' }}>\n                Are you sure you want to clear{' '}\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\n                  {selectedImages.length}\n                </Text>{' '}\n                selected image(s)?\n              </Text>\n            </View>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\n            <View style={{ flexDirection: 'row', flex: 1 }}>\n              <TouchableOpacity\n                onPress={handleModalDeleteClose}\n                style={{\n                  flex: 1,\n                  backgroundColor: '#57534E', // Replace with your desired color\n                  borderRadius: 5,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: 5,\n                  padding: 5,\n                }}\n              >\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={handleClearImages}\n                style={{\n                  flex: 1,\n                  backgroundColor: '#DC2626', // Replace with your desired color\n                  borderRadius: 5,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: 5,\n                  padding: 5,\n                }}\n              >\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\n              </TouchableOpacity>\n            </View>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\n  const dispatch = useDispatch();\n  const { width } = Dimensions.get('window');\n\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\n  const [boolean, setBoolean] = useState(true);\n  const selectedImages = useSelector((state) => state.selectedImages);\n  // const [selectedImages, setSelectedImages] = useState([]);\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\n  const [scrollEnabled, setscrollEnabled] = useState(true);\n  const [isEnterEdit, setisEnterEdit] = useState(false);\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\n  const [modalImageUri, setModalImageUri] = useState('');\n  const [imageModalVisible, setImageModalVisible] = useState(false);\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\n\n  const handleImagePress = useCallback((uri) => {\n    // const base64Image = toString(uri);\n    // setIsLoading(true);\n    setIsCursorLoading(true);\n    setModalImageUri(uri);\n    setImageModalVisible(true);\n    // console.log(\"URI: \", uri);\n\n  }, []);\n\n  const styles = StyleSheet.create({\n    dropdown: {\n      margin: 16,\n      height: 50,\n      borderBottomColor: 'gray',\n      borderBottomWidth: 0.5,\n    },\n    icon: {\n      marginRight: 5,\n    },\n    placeholderStyle: {\n      fontSize: 16,\n    },\n    selectedTextStyle: {\n      fontSize: 16,\n    },\n    iconStyle: {\n      width: 20,\n      height: 20,\n    },\n    inputSearchStyle: {\n      height: 40,\n      fontSize: 16,\n    },\n    container: {\n      flex: 1,\n      paddingTop: 20,\n\n    },\n    txt: {\n      fontSize: 18,\n      lineHeight: 24,\n      padding: 5\n    },\n    sort: {\n    },\n    item_children: {\n      width: 90,\n      height: 90,\n      backgroundColor: 'black',\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    item_delete_icon: {\n      width: 14,\n      height: 14,\n      position: \"absolute\",\n      right: 1,\n      top: 1\n    },\n    item_icon: {\n      width: 90,\n      height: 90,\n      resizeMode: \"contain\",\n      position: \"absolute\"\n    }\n  });\n\n  const handleImageAddToSelection = async () => {\n    dispatch(setDeleteImageVisible(true));\n    if (selectedImages.length === 40) {\n      return; // Limit reached, do not add a new image\n    }\n\n    const options = {\n      mediaType: 'photo',\n      // quality: 10,\n      maxWidth: 1000,\n      maxHeight: 1000,\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n\n    try {\n      const response = await launchImageLibrary(options);\n      if (response.didCancel) {\n        // console.log('User cancelled image picker');\n        return;\n      } else if (response.error) {\n        // console.log('ImagePicker Error: ', response.error);\n        return;\n      } else if (!response.assets || response.assets.length === 0) {\n        // console.log('No images selected.');\n        return;\n      }\n\n      // Filter out images larger than 10MB\n      const newImages = [...selectedImages];\n      const promises = response.assets.map(async (asset) => {\n        const file = await fetch(asset.uri).then((res) => res.blob());\n        const fileSize = file.size;\n        if (fileSize / 1024 / 1024 < 10) {\n          const exists = newImages.some((image) => image.uri === asset.uri);\n          if (!exists) {\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\n          }\n        } else {\n          setIsFileSizeLimitModal(true);\n        }\n      });\n\n      await Promise.all(promises);\n\n      const limitedImages = newImages.slice(0, 40);\n      dispatch(setSelectedImages(limitedImages));\n      globalSelectedImages = limitedImages;\n\n      if (limitedImages.length >= 40) {\n        dispatch(setAddAnotherImages(false));\n      }\n\n      // limitedImages.forEach((image) => {\n      //   console.log(`File size: ${image.fileSize}`);\n      // });\n\n    } catch (error) {\n      // console.log('ImagePicker Error: ', error);\n    }\n  };\n\n  const reloadData = useCallback(() => {\n    if (selectedImages.length > 0) {\n      // ... Logic to reload data using selectedImages and width\n\n      // Assuming your logic has updated selectedImages, you can directly use it here\n      const updatedSelectedImages = [...selectedImages];\n\n      // Dispatch the updatedSelectedImages array to the state\n      dispatch(setSelectedImages(updatedSelectedImages));\n    }\n\n  }, [widthState]);\n\n  useEffect(() => {\n    const handleWidthChange = ({ window }) => {\n      setWidthState(window.width);\n    };\n\n    Dimensions.addEventListener('change', handleWidthChange);\n\n    return () => {\n      Dimensions.removeEventListener('change', handleWidthChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    reloadData();\n  }, [reloadData]);\n\n\n\n  const handleClearImages = useCallback(() => {\n    setModalDeleteImagesVisible(false);\n    // dispatch(setSelectedImages([]));\n    // globalSelectedImages = [];\n    // dispatch(setIsAddPhotoVisible(true));\n    // dispatch(setAddAnotherImages(false));\n    // dispatch(setDeleteImageVisible(true));\n    handleClearImagesExtra();\n\n  }, []);\n\n\n\n  const renderItem = useCallback((item) => {\n\n    // console.log(item.id);\n    // console.log(index)\n    if (isEnterEdit) {\n\n      return (\n\n        <Box key={item.uri} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n            />\n            <Box\n              position=\"absolute\"\n              top={-3}\n              right={-3}\n              bg=\"rgba(0, 0, 0, 0.5)\"\n              borderRadius={10}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\n              </Pressable>\n            </Box>\n          </Box>\n        </Box>\n\n      );\n    } else {\n\n      return (\n\n        <Box key={item.id} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n\n            />\n\n            <Box\n              position=\"absolute\"\n              top={-3}\n              right={-3}\n              bg=\"rgba(0, 0, 0, 0.5)\"\n              borderRadius={10}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\n              </Pressable>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n\n\n  }, []);\n\n  const getImagesRenderItem = useCallback((item) => {\n\n    // console.log(item.id);\n    // console.log(index)\n    if (isEnterEdit) {\n\n      return (\n\n        <Box key={item.uri} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n            />\n\n\n          </Box>\n        </Box>\n\n      );\n    } else {\n\n      return (\n\n        <Box key={item.id} style={styles.item}>\n          <Box style={styles.item_children}>\n\n            <FastImage\n              style={styles.item_icon}\n              source={{\n                uri: item.uri,\n                priority: FastImage.priority.normal,\n              }}\n              resizeMode={FastImage.resizeMode.contain}\n\n            />\n\n          </Box>\n        </Box>\n      );\n    }\n\n\n  }, []);\n\n\n  const handleImageSelection = async () => {\n    const options = {\n      mediaType: 'photo',\n      // quality: 10,\n      maxWidth: 1000,\n      maxHeight: 1000,\n      selectionLimit: 40,\n      storageOptions: {\n        skipBackup: true,\n        path: 'images',\n      },\n    };\n\n    try {\n      const response = await launchImageLibrary(options);\n      if (response.didCancel) {\n        // console.log('User cancelled image picker');\n        return;\n      } else if (response.error) {\n        // console.log('ImagePicker Error: ', response.error);\n        return;\n      } else if (!response.assets || response.assets.length === 0) {\n        // console.log('No images selected.');\n        return;\n      }\n\n      // Remove duplicates from the selected images\n      const uniqueImages = response.assets.filter(\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\n      );\n\n      // Filter out images larger than 10MB\n      const filteredImages = [];\n      const imageOrder = [];\n      for (let index = 0; index < uniqueImages.length; index++) {\n        const image = uniqueImages[index];\n        const file = await fetch(image.uri).then((res) => res.blob());\n        const fileSize = file.size;\n        if (fileSize / 1024 / 1024 < 10) {\n          filteredImages.push(image);\n          imageOrder.push(index);\n        } else {\n          setIsFileSizeLimitModal(true);\n        }\n      }\n\n\n      // Sort the filtered images based on their original order\n      const sortedImages = filteredImages.sort((a, b) => {\n        const indexA = imageOrder[filteredImages.indexOf(a)];\n        const indexB = imageOrder[filteredImages.indexOf(b)];\n        return indexA - indexB;\n      });\n\n\n\n      // Limit the number of selected images to 40\n      const limitedImages = sortedImages.slice(0, 40);\n\n      globalSelectedImages = limitedImages;\n      if (limitedImages.length > 0) {\n        dispatch(setIsAddPhotoVisible(false));\n        dispatch(setAddAnotherImages(true));\n      }\n\n      if (limitedImages.length >= 40) {\n        dispatch(setIsAddPhotoVisible(false));\n        dispatch(setAddAnotherImages(false));\n      }\n\n      dispatch(setSelectedImages(globalSelectedImages));\n\n    } catch (error) {\n      // console.log('ImagePicker Error: ', error);\n    }\n  };\n\n\n\n\n\n  const handleDeleteImagePress = useCallback((uri) => {\n\n    globalSelectedImages = globalSelectedImages.filter((item) => {\n      // Replace 'uriToDelete' with the URI you want to delete\n      return item.uri !== uri;\n    });\n\n    if (globalSelectedImages.length < 40) {\n      dispatch(setAddAnotherImages(true));\n    }\n\n    if (globalSelectedImages.length == 0) {\n      dispatch(setAddAnotherImages(false));\n      dispatch(setIsAddPhotoVisible(true));\n    }\n    dispatch(setSelectedImages(globalSelectedImages));\n    // dispatch(setSelectedImages((prevImages) => {\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\n\n    //   if (updatedImages.length < 40) {\n    //     dispatch(setAddAnotherImages(true));\n    //   }\n    //   if (updatedImages.length == 0) {\n    //    dispatch(setAddAnotherImages(false));\n    //     dispatch(setIsAddPhotoVisible(true));\n    //   }\n    //   return updatedImages;\n    // }));\n\n    // console.log(globalSelectedImages.map((item) => item.uri));\n  }, []);\n\n\n\n\n\n  return (\n    <>\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\n\n\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\n\n            <ClearImagesModal\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\n              handleClearImages={handleClearImages}\n              selectedImages={selectedImages}\n              isAddPhotoVisible={isAddPhotoVisible} />\n\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\n\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\n\n\n              <ScrollView\n                scrollEnabled={scrollEnabled}\n                flex={1}\n              >\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\n\n\n                  <DragSortableView\n                    ref={dragSortableViewRef}\n                    dataSource={selectedImages}\n                    delayLongPress={100}\n                    parentWidth={width * 0.33}\n                    childrenWidth={100}\n                    childrenHeight={100}\n                    marginChildrenTop={3}\n                    marginChildrenBottom={0}\n                    marginChildrenLeft={0}\n                    marginChildrenRight={0}\n                    onDragStart={useCallback(() => {\n                      if (!isEnterEdit) {\n                        setisEnterEdit(true);\n                        setscrollEnabled(false);\n                      } else {\n                        setscrollEnabled(false);\n                      }\n                    }, [])}\n                    onDragEnd={useCallback(() => {\n                      setscrollEnabled(true);\n                    }, [])}\n                    onDataChange={useCallback((data) => {\n\n                      if (data.length !== data) {\n                        dispatch(setSelectedImages(data));\n                        globalSelectedImages = data;\n                      }\n\n                    }, [])}\n                    onClickItem={(item, index) => {\n                      handleImagePress(index.uri);\n                    }}\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\n                    renderItem={\n                      useCallback((item, index) => renderItem(item, index), [])} />\n\n                  <Center>\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\n                  </Center>\n\n                </Box>\n\n\n\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\n\n\n                  <DragSortableView\n                    sortable={false}\n                    ref={dragSortableViewRef}\n                    dataSource={selectedImages}\n                    parentWidth={width * 0.33}\n                    childrenWidth={100}\n                    childrenHeight={100}\n                    marginChildrenTop={3}\n                    marginChildrenBottom={0}\n                    marginChildrenLeft={0}\n                    marginChildrenRight={0}\n                    onClickItem={(item, index) => {\n                      handleImagePress(index.uri);\n                    }}\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\n                    renderItem={\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\n\n                </Box>\n              </ScrollView>\n\n\n\n\n            </Box>\n\n\n            <Box\n              position=\"absolute\"\n              top={0}\n              left={0}\n              borderRadius={3}\n              bgColor={'rgba(0, 0, 0, 0.5)'}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              display={isAddPhotoVisible ? 'none' : 'block'}>\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\n            </Box>\n          </Box>\n\n        </ScrollView>\n\n\n\n      </Box>\n\n      {/* </Box> */}\n\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\n\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\n          <Modal.CloseButton color={'white'} />\n          <NativeImage\n            key={modalImageUri}\n            source={{ uri: modalImageUri }}\n            resizeMode='contain'\n            flex={1}\n            alt={modalImageUri}\n            h={720}\n            w={1280}\n          />\n\n        </Box>\n\n      </Modal>\n\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\n        <Modal.Content bgColor={'danger.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\n            <Text color={'#102A43'} bold>\n              Failed!\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            bgColor={'danger.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'danger.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'danger.600'} bold>\n                Failed!\n              </Text>\n              <Text color={'danger.600'}>\n                Please select image(s) smaller than 10MB!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\n\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\n  return (\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\n        <Modal.CloseButton />\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\n        </Modal.Header>\n\n\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\n\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\n\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\n\n          </View>\n\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <TouchableOpacity\n            onPress={handleUploadImagesModalClose}\n            style={{\n              backgroundColor: '#525252',\n              borderRadius: 5,\n              margin: 3,\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'center',\n              padding: 8,\n            }}>\n            <Text style={{ color: 'white' }}>Close</Text>\n          </TouchableOpacity>\n          <View style={{ flex: 4 }} />\n\n          <TouchableOpacity\n            disabled={uploadImagesButtonLoading}\n            onPress={handleUploadImages}\n            style={{\n              backgroundColor: '#16A34A',\n              borderRadius: 5,\n              margin: 3,\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'center',\n              padding: 8,\n            }}>\n            {!uploadImagesButtonLoading ? (\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\n              <Spinner color=\"white\" />\n            )}\n          </TouchableOpacity>\n\n\n        </View>\n\n\n\n      </Modal.Content>\n\n    </Modal>\n\n  );\n}\n\nconst UploadImagesModal = ({ fetchImageCounts }) => {\n\n\n  const screenWidth = Dimensions.get('window').width;\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const dragSortableViewRef = useRef();\n\n  const handleClearImagesExtra = () => {\n    dispatch(setSelectedImages([]));\n    globalSelectedImages = [];\n    dispatch(setIsAddPhotoVisible(true));\n    dispatch(setAddAnotherImages(false));\n    dispatch(setDeleteImageVisible(true));\n  };\n\n\n  const handleUploadImagesModalClose = () => {\n\n    dispatch(setUploadImagesModalVisible(false));\n    // globalCurrentStockID = '';\n    handleClearImagesExtra();\n    globalSelectedVehicle = '';\n  }\n\n  const uploadImages = useCallback(async () => {\n\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\n    const ImageFormat = { jpg: 'jpg' };\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\n    const docRef = doc(collectionRef, globalCurrentStockID);\n\n\n\n    try {\n      // Get the names of the images to keep\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\n\n      // Delete existing files in the folder that do not match the names of the images to keep\n      const listResult = await listAll(storageRef);\n      await Promise.all(\n        listResult.items\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\n          .map((itemRef) => deleteObject(itemRef))\n      );\n\n      await Promise.all(\n        globalSelectedImages.map(async (asset, index) => {\n          const { uri } = asset;\n          const imagename = index.toString();\n\n          const response = await fetch(uri);\n          const blob = await response.blob();\n\n          // Create an offscreen canvas\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create a new image object\n          const img = new Image();\n          img.src = URL.createObjectURL(blob);\n\n          // Draw the image on the canvas\n          img.onload = async () => {\n            // Create a canvas element\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            // Calculate the desired width and height for the resized image\n            const maxWidth = 800; // Set your desired maximum width\n            const maxHeight = 600; // Set your desired maximum height\n            let newWidth = img.width;\n            let newHeight = img.height;\n\n            // Check if the image needs resizing\n            if (img.width > maxWidth) {\n              newWidth = maxWidth;\n              newHeight = (img.height * maxWidth) / img.width;\n            }\n\n            if (newHeight > maxHeight) {\n              newWidth = (newWidth * maxHeight) / newHeight;\n              newHeight = maxHeight;\n            }\n\n            // Set the canvas dimensions to the new width and height\n            canvas.width = newWidth;\n            canvas.height = newHeight;\n\n            // Draw the resized image onto the canvas\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\n\n            // Calculate the font size as a percentage of the image width\n            const fontSizePercentage = 3;\n            const imageRes = img.height * img.width;\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\n\n            ctx.font = `bold ${fontSize}px Arial`;\n            ctx.fillStyle = '#fff';\n            ctx.shadowColor = 'transparent';\n            ctx.imageSmoothingEnabled = true;\n            ctx.lineWidth = 2;\n\n            // Calculate the position for the watermark text\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\n            const textWidth = ctx.measureText(watermarkText).width;\n            const textHeight = fontSize; // Font size determines the text height\n\n            // Set padding around the text (adjust as needed)\n            const paddingX = 10;\n            const paddingY = 5;\n\n            // Calculate the position for the text shadow\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\n\n            // Increase the shadow thickness by adjusting the shadow blur radius\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\n\n            // Draw the text shadow (black)\n            ctx.fillStyle = 'black';\n            ctx.fillText(watermarkText, xShadow, yShadow);\n\n            // Reset the shadow blur radius for the actual text\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\n\n            // Calculate the position for the actual text\n            const x = (canvas.width - textWidth) / 2;\n            const y = canvas.height - 20;\n\n            // Draw the actual text (white)\n            ctx.fillStyle = '#fff';\n            ctx.fillText(watermarkText, x, y);\n\n            // Convert the canvas to a blob\n            const watermarkedImageBlob = await new Promise(resolve => {\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\n            });\n\n            // Upload the resized image to Firebase Storage\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\n          };\n        })\n      );\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n      const { datetime } = response.data;\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n      const year = moment(datetime).format('YYYY');\n      const month = moment(datetime).format('MM');\n      const monthWithDay = moment(datetime).format('MM/DD');\n      const date = moment(datetime).format('YYYY/MM/DD');\n      const day = moment(datetime).format('DD');\n      const time = moment(datetime).format('HH:mm');\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n      const imageCount = {\n        imageCount: globalSelectedImages.length,\n      };\n\n      await updateDoc(docRef, imageCount);\n\n      const logData = {\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          globalCurrentStockID.toLowerCase(),\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\n          'Vehicle List'.toLowerCase(),\n          'Vehicle Updated'.toLowerCase(),\n          'Vehicle'.toLowerCase(),\n          'Updated'.toLowerCase(),\n          globalSelectedCarName.toLowerCase(),\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n      addLogToCollection(logData);\n\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\n    } catch (error) {\n      console.error('Error uploading images:', error);\n    }\n  }, []);\n\n\n  const handleUploadImages = async () => {\n\n    dispatch(setUploadImagesButtonLoading(true));\n\n    if (globalSelectedImages.length > 0) {\n      toast.closeAll();\n      try {\n        await uploadImages();\n        dispatch(setUploadImagesButtonLoading(false));\n        fetchImageCounts();\n        handleUploadImagesModalClose();\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\n            </View>;\n          }\n        })\n\n      } catch (error) {\n        console.error(error);\n        dispatch(setUploadImagesButtonLoading(false));\n        handleUploadImagesModalClose();\n\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\n            </View>;\n          }\n        })\n      }\n    }\n\n    else {\n      dispatch(setUploadImagesButtonLoading(false));\n    }\n\n\n\n  };\n\n  return (\n\n    <>\n      <ImageUploadModal\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\n        screenWidth={screenWidth}\n        dragSortableViewRef={dragSortableViewRef}\n        handleClearImagesExtra={handleClearImagesExtra}\n        handleUploadImages={handleUploadImages} />\n    </>\n  );\n\n};\n\n\nconst SupplyChainsCosts = ({ data }) => {\n\n  const dispatch = useDispatch();\n\n\n\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\n    dispatch(setSupplyChainsCostsModalVisible(true));\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\n    globalCurrentStockID = data.stockID;\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\n    globalSelectedCarName = data.carName;\n\n  }, []);\n\n  return (\n    <><TouchableOpacity\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\n      style={{\n        backgroundColor: '#12293F',\n        borderRadius: 5,\n        padding: 2,\n        // flex: 1,\n        width: '90%',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\n    </TouchableOpacity>\n\n\n    </>\n\n\n  );\n}\n\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\n  const screenWidth = Dimensions.get('window').width;\n\n  const dispatch = useDispatch();\n\n  const toast = useToast();\n\n  const [sccData, setSccData] = useState([]);\n\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n\n\n  const [clearModalVisible, setClearModalVisible] = useState(false);\n  const [data, setData] = useState([]);\n\n  const [selectedDate, setSelectedDate] = useState(currentDate);\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\n  const [paidToIsError, setPaidToIsError] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\n  const selectExpenseNameRef = useRef(null);\n  const selectPaidToRef = useRef(null);\n  const expenseViewRef = useRef(null);\n\n  const textAreaAddExpenseName = useRef(null);\n  const textAreaAddPaidTo = useRef(null);\n  const inputExpenseAmount = useRef(null);\n  const handleInputExpenseAmountChange = (text) => {\n    // Remove any non-numeric characters\n    const numericValue = text.replace(/[^0-9]/g, '');\n\n    // Limit the numeric value to a maximum of 4 characters\n    const truncatedValue = numericValue.slice(0, 6);\n\n    // Format the truncated numeric value with comma separator\n    const formattedValue = Number(truncatedValue).toLocaleString();\n\n    inputExpenseAmount.current.value = formattedValue;\n  };\n\n\n\n\n\n  const handleModalSupplyChainsCostsClose = () => {\n    dispatch(setSupplyChainsCostsModalVisible(false));\n    inputExpenseAmount.current?.clear();\n    globalSelectedExpenseName = '';\n    setSelectResetKey(nanoid());\n    globalSelectedPaidTo = '';\n    setSelectedDate(currentDate);\n    globalSPCSelectedDate = currentDate;\n    dispatch(setSelectedExpenseName(''));\n    dispatch(setSelectedPaidTo(''));\n    setInputAmountIsError(false);\n    setExpenseNameIsError(false);\n    setPaidToIsError(false);\n    globalSelectedVehicle = '';\n  };\n\n\n  const handleClearModalOpen = () => {\n    setClearModalVisible(true);\n  };\n\n  const handleClearModalClose = () => {\n    setClearModalVisible(false);\n  };\n\n  useEffect(() => {\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\n      const expenseName = Object.keys(item)[0];\n      const expenseData = item[expenseName];\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\n    });\n\n    // Use reduce to add up all the amounts\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    const formattedTotalAmount = totalAmount.toLocaleString();\n    setTotalAmount(formattedTotalAmount);\n    globalSupplyChainCostsAmount = formattedTotalAmount;\n\n  }, [vehicleListSupplyChainsCostsData]);\n\n  const handleSave = useCallback(() => {\n\n\n\n    if (inputExpenseAmount.current?.value == ''\n      || inputExpenseAmount.current?.value == 0\n      || globalSelectedExpenseName == ''\n      || globalSelectedPaidTo == ''\n    ) {\n\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\n        setInputAmountIsError(true);\n      }\n\n      if (globalSelectedExpenseName == '') {\n        setExpenseNameIsError(true);\n      }\n\n      if (globalSelectedPaidTo == '') {\n        setPaidToIsError(true);\n      }\n    }\n\n    else {\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\n\n      if (existingIndex !== -1) {\n        // If an entry with the same expense name exists, update it\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\n        updatedData[existingIndex][globalSelectedExpenseName] = {\n          expenseName: globalSelectedExpenseName,\n          amount: inputExpenseAmount.current?.value,\n          date: globalSPCSelectedDate,\n          paidName: globalSelectedPaidTo,\n        };\n        globalSupplyChainCostsData = updatedData;\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\n        dispatch(setSelectedExpenseName(''));\n        dispatch(setSelectedPaidTo(''));\n        inputExpenseAmount.current.clear();\n        globalSelectedExpenseName = '';\n        globalSelectedPaidTo = '';\n        setSelectedDate(currentDate);\n        globalSPCSelectedDate = currentDate;\n\n      } else {\n        setInputAmountIsError(false);\n        setExpenseNameIsError(false);\n        setPaidToIsError(false);\n        // If no entry with the same expense name exists, add a new entry\n        const newData = {\n          [globalSelectedExpenseName]: {\n            expenseName: globalSelectedExpenseName,\n            amount: inputExpenseAmount.current?.value,\n            date: globalSPCSelectedDate,\n            paidName: globalSelectedPaidTo,\n          },\n        };\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\n        // console.log(globalSupplyChainCostsData);\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\n        setSelectResetKey(nanoid());\n        inputExpenseAmount.current.clear();\n        globalSelectedExpenseName = '';\n        globalSelectedPaidTo = '';\n        setSelectedDate(currentDate);\n        globalSPCSelectedDate = currentDate;\n        dispatch(setSelectedExpenseName(''));\n        dispatch(setSelectedPaidTo(''));\n\n\n      }\n\n    }\n\n\n\n  }, []);\n\n\n\n  const handleEditPress = useCallback((item) => {\n    // console.log(item.amount);\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\n    dispatch(setSelectedExpenseName(item.expenseName));\n    globalSelectedExpenseName = item.expenseName;\n    dispatch(setSelectedPaidTo(item.paidName));\n    globalSelectedPaidTo = item.paidName;\n    globalSPCSelectedDate = item.date;\n    setSelectedDate(item.date);\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\n\n  }, [])\n\n\n  const handleDeleteItem = (expenseName) => {\n    // Find the index of the item to be deleted\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\n\n    if (itemIndex !== -1) {\n      // Create a copy of the data array and remove the item at the found index\n      const newData = [...globalSupplyChainCostsData];\n      newData.splice(itemIndex, 1);\n\n      // Update the state with the new array\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\n      globalSupplyChainCostsData = newData;\n    }\n  };\n\n  const handleFirstModalClose = () => {\n    dispatch(setSupplyChainsCostsModalVisible(false));\n\n  };\n  const handleFirstModalOpen = () => {\n    dispatch(setSupplyChainsCostsModalVisible(true));\n\n  }\n\n  const handleAddExpenseNameTextChange = () => {\n    const textAreaValue = textAreaAddExpenseName.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleAddPaidToTextChange = () => {\n    const textAreaValue = textAreaAddPaidTo.current?.value;\n    if (textAreaValue) {\n      const newText = textAreaValue\n        .split('\\n')\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\n        .join('\\n');\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\n    }\n  };\n\n  const handleSaveSupplyChainsCosts = async () => {\n\n    toast.closeAll();\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\n      // console.log('Same price, will not update')\n      dispatch(setSupplyChainsCostsModalVisible(false));\n      toast.show({\n        render: () => {\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\n          </View>;\n        }\n      })\n    }\n    else {\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\n\n      try {\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\n        dispatch(setSupplyChainsCostsModalVisible(false));\n        // console.log('Supply Chains Costs updated successfully');\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\n            </View>;\n          }\n        })\n\n        dispatch(setSupplyChainsCostsModalVisible(false));\n        dispatch(setVehicleListSupplyChainsCostsData([]));\n        globalSupplyChainCostsData = [];\n        globalCurrentSupplyChainCostsData = [];\n        globalCurrentStockID = '';\n\n\n      } catch (error) {\n        console.error(error);\n        toast.show({\n          render: () => {\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\n            </View>;\n          }\n        })\n      }\n    }\n\n    // Reference the Firestore document and update the 'fobPrice' field\n\n  };\n  return (\n\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\n        <Modal.CloseButton />\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\n        </Modal.Header>\n        <Modal.Body>\n          <View style={{ height: '100%' }}>\n            <View paddingBottom={5}>\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\n                <View style={{\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\n                  padding: screenWidth <= 960 ? 5 : 0,\n                }}\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\n                  <SupplyChainsCostsSortAndAddModal\n                    docName='ExpenseName'\n                    handleAddTextChange={handleAddExpenseNameTextChange}\n                    textAreaAdd={textAreaAddExpenseName}\n                    title='Expense Name'\n                    dataName={'expenseName'}\n                    databaseInit={projectExtensionFirestore}\n                    headerText=\"Rearrange/Add Expense Name\"\n                    data={expenseNameData}\n                    handleFirstModalClose={handleFirstModalClose}\n                    handleFirstModalOpen={handleFirstModalOpen} />\n                </View>\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\n              </View>\n\n\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\n                <View style={{\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\n                  padding: screenWidth <= 960 ? 5 : 0,\n                }}\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\n                </View>\n                <Input\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\n                  flex={3}\n                  ref={inputExpenseAmount}\n                  onChangeText={handleInputExpenseAmountChange}\n                  placeholder=\"Amount\"\n                  bgColor={'white'}\n                  placeholderTextColor={'muted.400'}\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\n              </View>\n\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\n                <View style={{\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\n                  padding: screenWidth <= 960 ? 5 : 0,\n                }}\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\n                </View>\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\n              </View>\n\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\n                <View style={{\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\n                  padding: screenWidth <= 960 ? 5 : 0,\n                }}\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\n                  <SupplyChainsCostsSortAndAddModal\n                    docName='PaidTo'\n                    handleAddTextChange={handleAddPaidToTextChange}\n                    textAreaAdd={textAreaAddExpenseName}\n                    title='Paid To'\n                    dataName={'paidTo'}\n                    databaseInit={projectExtensionFirestore}\n                    headerText=\"Rearrange/Add Paid To\"\n                    data={paidToData}\n                    handleFirstModalClose={handleFirstModalClose}\n                    handleFirstModalOpen={handleFirstModalOpen} />\n                </View>\n                <SelectPaidTo paidToIsError={paidToIsError} />\n              </View>\n\n              <TouchableHighlight\n                onPress={handleSave}\n                underlayColor=\"lightgreen\"\n                style={{\n                  backgroundColor: '#16A34A',\n                  borderRadius: 5,\n                  margin: 1,\n                  flex: 1,\n                  width: screenWidth <= 960 ? '80%' : '40%',\n                  alignSelf: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  padding: 10,\n                }}>\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\n                </View>\n              </TouchableHighlight>\n            </View>\n            {screenWidth >= 1360 ? (\n\n              <View>\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\n                </View>\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\n                  const expenseName = Object.keys(item)[0];\n                  const expenseData = item[expenseName];\n                  return (\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\n                      justifyContent={'center'} alignItems={'center'}>\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\n                        flex={1} marginLeft={1} flexDir={'row'}>\n                        <TouchableHighlight\n                          onPress={() => handleEditPress(expenseData)}\n                          underlayColor={'#005691'}\n                          style={{\n                            flex: 1,\n                            margin: 1,\n                            borderRadius: 3,\n                          }}>\n                          <View\n                            style={{\n                              flex: 1,\n                              backgroundColor: '#06B6D4',\n                              borderRadius: 3,\n                              justifyContent: 'center',\n                              alignItems: 'center',\n                            }}>\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\n                          </View>\n                        </TouchableHighlight>\n                        <TouchableHighlight\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\n                          underlayColor={'#005691'}\n                          style={{\n                            flex: 1,\n                            margin: 1,\n                            borderRadius: 3,\n                          }}>\n                          <View\n                            style={{\n                              flex: 1,\n                              backgroundColor: '#EF4444',\n                              borderRadius: 3,\n                              justifyContent: 'center',\n                              alignItems: 'center',\n                            }}>\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\n                          </View>\n                        </TouchableHighlight>\n                        {/* <TouchableHighlight\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\n                        style={() => ({\n                          flex: 1,\n                          margin: 1,\n                          borderRadius: 3,\n                          backgroundColor: '#CD5C5C',\n                        })}>\n                        <View\n                          style={{\n                            flex: 1,\n                            borderRadius: 3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            backgroundColor: '#CD5C5C',\n                          }}>\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\n                        </View>\n                      </TouchableHighlight> */}\n                      </View>\n                    </View>\n                  )\n                })}\n\n              </View>\n\n            ) : (\n\n              <View>\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\n                  const expenseName = Object.keys(item)[0];\n                  const expenseData = item[expenseName];\n                  return (\n\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\n\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\n                        </View>\n\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\n\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\n                        </View>\n\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\n\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\n                        </View>\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\n\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\n                        </View>\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\n                        </View>\n                        <View style={{ flex: 1, flexDirection: 'row', }}\n                          flex={1} marginLeft={1} flexDir={'row'}>\n\n                          <TouchableHighlight\n                            onPress={() => handleEditPress(expenseData)}\n                            underlayColor={'#005691'}\n                            style={{\n                              flex: 1,\n                              margin: 1,\n                              borderRadius: 3,\n                            }}>\n                            <View\n                              style={{\n                                flex: 1,\n                                backgroundColor: '#06B6D4',\n                                borderRadius: 3,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                              }}>\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\n                            </View>\n                          </TouchableHighlight>\n                          <TouchableHighlight\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\n                            underlayColor={'#005691'}\n                            style={{\n                              flex: 1,\n                              margin: 1,\n                              borderRadius: 3,\n                            }}>\n                            <View\n                              style={{\n                                flex: 1,\n                                backgroundColor: '#EF4444',\n                                borderRadius: 3,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                              }}>\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\n                            </View>\n                          </TouchableHighlight>\n                          {/* <TouchableHighlight\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\n                        style={() => ({\n                          flex: 1,\n                          margin: 1,\n                          borderRadius: 3,\n                          backgroundColor: '#CD5C5C',\n                        })}>\n                        <View\n                          style={{\n                            flex: 1,\n                            borderRadius: 3,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            backgroundColor: '#CD5C5C',\n                          }}>\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\n                        </View>\n                      </TouchableHighlight> */}\n                        </View>\n                      </View>\n\n                    </View>\n\n\n                  )\n                })}\n\n              </View>\n\n\n            )}\n\n          </View>\n\n\n        </Modal.Body>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}>\n          <TouchableOpacity\n            onPress={handleModalSupplyChainsCostsClose}\n            style={{\n              backgroundColor: '#525252',\n              borderRadius: 5,\n              margin: 3,\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'center',\n              padding: 8,\n            }}>\n            <Text style={{ color: 'white' }}>Close</Text>\n          </TouchableOpacity>\n          <View style={{ flex: 4 }} />\n          <TouchableOpacity\n            onPress={handleSaveSupplyChainsCosts}\n            style={{\n              backgroundColor: '#16A34A',\n              borderRadius: 5,\n              margin: 3,\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'center',\n              padding: 8,\n            }}>\n            <Text style={{ color: 'white' }}>Save</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal.Content>\n    </Modal>\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\n        <Modal.Content bgColor={'amber.100'}>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\n            <Text color={'#102A43'} bold>\n              Clear\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'amber.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'amber.600'}\n            margin={5}>\n            <View flex={1}>\n              <Text color={'amber.600'} bold>Warning!</Text>\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\n            </View>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\n            <HStack space={5} flex={1}>\n              <Button\n                onPress={handleClearModalClose}\n                colorScheme={'warmGray'}\n                flex={1}\n                size={'sm'}\n                borderRadius={5}\n              >\n                No\n              </Button>\n              <Button\n                onPress={() => {\n                }}\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\n                Clear\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal> */}\n    </>\n\n  );\n};\n\nconst SelectPaidTo = ({ paidToIsError, }) => {\n\n  const dispatch = useDispatch();\n  const paidToData = useSelector((state) => state.paidToData);\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\n\n\n\n  return <Select\n    selectedValue={selectedPaidTo}\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\n    flex={3}\n    onValueChange={(value) => {\n      globalSelectedPaidTo = value\n      dispatch(setSelectedPaidTo(value));\n    }}\n    accessibilityLabel=\"Choose Paid To\"\n    placeholder=\"Choose Paid To\"\n    _selectedItem={{\n      bg: \"teal.600\",\n      endIcon: <CheckIcon size=\"5\" />\n    }}>\n    {paidToData.map((item) => (\n\n      <Select.Item key={item} label={item} value={item} />\n\n    ))}\n  </Select>\n    ;\n};\n\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\n  const [modalSortOpen, setModalSortOpen] = useState(false);\n  const [modalAddOpen, setModalAddOpen] = useState(false);\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\n  const [modalSave, setModalSave] = useState(false);\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\n  const [modalData, setModalData] = useState(data);\n  const [modalIsLoading, setModalIsLoading] = useState(false);\n  const loginName = useSelector((state) => state.loginName);\n  nameVariable.text = loginName;\n\n  const handleDeleteItemPress = useCallback(\n    (item) => {\n      setModalData((prevData) => {\n        const updatedData = prevData.filter((value) => value !== item);\n        return updatedData;\n      });\n    },\n    []\n  );\n\n  // useEffect(() => {\n\n  //   fetchData();\n\n  // }, [modalSortOpen]);\n\n\n\n  const fetchData = useCallback(async () => {\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\n    const modalDocSnap = await getDoc(modalDocRef);\n    if (modalDocSnap.exists()) {\n      // setModalData(modalDocSnap.data()?.dataName || []);\n      setModalData(modalDocSnap.data()?.[dataName] || []);\n    }\n  }, [databaseInit, modalData]);\n\n  // useEffect(() => {\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\n  //     setModalData(snapshot.data()?.[dataName] || []);\n  //   });\n\n  //   return () => unsubscribe();\n  // }, [dataName, databaseInit, docName]);\n\n  const handleSave = useCallback(async () => {\n    setModalSaveLoading(true);\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n\n    try {\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\n      setModalSaveLoading(false);\n      setModalSortOpen(true);\n      setModalSave(false);\n\n\n      const logData = {\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\n        timestamp: formattedTime,\n        colorScheme: true,\n      };\n\n      addLogToCollection(logData);\n\n    } catch (error) {\n      setModalSaveLoading(false);\n      handleModalSaveClose();\n      console.error(error);\n    }\n\n\n  }, [databaseInit, modalData, dataName, docName]);\n\n\n  const handleSortModalOpen = useCallback(() => {\n    setModalIsLoading(true);\n    fetchData();\n    setModalSortOpen(true);\n    handleFirstModalClose();\n  }, [modalSortOpen, modalIsLoading]);\n\n  const handleSortModalClose = useCallback(async () => {\n\n    setModalSortOpen(false);\n    setModalIsLoading(false);\n    handleFirstModalOpen();\n  }, [modalSortOpen, modalIsLoading]);\n  // const handleAddTextChange = () => {\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\n  // };\n\n\n  const handleModalAddOpen = useCallback(() => {\n    setModalAddOpen(true);\n    handleSortModalClose();\n    setModalIsLoading(true);\n    handleFirstModalClose();\n\n  }, [])\n\n  const handleModalAddClose = useCallback(() => {\n    setModalAddOpen(false);\n    handleSortModalOpen();\n    textAreaAdd.current?.clear();\n  }, [modalAddOpen])\n\n  const handleModalAddSuccessClose = useCallback(() => {\n    setModalAddSuccess(false);\n    // setIsLoading(false);\n    handleSortModalOpen();\n  }, [modalAddSuccess])\n\n  const handleModalAddSuccessOpen = useCallback(() => {\n    setModalAddSuccess(true);\n    handleSortModalClose();\n    setModalAddOpen(false);\n    setModalIsLoading(true);\n    handleFirstModalClose();\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\n\n  const handleModalSaveOpen = useCallback(() => {\n    setModalSave(true);\n    setModalSortOpen(false);\n    setModalIsLoading(true);\n  }, [modalSave, modalSortOpen, modalIsLoading])\n\n  const handleModalSaveClose = useCallback(() => {\n    setModalSave(false);\n    setModalSortOpen(true);\n  }, [modalSave, modalSortOpen]);\n\n  const handleAddSubmit = async () => {\n\n    const data = textAreaAdd.current?.value;\n    const dataArray = data.split('\\n').map((item) => item.trim());\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n\n    if (data !== '') {\n\n      setModalSaveLoading(true);\n\n      try {\n        const modalCollectionRef = collection(databaseInit, docName);\n        const modalDocRef = doc(modalCollectionRef, docName);\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\n\n        const logData = {\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\n          timestamp: formattedTime,\n          colorScheme: true,\n        };\n        addLogToCollection(logData);\n        setModalSaveLoading(false);\n\n        handleModalAddSuccessOpen();\n\n\n\n        // console.log('Data added to Firestore');\n      } catch (error) {\n        console.error('Error adding data to Firestore:', error);\n        setModalSaveLoading(false);\n      }\n    }\n    else {\n\n    }\n\n\n  };\n\n  return (\n    <>\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\n        {!modalIsLoading ? (\n          <TouchableOpacity onPress={handleSortModalOpen}>\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\n          </TouchableOpacity>\n        ) : (\n          <Spinner color=\"white\" />\n        )}\n      </View>\n\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\n        <Modal.Content>\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>{headerText}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\n            <View style={{\n              width: '100%',\n              flexDirection: 'column',\n            }}>\n              <View style={{ alignItems: 'flex-end' }}>\n                <TouchableHighlight onPress={handleModalAddOpen}>\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\n                </TouchableHighlight>\n              </View>\n\n              <View style={{\n                flex: 1,\n                borderWidth: 1,\n                borderColor: '#102A43',\n                borderRadius: 5,\n              }}>\n                <DraggableFlatList\n                  style={{ alignContent: 'center', flex: 1, }}\n                  data={modalData}\n                  keyExtractor={(item) => item}\n                  renderItem={({ item, drag }) => (\n                    <View\n                      style={{\n                        flex: 1,\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\n                        borderBottomWidth: 1,\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\n                        flexDirection: 'row',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\n                      </TouchableOpacity>\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\n                      <TouchableOpacity onPressIn={drag}>\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\n                      </TouchableOpacity>\n                    </View>\n                  )}\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\n\n              </View>\n            </View>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0}>\n            <View style={{ flexDirection: 'row', flex: 1 }}>\n              <TouchableOpacity\n                onPress={handleSortModalClose}\n                style={{\n                  flex: 1,\n                  borderRadius: 5,\n                  backgroundColor: '#525252',\n                  margin: 5,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  padding: 8,\n                }}\n              >\n                <Text style={{ color: 'white' }}>Close</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={handleModalSaveOpen}\n                style={{\n                  flex: 1,\n                  borderRadius: 5,\n                  backgroundColor: '#0891B2',\n                  margin: 5,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  padding: 8,\n                }}\n              >\n                <Text style={{ color: 'white' }}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalSave}\n        onClose={handleModalSaveClose}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Save Order?</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <Text>Are you sure you want to save changes?</Text>\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n      <Modal\n        isOpen={modalAddOpen}\n        onClose={handleModalAddClose}\n        initialFocusRef={textAreaAdd}>\n        <Modal.Content >\n          <Modal.CloseButton />\n          <Modal.Header borderBottomWidth={0}>\n            <Text color={'#102A43'} bold>Add {title}</Text>\n          </Modal.Header>\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\n\n            <TextArea\n              textAlign={'center'}\n              w={'full'}\n              ref={textAreaAdd}\n              multiline\n              onChangeText={handleAddTextChange}\n              totalLines={4}\n              placeholder=\"Enter your data, separated by new lines\" />\n\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} >\n            <HStack space={5} flex={1}>\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\n        <Modal.Content bgColor={'green.100'}>\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n            <Text textAlign={'center'} color={'#102A43'} bold>\n              😊😎 Success! 😎😊\n            </Text>\n          </Modal.Header>\n          <Modal.Body\n            justifyContent={'center'}\n            alignItems={'center'}\n            bgColor={'green.200'}\n            borderLeftWidth={4}\n            borderLeftColor={'green.600'}\n            margin={5}\n          >\n            <Box flex={1}>\n              <Text color={'green.600'} bold>\n                Added successfully!\n              </Text>\n              <Text color={'green.600'}>\n                Added successfully!\n              </Text>\n            </Box>\n          </Modal.Body>\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n            <HStack space={5} flex={1}>\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\n                Ok\n              </Button>\n            </HStack>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n\n    </>\n\n\n  );\n};\n\n\n\nconst SCC_Modals = () => {\n\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\n  const expenseNameData = useSelector((state) => state.expenseNameData);\n  const paidToData = useSelector((state) => state.paidToData);\n  const currentDate = useSelector((state) => state.currentDate);\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\n\n  return (\n    <AllSccModals\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\n      supplyChainsCostsData={supplyChainsCostsData}\n      expenseNameData={expenseNameData}\n      paidToData={paidToData}\n      currentDate={currentDate}\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\n    />\n  );\n}\n\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\n\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\n\n\n  const handleModalCalendarOpen = () => {\n    setModalCalendarVisible(true);\n  };\n\n  const handleModalCalendarClose = () => {\n    setModalCalendarVisible(false);\n  };\n\n\n\n  return (\n\n    <>\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\n      </TouchableOpacity>\n\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\n        <Modal.CloseButton />\n        <Modal.Content>\n          <Box height={'full'} flex={1}>\n\n            <Calendar\n              onDayPress={useCallback(day => {\n                setSelectedDate(day.dateString);\n                // console.log(day.dateString);\n                globalSPCSelectedDate = day.dateString;\n                handleModalCalendarClose();\n              }, [])}\n              markedDates={{\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\n              }}\n              renderArrow={(direction) => (\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\n              )}\n              enableSwipeMonths={true}\n              initialDate={selectedDate}\n              showSixWeeks />\n\n          </Box>\n\n        </Modal.Content>\n\n      </Modal></>\n\n  );\n\n}\n\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\n\n  const dispatch = useDispatch();\n  const expenseNameData = useSelector((state) => state.expenseNameData);\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\n  const [key, setKey] = useState(nanoid());\n\n\n\n  return <Select\n    selectedValue={selectedExpenseName}\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\n    flex={3}\n    onValueChange={(value) => {\n      globalSelectedExpenseName = value\n      dispatch(setSelectedExpenseName(value));\n    }}\n    accessibilityLabel=\"Choose Expense Name\"\n    placeholder=\"Choose Expense Name\"\n    _selectedItem={{\n      bg: \"teal.600\",\n      endIcon: <CheckIcon size=\"5\" />\n    }}>\n    {expenseNameData.map((item) => (\n\n      <Select.Item key={item} label={item} value={item} />\n\n    ))}\n  </Select>\n\n\n};\n\nconst VehicleEditModal = ({ handleEditModalClose }) => {\n\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\n  const screenWidth = Dimensions.get('window').width;\n\n  return (\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\n        <Modal.CloseButton />\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\n        </Modal.Header>\n\n\n        <Modal.Body >\n          Sit nulla est ex deserunt exercitation anim occaecat.\n        </Modal.Body>\n      </Modal.Content>\n    </Modal>\n\n\n  );\n};\n\nconst EditVehicleModal = () => {\n  const dispatch = useDispatch();\n\n  const handleEditModalClose = () => {\n    dispatch(setEditVehicleModalVisible(false));\n    globalCurrentStockID = '';\n    globalSelectedVehicle = '';\n    globalSelectedVehicleReferenceNumber = '';\n    globalSelectedCarName = '';\n\n  }\n\n  return (\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\n\n\n  );\n\n};\n\nconst EditVehicle = ({ data }) => {\n\n  const dispatch = useDispatch();\n\n\n  const handleModalOpen = () => {\n\n    dispatch(setEditVehicleModalVisible(true));\n    globalCurrentStockID = data.stockID;\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\n    globalSelectedCarName = data.carName;\n\n  }\n\n\n  return (\n    <>\n      <TouchableOpacity\n        onPress={handleModalOpen}\n        style={{\n          backgroundColor: '#7B9CFF',\n          marginHorizontal: 5,\n          borderRadius: 5,\n          padding: 2,\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\n      </TouchableOpacity>\n    </>\n  );\n};\n\n\n\n\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\n\n  const screenWidth = Dimensions.get('window').width;\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\n  const viewImagesData = useSelector((state) => state.viewImagesData);\n\n  const [modalImageUri, setModalImageUri] = useState('');\n  const [imageModalVisible, setImageModalVisible] = useState(false);\n\n  const handleImagePress = useCallback((uri) => {\n    // const base64Image = toString(uri);\n    // setIsLoading(true);\n    setModalImageUri(uri);\n    setImageModalVisible(true);\n    // console.log(\"URI: \", uri);\n\n  }, []);\n\n\n\n  const getImagesRenderItem = useCallback((item) => {\n\n    const styles = StyleSheet.create({\n      dropdown: {\n        margin: 16,\n        height: 50,\n        borderBottomColor: 'gray',\n        borderBottomWidth: 0.5,\n      },\n      icon: {\n        marginRight: 5,\n      },\n      placeholderStyle: {\n        fontSize: 16,\n      },\n      selectedTextStyle: {\n        fontSize: 16,\n      },\n      iconStyle: {\n        width: 20,\n        height: 20,\n      },\n      inputSearchStyle: {\n        height: 40,\n        fontSize: 16,\n      },\n      container: {\n        flex: 1,\n        paddingTop: 20,\n\n      },\n      txt: {\n        fontSize: 18,\n        lineHeight: 24,\n        padding: 5\n      },\n      sort: {\n      },\n      item_children: {\n        width: 90,\n        height: 90,\n        backgroundColor: 'black',\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      },\n      item_delete_icon: {\n        width: 14,\n        height: 14,\n        position: \"absolute\",\n        right: 1,\n        top: 1\n      },\n      item_icon: {\n        width: 90,\n        height: 90,\n        resizeMode: \"contain\",\n        position: \"absolute\"\n      }\n    });\n\n    return (\n\n      <Box key={item.id} style={styles.item}>\n        <Box style={styles.item_children}>\n\n          <FastImage\n            style={styles.item_icon}\n            source={{\n              uri: item.uri,\n              priority: FastImage.priority.normal,\n            }}\n            resizeMode={FastImage.resizeMode.contain}\n\n          />\n\n        </Box>\n      </Box>\n    );\n\n\n\n  }, []);\n\n  return (\n\n    <>\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\n          <Modal.CloseButton />\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\n          </Modal.Header>\n\n\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\n\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n              <ScrollView style={{ height: '90%' }}>\n                <DragSortableView\n                  sortable={false}\n                  // ref={dragSortableViewRef}\n                  dataSource={viewImagesData}\n                  parentWidth={width * 0.33}\n                  childrenWidth={100}\n                  childrenHeight={100}\n                  marginChildrenTop={3}\n                  marginChildrenBottom={0}\n                  marginChildrenLeft={0}\n                  marginChildrenRight={0}\n                  onClickItem={(item, index) => {\n                    handleImagePress(index.uri);\n                  }}\n                  keyExtractor={(item) => item.uri}\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\n                />\n              </ScrollView>\n            </View>\n\n\n          </View>\n\n\n        </Modal.Content>\n\n\n      </Modal>\n\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\n\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\n          <Modal.CloseButton color={'white'} />\n          <NativeImage\n            key={modalImageUri}\n            source={{ uri: modalImageUri }}\n            resizeMode='contain'\n            flex={1}\n            alt={modalImageUri}\n            h={720}\n            w={1280}\n          />\n\n        </Box>\n\n      </Modal>\n    </>\n\n  );\n};\n\n\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\n\n  const screenWidth = Dimensions.get('window').width;\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\n\n  return (\n    <Modal\n      isOpen={fobPriceHistoryModalVisible}\n      onClose={handleFobPriceHistoryClose}\n      size={'full'}\n      useRNModal\n    >\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\n        <Modal.CloseButton />\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\n        </Modal.Header>\n        <Modal.Body>\n          <ScrollView style={{ width: '100%' }}>\n            {screenWidth >= 960 ? (\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\n                {/* Table Header */}\n                <View style={{\n                  borderRadius: 3,\n                  backgroundColor: '#0642F4',\n                  flexDirection: 'row',\n                  borderBottomWidth: 1,\n                  borderBottomColor: '#0642F4',\n                }}>\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\n\n                </View>\n\n                {/* Table Rows */}\n                {[...fobHistoryData]\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\n                  .map((data, index) => (\n                    <View\n                      key={index}\n                      style={{\n                        backgroundColor: '#BBF7D0',\n                        flexDirection: 'row',\n                        borderBottomWidth: 1,\n                        borderBottomColor: '#CCCCCC',\n                      }}\n                    >\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\n                    </View>\n                  ))\n                }\n              </View>\n            ) : (\n              // Mobile View FOB Price History\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\n                {/* Table Header */}\n                {/* <View style={{\n                  borderRadius: 3,\n                  backgroundColor: '#0642F4',\n                  flexDirection: 'row',\n                  borderBottomWidth: 1,\n                  borderBottomColor: '#0642F4',\n                }}>\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\n\n                </View> */}\n\n                {/* Table Rows */}\n                {[...fobHistoryData]\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\n                  .map((data, index) => (\n                    <View\n                      key={index}\n                      style={{\n                        backgroundColor: '#BBF7D0',\n                        flexDirection: 'column',\n                        borderWidth: 1,\n                        borderColor: '#E4E4E7',\n                        margin: 3,\n                      }}\n                    >\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                        <View style={{\n                          backgroundColor: '#0642F4',\n                          borderBottomWidth: 1,\n                          borderBottomColor: '#0642F4',\n                          width: '30%',\n                        }}>\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\n                        </View>\n\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                        <View style={{\n                          backgroundColor: '#0642F4',\n                          borderBottomWidth: 1,\n                          borderBottomColor: '#0642F4',\n                          width: '30%',\n                        }}>\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\n                      </View>\n\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                        <View style={{\n                          backgroundColor: '#0642F4',\n                          borderBottomWidth: 1,\n                          borderBottomColor: '#0642F4',\n                          width: '30%',\n                        }}>\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\n                        </View>\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\n                      </View>\n                    </View>\n                  ))\n                }\n              </View>\n            )}\n\n          </ScrollView>\n\n\n\n\n        </Modal.Body>\n      </Modal.Content>\n    </Modal>\n\n\n\n  );\n}\n\nconst FobPriceHistory = () => {\n  const dispatch = useDispatch();\n\n\n  const handleFobPriceHistoryClose = () => {\n\n    dispatch(setFobPriceHistoryModalVisible(false));\n    globalFobPriceHistoryData = [];\n    globalCurrentStockID = '';\n    globalSelectedVehicle = '';\n    globalSelectedVehicleReferenceNumber = '';\n\n  }\n\n  return (\n\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\n\n  );\n}\n\n\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\n  // State for the image count\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\n      if (doc.exists()) {\n        const data = doc.data();\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\n      }\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => unsubscribe();\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\n\n  // Function placeholders\n  // const handleViewImagesModalOpen = (item) => {\n  //   console.log('View images', item);\n  // };\n\n  // const handleUploadImagesModalOpen = (item) => {\n  //   console.log('Upload images', item);\n  // };\n\n  return (\n    <View style={{ flex: 1, flexDirection: 'row' }}>\n      {imageCount > 0 ? (\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\n          <Text style={{ textDecorationLine: 'underline' }}>\n            {imageCount} image/s\n          </Text>\n        </TouchableOpacity>\n      ) : (\n        <Text>{imageCount} image/s</Text>\n      )}\n\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\n        {imageCount > 0 ? null : (\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst FobPriceInput = ({ item, index, }) => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\n  const inputFobJpy = useRef([]);\n\n  useEffect(() => {\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\n\n      if (doc.exists()) {\n        const data = doc.data();\n        // Update the fobPrice state with the new value from Firestore\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\n      }\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => unsubscribe();\n  }, []);\n\n  // ... rest of your component\n  const formatValueWithCommas = (value) => {\n    const numericValue = value.replace(/[^0-9]/g, '');\n    const truncatedValue = numericValue.slice(0, 9);\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return formattedValue;\n  };\n\n  const handleTextChange = (text) => {\n    const numericValue = text.replace(/[^0-9]/g, '');\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\n\n    // Update state only if the numeric value has changed\n    if (numericValue !== currentNumericValue) {\n      setFobPrice(numericValue);\n    }\n  };\n\n  // This function will format the displayed text\n  const handleInputFobJpyChange = (text, stockID) => {\n    const formattedValue = formatValueWithCommas(text);\n\n    // Apply the formatted value to the input without resetting the state\n    if (inputFobJpy.current[stockID]) {\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\n    }\n  };\n\n  const handleSaveFob = async (item, index,) => {\n    dispatch(setLoadingModalVisible(true));\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\n\n\n\n\n\n\n\n    toast.closeAll();\n    // if (item.fobPrice == fobValue || fobValue == '') {\n    //   dispatch(setLoadingModalVisible(false));\n\n    //   console.log('same');\n    //   console.log(item.fobPrice);\n\n    // }\n    // else {\n\n    const fobHistoryData = {\n      date: formattedTime,\n      fobPrice: fobValue,\n      changedBy: nameVariable.text,\n    };\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\n\n    try {\n      await updateDoc(vehicleProductRef, {\n        fobPrice: fobValue,\n        fobHistory: arrayUnion(fobHistoryData)\n      });\n      const logData = {\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          globalCurrentStockID.toLowerCase(),\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\n          'Vehicle List'.toLowerCase(),\n          'Vehicle FOB Price Updated'.toLowerCase(),\n          'Vehicle FOB Price'.toLowerCase(),\n          'Vehicle FOB'.toLowerCase(),\n          'Vehicle'.toLowerCase(),\n          'FOB Price Updated'.toLowerCase(),\n          'FOB Price'.toLowerCase(),\n          'FOB'.toLowerCase(),\n          'Updated'.toLowerCase(),\n          globalSelectedCarName.toLowerCase(),\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n      addLogToCollection(logData);\n      dispatch(setLoadingModalVisible(false));\n\n      // console.log('FOB Price updated successfully');\n      toast.show({\n        render: () => {\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\n          </View>;\n        }\n      })\n    } catch (error) {\n      console.error(error);\n      toast.show({\n        render: () => {\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\n          </View>;\n        }\n      })\n    }\n    // }\n\n    // Reference the Firestore document and update the 'fobPrice' field\n\n  };\n\n  return (\n    <>\n      <TextInput\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\n        key={item.id}\n        onChangeText={(text) => {\n          handleTextChange(text); // This sets the numeric value state\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\n        }}\n        onSubmitEditing={() => handleSaveFob(item, index)} />\n      <TouchableHighlight\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\n        onPress={() => handleSaveFob(item, index)}\n        style={{\n          backgroundColor: '#16A34A',\n          borderRadius: 5,\n          padding: 5,\n          margin: 2,\n          alignSelf: 'center',\n        }}>\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\n        <MaterialIcons name='update' color='white' size={22} />\n      </TouchableHighlight>\n    </>\n  );\n};\n\n\nconst VehicleListTable = () => {\n  const toast = useToast();\n  const screenWidth = Dimensions.get('window').width;\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  // const [data, setData] = useState([]);\n  const [pageSize, setPageSize] = useState(10);\n  const vehicleListData = useSelector((state) => state.vehicleListData);\n  const [searchQuery, setSearchQuery] = useState('');\n  const searchInputRef = useRef(null);\n\n\n  const [stockIDs, setStockIDs] = useState([]);\n  const [imageCounts, setImageCounts] = useState([]);\n\n  const inputExpenseAmount = useRef(null);\n  const [pageIndex, setPageIndex] = useState(0);\n\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const inputFobJpy = useRef([]);\n  const [pageClicked, setPageClicked] = useState('');\n  const [lastVisible, setLastVisible] = useState(null);\n  const [firstVisible, setFirstVisible] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [fobPrices, setFobPrices] = useState({});\n  // Memoize the filtered data using useMemo\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\n  const [isSortActive, setIsSortActive] = useState(false);\n  const loginName = useSelector((state) => state.loginName);\n  nameVariable.text = loginName;\n\n  const handleSortChange = (field) => {\n    setCurrentPage(1);\n    // If the field is the same as the current sortField, toggle sorting\n    setSearchText('');\n    searchInputRef.current.clear();\n    if (field === sortField) {\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\n      if (!isSortActive) {\n        // If it was off, we turn it on and keep the same field\n        setSortField(field);\n      } else {\n        // If it was on, we turn it off and reset to default 'dateAdded'\n        setSortField('dateAdded');\n      }\n    } else {\n      // If the field is different, turn sorting on and change the field\n      setSortField(field);\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\n    }\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\n    dispatch(setLoadingModalVisible(true));\n  };\n\n\n  const fetchWithSort = async () => {\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\n    const sortDirection = isSortActive ? 'asc' : 'desc';\n    let q;\n\n    if (searchText === '') {\n      q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        limit(pageSize)\n      );\n    } else {\n      q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        where('keywords', 'array-contains', searchText.toUpperCase()),\n        limit(pageSize)\n      );\n    }\n\n    try {\n      const documents = await getDocs(q);\n      const vehicleProductData = [];\n      documents.forEach((document) => {\n        vehicleProductData.push({\n          id: document.id,\n          ...document.data(),\n        });\n      });\n      dispatch(setVehicleListData(vehicleProductData));\n      setLastVisible(documents.docs[documents.docs.length - 1]);\n      setFirstVisible(documents.docs[0]);\n    } catch (error) {\n      console.error(\"Error fetching vehicle products:\", error);\n    } finally {\n      dispatch(setLoadingModalVisible(false));\n    }\n  };\n\n\n  useEffect(() => {\n    fetchWithSort();\n  }, [sortField])\n\n\n\n  useEffect(() => {\n    // Determine the field and direction to sort by\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\n    const sortDirection = isSortActive ? 'asc' : 'desc';\n\n    // Define the query\n    const q = query(\n      collection(projectExtensionFirestore, 'VehicleProducts'),\n      orderBy(fieldToSortBy, sortDirection),\n      limit(pageSize)\n    );\n\n    // Fetch the data once\n    getDocs(q)\n      .then((documents) => {\n        const vehicleProductData = [];\n        documents.forEach((document) => {\n          vehicleProductData.push({\n            id: document.id,\n            ...document.data(),\n          });\n        });\n        dispatch(setVehicleListData(vehicleProductData));\n        setLastVisible(documents.docs[documents.docs.length - 1]);\n        setFirstVisible(documents.docs[0]);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching vehicle products: \", error);\n        // Handle the error appropriately\n      });\n\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\n\n\n\n  const fetchNextData = async () => {\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\n    const sortDirection = isSortActive ? 'asc' : 'desc';\n\n\n    if (searchText === '') {\n\n\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        startAfter(lastVisible),\n        limit(pageSize)\n      );\n\n      const documents = await getDocs(q);\n      updateState(documents, 'next');\n\n\n\n      dispatch(setLoadingModalVisible(false));\n\n\n    }\n\n    else {\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        where('keywords', 'array-contains', searchText.toUpperCase()),\n        startAfter(lastVisible),\n        limit(pageSize)\n      );\n\n      const documents = await getDocs(q);\n      updateState(documents, 'next');\n\n\n\n      dispatch(setLoadingModalVisible(false));\n    }\n\n  };\n\n\n  const fetchPreviousData = async () => {\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\n    const sortDirection = isSortActive ? 'asc' : 'desc';\n\n    if (searchText === '') {\n\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        endBefore(firstVisible),\n        limitToLast(pageSize)\n      );\n\n\n      const documents = await getDocs(q);\n      updateState(documents, 'prev')\n      dispatch(setLoadingModalVisible(false));\n\n    }\n\n    else {\n\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy(fieldToSortBy, sortDirection),\n        where('keywords', 'array-contains', searchText.toUpperCase()),\n        endBefore(firstVisible),\n        limitToLast(pageSize)\n      );\n\n      const documents = await getDocs(q);\n      updateState(documents, 'prev');\n      dispatch(setLoadingModalVisible(false));\n\n    }\n\n\n  }\n\n\n\n  const fetchFirstPage = (documents) => {\n\n\n    const vehicleProductData = [];\n\n    documents.forEach((document) => {\n      vehicleProductData.push({\n        id: document.id,\n        ...document.data(),\n      });\n    });\n\n    dispatch(setVehicleListData(vehicleProductData));\n\n    if (documents?.docs[0]) {\n      setFirstVisible(documents.docs[0]);\n    }\n    if (documents?.docs[documents.docs.length - 1]) {\n      setLastVisible(documents.docs[documents.docs.length - 1]);\n    }\n\n\n\n\n\n  }\n\n  const updateState = async (documents, pageClicked) => {\n\n\n    if (!documents.empty) {\n      const vehicleProductData = [];\n      documents.forEach((document) => {\n        vehicleProductData.push({\n          id: document.id,\n          ...document.data(),\n        });\n      });\n\n\n\n      if (documents?.docs[0]) {\n        setFirstVisible(documents.docs[0]);\n      }\n      if (documents?.docs[documents.docs.length - 1]) {\n        setLastVisible(documents.docs[documents.docs.length - 1]);\n      }\n\n      if (pageClicked == 'next') {\n        setCurrentPage(currentPage + 1);\n      }\n      if (pageClicked == 'prev') {\n        setCurrentPage(currentPage - 1);\n      }\n      if (vehicleProductData.length < 1) {\n        dispatch(setLoadingModalVisible(false));\n\n      }\n\n      dispatch(setVehicleListData(vehicleProductData));\n    }\n\n    else {\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\n      const sortDirection = isSortActive ? 'asc' : 'desc';\n\n      if (searchText == '') {\n        setCurrentPage(1);\n\n        const q = query(\n          collection(projectExtensionFirestore, 'VehicleProducts'),\n          orderBy(fieldToSortBy, sortDirection),\n          limit(pageSize)\n        );\n        const firstPageDocuments = await getDocs(q);\n        fetchFirstPage(firstPageDocuments);\n\n      }\n      else {\n\n        setCurrentPage(1);\n\n        const q = query(\n          collection(projectExtensionFirestore, 'VehicleProducts'),\n          where('keywords', 'array-contains', searchText.toUpperCase()),\n          orderBy(fieldToSortBy, sortDirection),\n          limit(pageSize)\n        );\n        const firstPageDocuments = await getDocs(q);\n        fetchFirstPage(firstPageDocuments);\n\n      }\n\n\n    }\n  };\n\n  const handleNextPage = async () => {\n    // setPageClicked('next');\n    dispatch(setLoadingModalVisible(true));\n    // setCurrentPage(currentPage + 1);\n    await fetchNextData();\n\n\n\n\n  };\n\n  const handlePreviousPage = async () => {\n    // setPageClicked('previous');\n    dispatch(setLoadingModalVisible(true));\n    // setCurrentPage(currentPage - 1);\n    await fetchPreviousData();\n\n\n  };\n\n\n  useEffect(() => {\n\n    searchData();\n\n  }, [searchText])\n\n  const searchData = async () => {\n\n    dispatch(setLoadingModalVisible(true));\n\n    if (searchText === '') {\n      setCurrentPage(1);\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy('dateAdded', 'desc'),\n        limit(pageSize)\n      );\n\n      const firstPageDocuments = await getDocs(q);\n      fetchFirstPage(firstPageDocuments);\n      dispatch(setLoadingModalVisible(false));\n\n\n\n    }\n\n    else {\n      setCurrentPage(1);\n      const q = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        where('keywords', 'array-contains', searchText.toUpperCase()),\n        orderBy('dateAdded', 'desc'),\n        limit(pageSize)\n      );\n\n      const firstPageDocuments = await getDocs(q);\n      fetchFirstPage(firstPageDocuments);\n      dispatch(setLoadingModalVisible(false));\n    }\n  };\n\n\n\n  const filteredData = useMemo(() => {\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\n\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\n    const filteredResults = vehicleListData.filter((item) => {\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\n\n      return (\n        carName.includes(sanitizedSearchQuery) ||\n        referenceNumber.includes(sanitizedSearchQuery) ||\n        chassisNumber.includes(sanitizedSearchQuery) ||\n        stockStatus.includes(sanitizedSearchQuery) ||\n        fobPrice.includes(sanitizedSearchQuery)\n      );\n    });\n\n    return filteredResults;\n  }, [searchQuery, vehicleListData]);\n\n\n\n  const formatValueWithCommas = (value) => {\n    const numericValue = value.replace(/[^0-9]/g, '');\n    const truncatedValue = numericValue.slice(0, 9);\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return formattedValue;\n  };\n\n  // Function to handle input changes for each item\n  const handleInputFobJpyChange = (text, index) => {\n    const formattedValue = formatValueWithCommas(text);\n\n    if (inputFobJpy.current[index]) {\n      inputFobJpy.current[index].value = formattedValue;\n    }\n  };\n\n\n\n\n  const fetchImageCounts = async () => {\n\n    // Extract and store the stockIDs in the state\n    const ids = filteredData.map(item => item.stockID);\n    setStockIDs(ids);\n\n    // Fetch image counts\n    const counts = await Promise.all(\n      ids.map(async stockID => {\n        const count = await getImageCountInFolder(stockID);\n        return { stockID, count };\n      })\n    );\n\n    // Create an object where stockID is the index value\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\n      acc[stockID] = count;\n      return acc;\n    }, {});\n\n    setImageCounts(imageCountsObject);\n  };\n\n  useEffect(() => {\n    fetchImageCounts();\n  }, []);\n\n  const getImageCountInFolder = async (folderPath) => {\n    try {\n      const folderRef = ref(storage, folderPath);\n      const listResult = await listAll(folderRef);\n\n      return listResult.items.length;\n    } catch (error) {\n      console.error('Error getting image count:', error);\n      return -1; // Handle the error accordingly\n    }\n  };\n\n\n  const handleTextChange = (text) => {\n    setSearchQuery(text);\n  };\n\n  const handleFobPriceHistoryOpen = async (item) => {\n    dispatch(setLoadingModalVisible(true));\n    dispatch(setFobPriceHistoryModalVisible(true));\n    if (item.stockID) {\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\n      try {\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n          // Assuming you have an action to set the FOB history like setFobHistory\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\n          dispatch(setLoadingModalVisible(false));\n\n        } else {\n          console.log(\"No such document!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching document: \", error);\n      }\n    }\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\n    globalCurrentStockID = item.stockID ? item.stockID : '';\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\n\n  }\n\n  const handleSaveFob = async (item, index,) => {\n    dispatch(setLoadingModalVisible(true));\n\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n    const { datetime } = response.data;\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\n    const year = moment(datetime).format('YYYY');\n    const month = moment(datetime).format('MM');\n    const monthWithDay = moment(datetime).format('MM/DD');\n    const date = moment(datetime).format('YYYY/MM/DD');\n    const day = moment(datetime).format('DD');\n    const time = moment(datetime).format('HH:mm');\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\n\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\n\n\n\n\n\n\n\n    toast.closeAll();\n    // if (item.fobPrice == fobValue || fobValue == '') {\n    //   dispatch(setLoadingModalVisible(false));\n\n    // }\n    // else {\n\n    const fobHistoryData = {\n      date: formattedTime,\n      fobPrice: fobValue,\n      changedBy: nameVariable.text,\n    };\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\n\n    try {\n      await updateDoc(vehicleProductRef, {\n        fobPrice: fobValue,\n        fobHistory: arrayUnion(fobHistoryData)\n      });\n      const logData = {\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\n        timestamp: formattedTime,\n        colorScheme: true,\n        keywords: [\n          formattedTime.toLowerCase(),\n          globalCurrentStockID.toLowerCase(),\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\n          'Vehicle List'.toLowerCase(),\n          'Vehicle FOB Price Updated'.toLowerCase(),\n          'Vehicle FOB Price'.toLowerCase(),\n          'Vehicle FOB'.toLowerCase(),\n          'Vehicle'.toLowerCase(),\n          'FOB Price Updated'.toLowerCase(),\n          'FOB Price'.toLowerCase(),\n          'FOB'.toLowerCase(),\n          'Updated'.toLowerCase(),\n          globalSelectedCarName.toLowerCase(),\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\n          nameVariable.text.toLowerCase(),\n          year.toLowerCase(),\n          month.toLowerCase(),\n          monthWithDay.toLowerCase(),\n          date.toLowerCase(),\n          day.toLowerCase(),\n          time.toLowerCase(),\n          timeWithMinutesSeconds.toLowerCase(),\n        ],\n      };\n      addLogToCollection(logData);\n      dispatch(setLoadingModalVisible(false));\n\n      // console.log('FOB Price updated successfully');\n      toast.show({\n        render: () => {\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\n          </View>;\n        }\n      })\n    } catch (error) {\n      console.error(error);\n      toast.show({\n        render: () => {\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\n          </View>;\n        }\n      })\n    }\n    // }\n\n    // Reference the Firestore document and update the 'fobPrice' field\n\n  };\n\n  const handleUploadImagesModalOpen = (item) => {\n    dispatch(setUploadImagesModalVisible(true));\n    globalCurrentStockID = item.stockID;\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\n    globalSelectedCarName = item.carName;\n\n  }\n\n  const handleViewImagesModalOpen = async (item) => {\n    dispatch(setLoadingModalVisible(true));\n    try {\n      await getImages(item.stockID);\n      globalCurrentStockID = item.stockID;\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\n      dispatch(setLoadingModalVisible(false));\n      dispatch(setViewImagesModalVisible(true));\n    } catch (error) {\n      console.error(error);\n      dispatch(setLoadingModalVisible(false));\n\n    }\n  }\n\n  const handleViewImagesModalClose = () => {\n    dispatch(setViewImagesModalVisible(false));\n    globalCurrentStockID = '';\n    globalSelectedVehicle = ``;\n    globalSelectedVehicleReferenceNumber = '';\n    globalSelectedCarName = '';\n    dispatch(setViewImagesData([]));\n  };\n\n  const getImages = useCallback(async (folderName) => {\n    try {\n\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\n\n      const urls = await Promise.all(\n        imageRefs.items.map(async (itemRef) => {\n          const uri = await getDownloadURL(itemRef);\n          return { uri, fileName: itemRef.name };\n        })\n      );\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\n      urls.sort((a, b) => {\n        const fileNameA = parseInt(a.fileName);\n        const fileNameB = parseInt(b.fileName);\n        return fileNameA - fileNameB;\n      });\n\n      if (urls.length > 0) {\n        dispatch(setViewImagesData(urls));\n\n      }\n\n      else {\n        dispatch(setViewImagesData([]));\n      }\n\n      // console.log(urls);\n\n    } catch (error) {\n      // Handle any errors that may occur during the Firebase operations\n      console.error('Error getting image URLs:', error);\n    }\n  }, []);\n\n\n  const addStockStatusToVehicleProducts = async () => {\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\n\n    try {\n      const querySnapshot = await getDocs(vehicleProductsRef);\n      querySnapshot.forEach(async (doc) => {\n        const data = doc.data();\n\n        // Check if the imageCount field does not exist\n        if (data.stockStatus === undefined) {\n          try {\n            // If the imageCount field doesn't exist, initialize it to 0\n            await updateDoc(doc.ref, {\n              stockStatus: ''\n            });\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\n          } catch (error) {\n            console.error('Error initializing stockStatus field:', error);\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error reading VehicleProducts collection:\", error);\n    }\n\n  }\n\n\n  const handleSearchEnter = () => {\n    // setSortField('dateAdded');\n    // setIsSortActive(false)\n    if (searchInputRef.current?.value !== '') {\n      setSearchText(searchInputRef.current.value.trim());\n      setSortField('dateAdded');\n      setIsSortActive(false);\n    }\n    else {\n      setSearchText('');\n      setSortField('dateAdded');\n      setIsSortActive(false)\n      if (searchText == '') {\n\n        searchData();\n\n      }\n\n\n\n    }\n\n  }\n\n\n  return (\n    <>\n\n      {screenWidth >= 1360 ?\n        (\n          <View style={{ flex: 1, }}>\n            <View>\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\n                onSubmitEditing={handleSearchEnter}\n                placeholder='Search'\n                returnKeyType='search'\n                autoCapitalize='none'\n\n              />\n            </View>\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                borderBottomWidth: 1,\n                borderBottomColor: '#E4E4E7',\n                backgroundColor: '#0642F4',\n                padding: 2,\n                borderRadius: 5,\n              }}>\n              <View style={{ flex: 1, padding: 2 }}>\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\n              </View>\n              <View style={{ flex: 1, padding: 2 }}>\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\n              </View>\n              <View style={{ flex: 1, padding: 2 }}>\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\n              </View>\n\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\n                </TouchableOpacity></View>\n\n\n\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\n                </TouchableOpacity>\n              </View>\n\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\n                </TouchableOpacity></View>\n\n              <View style={{ flex: 1, padding: 2 }}>\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\n              </View>\n            </View>\n            {vehicleListData.map((item, index) => (\n              <View\n                key={item.id}\n                style={{\n                  flex: 1,\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  borderBottomWidth: 1,\n                  borderBottomColor: '#E4E4E7',\n                  backgroundColor: '#BFDBFE',\n                  paddingVertical: 10,\n                }}>\n                <View style={{ flex: 1 }}>\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\n                </View>\n                <View style={{ flex: 1 }}>\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\n                </View>\n                <View style={{ flex: 1 }}>\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\n                </View>\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\n\n                  {item.imageCount > 0 ?\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\n                      <Text underline>\n                        {item.imageCount ? item.imageCount : 0} image/s\n                      </Text>\n                    </TouchableOpacity>) :\n                    (<Text>\n                      {item.imageCount ? item.imageCount : 0} image/s\n                    </Text>)\n                  }\n\n\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\n                    {item.imageCount > 0 ? null : (\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\n                    )}\n                  </TouchableOpacity>\n                </View> */}\n                <View style={{ flex: 1, }}>\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\n                </View>\n\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\n                  <TouchableOpacity\n                    onPress={() => handleFobPriceHistoryOpen(item)}\n                    style={{\n                      margin: 5,\n                      alignSelf: 'center',\n                    }}>\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\n                    <FontAwesome name='clock-o' color='black' size={22} />\n                  </TouchableOpacity>\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\n                  {/* <TextInput\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\n                    key={item.id}\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\n\n                </View>\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n                  <SupplyChainsCosts data={item} />\n                  {/* <EditVehicle data={item} /> */}\n                </View>\n              </View>\n            ))}\n\n            <View style={{\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\n              alignSelf: 'center',\n            }}>\n\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <TouchableOpacity\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\n                  onPress={handlePreviousPage}>\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\n                  </View>\n                </TouchableOpacity>\n              </View>\n\n\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\n              </View>\n\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n                <TouchableOpacity\n                  onPress={handleNextPage}>\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </View>\n\n\n\n\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\n\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n              <TouchableOpacity\n                onPress={addStockStatusToVehicleProducts}>\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                  <FontAwesome name='save' size={40} color={'white'} />\n                </View>\n              </TouchableOpacity>\n            </View> */}\n\n          </View>\n        ) :\n\n\n\n        (\n          <View style={{ flex: 1, }}>\n            <View >\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\n                onSubmitEditing={handleSearchEnter}\n                placeholder='Search'\n                returnKeyType='search'\n                autoCapitalize='none'\n              />\n            </View>\n\n            {vehicleListData.map((item, index) => (\n              <View\n                key={item.id}\n                style={{\n                  flex: 1,\n                  flexDirection: 'column',\n                  borderWidth: 1,\n                  borderColor: '#E4E4E7',\n                  backgroundColor: '#BFDBFE',\n                  margin: 10,\n                }}>\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\n                  </View>\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\n                  </View>\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\n                  </View>\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\n                  </View>\n                </View>\n\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <Text style={{ color: 'white', }} bold>Images</Text>\n                  </View>\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    {item.imageCount > 0 ?\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\n                        <Text underline style={{ marginLeft: 3 }}>\n                          {item.imageCount ? item.imageCount : 0} image/s\n                        </Text>\n                      </TouchableOpacity>) :\n                      (<Text style={{ marginLeft: 3 }}>\n                        {item.imageCount ? item.imageCount : 0} image/s\n                      </Text>)\n                    }\n\n\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\n                      {item.imageCount > 0 ? null : (\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\n                      )}\n                    </TouchableOpacity>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\n                  </View>\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\n                  </View>\n                </View>\n\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\n                  </View>\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                    <TouchableOpacity\n                      onPress={() => handleFobPriceHistoryOpen(item)}\n                      style={{\n                        margin: 5,\n                        alignSelf: 'center',\n                      }}>\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\n                      <FontAwesome name='clock-o' color='black' size={22} />\n                    </TouchableOpacity>\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\n\n                    {/* <TextInput\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\n                      style={{ width: '90%', borderRadius: 5, }}\n                      key={item.id}\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\n                    {/* <TouchableHighlight\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\n                      onPress={() => handleSaveFob(item, index)}\n                      style={{\n                        backgroundColor: '#16A34A',\n                        margin: 2,\n                        marginLeft: 2,\n                        alignSelf: 'center',\n                        borderRadius: 5,\n                      }}>\n                      <MaterialIcons name='update' color='white' size={22} />\n                    </TouchableHighlight> */}\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: 'row' }}>\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\n                  </View>\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\n                    <SupplyChainsCosts data={item} />\n                    {/* <EditVehicle data={item} /> */}\n                  </View>\n                </View>\n              </View>\n            ))}\n\n            <View style={{\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\n              alignSelf: 'center',\n            }}>\n\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <TouchableOpacity\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\n                  onPress={handlePreviousPage}>\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\n                  </View>\n                </TouchableOpacity>\n              </View>\n\n\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\n              </View>\n\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n                <TouchableOpacity\n                  onPress={handleNextPage}>\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\n                  </View>\n                </TouchableOpacity>\n              </View>\n\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n            <TouchableOpacity\n              onPress={addKeywordsToVehicleProducts}>\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                <MaterialIcons name='save' size={40} color={'white'} />\n              </View>\n            </TouchableOpacity>\n          </View> */}\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\n                <TouchableOpacity\n                  onPress={addImageCountToVehicleProducts}>\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\n                    <FontAwesome name='dollar' size={40} color={'white'} />\n                  </View>\n                </TouchableOpacity>\n              </View> */}\n            </View>\n\n\n\n\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\n\n          </View>\n\n        )}\n\n\n\n\n    </>\n\n\n  );\n\n}\n\n\n\n\n\n\nexport default function VehicleList() {\n  const [email, setEmail] = useState('');\n  const logo = require('../../assets/C-Hub.png');\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\n  const [isMobileView, setIsMobileView] = useState(false);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  // const navigation = useNavigation();\n  const navigate = useNavigate();\n\n\n  const [typeOfAccount, setTypeOfAccount] = useState('');\n\n\n  const loginName = useSelector((state) => state.loginName);\n  const [name, setName] = useState(loginName);\n  const [time, setTime] = useState('');\n\n  const [selectedImages, setSelectedImages] = useState([]);\n\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\n\n  const dispatch = useDispatch();\n\n\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n\n  useEffect(() => {\n    const updateWidth = () => {\n      const newWidth = Dimensions.get('window').width;\n      setScreenWidth(newWidth); // Update the screenWidth state\n    };\n\n    // Add event listener for window resize\n    Dimensions.addEventListener('change', updateWidth);\n\n    // Clean up the event listener when the component unmounts or re-renders\n    return () => {\n      Dimensions.removeEventListener('change', updateWidth);\n    };\n  }, []);\n\n\n  // useEffect(() => {\n  //   const handleWidthChange = ({ window }) => {\n  //     setWidthState(window.width);\n  //   };\n\n  //   Dimensions.addEventListener('change', handleWidthChange);\n\n  //   return () => {\n  //     Dimensions.removeEventListener('change', handleWidthChange);\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   reloadData();\n  // }, [reloadData]);\n\n\n  // useEffect(() => {\n  // }, [typeOfAccount]);\n\n\n\n\n  useEffect(() => {\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\n      if (!user) {\n        // navigation.navigate(\"Login\")\n        navigate(\"/Login\");\n\n      }\n\n    })\n\n    return unsubscribe\n  }, [])\n\n\n\n\n\n\n\n\n\n\n\n\n  const handleDocumentChange = (snapshot) => {\n    if (snapshot.exists()) {\n      const data = snapshot.data();\n      const isActive = data.active;\n\n      if (!isActive) {\n        signOut(projectControlAuth)\n          .then(() => {\n            // navigation.navigate('Login');\n            navigate(\"/Login\");\n\n          })\n          .catch((error) => {\n            console.error('Error signing out:', error);\n          });\n      }\n    } else {\n      signOut(projectControlAuth)\n        .then(() => {\n          // navigation.navigate('Login');\n          navigate(\"/Login\");\n\n        })\n        .catch((error) => {\n          console.error('Error signing out:', error);\n        });\n    }\n  };\n\n  const subscribeToFieldChange = () => {\n    const userId = projectControlAuth.currentUser?.email;\n    if (userId) {\n      const userRef = doc(firestore, 'accounts', userId);\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\n      return unsubscribe;\n    } else {\n      // Return a no-op function if there's no user\n      return () => {\n        navigate(\"/login\")\n      };\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = subscribeToFieldChange();\n\n    return () => {\n      // This will now always be a function\n      unsubscribe();\n    };\n  }, []);\n\n\n  useEffect(() => {\n    const currentUserEmail = getEmailOfCurrentUser();\n    if (currentUserEmail) {\n      getFieldValueByEmail(currentUserEmail);\n      setEmail(currentUserEmail)\n      const documentId = currentUserEmail;\n      listenForNameChange(documentId);\n    }\n  }, []);\n\n\n  const listenForNameChange = (documentId) => {\n\n\n    // To stop listening for updates, you can call unsubscribe()\n    // unsubscribe();\n  };\n\n\n\n  const getFieldValueByEmail = async (email) => {\n    try {\n      const accountDocRef = doc(firestore, 'accounts', email);\n      const accountDocSnapshot = await getDoc(accountDocRef);\n\n      if (accountDocSnapshot.exists()) {\n        const data = accountDocSnapshot.data();\n        const fieldType = data.type;\n        const fieldName = data.name;\n        dispatch(setLoginName(data.name));\n\n      } else {\n        console.log('Document does not exist');\n      }\n    } catch (error) {\n      console.error('Error fetching field value:', error);\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const handleSignOut = () => {\n\n    signOut(projectControlAuth).then(() => {\n      // navigation.navigate('Login');\n      navigate(\"/Login\");\n\n      setEmail('');\n      setName('');\n    }).catch(() => {\n      // An error happened.\n    });\n\n\n  }\n\n  // useEffect(() => {\n  //   const handleScreenResize = () => {\n  //     const screenWidth = Dimensions.get('window').width;\n  //     setIsMobileView(screenWidth < 1200);\n  //   };\n\n  //   // Initial check on component mount\n  //   handleScreenResize();\n\n  //   // Listen for screen dimension changes\n  //   Dimensions.addEventListener('change', handleScreenResize);\n\n  //   // Cleanup event listener on component unmount\n  //   return () => {\n  //     Dimensions.removeEventListener('change', handleScreenResize);\n  //   };\n  // }, []);\n\n\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const NamePopover = ({ name, handleSignOut }) => {\n    const [showNamePopover, setShowNamePopover] = useState(false);\n\n    const showPopover = () => {\n      setShowNamePopover(!showNamePopover);\n    };\n\n    return (\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\n        <Flex direction=\"row-reverse\">\n          <Popover\n            isOpen={showNamePopover}\n            trigger={(triggerProps) => (\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\n              </Text>\n            )}\n            onClose={() => setShowNamePopover(!showNamePopover)}\n            placement='bottom right'\n            trapFocus={false}\n          >\n            <Popover.Content backgroundColor={'#0642F4'}>\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\n              <Popover.Body backgroundColor={'#0642F4'}>\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\n                  Logout\n                </Button>\n              </Popover.Body>\n            </Popover.Content>\n          </Popover>\n        </Flex>\n      </Box>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    image: {\n      flex: 1,\n    },\n  });\n\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\n\n\n\n\n    return (\n      <>\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\n          <Modal.Content bgColor={'green.100'}>\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\n              <Text textAlign={'center'} color={'#102A43'} bold>\n                😊😎 Success! 😎😊\n              </Text>\n            </Modal.Header>\n            <Modal.Body\n              justifyContent={'center'}\n              alignItems={'center'}\n              bgColor={'green.200'}\n              borderLeftWidth={4}\n              borderLeftColor={'green.600'}\n              margin={5}\n            >\n              <Box flex={1}>\n                <Text color={'green.600'} bold>\n                  {headerText}\n                  {/* Vehicle Added! */}\n                </Text>\n                <Text color={'green.600'}>\n                  {bodyText}\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\n                </Text>\n              </Box>\n            </Modal.Body>\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\n              <HStack space={5} flex={1}>\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\n                  Ok\n                </Button>\n              </HStack>\n            </Modal.Footer>\n          </Modal.Content>\n        </Modal>\n      </>\n\n    );\n  };\n\n\n\n\n\n  return (\n\n    <NativeBaseProvider>\n      <>\n\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\n          {/* Header */}\n          <Box\n            px=\"3\"\n            bgColor='#0642f4'\n            height={54}\n            position=\"sticky\"\n            top={0}\n            zIndex={999}\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            borderBottomWidth={0}\n            borderBottomColor={'cyan.500'}\n          >\n\n            <SideDrawer\n              selectedScreen={selectedScreen} />\n\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\n              <FastImage\n                source={{\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\n                  priority: FastImage.priority.high,\n                }}\n                resizeMode={FastImage.resizeMode.stretch}\n                style={styles.image} />\n            </Box>\n\n            <View style={{ alignItems: 'center', flex: 1 }}>\n              <QRCodeScanner />\n            </View>\n\n            <NamePopover name={name} handleSignOut={handleSignOut} />\n\n          </Box>\n\n          {/* Content */}\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\n\n\n            {/* Main Content */}\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\n            {/* Main Content Content */}\n\n\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\n                <View style={{ flex: 1, }}>\n                  <VehicleListTable />\n\n\n                </View>\n              </ScrollView>\n              <SCC_Modals />\n              <EditVehicleModal />\n              <FobPriceHistory />\n              {/* <SuccessModal /> */}\n\n            </View>\n\n\n            {/* </Box> */}\n\n            {/* </Box> */}\n          </View>\n\n        </View>\n        <LoadingModal />\n\n      </>\n\n\n\n\n\n    </NativeBaseProvider>\n\n\n\n\n  );\n\n};","import { useState, useEffect } from 'react';\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\nimport { useSelector } from 'react-redux';\nimport { setVehicleListData } from '../redux/store';\nimport { useDispatch } from 'react-redux';\n\nexport const UsePagination = (projectExtensionFirestore) => {\n    const dispatch = useDispatch();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [lastVisible, setLastVisible] = useState(null);\n    // const [data, setData] = useState([]);\n    const [pageSize, setPageSize] = useState(10);\n    const handleNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n\n    const handlePreviousPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let q;\n                if (lastVisible) {\n                    q = query(\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\n                        orderBy('dateAdded', 'desc'),\n                        startAfter(lastVisible),\n                        limit(pageSize)\n                    );\n                } else {\n                    q = query(\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\n                        orderBy('dateAdded', 'desc'),\n                        limit(pageSize)\n                    );\n                }\n\n                const unsubscribe = onSnapshot(q, (snapshot) => {\n                    const vehicleProductData = [];\n                    snapshot.forEach((doc) => {\n                        vehicleProductData.push({\n                            id: doc.id,\n                            ...doc.data(),\n                        });\n                    });\n\n                    if (!snapshot.empty) {\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\n                    }\n\n                    // setData(vehicleProductData);\n                    dispatch(setVehicleListData(vehicleProductData));\n                });\n\n                return unsubscribe;\n            } catch (error) {\n                console.error('Error fetching data: ', error);\n            }\n        };\n\n        fetchData();\n    }, [projectExtensionFirestore, currentPage, pageSize]);\n\n    return { handleNextPage, handlePreviousPage };\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\nimport { useEffect, useMemo } from 'react';\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\n\nlet makeDataVariable = [];\nlet email = '';\n\n\n// =============================== Chat Messages ========================================\nconst messageTextInputHeightSlice = createSlice({\n  name: 'messageTextInputHeight',\n  initialState: 50,\n  reducers: {\n    setMessageTextInputHeight: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst messageTextInputValueSlice = createSlice({\n  name: 'messageTextInputValue',\n  initialState: '',\n  reducers: {\n    setMessageTextInputValue: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst carImageUrlSlice = createSlice({\n  name: 'carImageUrl',\n  initialState: '',\n  reducers: {\n    setCarImageUrl: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst selectedFileUrlSlice = createSlice({\n  name: 'selectedFileUrl',\n  initialState: '',\n  reducers: {\n    setSelectedFileUrl: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst pdfViewerModalVisibleSlice = createSlice({\n  name: 'pdfViewerModalVisible',\n  initialState: false,\n  reducers: {\n    setPdfViewerModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst selectedVehicleDataSlice = createSlice({\n  name: 'selectedVehicleData',\n  initialState: [],\n  reducers: {\n    setSelectedVehicleData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst selectedCustomerDataSlice = createSlice({\n  name: 'selectedCustomerData',\n  initialState: [],\n  reducers: {\n    setSelectedCustomerData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst previewInvoiceVisibleSlice = createSlice({\n  name: 'previewInvoiceVisible',\n  initialState: false,\n  reducers: {\n    setPreviewInvoiceVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst customInvoiceVisibleSlice = createSlice({\n  name: 'customInvoiceVisible',\n  initialState: false,\n  reducers: {\n    setCustomInvoiceVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst transactionModalVisibleSlice = createSlice({\n  name: 'transactionModalVisible',\n  initialState: false,\n  reducers: {\n    setTransactionModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst invoiceDataSlice = createSlice({\n  name: 'invoiceData',\n  initialState: {},\n  reducers: {\n    setInvoiceData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst deleteMessageTemplateVisibleSlice = createSlice({\n  name: 'deleteMessageTemplateVisible',\n  initialState: false,\n  reducers: {\n    setDeleteMessageTemplateVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst loadMoreMessagesLoadingSlice = createSlice({\n  name: 'loadMoreMessagesLoading',\n  initialState: false,\n  reducers: {\n    setLoadMoreMessagesLoading: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst noMoreMessagesDataSlice = createSlice({\n  name: 'noMoreMessagesData',\n  initialState: false,\n  reducers: {\n    setNoMoreMessagesData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst readByListModalVisibleSlice = createSlice({\n  name: 'readByListModalVisible',\n  initialState: false,\n  reducers: {\n    setReadByListModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst selectedChatDataSlice = createSlice({\n  name: 'selectedChatData',\n  initialState: [],\n  reducers: {\n    setSelectedChatData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst chatMessageBoxLoadingSlice = createSlice({\n  name: 'chatMessageBoxLoading',\n  initialState: false,\n  reducers: {\n    setChatMessageBoxLoading: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst chatMessagesDataSlice = createSlice({\n  name: 'chatMessagesData',\n  initialState: [],\n  reducers: {\n    setChatMessagesData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst chatListSearchTextSlice = createSlice({\n  name: 'chatListSearchText',\n  initialState: '',\n  reducers: {\n    setChatListSearchText: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst activeChatIdSlice = createSlice({\n  name: 'activeChatId',\n  initialState: '',\n  reducers: {\n    setActiveChatId: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst loadMoreLoadingSlice = createSlice({\n  name: 'loadMoreLoading',\n  initialState: false,\n  reducers: {\n    setLoadMoreLoading: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst noMoreDataSlice = createSlice({\n  name: 'noMoreData',\n  initialState: false,\n  reducers: {\n    setNoMoreData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst chatListLastVisibleSlice = createSlice({\n  name: 'chatListLastVisible',\n  initialState: null,\n  reducers: {\n    setChatListLastVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst chatListDataSlice = createSlice({\n  name: 'chatListData',\n  initialState: [],\n  reducers: {\n    setChatListData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst chatListImageUrlSlice = createSlice({\n  name: 'chatListImageUrl',\n  initialState: null,\n  reducers: {\n    setChatListImageUrl: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\n// =============================== Chat Messages ========================================\n\n\n\n// =============================== Freight ========================================\n\n\nconst countryPortsDataSlice = createSlice({\n  name: 'countryPortsData',\n  initialState: [],\n  reducers: {\n    setCountryPortsData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst addPortsForCountriesModalVisibleSlice = createSlice({\n  name: 'addPortsForCountriesModalVisible',\n  initialState: false,\n  reducers: {\n    setAddPortsForCountriesModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst methodDataSlice = createSlice({\n  name: 'methodData',\n  initialState: [],\n  reducers: {\n    setMethodData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst inspectionIsRequiredDataSlice = createSlice({\n  name: 'inspectionIsRequiredData',\n  initialState: [],\n  reducers: {\n    setInspectionIsRequiredData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst inspectionNameDataSlice = createSlice({\n  name: 'inspectionNameData',\n  initialState: [],\n  reducers: {\n    setInspectionNameData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst deletePortModalVisibleSlice = createSlice({\n  name: 'deletePortModalVisible',\n  initialState: false,\n  reducers: {\n    setDeletePortModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst deleteCountryModalVisibleSlice = createSlice({\n  name: 'deleteCountryModalVisible',\n  initialState: false,\n  reducers: {\n    setDeleteCountryModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst addPortModalVisibleSlice = createSlice({\n  name: 'addPortModalVisible',\n  initialState: false,\n  reducers: {\n    setAddPortModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst addCountryModalVisibleSlice = createSlice({\n  name: 'addCountryModalVisible',\n  initialState: false,\n  reducers: {\n    setAddCountryModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst selectedButtonSlice = createSlice({\n  name: 'selectedButton',\n  initialState: '',\n  reducers: {\n    setSelectedButton: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst freightCountriesDataSlice = createSlice({\n  name: 'freightCountriesData',\n  initialState: [],\n  reducers: {\n    setFreightCountriesData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst freightPortsDataSlice = createSlice({\n  name: 'freightPortsData',\n  initialState: [],\n  reducers: {\n    setFreightPortsData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n// =============================== Freight ========================================\n\n\n// =============================== Vehicle List ========================================\n\nconst fobHistoryDataSlice = createSlice({\n  name: 'fobHistoryData',\n  initialState: [],\n  reducers: {\n    setFobHistoryData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst inputFobSlice = createSlice({\n  name: 'inputFob',\n  initialState: '',\n  reducers: {\n    setInputFob: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst fobPriceHistoryModalVisibleSlice = createSlice({\n  name: 'fobPriceHistoryModalVisible',\n  initialState: false,\n  reducers: {\n    setFobPriceHistoryModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst editVehicleModalVisibleSlice = createSlice({\n  name: 'editVehicleModalVisible',\n  initialState: false,\n  reducers: {\n    setEditVehicleModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst vehicleListDataSlice = createSlice({\n  name: 'vehicleListData',\n  initialState: [],\n  reducers: {\n    setVehicleListData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst addVehicleListDataSlice = createSlice({\n  name: 'addVehicleListData',\n  initialState: [],\n  reducers: {\n    setAddVehicleListData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst supplyChainsCostsModalVisibleSlice = createSlice({\n  name: 'supplyChainsCostsModalVisible',\n  initialState: false,\n  reducers: {\n    setSupplyChainsCostsModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst uploadImagesModalVisibleSlice = createSlice({\n  name: 'uploadImagesModalVisibleVisible',\n  initialState: false,\n  reducers: {\n    setUploadImagesModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\n  name: 'vehicleListSupplyChainsCostsData',\n  initialState: [],\n  reducers: {\n    setVehicleListSupplyChainsCostsData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst uploadImagesButtonLoadingSlice = createSlice({\n  name: 'uploadImagesButtonLoading',\n  initialState: false,\n  reducers: {\n    setUploadImagesButtonLoading: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst viewImagesModalVisibleSlice = createSlice({\n  name: 'viewImagesModalVisible',\n  initialState: false,\n  reducers: {\n    setViewImagesModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst viewImagesDataSlice = createSlice({\n  name: 'viewImagesData',\n  initialState: [],\n  reducers: {\n    setViewImagesData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\nconst lastVisibleSlice = createSlice({\n  name: 'lastVisible',\n  initialState: '',\n  reducers: {\n    setLastVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n// =============================== Vehicle List ========================================\n\n// =============================== Account List ========================================\nconst accountListDataSlice = createSlice({\n  name: 'accountListData',\n  initialState: [],\n  reducers: {\n    setAccountListData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n\n// =============================== Account List ========================================\n\n// =============================== Logs ======================================== \n\n\nconst logsDataSlice = createSlice({\n  name: 'logsData',\n  initialState: [],\n  reducers: {\n    setLogsData: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\n// =============================== Logs ======================================== \n\n\nconst stockStatusDataSlice = createSlice({\n  name: 'stockStatusData',\n  initialState: [\n    'On-Sale',\n    'Reserved',\n    'Sold',\n    'Hidden',],\n  reducers: {\n    setStockStatusData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst isSuccessModalOpenSlice = createSlice({\n  name: 'isSuccessModalOpen',\n  initialState: false,\n  reducers: {\n    setIsSuccessModalOpen: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst isUpdateSuccessModalOpenSlice = createSlice({\n  name: 'isUpdateSuccessModalOpen',\n  initialState: false,\n  reducers: {\n    setIsUpdateSuccessModalOpen: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst loadingModalVisibleSlice = createSlice({\n  name: 'loadingModalVisible',\n  initialState: false,\n  reducers: {\n    setLoadingModalVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst selectedExpenseNameSlice = createSlice({\n  name: 'selectedExpenseName',\n  initialState: '',\n  reducers: {\n    setSelectedExpenseName: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst selectedPaidToSlice = createSlice({\n  name: 'selectedPaidTo',\n  initialState: '',\n  reducers: {\n    setSelectedPaidTo: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst supplyChainsCostsDataSlice = createSlice({\n  name: 'supplyChainsCostsData',\n  initialState: [],\n  reducers: {\n    setSupplyChainsCostsData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst currentDateSlice = createSlice({\n  name: 'currentDate',\n  initialState: '',\n  reducers: {\n    setCurrentDate: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst loginEmailSlice = createSlice({\n  name: 'loginEmail',\n  initialState: false,\n  reducers: {\n    setLoginEmail: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst loginAccountTypeSlice = createSlice({\n  name: 'loginAccountType',\n  initialState: '',\n  reducers: {\n    setLoginAccountType: (state, action) => {\n      return action.payload\n    },\n  },\n})\n\nconst loginNameSlice = createSlice({\n  name: 'loginName',\n  initialState: false,\n  reducers: {\n    setLoginName: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst modalDeleteImagesVisibleSlice = createSlice({\n  name: 'modalDeleteImages',\n  initialState: false,\n  reducers: {\n    setModalDeleteImagesVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst addAnotherImagesSlice = createSlice({\n  name: 'addAnotherImagesVisible',\n  initialState: false,\n  reducers: {\n    setAddAnotherImages: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst isAddPhotoVisibleSlice = createSlice({\n  name: 'isAddPhotoVisible',\n  initialState: true,\n  reducers: {\n    setIsAddPhotoVisible: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst jpyToUsdSlice = createSlice({\n  name: 'jpyToUsd',\n  initialState: '',\n  reducers: {\n    setJpyToUsd: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst usdToJpySlice = createSlice({\n  name: 'usdToJpy',\n  initialState: '',\n  reducers: {\n    setUsdToJpy: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst modelDataSlice = createSlice({\n  name: 'modelData',\n  initialState: [],\n  reducers: {\n    setModelData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst makeDataSlice = createSlice({\n  name: 'makeData',\n  initialState: makeDataVariable,\n  reducers: {\n    setMakeData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst expenseNameDataSlice = createSlice({\n  name: 'expenseName',\n  initialState: [],\n  reducers: {\n    setExpenseNameData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst paidToDataSlice = createSlice({\n  name: 'paidTo',\n  initialState: [],\n  reducers: {\n    setPaidToData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst selectedMakeSlice = createSlice({\n  name: 'selectedMake',\n  initialState: '',\n  reducers: {\n    setSelectedMake: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst isLoadingSlice = createSlice({\n  name: 'isLoading',\n  initialState: false,\n  reducers: {\n    setIsLoading: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst selectedImagesSlice = createSlice({\n  name: 'selectedImages',\n  initialState: [],\n  reducers: {\n    setSelectedImages: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst portDataSlice = createSlice({\n  name: 'portData',\n  initialState: [],\n  reducers: {\n    setPortData: (state, action) => {\n      return action.payload\n    },\n  },\n})\nconst transmissionDataSlice = createSlice({\n  name: 'transmissionData',\n  initialState: [],\n  reducers: {\n    setTransmissionData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst fuelDataSlice = createSlice({\n  name: 'fuelData',\n  initialState: [],\n  reducers: {\n    setFuelData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst buyerDataSlice = createSlice({\n  name: 'buyerData',\n  initialState: [],\n  reducers: {\n    setBuyerData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst salesDataSlice = createSlice({\n  name: 'salesData',\n  initialState: [],\n  reducers: {\n    setSalesData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst driveTypeDataSlice = createSlice({\n  name: 'driveTypeData',\n  initialState: [],\n  reducers: {\n    setDriveTypeData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst bodyTypeDataSlice = createSlice({\n  name: 'bodyTypeData',\n  initialState: [],\n  reducers: {\n    setBodyTypeData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst exteriorColorDataSlice = createSlice({\n  name: 'exteriorColorData',\n  initialState: [],\n  reducers: {\n    setExteriorColorData: (state, action) => {\n      return action.payload;\n    },\n  },\n});\nconst currentYearSlice = createSlice({\n  name: 'currentYear',\n  initialState: '',\n  reducers: {\n    setCurrentYear: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\n\nconst deleteImageVisibleSlice = createSlice({\n  name: 'deleteImageVisible',\n  initialState: true,\n  reducers: {\n    setDeleteImageVisible: (state, action) => {\n      return action.payload\n    },\n  },\n});\n\n// =============================== Chat Messages ========================================\nexport const { setMessageTextInputHeight } = messageTextInputHeightSlice.actions\nexport const { setMessageTextInputValue } = messageTextInputValueSlice.actions\nexport const { setCustomInvoiceVisible } = customInvoiceVisibleSlice.actions\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\nexport const { setCarImageUrl } = carImageUrlSlice.actions\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\nexport const { setInvoiceData } = invoiceDataSlice.actions\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\nexport const { setActiveChatId } = activeChatIdSlice.actions\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\nexport const { setNoMoreData } = noMoreDataSlice.actions\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\nexport const { setChatListData } = chatListDataSlice.actions\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\n// =============================== Chat Messages ========================================\n\n// =============================== Freight ========================================\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\nexport const { setMethodData } = methodDataSlice.actions\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\nexport const { setSelectedButton } = selectedButtonSlice.actions\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\n// =============================== Freight ========================================\n\n\n// =============================== Vehicle List ========================================\nexport const { setInputFob } = inputFobSlice.actions\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\nexport const { setVehicleListData } = vehicleListDataSlice.actions\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\nexport const { setViewImagesData } = viewImagesDataSlice.actions\nexport const { setLastVisible } = lastVisibleSlice.actions\n// =============================== Vehicle List ========================================\n\n// =============================== Account List ========================================\nexport const { setAccountListData } = accountListDataSlice.actions\n\n// =============================== Account List ========================================\n\n// =============================== Logs ======================================== \nexport const { setLogsData } = logsDataSlice.actions\n// =============================== Logs ======================================== \n\nexport const { setStockStatusData } = stockStatusDataSlice.actions\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\nexport const { setCurrentDate } = currentDateSlice.actions\nexport const { setPaidToData } = paidToDataSlice.actions\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\nexport const { setLoginEmail } = loginEmailSlice.actions\nexport const { setLoginName } = loginNameSlice.actions\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\nexport const { setMakeData } = makeDataSlice.actions\nexport const { setSelectedMake } = selectedMakeSlice.actions\nexport const { setIsLoading } = isLoadingSlice.actions\nexport const { setSelectedImages } = selectedImagesSlice.actions\nexport const { setPortData } = portDataSlice.actions\nexport const { setTransmissionData } = transmissionDataSlice.actions;\nexport const { setFuelData } = fuelDataSlice.actions;\nexport const { setBuyerData } = buyerDataSlice.actions;\nexport const { setSalesData } = salesDataSlice.actions;\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\nexport const { setUsdToJpy } = usdToJpySlice.actions;\nexport const { setCurrentYear } = currentYearSlice.actions;\nexport const { setModelData } = modelDataSlice.actions\n\nconst store = configureStore({\n  reducer: {\n\n    // =============================== Chat Messages ========================================     \n    messageTextInputHeight: messageTextInputHeightSlice.reducer,\n    customInvoiceVisible: customInvoiceVisibleSlice.reducer,\n    messageTextInputValue: messageTextInputValueSlice.reducer,\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\n    carImageUrl: carImageUrlSlice.reducer,\n    selectedFileUrl: selectedFileUrlSlice.reducer,\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\n    invoiceData: invoiceDataSlice.reducer,\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\n    selectedChatData: selectedChatDataSlice.reducer,\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\n    chatMessagesData: chatMessagesDataSlice.reducer,\n    chatListSearchText: chatListSearchTextSlice.reducer,\n    activeChatId: activeChatIdSlice.reducer,\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\n    noMoreData: noMoreDataSlice.reducer,\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\n    chatListData: chatListDataSlice.reducer,\n    chatListImageUrl: chatListImageUrlSlice.reducer,\n    // =============================== Chat Messages ======================================== \n\n    // =============================== Freight ======================================== \n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\n    countryPortsData: countryPortsDataSlice.reducer,\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\n    methodData: methodDataSlice.reducer,\n    freightPortsData: freightPortsDataSlice.reducer,\n    inspectionNameData: inspectionNameDataSlice.reducer,\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\n    freightCountriesData: freightCountriesDataSlice.reducer,\n    selectedButton: selectedButtonSlice.reducer,\n    // =============================== Freight ========================================\n\n    // =============================== Vehicle List ========================================\n    inputFob: inputFobSlice.reducer,\n    fobHistoryData: fobHistoryDataSlice.reducer,\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\n    vehicleListData: vehicleListDataSlice.reducer,\n    addVehicleListData: addVehicleListDataSlice.reducer,\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\n    viewImagesData: viewImagesDataSlice.reducer,\n    lastVisible: lastVisibleSlice.reducer,\n    // =============================== Vehicle List ========================================\n\n\n    // =============================== Account List ========================================\n    accountListData: accountListDataSlice.reducer,\n    // =============================== Account List ========================================\n\n\n    // =============================== Logs ======================================== \n    logsData: logsDataSlice.reducer,\n    // =============================== Logs ======================================== \n    stockStatusData: stockStatusDataSlice.reducer,\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\n    selectedPaidTo: selectedPaidToSlice.reducer,\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\n    currentDate: currentDateSlice.reducer,\n    paidToData: paidToDataSlice.reducer,\n    expenseNameData: expenseNameDataSlice.reducer,\n    modelData: modelDataSlice.reducer,\n    makeData: makeDataSlice.reducer,\n    selectedMake: selectedMakeSlice.reducer,\n    isLoading: isLoadingSlice.reducer,\n    selectedImages: selectedImagesSlice.reducer,\n    portData: portDataSlice.reducer,\n    transmissionData: transmissionDataSlice.reducer,\n    fuelData: fuelDataSlice.reducer,\n    buyerData: buyerDataSlice.reducer,\n    salesData: salesDataSlice.reducer,\n    driveTypeData: driveTypeDataSlice.reducer,\n    bodyTypeData: bodyTypeDataSlice.reducer,\n    exteriorColorData: exteriorColorDataSlice.reducer,\n    jpyToUsd: jpyToUsdSlice.reducer,\n    usdToJpy: usdToJpySlice.reducer,\n    currentYear: currentYearSlice.reducer,\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\n    addAnotherImages: addAnotherImagesSlice.reducer,\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\n    loginName: loginNameSlice.reducer,\n    loginAccountType: loginAccountTypeSlice.reducer,\n    loginEmail: loginEmailSlice.reducer,\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\n  },\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\n      },\n    }),\n});\n\n\nexport const fetchCurrency = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\n        dispatch(setJpyToUsd(jpyToUsd));\n        dispatch(setUsdToJpy(usdToJpy));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchExpenseNameData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const expenseNameData = snapshot.data()?.expenseName || [];\n        dispatch(setExpenseNameData(expenseNameData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\n\n\nexport const fetchPaidToData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const paidToData = snapshot.data()?.paidTo || [];\n        dispatch(setPaidToData(paidToData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\n\nexport const fetchMakeData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const makeData = snapshot.data()?.make || [];\n        dispatch(setMakeData(makeData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchPortData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const portData = snapshot.data()?.port || [];\n        dispatch(setPortData(portData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n// Dispatch the fetchMakeData action when your app starts or as needed\n\nexport const fetchTransmissionData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const transmissionData = snapshot.data()?.transmission || [];\n        dispatch(setTransmissionData(transmissionData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\n\nexport const fetchFuelData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const fuelData = snapshot.data()?.fuel || [];\n        dispatch(setFuelData(fuelData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchBuyerData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const buyerData = snapshot.data()?.buyer || [];\n        dispatch(setBuyerData(buyerData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchSalesData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const salesData = snapshot.data()?.sales || [];\n        dispatch(setSalesData(salesData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchDriveTypeData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const driveTypeData = snapshot.data()?.driveType || [];\n        dispatch(setDriveTypeData(driveTypeData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchBodyTypeData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const bodyTypeData = snapshot.data()?.bodyType || [];\n        dispatch(setBodyTypeData(bodyTypeData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchExteriorColorData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\n        dispatch(setExteriorColorData(exteriorColorData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchYear = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n      const { datetime } = response.data;\n      const formattedTime = moment(datetime).format('YYYY');\n      dispatch(setCurrentYear(formattedTime));\n    } catch (error) {\n      console.error('Error fetching time:', error);\n    }\n  };\n};\n\nexport const fetchCurrentDate = () => {\n\n  return async (dispatch) => {\n    try {\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\n      const { datetime } = response.data;\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\n      dispatch(setCurrentDate(formattedTime));\n    } catch (error) {\n      console.error('Error fetching time:', error);\n    }\n  };\n};\n\n// =============================== Vehicle List ========================================\n\n\nexport const fetchVehicleListData = () => {\n  return async (dispatch) => {\n    try {\n      const queryRef = query(\n        collection(projectExtensionFirestore, 'VehicleProducts'),\n        orderBy('dateAdded', 'desc'),\n        limit(10)\n      );\n\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\n        const vehicleProductData = [];\n        snapshot.forEach((doc) => {\n          vehicleProductData.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        dispatch(setVehicleListData(vehicleProductData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\n// =============================== Vehicle List ========================================\n\n// =============================== Logs ========================================\n// export const fetchLogsData = () => {\n//   return async (dispatch) => {\n//     try {\n\n//       const queryRef = query(\n//         collection(projectControlFirestore, 'logs'),\n//         orderBy('timestamp', 'desc'),\n//         limit(10)\n//       );\n\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\n//         const logsDatabaseData = [];\n//         snapshot.forEach((doc) => {\n//           logsDatabaseData.push({\n//             id: doc.id,\n//             ...doc.data(),\n//           });\n//         });\n//         dispatch(setLogsData(logsDatabaseData));\n//       });\n\n//       // Return the unsubscribe function to stop listening when necessary\n//       return unsubscribe;\n//     } catch (error) {\n//       // Handle errors here\n//       console.error('Error fetching data from Firebase:', error);\n//     }\n//   };\n// };\n\n// =============================== Logs ========================================\n\n// =============================== Freight ========================================\n\nexport const fetchMethodData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const methodData = snapshot.data()?.methodData || [];\n        dispatch(setMethodData(methodData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchInspectionIsRequiredData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n\nexport const fetchInspectionNameData = () => {\n  return async (dispatch) => {\n    try {\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\n        dispatch(setInspectionNameData(inspectionNameData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n// =============================== Freight ========================================\n\n\n// =============================== Chat Messages ========================================\nexport const fetchChatListData = () => {\n  return async (dispatch) => {\n    try {\n      const queryRef = query(\n        collection(projectExtensionFirestore, 'chats'),\n        orderBy('lastMessageDate', 'desc'),\n        limit(10)\n      );\n\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\n        const chatsData = [];\n        snapshot.forEach((doc) => {\n          chatsData.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n        dispatch(setChatListData(chatsData));\n      });\n\n      // Return the unsubscribe function to stop listening when necessary\n      return unsubscribe;\n    } catch (error) {\n      // Handle errors here\n      console.error('Error fetching data from Firebase:', error);\n    }\n  };\n};\n// =============================== Chat Messages ========================================\n// To stop listening for updates, you can call unsubscribe()\n// unsubscribe();\n\nstore.dispatch(fetchCurrentDate());\nstore.dispatch(fetchPaidToData());\nstore.dispatch(fetchExpenseNameData());\nstore.dispatch(fetchMakeData());\nstore.dispatch(fetchPortData());\nstore.dispatch(fetchTransmissionData());\nstore.dispatch(fetchFuelData());\nstore.dispatch(fetchBuyerData());\nstore.dispatch(fetchSalesData());\nstore.dispatch(fetchDriveTypeData());\nstore.dispatch(fetchBodyTypeData());\nstore.dispatch(fetchExteriorColorData());\nstore.dispatch(fetchCurrency());\nstore.dispatch(fetchYear());\n\n\n\n// store.dispatch(fetchVehicleListData());\n\nstore.dispatch(fetchMethodData());\nstore.dispatch(fetchInspectionIsRequiredData());\nstore.dispatch(fetchInspectionNameData());\n\n// store.dispatch(fetchChatListData());\n\n\nexport default store","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport {\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\n} from '@env';\n\nimport {\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\n} from '@env';\n\n// Configuration for Firebase project 1\nconst firebaseConfigControl = {\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\n};\n\n// Configuration for Firebase project 2\nconst firebaseConfigExtension = {\n  // Replace with your project 2 configuration\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\n\n};\n\n// Initialize Firebase for project 1\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\nexport const projectControlAuth = getAuth(projectControlFirebase);\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\n\n// Initialize Firebase for project 2\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\n","\n\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { \n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseControlConfig = {\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\n  };\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseControlConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nrequire('firebase/auth');\n// export const auth = app.auth()\nconst db = getFirestore (app);\n// export default app\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\n\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { \n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseControlCreateUserConfig = {\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\n  };\n\n// Initialize Firebase\n\n\nrequire('firebase/auth');\n// export const auth = app.auth()\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\n// export default app\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [649], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","csvData","setCsvData","data","handleFileChange","event","file","target","files","reader","FileReader","onload","codes","Uint8Array","result","unicodeString","Encoding","Papa","header","dynamicTyping","complete","_complete","results","forEach","_ref2","row","response","fetch","method","headers","body","JSON","stringify","documentData","ok","readAsArrayBuffer","sendData","_ref5","_ref6","_x4","_ref7","action_cd","stock_id","reference_no","m_as_maker_id","m_as_model_id","grade_name","model_code","frame_number","model_number","devision_number","registration_year","registration_month","manufacture_year","manufacture_month","m_as_bodytype_id","m_bodystyle_sub_id","displacement","mileage_odometer_cd","mileage","m_as_fueltype_id","m_as_transmission_id","m_as_steering_id","m_as_drivetype_id","number_of_passengers","door_cnt","exterior_color_cd","interior_color_cd","option_cds","condition_cd","accident_flg","sales_person_charge_id","storage_yard_cd","site_sales_pr_text","fob_ask_flg","fob_regular_price","fob_price","display_site_cds","tcv_flg","m_tcv_maker_id","m_tcv_model_id","memo","stock_no","stock_price","car_condition_file","responseData","json","errorResponse","callApiR02","_ref8","json_data","msg","exec_time","parse","ret_text","replace","ret","_x5","_x6","_x7","jsonData","appendDataToCSV","_ref9","_ref10","username","stock_system_id","appendClientsDataToCSV","_ref11","client_name","handleClearCsv","_ref12","handleClearClientsCsv","_ref13","View","accept","onChange","index","title","FlatList","keyExtractor","item","toString","renderItem","_ref14","columnName","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","document","createElement","textContent","head","append","Routes","Route","path","element","Navigate","to","ParseCSV","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","searchData","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","collectionPath","documentRef","documentSnapshot","getDoc","pass","accountDocSnapshot","validateEmail","test","handleEdit","find","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","logsCollectionRef","addDoc","handleEnable","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","deleteDocument","customId","deleteDoc","_x8","_x9","handleDelete","deleteUser","_x10","handleDisable","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","QRCodeScanner","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","selectable","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","dataName","databaseInit","projectExtensionFirestore","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","launchImageLibrary","didCancel","assets","newImages","promises","asset","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","getContext","src","URL","createObjectURL","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","InteriorPoS","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current2","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","selectedCurrencyExchange","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","mobileViewBreakpoint","globalSelectedPDFUrl","globalSelectedFileType","encryptData","secretKey","AES","encrypt","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","setMessageTextInputValue","numberOfLines","ellipsizeMode","focus","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","borderBottomLeftRadius","FileDisplay","onRemove","cover","MessageTextInput","handleSendMessage","messageTextInputHeight","messageTextInputValue","updatedHeight","max","scrollHeight","setMessageTextInputHeight","onContentSizeChange","_event$nativeEvent$co","nativeEvent","contentSize","onKeyPress","key","shiftKey","preventDefault","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","onchange","alert","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","File","lastModified","Date","now","addMessage","_ref20","CancelledView","ChatListItem","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","paddingRight","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","_ref25","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref26","fullPath","location","origin","pathname","open","_ref27","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","_ref34","subscribeToBankAccounts","_ref35","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","CurrencySign","convertedCurrency","baseValue","currency","usdToEur","usdToAud","usdToGbp","usdToCad","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","incotermsCondition","total","round","_insuranceInput$curre2","price","fobPriceDollars","freightCalculation","m3","usdToJpy","jpyToEur","jpyToAud","jpyToGbp","cadToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","appendSalesInfoDataToCSV","_ref43","_ref42","sales_date","fob","cost_name1","cost1","cost_name2","cost2","cost_name3","cost3","cost_name4","cost4","cost_name5","cost5","coupon_discount","price_discount","subtotal","clients","InputPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","numberFormatOptions","minimumFractionDigits","maximumFractionDigits","useGrouping","totalValue","payments","payment","totalPriceCalculated","_invoiceData$paymentD","_invoiceData$paymentD2","_invoiceData$paymentD3","_invoiceData$paymentD4","_invoiceData$currency","_invoiceData$currency2","_invoiceData$currency3","_invoiceData$currency4","_invoiceData$currency5","_invoiceData$paymentD5","additionalPrices","baseTotal","numericPart","totalUsd","totalEur","totalAud","totalGbp","totalCad","parseDollars","eurToUsd","audToUsd","gbpToUsd","cadToUsd","CurrencySymbol","fullPaymentMessage","messageType","overBalanceMessage","paymentMessage","transactionDate","confirmPayment","amountNeeded","docRefInvoice","docRefCustomer","formattedSalesDate","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmountFormatOptions","inputAmount","numericInputAmount","formattedInputAmount","ms","salesDataToSubmit","jackall_id","j_id","i","prepareSalesData","overBalance","formattedOverbalanceAmount","increment","fullyPaid","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","getMinutes","displayedAmount","Progress","shadow","_filledTrack","underline","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","_ref50","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","CurrencyName","GenerateCustomInvoice","additionalPriceLocal","additionalNameLocal","invoiceNameExtension","divideInvoice","customInvoiceVisible","invoiceRef","qrCodeRef","capturedImageUri","setCapturedImageUri","setInvoiceNumber","invoiceViewKey","setSelectedCurrencyExchange","issuingDateRef","setIssuingDate","dueDateRef","setDueDate","shippedFromRef","shippedFrom","setShippedFrom","shippedToRef","shippedTo","setShippedTo","placeOfDeliveryRef","setPlaceOfDelivery","cfsRef","setCfs","consigneeNameRef","setConsigneeName","consigneeAddressRef","setConsigneeAddress","consigneeEmailRef","setConsigneeEmail","consigneeContactRef","consigneeContact","setConsigneeContact","consigneeFaxRef","setConsigneeFax","notifyPartyNameRef","setNotifyPartyName","notifyPartyAddressRef","setNotifyPartyAddress","notifyPartyEmailRef","setNotifyPartyEmail","notifyPartyContactRef","notifyPartyContact","setNotifyPartyContact","notifyPartyFaxRef","setNotifyPartyFax","carNameRef","setCarName","specificationsRef","specifications","setSpecifications","itemNoteRef","_useState213","_useState214","itemNote","setItemNote","fobTextRef","_useState215","_useState216","fobText","setFobText","fobPriceRef","_useState217","_useState218","setFobPrice","freightTextRef","_useState219","_useState220","freightText","setFreightText","freightPriceRef","_useState221","_useState222","setFreightPrice","inspectionTextRef","_useState223","_useState224","inspectionText","setInspectionText","inspectionPriceRef","_useState225","_useState226","setInspectionPrice","insuranceTextRef","_useState227","_useState228","insuranceText","setInsuranceText","insurancePriceRef","_useState229","_useState230","setInsurancePrice","totalPriceRef","_useState231","_useState232","totalPrice","setTotalPrice","_useState233","_useState234","setAdditionalName","_useState235","_useState236","setAdditionalPrice","dividedByRef","_useState237","_useState238","dividedBy","setDividedBy","convertedCurrencyCustomInvoice","captureImage","captureRef","quality","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","handleAdditionalNameTextChange","handleAdditionalPriceTextChange","issuingDateString","dueDateString","issuingDateObject","dueDateObject","handleFreightTextChange","handleInspectionTextChange","handleInsuranceTextChange","handleFobTextChange","handleDividedByTextChange","CurrencyPopover","NativePressable","totalAdditionalPrice","setCustomInvoiceVisible","setPreviewInvoiceVisible","QRCode","PreviewInvoice","previewInvoiceVisible","_useState239","_useState240","isPreviewHovered","setIsPreviewHovered","_useState241","_useState242","_useState243","_useState244","_useState245","_useState246","_useState247","_useState248","_useState249","_useState250","setFeaturesTrueCount","_useState251","_useState252","rerenderState","setRerenderState","_useState253","_useState254","imagePreviewKey","captureImageAsync","trueCount","count","field","countTrueValuesInCarData","_ref56","_ref58","write","RNImage","ReopenTransaction","_useState255","_useState256","_useState257","_useState258","isModalVisible","setIsModalVisible","_useState259","_useState260","isYesHovered","setIsYesHovered","_useState261","_useState262","isNoHovered","setIsNoHovered","_useState263","_useState264","handleModalClose","reopenTransactionMessage","_ref59","handleReopenTransaction","_ref60","CancelTransaction","_useState265","_useState266","_useState267","_useState268","_useState269","_useState270","_useState271","_useState272","_useState273","_useState274","sendEmail","_ref61","subject","htmlContent","cancelTransactionMessage","handleCancelTransaction","formattedTimeEmail","ExtendDueDateButton","_useState275","_useState276","_useState277","_useState278","setIsConfirmHovered","_useState279","_useState280","_useState281","_useState282","_useState283","_useState284","_useState285","_useState286","handleConfirm","confirmExtendDueDate","extendDueDateMessage","_ref65","_ref67","_useState287","_useState288","TransactionModal","transactionModalVisible","TransactionButton","_ref69","buttonValue","transactionValue","colorHoverIn","colorHoverOut","_useState289","_useState290","TransactionList","_ref70","displayedTransactions","isArray","transactions","transaction","_useState291","_useState292","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","_useState293","_useState294","transactionHistoryVisible","setTransactionHistoryVisible","_useState295","_useState296","setDisplayedTransactions","_useState297","_useState298","loadingMore","setLoadingMore","_useState299","_useState300","onScroll","_ref72","_ref71","layoutMeasurement","contentOffset","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState301","_useState302","paymentHistoryVisible","setPaymentHistoryVisible","_useState303","_useState304","displayedPayments","setDisplayedPayments","_useState305","_useState306","_ref74","_ref73","CustomerProfileModal","_useState307","_useState308","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState309","_useState310","reRenderKey","setReRenderKey","_useState311","_useState312","inspectionPriceCondition","insurancePriceCondition","freightPriceYen","UpdateCurrency","_ref75","currencyValue","oldSelectedCurrency","_x14","_invoiceData$paymentD6","_invoiceData$paymentD7","_invoiceData$paymentD8","_invoiceData$paymentD9","_invoiceData$currency6","_invoiceData$currency7","_invoiceData$currency8","_invoiceData$currency9","_invoiceData$currency10","_invoiceData$paymentD10","reservedTo","FontAwesome5","ReadByListModal","_ref76","userEmail","handleReadByListModalClose","readByListModalVisible","flexWrap","ImagePreviewModal","_ref77","isVisible","HoverablePressable","_ref78","_useState313","printComponent","_useState314","isHoveredDownload","setIsHoveredDownload","_useState315","_useState316","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState317","_useState318","iframeKey","setIframeKey","_useState319","_useState320","setLoading","handleIframeLoad","printIframe","printWindow","print","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","onLoad","ChatMessageBox","_ref80","loadMoreMessagesLoading","noMoreMessagesData","_useState321","_useState322","isEyeHovered","setIsEyeHovered","flatListRef","_useState323","_useState324","hoveredImageIndex","setHoveredImageIndex","_useState325","_useState326","selectedImageIndex","setSelectedImageIndex","_useState327","_useState328","isPreviewVisible","setIsPreviewVisible","useLocation","handlePopState","handleImageMessageMouseLeave","_useState329","_useState330","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref81","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref82","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","getFileIcon","iconSize","lowerFileName","endsWith","_ref83","isLastMessage","textFontSize","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState331","_useState332","chatMessageBoxLoading","chatListSearchText","_useState333","_useState334","_useState335","_useState336","activeButton","setActiveButton","_useState337","_useState338","setActiveButtonValue","_useState339","_useState340","activeFilterButton","setActiveFilterButton","_useState341","_useState342","setUnreadButtonValue","_useState343","_useState344","readButtonValue","setReadButtonValue","_useState345","_useState346","_useState347","_useState348","unreadCount","setUnreadCount","_useState349","_useState350","setScreenWidth","updateWidth","fetchIpAndCountry","_ref84","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref85","_x15","slideAnim","easing","Easing","bezier","_ref86","_useState351","_useState352","horizontal","minWidth","prevState","transform","translateX","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","borderBottomRightRadius","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","borderTopLeftRadius","borderTopRightRadius","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","keyboardShouldPersistTaps","NamePopover","MobileViewDrawer","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","EUR","GBP","AUD","CAD","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","eurToJpy","gbpToJpy","audToJpy","jpyToCad","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","fetchPaidStatsData","yearMonth","days","String","fetchCurrentDate","calculateTotal","StatsChart","setYearMonth","period","setPeriod","currentTotal","setCurrentTotal","previousTotal","setPreviousTotal","currentMonthName","setCurrentMonthName","previousMonthName","setPreviousMonthName","currentData","previousDate","subMonths","parseISO","previousData","currentMonth","mb","mt","VictoryChart","theme","VictoryTheme","material","domainPadding","VictoryBar","fill","cornerRadius","labels","datum","labelComponent","VictoryLabel","dy","VictoryAxis","grid","stroke","dependentAxis","Logs","cameraContainer","translateY","cameraView","webcamRef","qrCode","setQrCode","isScanning","setIsScanning","intervalId","setInterval","video","videoWidth","videoHeight","getImageData","jsQR","clearInterval","fetchInvoiceData","smallWidth","smallHeight","smallWidthScaleFactor","smallHeightScaleFactor","Webcam","videoConstraints","facingMode","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","inOut","ease","onPressOut","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","messageTextInputHeightSlice","createSlice","initialState","reducers","action","payload","messageTextInputValueSlice","carImageUrlSlice","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","customInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}