{"version":3,"file":"static/js/main.a8fef7cb.js","mappings":"6BAAA,IAAIA,EAAM,CACT,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,MACzB,wBAAyB,OAI1B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kBC5BpB,IAAIH,EAAM,CACT,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,OAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kXCGpBY,EAA0BC,EAAAA,QAAWC,IAAI,UAA5BF,EAALG,MAAaH,EAANI,OACKH,EAAAA,QAAWC,IAAI,UAAUC,MAM9B,SAASE,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAC1DE,GADsBD,EAAA,GAAoBA,EAAA,IACVN,EAAAA,EAAAA,UAAS,KAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAwBC,EAAAA,UAAe,GAAMC,GAAAX,EAAAA,EAAAA,SAAAS,EAAA,GAAtCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAkCJ,EAAAA,UAAe,GAAMK,GAAAf,EAAAA,EAAAA,SAAAc,EAAA,GAAhDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAkCR,EAAAA,UAAe,GAAMS,GAAAnB,EAAAA,EAAAA,SAAAkB,EAAA,GACvDE,GADgBD,EAAA,GAAcA,EAAA,GACMT,EAAAA,SAAe,KAAGW,GAAArB,EAAAA,EAAAA,SAAAoB,EAAA,GAA/CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAwCd,EAAAA,SAAe,IAAGe,GAAAzB,EAAAA,EAAAA,SAAAwB,EAAA,GAAnDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAOC,EAAQ,OACrBC,IAAkChC,EAAAA,EAAAA,WAAS,GAAMiC,IAAA/B,EAAAA,EAAAA,SAAA8B,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAoCpC,EAAAA,EAAAA,WAAS,GAAMqC,IAAAnC,EAAAA,EAAAA,SAAAkC,GAAA,GAA5CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAG1BG,IAAWC,EAAAA,EAAAA,gBAEjBC,EAAAA,EAAAA,YAAU,WAUR,OAToBC,EAAAA,KAAKC,oBAAmB,SAAAC,GACtCA,GAEFL,GAAS,cAIb,GAGF,GAAG,IAGH,IAAMM,GAAiB,WACrB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAE,OAAOC,WAAW,SAAQC,UACtCJ,EAAAA,EAAAA,KAACK,EAAAA,QAAkB,CAACC,QAASnC,EAAWoC,QAAS,CAC/CC,QAAS,EACTC,MAAO,GACNC,QAAS,CACVF,QAAS,EACTC,MAAO,EACPE,WAAY,CACVC,SAAU,MAEZR,UAEAJ,EAAAA,EAAAA,KAACa,EAAAA,MAAK,CAACC,KAAK,MAAMC,OAAO,QAAOX,UAC9BY,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAACC,MAAO,EAAGC,WAAY,EAAGjB,EAAE,OAAME,SAAA,EACvCJ,EAAAA,EAAAA,KAACoB,EAAAA,QAAM,CAACD,WAAY,EAAGD,MAAO,EAAGf,WAAW,SAASkB,eAAe,gBAAejB,UACjFY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACD,WAAY,EAAGD,MAAO,EAAGf,WAAW,SAAQC,SAAA,EAClDJ,EAAAA,EAAAA,KAACa,EAAM,MAAAS,KAAI,KACXtB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAS,KAAKC,WAAW,SAASC,MAAO,CAC7CC,MAAO,gBACPvB,SACC3B,UAIPuB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC2B,GAAG,IAAIF,MAAO,CACjBG,MAAO,CACLF,MAAO,iBAETvB,SACCvB,YASb,EAEMiD,GAAe,eAAAC,GAAAC,EAAAA,EAAAA,UAAG,UAAOC,EAAYC,EAAWC,GACpD,IAAMC,GAAUC,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAYL,GAEpC,UACQM,EAAAA,EAAAA,WAAUH,GAAOI,EAAAA,EAAAA,SAAA,GACpBN,EAAYC,GAEjB,CAAE,MAAOM,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CACF,IAAC,gBAVoBE,EAAAC,EAAAC,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAafC,GAAe,WACnB5D,IAAa,GACbI,IAAc,GACdyD,YAAW,WAET7D,IAAa,GACbI,IAAc,EAChB,GAAG,KACHpB,GAAa,IACb8E,EAAAA,EAAAA,4BAA2BtD,EAAAA,KAAMxC,EAAM+F,OAAQzF,GAC5C0F,MAAK,SAACC,GAKLvB,GAJmB1E,EACD,OACDM,GAIjB+B,GAAS,cAGX,IACC6D,OAAM,SAACb,GACN,IAAMc,EAAYd,EAAMrG,KAClByC,EAAe4D,EAAMe,QAC3Bd,QAAQe,IAAIF,EAAW1E,GACvBO,IAAa,GACbI,IAAc,GACdpB,GAAa,GACK,wBAAdmF,GACFb,QAAQe,IAAI,mEACZ/E,EAAc,uBACdI,EAAgB,wEAChBkB,EAAAA,EAAAA,KAACD,GAAc,KACQ,wBAAdwD,GACTb,QAAQe,IAAI,yDACZ/E,EAAc,sBACdI,EAAgB,0DAChBkB,EAAAA,EAAAA,KAACD,GAAc,KACQ,0BAAdwD,GACTb,QAAQe,IAAI,yCACZ/E,EAAc,sBACdI,EAAgB,0CAChBkB,EAAAA,EAAAA,KAACD,GAAc,KAEM,uBAAdwD,GACPb,QAAQe,IAAI,kCACZ/E,EAAc,kBACdI,EAAgB,6CAChBkB,EAAAA,EAAAA,KAACD,GAAc,KAEM,uBAAdwD,IACPb,QAAQe,IAAI,kCACZ/E,EAAc,wBACdI,EAAgB,mDAChBkB,EAAAA,EAAAA,KAACD,GAAc,IAEnB,GACJ,GAMAJ,EAAAA,EAAAA,YAAU,WACJvC,EAAMsG,OAAS,GACjBtF,GAAa,EAEjB,GAAG,CAAChB,IAmBJ,OAVAuC,EAAAA,EAAAA,YAAU,WACJjC,EAASgG,OAAS,GACpBtF,GAAa,EAEjB,GAAG,CAACV,KAOFsC,EAAAA,EAAAA,KAAC2D,EAAAA,mBAAkB,CAAAvD,UAEjBY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAO2D,EAAE,OAAMzD,SAAA,EACtCJ,EAAAA,EAAAA,KAACD,GAAc,KACfC,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAACC,KAAM,EAAE3D,UACdY,EAAAA,EAAAA,MAAC8C,EAAAA,QAAM,CAACE,GAAG,IAAG5D,SAAA,EACZJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,KAAM2D,EAAG,CAAC,GAAI,IAAK,KAAKzD,UACzCJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CAACC,OAAQ,CACbC,IAAKpF,GACJqF,WAAW,UAAUC,IAAI,+BAA+BC,MAAO,CAAEP,KAAM,QAG5E/C,EAAAA,EAAAA,MAACuD,EAAAA,QAAK,CAACrD,MAAO,EAAGhB,EAAE,OAAOC,WAAW,SAAQC,SAAA,EAE3CJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACHC,MAAOxH,EAAOyH,gBAAiB7B,GAAc8B,aA9CvC,SAAAC,GAAI,OAAI1H,EAAS0H,EAAM,EA8C4CvD,SAAS,KAAKwD,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,WAAaC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,UAAY2D,YAAY,QAAQC,qBAAqB,QAAQ5D,MAAM,WAChP3B,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACHC,MAAOlH,EAAUmH,gBAAiB7B,GAAc8B,aApC5B,SAAAC,GAAI,OAAIpH,EAAYoH,EAAM,EAoC4CvD,SAAS,KAAKgE,KAAMzH,EAAO,OAAS,WAAY0H,mBAAmBzF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAM3H,GAASD,EAAK,EAACqC,UACvMJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAMpH,EAAO,aAAe,mBAAsBqH,KAAM,EAAGQ,GAAG,IAAIjE,MAAM,YACrF2D,YAAY,WAAWC,qBAAqB,QAAQ5D,MAAM,WACxE3B,EAAAA,EAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAAQjB,UAMvCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,WAAcmC,SAAU,CAAEnC,QAAS,WAAcoC,OAAQ,CAAEpC,QAAS,WAAcA,QAAQ,UAAUwB,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CAC9KuE,KAAM,IACNC,GAAI,IACJC,GAAI,KACHgB,QAAS3C,GAAcmD,SAAU5G,GAAWa,SAAEjB,IAAYa,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,MAASpF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,0BAerJ,CAGeiG,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZqG,kBAAmB,IAErBC,MAAO,CACL5J,MAAO,OACPC,OAAQ,GACRmJ,YAAa,EACbC,YAAa,OACbQ,aAAc,GACdF,kBAAmB,GACnBG,aAAc,IAEhBC,YAAa,CACXC,gBAAiB,UACjBH,aAAc,GACdI,gBAAiB,GACjBN,kBAAmB,IAErBO,gBAAiB,CACfpF,MAAO,OACPF,WAAY,OACZD,SAAU,GACVwF,UAAW,Y,oCA1Bf,I,slBCpQA,IAAMjI,EAAOC,EAAQ,OAEfiI,EAAU,WAAH,OAGXjH,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAO2D,EAAE,OAAMzD,UAEtCJ,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAACC,KAAM,EAAE3D,UACdY,EAAAA,EAAAA,MAAC8C,EAAAA,QAAM,CAACE,GAAG,IAAG5D,SAAA,EACZJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,KAAM2D,EAAG,CAAC,GAAI,IAAK,KAAKzD,UACzCJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CAACC,OAAQ,CACbC,IAAKpF,GACJqF,WAAW,UAAUC,IAAI,+BAA+BC,MAAO,CAAEP,KAAM,QAI5E/D,EAAAA,EAAAA,KAACuE,EAAAA,QAAK,CAACrD,MAAO,EAAGhB,EAAE,OAAOC,WAAW,SAAQC,UAC3CJ,EAAAA,EAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAAQjB,UACvCJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAK,iBAUhC,EAcOiB,EAAAA,QAAWC,OAAO,CAC/BY,iBAAkB,CAChBnD,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,YAIhB,QAnBmB,SAACgH,GAElB,IAAMC,GAAgBC,EAAAA,EAAAA,MAAKF,EAAMG,YAEjC,OACEtH,EAAAA,EAAAA,KAACuH,EAAAA,SAAQ,CAACC,UAAUxH,EAAAA,EAAAA,KAACiH,EAAO,IAAI7G,UAC9BJ,EAAAA,EAAAA,KAACoH,EAAaK,EAAA,GAAKN,KAGzB,E,2FC8BAzK,IAHuBgL,EAAAA,EAAAA,WAGG/K,EAAAA,QAAWC,IAAI,WAGnC+K,GAHOjL,EAALG,MAAaH,EAANI,OACMH,EAAAA,QAAWC,IAAI,UAAUE,QAE5B8K,EAAAA,EAAAA,iBACZC,EAAwB,WAC5B,IAAM/H,EAAOF,EAAAA,KAAKkI,YAClB,OAAIhI,EACYA,EAAK1C,OAGnBsF,QAAQe,IAAI,sCACL,KAEX,EAKe,SAASsE,EAAGhG,GAAaA,EAAViG,WAAe,IAC3ChL,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAnCiL,GAAF/K,EAAA,GAAkBA,EAAA,IACtCI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAxBD,GAAFE,EAAA,GAAUA,EAAA,IACtBC,GAAwBP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAvB0K,GAAFzK,EAAA,GAASA,EAAA,IAGd0K,IAFmBC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,KACvDC,EAAAA,EAAAA,YACEC,EAAAA,EAAAA,gBAEX/I,GAAWC,EAAAA,EAAAA,gBAuCjBC,EAAAA,EAAAA,YAAU,WAERsI,GAAiB,EACnB,GAAG,IAGH,IAAMQ,EAAuB,SAACC,GACxBA,EAASC,SACED,EAASE,OACAC,SAGpBC,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,EAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,KAGJqG,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,EAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,GAEN,GAgBA9C,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,EAfuB,WAAO,IAADC,EAC7BC,EAAyB,OAAnBD,EAAGpJ,EAAAA,KAAKkI,kBAAW,EAAhBkB,EAAkB5L,MACjC,GAAI6L,EAAQ,CACV,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,EAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,EAE1C,CAEE,OAAO,WACLhJ,EAAS,SACX,CAEJ,CAGsB0J,GAEpB,OAAO,WACLJ,GACF,CACF,GAAG,KAQHpJ,EAAAA,EAAAA,YAAU,WACR,IAAMyJ,EAAmBvB,IACrBuB,IACFC,EAAqBD,GACrB/L,EAAS+L,GAEb,GAAG,IAGH,IAAMC,EAAoB,eAAAC,GAAAtH,EAAAA,EAAAA,UAAG,UAAO5E,GAClC,IACE,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,EAAW,WAAYvK,IAEjD8L,EAAAA,EAAAA,YAAWK,GAAe,SAACC,GACzB,GAAIA,EAAYb,SAAU,CACxB,IAAMC,EAAOY,EAAYZ,OACnBa,EAAYb,EAAKpD,KACjBtD,EAAY0G,EAAKzD,KAEvB,IAAoB,IAAhByD,EAAKC,OAAiB,CACxBX,EAAQuB,GACRtB,GAASuB,EAAAA,EAAAA,qBAAoBD,IAE7BtB,GAASwB,EAAAA,EAAAA,cAAazH,IA1BvB0H,KAAKC,MAAmB,IAAbD,KAAKE,SAFN,IAkCX,MAEEhB,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,EAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,GAEN,CAGF,GACF,CAAE,MAAOA,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CAEF,IAAC,gBAvCyBE,GAAA,OAAA2G,EAAAxG,MAAA,KAAAC,UAAA,KA8C1B,OAiFE/C,EAAAA,EAAAA,KAAC2D,EAAAA,mBAAkB,CAAAvD,UACjBY,EAAAA,EAAAA,MAAC+I,EAAAA,OAAM,CAAA3J,SAAA,EACLJ,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,IAAIC,SAASlK,EAAAA,EAAAA,KAACmK,EAAAA,SAAQ,CAACC,GAAG,gBAAgBC,SAAO,OAC7DrK,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,gBAAgBC,SAASlK,EAAAA,EAAAA,KAACsK,EAAAA,QAAY,OAClDtK,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,wBAAwBC,SAASlK,EAAAA,EAAAA,KAACsK,EAAAA,QAAY,OAC1DtK,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,UAAUC,SAASlK,EAAAA,EAAAA,MAvOZ,WAAH,OACpBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAAsC,GAAI,GAsOpB,OAChDtH,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,kBAAkBC,SAASlK,EAAAA,EAAAA,MA5NjB,WAAH,OACvBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAAyC,GAAI,GA2NZ,OAC3DtH,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,OAAOC,SAASlK,EAAAA,EAAAA,MA7OZ,WAAH,OACjBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAAmC,GAAI,GA4OvB,OAC1CtH,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,eAAeC,SAASlK,EAAAA,EAAAA,MAtOb,WAAH,OACxBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAA0C,GAAI,GAqOf,OACzDtH,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,eAAeC,SAASlK,EAAAA,EAAAA,MAnOb,WAAH,OACxBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAA0C,GAAI,GAkOf,OACzDtH,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,oBAAoBC,SAASlK,EAAAA,EAAAA,MA5NnB,WAAH,OACvBA,EAAAA,EAAAA,KAACuK,EAAU,CAACjD,WAAY,kBAAM,uCAAyC,GAAI,GA2NV,UAoCrE,CCxVA,IAAA5K,EAA0BC,EAAAA,QAAWC,IAAI,UAEnC+K,GAFOjL,EAALG,MAAaH,EAANI,OACKH,EAAAA,QAAWC,IAAI,UAAUC,OAC3B+K,EAAAA,EAAAA,iBAEZC,EAAwB,WAC5B,IAAM/H,EAAOF,EAAAA,KAAKkI,YAClB,OAAIhI,EACYA,EAAK1C,OAGnBsF,QAAQe,IAAI,sCACL,KAEX,EAOe,SAAS+G,KACLhC,EAAAA,EAAAA,gBACEJ,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoC,UAAU,KACxCrC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,KAC/BtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,IAHtE,IAKAtL,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxBK,GAAFH,EAAA,GAAUA,EAAA,IACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GACpCM,GADWL,EAAA,GAASA,EAAA,GAC0BM,EAAAA,SAAe,KAAGC,GAAAX,EAAAA,EAAAA,SAAAS,EAAA,GAChEJ,GADsBM,EAAA,GAAoBA,EAAA,IACVb,EAAAA,EAAAA,UAAS,KAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAC5CS,GADeR,EAAA,GAAaA,EAAA,GACJI,EAAAA,UAAe,IAAMK,GAAAf,EAAAA,EAAAA,SAAAc,EAAA,GAC7CI,GADWH,EAAA,GAASA,EAAA,GACcL,EAAAA,UAAe,IAAMS,GAAAnB,EAAAA,EAAAA,SAAAkB,EAAA,GACvDE,GADgBD,EAAA,GAAcA,EAAA,GACMT,EAAAA,SAAe,KAAGW,GAAArB,EAAAA,EAAAA,SAAAoB,EAAA,GACtDI,GADiBH,EAAA,GAAeA,EAAA,GACQX,EAAAA,SAAe,KAAGe,GAAAzB,EAAAA,EAAAA,SAAAwB,EAAA,GACpDI,GADaH,EAAA,GAAiBA,EAAA,GACvBI,EAAQ,QAGfS,GAAWC,EAAAA,EAAAA,eAgBX+I,EAAuB,SAACC,GACxBA,EAASC,SACED,EAASE,OACAC,SAGpBC,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,EAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,KAGJqG,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,EAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,GAEN,GAWA9C,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,EAVuB,WAAO,IAADC,EAC7BC,EAAyB,OAAnBD,EAAGpJ,EAAAA,KAAKkI,kBAAW,EAAhBkB,EAAkB5L,MACjC,GAAI6L,EAAQ,CACV,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,EAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,EAE1C,CACF,CAGsBU,GAEpB,OAAO,WACLJ,GACF,CACF,GAAG,KAQHpJ,EAAAA,EAAAA,YAAU,WACR,IAAMyJ,EAAmBvB,IACrBuB,IACFC,EAAqBD,GACrB/L,EAAS+L,GAEb,GAAG,IAGH,IAAMC,EAAoB,eAAAtH,GAAAC,EAAAA,EAAAA,UAAG,UAAO5E,GAClC,KACwBiF,EAAAA,EAAAA,KAAIsF,EAAW,WAAYvK,GAAjD,IAGMuN,EAjBDf,KAAKC,MAAmB,IAAbD,KAAKE,SAFN,KAoBf7G,YAAW,WAETxD,EAAS,OACX,GAAGkL,EAoCL,CAAE,MAAOlI,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CAEF,IAAC,gBAjDyBE,GAAA,OAAAZ,EAAAe,MAAA,KAAAC,UAAA,KA4F1B,OAEE/C,EAAAA,EAAAA,KAAC2D,EAAAA,mBAAkB,CAAAvD,UAEjBJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAO2D,EAAE,OAAMzD,UAEtCJ,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAACC,KAAM,EAAE3D,UACdY,EAAAA,EAAAA,MAAC8C,EAAAA,QAAM,CAACE,GAAG,IAAG5D,SAAA,EACZJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,KAAM2D,EAAG,CAAC,GAAI,IAAK,KAAKzD,UACzCJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CAACC,OAAQ,CACbC,IAAKpF,GACJqF,WAAW,UAAUC,IAAI,+BAA+BC,MAAO,CAAEP,KAAM,QAI5E/D,EAAAA,EAAAA,KAACuE,EAAAA,QAAK,CAACrD,MAAO,EAAGhB,EAAE,OAAOC,WAAW,SAAQC,UAC3CJ,EAAAA,EAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAAQjB,UACvCJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAK,mBAa5C,CAGeiB,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZqG,kBAAmB,IAErBC,MAAO,CACL5J,MAAO,OACPC,OAAQ,GACRmJ,YAAa,EACbC,YAAa,OACbQ,aAAc,GACdF,kBAAmB,GACnBG,aAAc,IAEhBC,YAAa,CACXC,gBAAiB,UACjBH,aAAc,GACdI,gBAAiB,GACjBN,kBAAmB,IAErBO,gBAAiB,CACfpF,MAAO,OACPF,WAAY,OACZD,SAAU,GACVwF,UAAW,YA1Bf,ICvPAtK,EAA0BC,EAAAA,QAAWC,IAAI,UAA5BF,EAALG,MAAaH,EAANI,OACKH,EAAAA,QAAWC,IAAI,UAAUC,MAiL9BwJ,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZqG,kBAAmB,IAErBC,MAAO,CACL5J,MAAO,OACPC,OAAQ,GACRmJ,YAAa,EACbC,YAAa,OACbQ,aAAc,GACdF,kBAAmB,GACnBG,aAAc,IAEhBC,YAAa,CACXC,gBAAiB,UACjBH,aAAc,GACdI,gBAAiB,GACjBN,kBAAmB,IAErBO,gBAAiB,CACfpF,MAAO,OACPF,WAAY,OACZD,SAAU,GACVwF,UAAW,YA1Bf,IClLAtK,EAA0BC,EAAAA,QAAWC,IAAI,UAA5BF,EAALG,MAAaH,EAANI,OACKH,EAAAA,QAAWC,IAAI,UAAUC,MAyH9BwJ,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZqG,kBAAmB,IAErBC,MAAO,CACL5J,MAAO,OACPC,OAAQ,GACRmJ,YAAa,EACbC,YAAa,OACbQ,aAAc,GACdF,kBAAmB,GACnBG,aAAc,IAEhBC,YAAa,CACXC,gBAAiB,UACjBH,aAAc,GACdI,gBAAiB,GACjBN,kBAAmB,IAErBO,gBAAiB,CACfpF,MAAO,OACPF,WAAY,OACZD,SAAU,GACVwF,UAAW,YA1Bf,I,WC3GAtK,IAFuBgL,EAAAA,EAAAA,WAEG/K,EAAAA,QAAWC,IAAI,WAA5BF,EAALG,MAAaH,EAANI,OACKH,EAAAA,QAAWC,IAAI,UAAUC,MAI9B,SAAS+N,IACtB,IAAA5N,GAAwCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/C6N,EAAY3N,EAAA,GAAE4N,EAAe5N,EAAA,GACpCI,GAAwBL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAzByN,GAAFxN,EAAA,GAASA,EAAA,IAEpB,SAASsC,EAAmBC,GAC1BiL,EAAQjL,GACJ+K,GAAcC,GAAgB,EACpC,CAUA,IAPAnL,EAAAA,EAAAA,YAAU,WAGR,OAFmBC,EAAAA,KAAKC,mBAAmBA,EAG7C,GAAG,IAGCgL,EACF,OAAO,KA8BT,OACE7K,EAAAA,EAAAA,KAACgL,EAAAA,SAAQ,CAACC,MAAOA,EAAAA,QAAM7K,UACrBJ,EAAAA,EAAAA,KAACkL,EAAAA,WAAM,CAAA9K,UACLY,EAAAA,EAAAA,MAAC+I,EAAAA,OAAM,CAAA3J,SAAA,EACLJ,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,IAAIC,SAASlK,EAAAA,EAAAA,KAACmK,EAAAA,SAAQ,CAACC,GAAG,SAASC,SAAO,OACtDrK,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,SAASC,SAASlK,EAAAA,EAAAA,KAACjD,EAAS,OACxCiD,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,WAAWC,SAASlK,EAAAA,EAAAA,KAACjD,EAAS,OAC1CiD,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,cAAcC,SAASlK,EAAAA,EAAAA,KAACwK,EAAU,OAE9CxK,EAAAA,EAAAA,KAACgK,EAAAA,MAAK,CAACC,KAAK,SAASC,SAASlK,EAAAA,EAAAA,KAAC+H,EAAG,YA4B5C,C,qnCC7DA,IAAIoD,EAAiB,eAGrBzO,EAA0BC,EAAAA,QAAWC,IAAI,UAGnC+K,GAHOjL,EAALG,MAAaH,EAANI,OACMH,EAAAA,QAAWC,IAAI,UAAUE,QAE5B8K,EAAAA,EAAAA,iBACZC,EAAwB,WAC1B,IAAM/H,EAAOF,EAAAA,KAAKkI,YAClB,OAAIhI,EACcA,EAAK1C,OAGnBsF,QAAQe,IAAI,sCACL,KAEf,EA+Be,SAAS2H,IAAe,IAADC,EAC5BlD,GAAWK,EAAAA,EAAAA,eACXkC,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IACxD1N,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxBK,GAAFH,EAAA,GAAUA,EAAA,IACtBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA7BgO,GAAF/N,EAAA,GAAeA,EAAA,IAChCC,GAAkCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAC9CyB,IADgBxB,EAAA,GAAcA,EAAA,IACNR,EAAAA,EAAAA,UAAS,KAAGiC,IAAA/B,EAAAA,EAAAA,SAAA8B,GAAA,GAAvBiJ,IAAFhJ,GAAA,GAASA,GAAA,IACdH,GAAOC,EAAQ,OACfuM,GAAQvM,EAAQ,OAEtBK,IADoB1C,EAAAA,QAAWC,IAAI,UAAUC,OACLI,EAAAA,EAAAA,WAAS,IAAMqC,IAAAnC,EAAAA,EAAAA,SAAAkC,GAAA,GACvDmM,IADmBlM,GAAA,GAAiBA,GAAA,IACIrC,EAAAA,EAAAA,WAAS,IAAMwO,IAAAtO,EAAAA,EAAAA,SAAAqO,GAAA,GACvDE,IADmBD,GAAA,GAAiBA,GAAA,IACZxO,EAAAA,EAAAA,UAAS,KAAG0O,IAAAxO,EAAAA,EAAAA,SAAAuO,GAAA,GAA7BvG,GAAIwG,GAAA,GAAEC,GAAOD,GAAA,GACpB/N,GAAwBC,EAAAA,UAAe,GAAMC,IAAAX,EAAAA,EAAAA,SAAAS,GAAA,GAAtCG,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,GAA0BJ,EAAAA,UAAe,GAAMK,IAAAf,EAAAA,EAAAA,SAAAc,GAAA,GAC/C4N,IADY3N,GAAA,GAAUA,GAAA,IACcjB,EAAAA,EAAAA,WAAS,IAAM6O,IAAA3O,EAAAA,EAAAA,SAAA0O,GAAA,GAA5CtM,GAAUuM,GAAA,GAAEtM,GAAasM,GAAA,GAChCC,IAAkC9O,EAAAA,EAAAA,WAAS,GAAM+O,IAAA7O,EAAAA,EAAAA,SAAA4O,GAAA,GAA/B3M,IAAF4M,GAAA,GAAcA,GAAA,IAExBvM,IAAWC,EAAAA,EAAAA,eAEjBuM,IAA4ChP,EAAAA,EAAAA,WAAS,GAAMiP,IAAA/O,EAAAA,EAAAA,SAAA8O,GAAA,GAApDE,GAAcD,GAAA,GACrBE,IADwCF,GAAA,IACgBjP,EAAAA,EAAAA,WAAS,IAAMoP,IAAAlP,EAAAA,EAAAA,SAAAiP,GAAA,GAAhEE,GAAoBD,GAAA,GAC3BE,IADoDF,GAAA,IACMpP,EAAAA,EAAAA,WAAS,IAAKuP,IAAArP,EAAAA,EAAAA,SAAAoP,GAAA,GAAjEE,GAAqBD,GAAA,GAC5BE,IADsDF,GAAA,IAChBvP,EAAAA,EAAAA,WAAS,IAAM0P,IAAAxP,EAAAA,EAAAA,SAAAuP,GAAA,GACrDE,IADkBD,GAAA,GAAgBA,GAAA,IACI1P,EAAAA,EAAAA,WAAS,IAAM4P,IAAA1P,EAAAA,EAAAA,SAAAyP,GAAA,GAErDE,IAFkBD,GAAA,GAAgBA,GAAA,IAEY5P,EAAAA,EAAAA,WAAS,IAAM8P,IAAA5P,EAAAA,EAAAA,SAAA2P,GAAA,GAArCE,IAAFD,GAAA,GAAoBA,GAAA,IAC1CE,IAAgDhQ,EAAAA,EAAAA,WAAS,GAAMiQ,IAAA/P,EAAAA,EAAAA,SAAA8P,GAAA,GAAtCE,IAAFD,GAAA,GAAqBA,GAAA,IAC5CE,IAA0CnQ,EAAAA,EAAAA,WAAS,GAAMoQ,IAAAlQ,EAAAA,EAAAA,SAAAiQ,GAAA,GAAnCE,IAAFD,GAAA,GAAkBA,GAAA,IACtCE,IAAwCtQ,EAAAA,EAAAA,WAAS,GAAMuQ,IAAArQ,EAAAA,EAAAA,SAAAoQ,GAAA,GAAlCE,IAAFD,GAAA,GAAiBA,GAAA,IACpCE,IAAwCzQ,EAAAA,EAAAA,WAAS,GAAM0Q,IAAAxQ,EAAAA,EAAAA,SAAAuQ,GAAA,GAAlCE,IAAFD,GAAA,GAAiBA,GAAA,IAEpCE,IAAkC5Q,EAAAA,EAAAA,UAAS,IAAG6Q,IAAA3Q,EAAAA,EAAAA,SAAA0Q,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAgDhR,EAAAA,EAAAA,WAAS,GAAMiR,IAAA/Q,EAAAA,EAAAA,SAAA8Q,GAAA,GAC/DE,IADuBD,GAAA,GAAqBA,GAAA,IACRjR,EAAAA,EAAAA,UAAS,KAAGmR,IAAAjR,EAAAA,EAAAA,SAAAgR,GAAA,GAAzCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAA0CtR,EAAAA,EAAAA,UAAS,IAAGuR,IAAArR,EAAAA,EAAAA,SAAAoR,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAwD1R,EAAAA,EAAAA,UAAS,IAAG2R,IAAAzR,EAAAA,EAAAA,SAAAwR,GAAA,GAAvCE,IAAFD,GAAA,GAAyBA,GAAA,IACpDE,IAA0C7R,EAAAA,EAAAA,UAAS,IAAG8R,IAAA5R,EAAAA,EAAAA,SAAA2R,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAwDjS,EAAAA,EAAAA,UAAS,IAAGkS,IAAAhS,EAAAA,EAAAA,SAAA+R,GAAA,GAAvCE,IAAFD,GAAA,GAAyBA,GAAA,IACpD9Q,GAAgDR,EAAAA,UAAe,GAAMS,IAAAnB,EAAAA,EAAAA,SAAAkB,GAAA,GAA9DgR,GAAgB/Q,GAAA,GAAEgR,GAAmBhR,GAAA,GAC5CC,GAAgDV,EAAAA,UAAe,GAAMW,IAAArB,EAAAA,EAAAA,SAAAoB,GAAA,GAA9DgR,GAAgB/Q,GAAA,GAAEgR,GAAmBhR,GAAA,GAC5CG,GAA8Cd,EAAAA,UAAe,GAAMe,IAAAzB,EAAAA,EAAAA,SAAAwB,GAAA,GAA5D8Q,GAAe7Q,GAAA,GAAE8Q,GAAkB9Q,GAAA,GAC1C+Q,GAA8C9R,EAAAA,UAAe,GAAM+R,IAAAzS,EAAAA,EAAAA,SAAAwS,GAAA,GAA5DE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,GAAwDlS,EAAAA,UAAe,GAAMmS,IAAA7S,EAAAA,EAAAA,SAAA4S,GAAA,GAG7EE,IAH2BD,GAAA,GAAyBA,GAAA,IAClCE,EAAAA,EAAAA,QAAO,KAEejT,EAAAA,EAAAA,UAAS,OAAKkT,IAAAhT,EAAAA,EAAAA,SAAA8S,GAAA,GAA/CG,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAwCrT,EAAAA,EAAAA,WAAS,GAAMsT,IAAApT,EAAAA,EAAAA,SAAAmT,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAgDzT,EAAAA,EAAAA,WAAS,GAAK0T,IAAAxT,EAAAA,EAAAA,SAAAuT,GAAA,GAC9DE,IADuBD,GAAA,GAAqBA,GAAA,IACpB1T,EAAAA,EAAAA,UAAS,KAAG4T,IAAA1T,EAAAA,EAAAA,SAAAyT,GAAA,GAAvBE,IAAFD,GAAA,GAASA,GAAA,IACpBE,IAAwC9T,EAAAA,EAAAA,UAAS,IAAG+T,IAAA7T,EAAAA,EAAAA,SAAA4T,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAsDlU,EAAAA,EAAAA,UAAS,IAAGmU,IAAAjU,EAAAA,EAAAA,SAAAgU,GAAA,GAA3DE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAClDG,IAAgDtU,EAAAA,EAAAA,UAAS,IAAGuU,IAAArU,EAAAA,EAAAA,SAAAoU,GAAA,GAArDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAgD1U,EAAAA,EAAAA,UAAS,IAAG2U,IAAAzU,EAAAA,EAAAA,SAAAwU,GAAA,GAArDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAkC9U,EAAAA,EAAAA,UAAS,IAAG+U,IAAA7U,EAAAA,EAAAA,SAAA4U,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAwClV,EAAAA,EAAAA,UAAS,IAAGmV,IAAAjV,EAAAA,EAAAA,SAAAgV,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAwCtV,EAAAA,EAAAA,WAAS,GAAMuV,IAAArV,EAAAA,EAAAA,SAAAoV,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA0C1V,EAAAA,EAAAA,WAAS,GAAM2V,IAAAzV,EAAAA,EAAAA,SAAAwV,GAAA,GAAlDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAChCG,IAAgB7C,EAAAA,EAAAA,QAAO,MACvB8C,IAAe9C,EAAAA,EAAAA,QAAO,MACtB+C,IAAe/C,EAAAA,EAAAA,QAAO,MAE5BgD,IAAwBjW,EAAAA,EAAAA,UAAS,GAAEkW,IAAAhW,EAAAA,EAAAA,SAAA+V,GAAA,GAA5BE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACdG,GAAiB,CAAC,GAAI,GAAI,IAChCC,IAAwCtW,EAAAA,EAAAA,UAASqW,GAAe,IAAGE,IAAArW,EAAAA,EAAAA,SAAAoW,GAAA,GAA5DE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAwB1W,EAAAA,EAAAA,UAAS,IAAG2W,IAAAzW,EAAAA,EAAAA,SAAAwW,GAAA,GAA7B/K,GAAIgL,GAAA,GAAEC,GAAOD,GAAA,GACpBE,IAAsC7W,EAAAA,EAAAA,UAAS,IAAG8W,IAAA5W,EAAAA,EAAAA,SAAA2W,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAwCjX,EAAAA,EAAAA,UAAS,IAAGkX,IAAAhX,EAAAA,EAAAA,SAAA+W,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAEpCG,IAAgDrX,EAAAA,EAAAA,WAAS,GAAMsX,IAAApX,EAAAA,EAAAA,SAAAmX,GAAA,GAE/DE,IAFuBD,GAAA,GAAqBA,GAAA,IAEEtX,EAAAA,EAAAA,WAAS,IAAMwX,IAAAtX,EAAAA,EAAAA,SAAAqX,GAAA,GAEvDE,IAFgBD,GAAA,GAAoBA,GAAA,IAE7BvE,EAAAA,EAAAA,QAAO,OACdyE,IAAOzE,EAAAA,EAAAA,QAAO,MACd0E,IAAO1E,EAAAA,EAAAA,QAAO,MACd2E,IAAO3E,EAAAA,EAAAA,QAAO,MAGd4E,KAFiB5E,EAAAA,EAAAA,QAAO,OAEVA,EAAAA,EAAAA,QAAO,OACrB6E,GAAsC,OAAtB1J,EAAGyJ,GAAYE,cAAO,EAAnB3J,EAAqBzG,MAE9CqQ,IAAgChY,EAAAA,EAAAA,UAAS,IAAGiY,IAAA/X,EAAAA,EAAAA,SAAA8X,GAAA,GAArCE,GAAQD,GAAA,GACfE,IAD4BF,GAAA,IACUjY,EAAAA,EAAAA,UAAS,OAAKoY,IAAAlY,EAAAA,EAAAA,SAAAiY,GAAA,GAA7CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAwCvY,EAAAA,EAAAA,UAAS,MAAKwY,IAAAtY,EAAAA,EAAAA,SAAAqY,GAAA,GAA/CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAoC3Y,EAAAA,EAAAA,UAAS,IAAG4Y,IAAA1Y,EAAAA,EAAAA,SAAAyY,GAAA,GAAzCE,GAAUD,GAAA,GACjBE,IADgCF,GAAA,IACM5Y,EAAAA,EAAAA,UAAS,IAAE+Y,IAAA7Y,EAAAA,EAAAA,SAAA4Y,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,IAElCrW,EAAAA,EAAAA,YAAU,WACN,IAAMwW,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAW/T,EAAAA,GAAI,aACfgU,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,KAEJpM,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACK,GAC/B,IAAMC,EAAmB,GACzBD,EAAUE,SAAQ,SAACC,GACfF,EAAiBG,KAAInP,EAAC,CAClB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IACAT,GAAS0O,EAAAA,EAAAA,oBAAmBJ,IAC5BlB,GAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IACtDiS,GAAgBa,EAAUM,KAAK,GACnC,IACA,OAAO,kBAAM/N,GAAc,CAE/B,GAAG,IAEH,IAAMgO,GAAa,eAAAhV,GAAAC,EAAAA,EAAAA,UAAG,YAElB,GAAmB,KAAf8T,GAAmB,CAGnB,IAAMK,GAAIC,EAAAA,EAAAA,QACNY,EAAAA,EAAAA,iBAAgBC,EAAAA,wBAAyB,aACzCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW5B,KACXiB,EAAAA,EAAAA,OAAMpB,KAGJqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAGpC,KAEK,CACD,IAAMlB,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,aACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW5B,KACXiB,EAAAA,EAAAA,OAAMpB,KAGJqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,CAEJ,IAAC,kBAvCkB,OAAAtV,EAAAe,MAAA,KAAAC,UAAA,KA0CbyU,GAAiB,eAAAlO,GAAAtH,EAAAA,EAAAA,UAAG,YACtB,GAAmB,KAAf8T,GAAmB,CAGnB,IAAMK,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBmB,EAAAA,EAAAA,WAAU/B,KACVgC,EAAAA,EAAAA,aAAYvC,KAIVqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAEpC,KAEK,CAED,IAAMlB,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBmB,EAAAA,EAAAA,WAAU/B,KACVgC,EAAAA,EAAAA,aAAYvC,KAGVqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAEpC,CAGJ,IAAC,kBAnCsB,OAAA/N,EAAAxG,MAAA,KAAAC,UAAA,KAuCjB4U,GAAiB,SAACnB,GAGpB,IAAMoB,EAA0B,GAEhCpB,EAAUE,SAAQ,SAACC,GACfiB,EAAwBhB,KAAInP,EAAC,CACzB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IAEAT,GAAS0O,EAAAA,EAAAA,oBAAmBe,IAEf,MAATpB,GAAAA,EAAWM,KAAK,IAChBnB,GAAgBa,EAAUM,KAAK,IAEtB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IACxC6R,GAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,GAO9D,EAEM0T,GAAW,eAAAS,GAAA7V,EAAAA,EAAAA,UAAG,UAAOwU,EAAWsB,GAGlC,GAAKtB,EAAUuB,MA8BX,GAAkB,IAAdjC,GAAkB,CAClBI,GAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,KAEJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,EAEnB,KACK,CAED9B,GAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,aACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,KAEJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,EAEnB,KAvDkB,CAClB,IAAMJ,EAA0B,GAChCpB,EAAUE,SAAQ,SAACC,GACfiB,EAAwBhB,KAAInP,EAAC,CACzB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IAIa,MAAT4N,GAAAA,EAAWM,KAAK,IAChBnB,GAAgBa,EAAUM,KAAK,IAEtB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IACxC6R,GAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IAGvC,QAAfoU,GACA5B,GAAeD,GAAc,GAEd,QAAf6B,GACA5B,GAAeD,GAAc,GAGjC9N,GAAS0O,EAAAA,EAAAA,oBAAmBe,GAChC,CAmCJ,IAAC,gBAhEgBjV,EAAAC,GAAA,OAAAiV,EAAA/U,MAAA,KAAAC,UAAA,MAmEG,eAAAkV,GAAAjW,EAAAA,EAAAA,UAAG,YAEnBmG,GAASkP,EAAAA,EAAAA,yBAAuB,UAE1BN,IAKV,GAToB,KAWI,eAAAmB,GAAAlW,EAAAA,EAAAA,UAAG,YAEvBmG,GAASkP,EAAAA,EAAAA,yBAAuB,UAE1BG,IAGV,GAPwB,KAUxB7X,EAAAA,EAAAA,YAAU,WAENwY,IAEJ,GAAG,CAACrC,KAEJ,IAAMqC,GAAU,eAAAC,GAAApW,EAAAA,EAAAA,UAAG,YAIf,GAFAmG,GAASkP,EAAAA,EAAAA,yBAAuB,IAEb,KAAfvB,GAAmB,CAEnBI,GAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,aACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,KAGJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,GACf7P,GAASkP,EAAAA,EAAAA,yBAAuB,GAIpC,KAEK,CAEDnB,GAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,KAGJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,GACf7P,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,CACJ,IAAC,kBAnCe,OAAAe,EAAAtV,MAAA,KAAAC,UAAA,KAuDVsV,IAA4BC,EAAAA,EAAAA,cAAY,WAC1C,IAAMvT,EAAO,QAEbmM,GAAgBnM,GAChBuM,GAAuB,SACvBI,GAAoB3M,EACxB,GAAG,IAEGwT,IAA+BD,EAAAA,EAAAA,cAAY,WAC7C,IAAMvT,EAAO,WAEbuM,GAAuB,mBAEvBJ,GAAgBnM,GAChB2M,GAAoB3M,EAExB,GAAG,IAEGyT,IAA2BF,EAAAA,EAAAA,cAAY,WACzC,IAAMvT,EAAO,QAEbmM,GAAgBnM,GAEhBuM,GAAuB,SACvBI,GAAoB3M,EACxB,GAAG,IAEG0T,IAA2BH,EAAAA,EAAAA,cAAY,WACzC,IAAMvT,EAAO,UAGbmM,GAAgBnM,GAChBuM,GAAuB,WACvBI,GAAoB3M,EACxB,GAAG,IAEG2T,IAA8BJ,EAAAA,EAAAA,cAAY,WAC5C,IAAMvT,EAAO,aAEb2M,GAAoB3M,GACpBmM,GAAgBnM,GAChBuM,GAAuB,cAC3B,GAAG,KAEH3R,EAAAA,EAAAA,YAAU,WAIV,GAAG,CAACsR,GAAcI,MAIlB1R,EAAAA,EAAAA,YAAU,WACN,IAAMgZ,EAAS,eAAAC,GAAA5W,EAAAA,EAAAA,UAAG,YACd,IACI,IAAMmU,GAAIC,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAW/T,EAAAA,GAAI,aAAagU,EAAAA,EAAAA,SAAQ,iBAAkB,SAEhEQ,SADsBK,EAAAA,EAAAA,SAAQhB,IACTW,KAAKnb,KAAI,SAAC0G,GAAG,OAAAoF,EAAA,CAAQ3L,GAAIuG,EAAIvG,IAAOuG,EAAIuG,OAAM,IACzEiL,GAAQiD,GACRzC,GAAgByC,EACpB,CAAE,MAAOrU,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,kBAVc,OAAAmW,EAAA9V,MAAA,KAAAC,UAAA,KAYTgG,GAAcG,EAAAA,EAAAA,aAAWkN,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAW/T,EAAAA,GAAI,aAAagU,EAAAA,EAAAA,SAAQ,iBAAkB,UAAU,SAAC5N,GAClG,IAAMmQ,EAAcnQ,EAASoO,KAAKnb,KAAI,SAAC0G,GAAG,OAAKA,EAAIuG,MAAM,IACzDiL,GAAQgF,GACRxE,GAAgBwE,EACpB,IAIA,OAFAF,IAEO,WACH5P,GACJ,CACJ,GAAG,KAiBHpJ,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACwM,GAAgBG,GAAsBG,MAa1C9M,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACqP,MAIJrP,EAAAA,EAAAA,YAAU,WAUN,OAToBC,EAAAA,KAAKC,oBAAmB,SAAAC,GAEnCA,GAEDL,GAAS,SAGjB,GAGJ,GAAG,KAEuBmI,EAAAA,EAAAA,iBAkFN0Q,EAAAA,EAAAA,cAAY,WAG5B5D,GAAKM,QAAQpQ,MAAQ,GACrB+P,GAAKK,QAAQpQ,MAAQ,GACrBgQ,GAAKI,QAAQpQ,MAAQ,GACrBiQ,GAAKG,QAAQpQ,MAAQ,GACrB0I,IAAiB,GACjBN,IAAmB,GACnBG,IAAoB,GACpBM,IAAgB,GAChBG,IAAgB,GAChBtC,GAAc,GACdwG,IAAoB,GAGpBjD,GAAwB,IACxBP,GAAc,IACdN,GAAa,IACbU,GAAiB,GAGrB,GAAG,IAxGH,IAwJMjG,GAAuB,SAACC,GAGtBA,EAASC,SACID,EAASE,OACAC,SAGlBC,EAAAA,EAAAA,SAAQlJ,EAAAA,MACHwD,MAAK,WAEF3D,GAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,KAGRqG,EAAAA,EAAAA,SAAQlJ,EAAAA,MACHwD,MAAK,WAEF3D,GAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,GAIZ,GAeA9C,EAAAA,EAAAA,YAAU,WACN,IAAMoJ,EAfqB,WAAO,IAADC,EAC3BC,EAAyB,OAAnBD,EAAGpJ,EAAAA,KAAKkI,kBAAW,EAAhBkB,EAAkB5L,MACjC,GAAI6L,EAAQ,CACR,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,EAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,GAE5C,CAEI,OAAO,WACHhJ,GAAS,SACb,CAER,CAGwB0J,GAEpB,OAAO,WAEHJ,GACJ,CACJ,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACN,IAAMyJ,EAAmBvB,IACrBuB,IACAC,GAAqBD,GACrB/L,EAAS+L,GAET0P,GADmB1P,GAI3B,GAAG,IAEH,IAAM0P,GAAsB,SAAC7W,GACzB,IAAMG,GAAUC,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAYL,IAEhBiH,EAAAA,EAAAA,YAAW9G,GAAS,SAACC,GACrC,GAAIA,EAAIsG,SAAU,CACd,IAAMxD,EAAO9C,EAAIuG,OAAOzD,KAClBK,EAAOnD,EAAIuG,OAAOpD,KACxBoG,GAAQzG,GACR+C,GAAQ1C,EAEZ,MACI9C,QAAQe,IAAI,0BAEpB,GAIJ,GAEA9D,EAAAA,EAAAA,YAAU,WAAO,IAADoZ,EACZC,GAAqB,WAA4B,OAAlBD,EAAEnZ,EAAAA,KAAKkI,kBAAW,EAAhBiR,EAAkB3b,MAEvD,GAAG,CAAC6U,GAAWI,KAEf,IAAM2G,GAAoB,eAAAC,GAAAjX,EAAAA,EAAAA,UAAG,UAAOkX,EAAgBjX,GAChD,IAAM0F,GAAYC,EAAAA,EAAAA,gBACZuR,GAAc9W,EAAAA,EAAAA,KAAIsF,EAAWuR,EAAgBjX,GAEnD,IACI,IAAMmX,QAAyBC,EAAAA,EAAAA,QAAOF,GACtC,GAAIC,EAAiBzQ,SAAU,CAC3B,IAAMvL,EAAQgc,EAAiBxQ,OAAOxL,MAChCkc,EAAOF,EAAiBxQ,OAAO0Q,KAErCpH,GAAa9U,GACbkV,GAAgBgH,EACpB,MACI5W,QAAQe,IAAI,0BAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,0BAA2BA,EAC7C,CACJ,IAAC,gBAlByBI,EAAA0W,GAAA,OAAAN,EAAAnW,MAAA,KAAAC,UAAA,KAqBpBsG,GAAoB,eAAAmQ,GAAAxX,EAAAA,EAAAA,UAAG,UAAO5E,GAChC,IACI,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,EAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC7B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,GAASwB,EAAAA,EAAAA,cAAaf,EAAKzD,MAE/B,MACIzC,QAAQe,IAAI,0BAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,8BAA+BA,EACjD,CACJ,IAAC,gBAjByBiX,GAAA,OAAAF,EAAA1W,MAAA,KAAAC,UAAA,KAqBpB4W,GAAgB,WAKlB,MAHmB,mDACQC,KAAKvL,GAKpC,EAiDMwL,IAAavB,EAAAA,EAAAA,cAAY,SAACxc,GAC5B,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IAEvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BuJ,GAAiB0B,EAAakJ,MAC9BhL,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BiL,IAAgB,GAChBiB,GAAoBtB,EAAa5K,MACjC0L,GAAgBd,EAAa5K,MAC7B8L,GAAuBlB,EAAa4J,aACpClI,IAAoB,GAGhBiB,GAAciC,SACdjC,GAAciC,QAAQiF,eAAe,CAAElV,KAAMqL,EAAahT,QAG1D4V,GAAagC,SACbhC,GAAagC,QAAQiF,eAAe,CAAElV,KAAMqL,EAAajL,OAEzD8N,GAAa+B,SACb/B,GAAa+B,QAAQiF,eAAe,CAAElV,KAAMqL,EAAakJ,MAEjE,GAAG,CAAC1Q,KAIEsR,IAAyBC,EAAAA,EAAAA,WAAS,SAACvV,GACrC0J,GAAc1J,EAClB,GAAG,IAEGwV,IAAwBD,EAAAA,EAAAA,WAAS,SAACvV,GACpCoJ,GAAapJ,EACjB,GAAG,IAEGyV,IAAwBF,EAAAA,EAAAA,WAAS,SAACvV,GACpC8J,GAAiB9J,EACrB,GAAG,IAiCG0V,GAAmB,WACrB7J,IAAgB,GAChBzS,IAAQ,EACZ,EAEMuc,GAA0B,WAC5B/K,IAAoB,EACxB,EAOMgL,GAAyB,WAC3B1K,IAAmB,EACvB,EACM2K,GAAyB,WAC3B/K,IAAmB,EACvB,GAGA/P,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACyQ,KACJ,IAAMsK,GAAkB,eAAAC,GAAA3Y,EAAAA,EAAAA,UAAG,UAAO4G,GAC9B,IACI,IAAMjB,GAAYC,EAAAA,EAAAA,gBACZgT,GAAoBvE,EAAAA,EAAAA,YAAW1O,EAAW,cAG1CkT,EAAAA,EAAAA,QAAOD,EAAmBhS,EAEpC,CAAE,MAAOnG,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,gBAXuBqY,GAAA,OAAAH,EAAA7X,MAAA,KAAAC,UAAA,KAwDlBgY,IAAezC,EAAAA,EAAAA,aAAY,WAAD,IAAA0C,GAAAhZ,EAAAA,EAAAA,UAAC,UAAOlG,GACpC,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BhG,IAAc,GACdkT,IAAgB,GAChB,IACI,IAAMuI,GAAa5Y,EAAAA,EAAAA,KAAIsF,EAAW,WAAYyI,EAAahT,OAMnD8d,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,GAAQsK,SAEF7Y,EAAAA,EAAAA,WAAU0Y,EAhBA,CACZpS,QAAQ,IAiBZ,IAAMgQ,EAAcjQ,GAAKjN,KAAI,SAACoe,GAC1B,OAAIA,EAAKje,KAAOA,EACZ2L,EAAAA,EAAA,GAAYsS,GAAI,IAAElR,QAAQ,IAEvBkR,CACX,IAEAlG,GAAQgF,GACR,IAAMzE,EAAe0H,GAAkBjD,EAAa9D,IACpDV,GAAgBD,GAGhB,IAAM2H,EAAU,CACZvY,QAAQ,iCAAkC4M,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,KACpH6W,SAAU,CACNZ,EAAc7D,eACd,iCAAiCnH,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,MAAKoS,cAChH,kBAAkBA,cAClB,UAAUA,cACVnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,eAE3B0E,UAAWb,EACXc,aAAa,GAEjBxB,GAAmBqB,GACnBvc,IAAc,GACdkT,IAAgB,GAChB+H,IACJ,CAAE,MAAOhY,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,gBAAA0Z,GAAA,OAAAnB,EAAAlY,MAAA,KAAAC,UAAA,EArEgC,GAqE9B,CAAC6F,KAEEwT,GAAc,eAAAC,GAAAra,EAAAA,EAAAA,UAAG,UAAOkX,EAAgBoD,GAC1C,IAAM3U,GAAYC,EAAAA,EAAAA,gBACZuR,GAAc9W,EAAAA,EAAAA,KAAIsF,EAAWuR,EAAgBoD,GAEnD,UACUC,EAAAA,EAAAA,WAAUpD,GAChBzW,QAAQe,IAAI,iCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,IAAC,gBAVmB+Z,EAAAC,GAAA,OAAAJ,EAAAvZ,MAAA,KAAAC,UAAA,KAcd2Z,IAAepE,EAAAA,EAAAA,aAAY,WAAD,IAAAqE,GAAA3a,EAAAA,EAAAA,UAAC,UAAOlG,GACpC,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BhG,IAAc,GACdkT,IAAgB,GAGhB,IAEI,IACM5S,SADuBoD,EAAAA,EAAAA,4BAA2BtD,EAAAA,KAAMwQ,EAAahT,MAAOgT,EAAakJ,OACnExZ,KAGpBob,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,GAAQsK,SAEFwB,EAAAA,EAAAA,YAAW9c,GACjB,IAAMic,EAAU,CACZvY,QAAQ,iCAAkC4M,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,KACpH8W,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,iCAAiCnH,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,MAAKoS,cAChH,kBAAkBA,cAClB,UAAUA,cACVnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBpS,GAAKoS,cACLkE,EAAalE,cACbgE,EAAKhE,cACLiE,EAAMjE,cACNoE,EAAIpE,cACJmE,EAAKnE,cACLqE,EAAKrE,cACLsE,EAAuBtE,gBAG/BmD,GAAmBqB,GAGnBrZ,QAAQe,IAAI,uCAEmBP,EAAAA,EAAAA,4BAC3BtD,EAAAA,KACAqS,GACAI,KAEkCvS,KAEtCsc,GAAe,WAAYhM,EAAahT,OAGxCiX,GAAgBD,IAChB3U,GAAS,iBAETD,IAAc,GACdkT,IAAgB,GAEhB8H,IACJ,CAAE,MAAO/X,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,gBAAAoa,GAAA,OAAAF,EAAA7Z,MAAA,KAAAC,UAAA,EA3EgC,GA2E9B,CAAC6F,KAEEkU,IAAgBxE,EAAAA,EAAAA,aAAY,WAAD,IAAAyE,GAAA/a,EAAAA,EAAAA,UAAC,UAAOlG,GACrC0D,IAAc,GACdkT,IAAgB,GAChB,IAAMtC,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAE9B,IAAK,IAADwX,EACM/B,GAAa5Y,EAAAA,EAAAA,KAAIsF,EAAW,WAAYyI,EAAahT,aAKrDmF,EAAAA,EAAAA,WAAU0Y,EAJA,CACZpS,QAAQ,IAKZ,IAAMgQ,EAAcjQ,GAAKjN,KAAI,SAACoe,GAC1B,OAAIA,EAAKje,KAAOA,EACZ2L,EAAAA,EAAA,GAAYsS,GAAI,IAAElR,QAAQ,IAEvBkR,CACX,IAEAlG,GAAQgF,GACR,IAAMzE,EAAe0H,GAAkBjD,EAAgC,OAArBmE,EAAElI,GAAYE,cAAO,EAAnBgI,EAAqBpY,OACzEyP,GAAgBD,GAEhB,IACQ8G,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,GAAQsK,GAER,IAAMW,EAAU,CACZvY,QAAQ,kCAAmC4M,EAAahT,MAAK,SAASgT,EAAajL,KAAI,2BAA2BA,GAAI,KACtH8W,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,kCAAkCnH,EAAahT,MAAK,SAASgT,EAAajL,KAAI,2BAA2BA,GAAI,MAAKoS,cAClH,mBAAmBA,cACnB,WAAWA,cACXnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI/BmD,GAAmBqB,GACnBvc,IAAc,GACdkT,IAAgB,GAChB6H,IACJ,CAAE,MAAO9X,GACLC,QAAQD,MAAM,wBAAyBA,GACvCjD,IAAc,GACdsT,IAAiB,EACrB,CACJ,IAAC,gBAAAmK,GAAA,OAAAF,EAAAja,MAAA,KAAAC,UAAA,EAxEiC,GAwE/B,CAAC6F,KAGEkT,GAAoB,SAAClT,EAAMmM,GAC7B,OAAKA,EAGgBnM,EAAKsU,QAAO,SAACnD,GAAI,OAClCA,EAAK3c,MAAMma,cAAc4F,SAASpI,EAAiBwC,gBACnDwC,EAAK5U,KAAKoS,cAAc4F,SAASpI,EAAiBwC,gBAClDwC,EAAKC,YAAYzC,cAAc4F,SAASpI,EAAiBwC,cAAc,IALhE3O,CAQf,EAIMwU,GAAU,eAAAC,GAAArb,EAAAA,EAAAA,UAAG,UAAOlG,GACtB,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IAGvD,GAFA0D,IAAc,GACdsT,IAAiB,IAEe,IAA5BwK,OACoB,IAApB3D,MACc,KAAd5L,GAEA9K,YAAW,WAEP7D,IAAa,GACbI,IAAc,EAClB,GAAG,UAGH,GAAI6O,KAAe+B,EAAahT,OAASqR,KAAkB2B,EAAakJ,KAAM,CAG1E,IAAMH,GAAc9W,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAY8N,EAAatU,IAG7Cof,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BAC9CxK,GAAQsK,GAER,IAAMmC,EAAgB,CAClBpY,KAAM4I,GACNvI,KAAMyL,GACN+I,YAAa3I,GACbmM,gBAAiBpC,GAKrB,IAAK,IAADqC,QAEMlb,EAAAA,EAAAA,WAAU4W,EAAaoE,GAC7B/d,IAAc,GACdsT,IAAiB,GAGjB,IACQoI,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,GAAQsK,GAER,IAAMW,EAAU,CACZvY,QAAQ,sBAAuB4M,EAAajL,KAAI,SAASiL,EAAahT,MAAK,2BAA2B2Q,GAAS,kBAAkB5I,GAAI,KACrI8W,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,sBAAsBnH,EAAajL,KAAI,SAASiL,EAAahT,MAAK,2BAA2B2Q,GAAS,kBAAkB5I,GAAI,MAAKoS,cACjI,UAAUA,cACVnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBxJ,GAAUwJ,cACVpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI/BmD,GAAmBqB,GAEnB,IAAMlD,EAAcjQ,GAAKjN,KAAI,SAACoe,GAO1B,OANIA,EAAKje,KAAOA,IACZie,EAAK5U,KAAO4I,GACZgM,EAAKvU,KAAOyL,GACZ8I,EAAKC,YAAc3I,GACnB0I,EAAKyD,gBAAkBpC,GAEpBrB,CACX,IACAlG,GAAQgF,GACR,IAAMzE,EAAe0H,GAAkBjD,EAAgC,OAArB4E,EAAE3I,GAAYE,cAAO,EAAnByI,EAAqB7Y,OACzEyP,GAAgBD,GAGhBkG,KACAhL,IAAoB,EACxB,CAAE,MAAO7M,IACLC,QAAQD,MAAM,2BAA4BA,GAC9C,CAEJ,MAEK,GAAI4L,KAAe+B,EAAahT,OAASqR,KAAkB2B,EAAakJ,KAAM,CAE/E,IACMxZ,SADuBoD,EAAAA,EAAAA,4BAA2BtD,EAAAA,KAAMwQ,EAAahT,MAAOgT,EAAakJ,OACnExZ,KAGpBob,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACcG,IAAOH,GAAUI,OAAO,4BAC9CxK,KAEA,UACU4M,EAAAA,EAAAA,gBAAe5d,EAAM2O,IAE3B,IACQyM,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,KAEA,IAAM6M,GAAatb,EAAAA,EAAAA,KAAIsF,EAAW,WAAYyI,EAAahT,OAGrDmgB,EAAgB,CAClBngB,MAAOiR,GACPlJ,KAAM4I,GACNvI,KAAMyL,GACN+I,YAAa3I,GACbuM,eAAgBxN,EAAawN,eAC7BJ,gBAAiBpC,EACjB9B,KAAM7K,GACN5F,QAAQ,SAKNgV,EAAAA,EAAAA,QAAOF,EAAYJ,UAEMra,EAAAA,EAAAA,4BAC3BtD,EAAAA,KACAqS,GACAI,KAGkCvS,KAKtCN,IAAc,GACdsT,IAAiB,GAEjBhC,GAAQsK,GAER,IAAMW,EAAU,CACZvY,QAAQ,sCAAuC4M,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,KACzH8W,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,sCAAsCnH,EAAahT,MAAK,SAASgT,EAAajL,KAAI,0BAA0BA,GAAI,MAAKoS,cACrH,mBAAmBA,cACnB,WAAWA,cACXnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG/BmD,GAAmBqB,GAEFtU,EAAAA,EAAA,GACV2I,GAAY,IACfhT,MAAOiR,GACPlJ,KAAM4I,GACNvI,KAAMyL,GACN+I,YAAa3I,GACbmM,gBAAiBpC,IANrB,IASMvC,EAAcjQ,GAAKjN,KAAI,SAACoe,GAQ1B,OAPIA,EAAKje,KAAOA,IACZie,EAAK5U,KAAO4I,GACZgM,EAAKvU,KAAOyL,GACZ8I,EAAKC,YAAc3I,GACnB0I,EAAKyD,gBAAkBpC,EACvBrB,EAAKT,KAAO7K,IAETsL,CACX,IACAlG,GAAQgF,GACR,IAAMzE,EAAe0H,GAAkBjD,EAAa9D,IACpDV,GAAgBD,GAEhBkG,KACAhL,IAAoB,EACxB,CAAE,MAAO7M,IACLC,QAAQD,MAAM,SAAUA,GAC5B,CAEJ,MAEK,GAAI4L,KAAe+B,EAAahT,MAAO,CACxC,IACM0C,SADuBoD,EAAAA,EAAAA,4BAA2BtD,EAAAA,KAAMwQ,EAAahT,MAAOgT,EAAakJ,OACnExZ,KAUtBge,GAAiBzb,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAY8N,EAAahT,OAClD2gB,GAAiB1b,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAY+L,IAGnC6M,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BAC9CxK,GAAQsK,GAER,IAEI,IAAMhC,QAAyBC,EAAAA,EAAAA,QAAOyE,GACtC,GAAI1E,EAAiBzQ,SAAU,CACNyQ,EAAiBxQ,OAAtC,IAMM2U,EAAgB,CAClBngB,MAAOiR,GACPlJ,KAAM4I,GACNvI,KAAMyL,GACN+I,YAAa3I,GACbuM,eAAgBxN,EAAawN,eAC7BJ,gBAAiBpC,EACjB9B,KAAM7K,GACN5F,QAAQ,SAKNgV,EAAAA,EAAAA,QAAOE,EAAgBR,SACvBhB,EAAAA,EAAAA,WAAUuB,GAGhB,UACiCE,EAAAA,EAAAA,gCAA+Bpe,EAAAA,KAAMyO,GAAYI,IAG9EjP,IAAc,GACdsT,IAAiB,GAEjB,IACQoI,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,GAAOL,IAAOH,GAAUI,OAAO,cAC/BK,GAAMN,IAAOH,GAAUI,OAAO,MAC9BM,GAAOP,IAAOH,GAAUI,OAAO,SAC/BO,GAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,GAAQsK,GAER,IAAMW,GAAU,CACZvY,QAAQ,uBAAwB4M,EAAahT,MAAK,SAASgT,EAAajL,KAAI,2BAA2BkJ,GAAU,kBAAkBlJ,GAAI,KACvI8W,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,uBAAuBnH,EAAahT,MAAK,SAASgT,EAAajL,KAAI,2BAA2BkJ,GAAU,kBAAkBlJ,GAAI,MAAKoS,cACnI,UAAUA,cACV,QAAQA,cACRnH,EAAahT,MAAMma,cACnBnH,EAAajL,KAAKoS,cAClBlJ,GAAWkJ,cACXkE,EAAalE,cACbpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNoE,GAAIpE,cACJmE,GAAKnE,cACLqE,GAAKrE,cACLsE,GAAuBtE,gBAG/B,UACUqF,EAAAA,EAAAA,YAAW9c,GAKjBN,IAAc,GACdsT,IAAiB,UAEc5P,EAAAA,EAAAA,4BAC3BtD,EAAAA,KACAqS,GACAI,KAGkCvS,KANtC,IAUQob,UADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,GAAgBC,IAAOH,IAAUI,OAAO,4BAC9CxK,GAAQsK,IAER,IAAM6C,GAAWxW,EAAAA,EAAA,GACV2I,GAAY,IACfhT,MAAOiR,GACPlJ,KAAM4I,GACNvI,KAAMyL,GACN+I,YAAa3I,GACbmM,gBAAiBpC,KAGfvC,GAAcjQ,GAAKjN,KAAI,SAACoe,GAAI,OAC9BA,EAAKje,KAAOA,EAAKmiB,GAAclE,CAAI,IAEvClG,GAAQgF,IACR,IAAMzE,GAAe0H,GAAkBjD,GAAa9D,IACpDV,GAAgBD,GAIpB,CAAE,MAAO3R,IACLC,QAAQD,MAAM,6CAA8CA,GAChE,CAEAiY,GAAmBqB,IACnBzB,KACAhL,IAAoB,EAGxB,CAAE,MAAO7M,IACLC,QAAQD,MAAM,uBAAwBA,GAC1C,CACJ,MACIC,QAAQD,MAAM,+BAGtB,CAAE,MAAOA,IACLC,QAAQD,MAAM,8BAA+BA,IAC7CjD,IAAc,GACdsT,IAAiB,EACrB,CAOJ,MAMI,IAEI,UAD4BoL,EAAAA,EAAAA,4BAA2Bte,EAAAA,KAAMyO,KAC3C3K,OAAS,EAQvB,OANAlE,IAAc,GACdsT,IAAiB,GACjBhB,IAAoB,GACpBxG,GAAc,QACdqO,IAMR,CAAE,MAAOlX,IACaA,GAAMrG,KACHqG,GAAMe,QAC3Bd,QAAQe,IAAI,iFAEZrE,IAAa,GACbI,IAAc,EAClB,CAQZ,IAAC,gBApZe2e,GAAA,OAAAd,EAAAva,MAAA,KAAAC,UAAA,KA4ZVua,GAAwB,WAC1B,OAAO7O,GAAc/K,QAAU,CACnC,GAMA/D,EAAAA,EAAAA,YAAU,WACN,IAAMgZ,EAAS,eAAAyF,GAAApc,EAAAA,EAAAA,UAAG,YACd,IACI,IAAMmU,GAAIC,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAW/T,EAAAA,GAAI,aAAagU,EAAAA,EAAAA,SAAQ,iBAAkB,SAChEvN,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACzN,GAC/B,IAAM8N,EAAY9N,EAASoO,KAAKnb,KAAI,SAAC0G,GAAG,OAAAoF,EAAA,CAAQ3L,GAAIuG,EAAIvG,IAAOuG,EAAIuG,OAAM,IACzEiL,GAAQ2C,EACZ,IAEA,OAAO,kBAAMzN,GAAc,CAC/B,CAAE,MAAOtG,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,kBAZc,OAAA2b,EAAAtb,MAAA,KAAAC,UAAA,KAcf4V,GACJ,GAAG,KAEHhZ,EAAAA,EAAAA,YAAU,WACN0T,GAAQ,EACZ,GAAG,CAACI,KAEJ,IAAM4K,IAAWC,EAAAA,EAAAA,UAAQ,WACrB,OAAO1V,GAAKsU,QACR,SAACnD,GAAI,OACDA,EAAK3c,MAAMma,cAAc4F,SAASnJ,GAAYuD,gBAC9CwC,EAAK5U,KAAKoS,cAAc4F,SAASnJ,GAAYuD,gBAC7CwC,EAAKC,YAAYzC,cAAc4F,SAASnJ,GAAYuD,cAAc,GAE9E,GAAG,CAACvD,GAAapL,KAEX2V,IAAgBD,EAAAA,EAAAA,UAAQ,WAC1B,IAAME,EAAapL,GAAOK,GACpBgL,EAAWD,EAAa/K,GAC9B,OAAO4K,GAASK,MAAMF,EAAYC,EACtC,GAAG,CAACrL,GAAMK,GAAcO,GAAapL,GAAMyV,KAGrCM,IAAexE,EAAAA,EAAAA,WAAS,SAACpV,GAC3BkP,GAAelP,EACnB,GAAG,KAEGyZ,GAAapL,GAAOK,GACpBgL,GAAW7U,KAAKgV,IAAIJ,GAAa/K,GAAc7K,GAAKlF,QA4CpDmb,GAASxY,EAAAA,QAAWC,OAAO,CAC7BC,UAAW,CACPxC,KAAM,GAEV+a,MAAO,CACH/a,KAAM,KAGd,OACI/D,EAAAA,EAAAA,KAAC2D,EAAAA,mBAAkB,CAAAvD,UAEfY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE5DY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACA+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAG9BJ,EAAAA,EAAAA,KAACqf,EAAAA,QAAU,CACPlU,eAAgBA,KAEpBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,EAAG,EAAG,EAAG,KAAM2D,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAC3FJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAKpF,GACL0gB,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAStB9e,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,IAAK,GAAI2D,EAAG,CAAC,EAAG,EAAG,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAExGJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAKoH,GACLkU,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAGtB9e,EAAAA,EAAAA,MA1FI,SAAH6f,GAAiC,IAA3B1a,EAAI0a,EAAJ1a,KAAM2a,EAAaD,EAAbC,cACzBC,GAA8C9iB,EAAAA,EAAAA,WAAS,GAAM+iB,GAAA7iB,EAAAA,EAAAA,SAAA4iB,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAEpCG,EAAc,WAChBD,GAAoBD,EACxB,EAEA,OACIjgB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UAC/CJ,EAAAA,EAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UACzBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQN,EACRO,QAAS,SAACC,GAAY,OAClBzf,EAAAA,EAAAA,MAACO,EAAAA,QAAIkG,EAAAA,EAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC7HJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,EAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC5H,EAEXkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAExCJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACrCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASrM,GAyD4B,CAAC+E,KAAMuF,EAAWoV,cAt/BxB,YAElBhX,EAAAA,EAAAA,SAAQlJ,EAAAA,MAAMwD,MAAK,WAEf3D,GAAS,UAETpC,EAAS,IACTuO,GAAQ,GACZ,IAAGtI,OAAM,SAACb,GAEV,GAGJ,QA+/BYzC,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAO/BY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGod,SAAU,EAAGC,UAAW,EAAEhhB,SAAA,EAEpCJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAAC6c,IAAKvM,GAAahQ,aAAc6Z,GAAcrZ,YAAY,SAAS1B,QAAS,WACnF5C,EAAAA,EAAAA,MAACsgB,EAAAA,WAAU,CAACvd,KAAM,EAAGwd,sBAAuB,CAAEJ,SAAU,GAAI/gB,SAAA,EACxDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACnD,OAAQ,OAAOsD,UAEhBY,EAAAA,EAAAA,MAACwgB,EAAAA,QAAS,CAACC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGrhB,SAAA,EAClCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACgG,YAAa,EAAGC,YAAY,WAAWQ,aAAc,EAAGgb,SAAS,SAASC,QAAS,CAAC,OAAQ,OAAQ,OAAQ,GAAI,GAAI,IAAIvhB,UACzHY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAc,MAAMI,kBAAmB,EAAGjZ,YAAY,WAAWtC,QAAS,UAAUxD,SAAA,EACrFJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,aAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,YAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,uBAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,wBAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,oBAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,cAE7CJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,EAAExhB,UACrBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAAQvB,SAAE,oBAIrDJ,EAAAA,EAAAA,KAACK,EAAAA,QAAkB,CAACC,SAAS,EAAMC,QAAS,CACxCC,QAAS,GACVE,QAAS,CACRF,QAAS,EACTG,WAAY,CACRC,SAAU,MAEhBR,SACGme,GAAc5iB,KAAI,SAACoe,GAAI,OACpB/Y,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAewhB,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI1C,cAAe,CAAC,SAAU,SAAU,SAAU,MAAO,MAAO,OAAQnb,QAASmW,EAAKlR,OAAS,WAAa,YAAa3C,YAAa,WAAYD,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI4b,cAAe,EAAGnB,YAAa,EAAEtgB,SAAA,EAC3PJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAUxD,UAClHJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAC,cAE7EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAK3c,cAKxH4C,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAE,aAE9EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAK5U,aAIxHnF,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAG,wBAE/EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAKC,oBAIxHha,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAE,yBAE9EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAK6D,uBAIxH5d,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAE,qBAE9EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAKyD,wBAIxHxd,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAE,eAE9EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIob,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,kBAAmB,eAAehf,SAAE2Z,EAAKlR,OAAS,UAAY,mBAI7I7I,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG6d,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxhB,UACtCY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAe,CAAC,MAAO,MAAO,MAAO,GAAI,GAAI,IAAI3e,SAAA,EAClDJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC0hB,QAAS,CAAC,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS5d,KAAM,EAAGmC,YAAY,WAAWtC,QAAS,UAAW8c,YAAa,EAAEtgB,UAClIJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACE,WAAW,OAAOE,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGpB,SAAC,gBAE7EY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG3D,SAAA,EACvCY,EAAAA,EAAAA,MAAC6E,EAAAA,OAAM,CACHF,QAAS,kBAAMkU,GAAWE,EAAKje,GAAG,EAClCiI,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB6d,QAAS,EACTvgB,eAAe,SACflB,WAAW,SACX4e,cAAc,MAAK3e,SAAA,EACnBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUxF,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAKG,MAAO,QAAQvB,SAAC,UAC3EJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,SAAYxD,MAAO,QAASyD,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,QAEjF2U,EAAKlR,QACF7H,EAAAA,EAAAA,MAAC6E,EAAAA,OAAM,CAACF,QAAS,kBA5iC9C,SAAC7J,GAC5B,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BgK,IAAoB,EACxB,CAoiCmFsS,CAAuB/H,EAAKje,GAAG,EAAEiI,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI6d,QAAS,EAAG1F,YAAa,QAASra,MAAO,CAAEL,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KAAOpB,SAAA,EAC3JJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUxF,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAKG,MAAO,QAAQvB,SAAC,aAC3EJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,UAAaxD,MAAO,QAASyD,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,SAGnFpE,EAAAA,EAAAA,MAAC6E,EAAAA,OAAM,CAACF,QAAS,kBAviC/C,SAAC7J,GAC3B,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BkK,IAAmB,EACvB,CA+hCmFqS,CAAsBhI,EAAKje,GAAG,EAAEiI,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI6d,QAAS,EAAG1F,YAAa,UAAWra,MAAO,CAAEL,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KAAOpB,SAAA,EAC5JJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUxF,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAKG,MAAO,QAAQvB,SAAC,YAC3EJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,iBAAoBxD,MAAO,QAASyD,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,SAG9FpE,EAAAA,EAAAA,MAAC6E,EAAAA,OAAM,CAACF,QAAS,kBAliC3C,SAAC7J,GAC3B,IAAMsU,EAAexH,GAAKkR,MAAK,SAACC,GAAI,OAAKA,EAAKje,KAAOA,CAAE,IACvDuU,GAAgBD,GAChBpC,GAAaoC,EAAajL,MAC1BmJ,GAAc8B,EAAahT,OAC3BgS,GAAwBgB,EAAa4J,aACrC/K,GAAiBmB,EAAa5K,MAC9BsK,IAAmB,EACvB,CA0hC+EkS,CAAsBjI,EAAKje,GAAG,EAAEiI,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI6d,QAAS,EAAG1F,YAAa,QAASra,MAAO,CAAEL,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KAAOpB,SAAA,EAC1JJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUxF,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAKG,MAAO,QAAQvB,SAAC,YAC3EJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,WAAcxD,MAAO,QAASyD,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,kBArF1F2U,EAAKje,GA2FT,OAIdkE,EAAAA,EAAAA,KAACwhB,EAAAA,QAAUS,WAAU,CACjB7O,KAAMA,GACN8O,cAAetY,KAAKuY,KAAK9D,GAAS3a,OAAS+P,IAC3C2O,aAAc,SAAChP,GAAI,OAAKC,GAAQD,EAAK,EACrCiP,MAAU7D,GAAa,EAAC,IAAIC,GAAQ,OAAOJ,GAAS3a,OACpD4P,eAAgBA,GAChBG,aAAcA,GACdC,gBAAiBA,GACjB4O,oBAAkB,EAClBC,aAAc,wBAI1BviB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ/P,GAAcqQ,QAASvG,GAAiBla,UACnDY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,SAAC,mBACpCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAENgQ,KACGpP,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EACHY,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,YAAc,KAACJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAAC7C,MAAQkQ,GAA6B,UAAV,QAAqBuN,kBAAmBzF,KAAkB,YAAc,UAAWwF,kBAAmB,EAAGwD,aAActU,GAAYgT,IAAKtO,GAAejO,aAAcoV,SAClOP,OACE3Z,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAEhCyR,KACG7R,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,yDAEjCY,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,WAAa,KAACJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAAC4a,kBAAiC,KAAdrR,GAAmB,YAAc,UAAWoR,kBAAmB,EAAGwD,aAAc5U,GAAWsT,IAAKrO,GAAclO,aAAcsV,QACnK,KAAdrM,KACG/N,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,iBAEjCY,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,gBACVJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAAC4a,kBAAmB9B,KAA0B,YAAc,UAAW6B,kBAAmB,EAAGwD,aAAclU,GAAe4S,IAAKpO,GAAcnO,aAAcuV,GAAuB7U,KAAMzH,GAAO,OAAS,WAAYiH,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAMpH,GAAO,aAAe,SAAYqH,KAAM,EAAGC,GAAG,MAAQI,mBAAmBzF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAM3H,IAASD,GAAK,EAACqC,UACvXJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAMpH,GAAO,aAAe,mBAAsBqH,KAAM,EAAGQ,GAAG,cAI/F5E,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,sBACVY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAAQjB,SAAA,EACrCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,YAAc6N,GAAmB,UAAY,gBAAmBrM,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CACxIuE,KAAM,GACNC,GAAI,GACJC,GAAI,IACLgB,QAAS8S,GAA0B7U,QAAS,YAAc6N,GAAmB,UAAY,UAAUrR,UAAEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,eAE1IJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,UAAY6N,GAAmB,UAAY,gBAAmBrM,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CACtIuE,KAAM,GACNC,GAAI,GACJC,GAAI,IACLgB,QAAS6S,GAA0B5U,QAAS,UAAY6N,GAAmB,UAAY,UAAUrR,UAAGJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,aAEzIJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,UAAY6N,GAAmB,UAAY,gBAAmBrM,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CACtIuE,KAAM,GACNC,GAAI,GACJC,GAAI,IACLgB,QAAS0S,GAA2BzU,QAAS,UAAY6N,GAAmB,UAAY,UAAUrR,UAAGJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,gBAK9IY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAASie,UAAW,EAAElf,SAAA,EACnDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,eAAiB6N,GAAmB,UAAY,gBAAmBrM,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CAC3IuE,KAAM,GACNC,GAAI,GACJC,GAAI,IACLgB,QAAS+S,GAA6B9U,QAAS,eAAiB6N,GAAmB,UAAY,UAAUrR,UAAEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,mBAChJJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,aAAe6N,GAAmB,UAAY,gBAAmBrM,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CACzIuE,KAAM,GACNC,GAAI,GACJC,GAAI,IACLgB,QAAS4S,GAA8B3U,QAAS,aAAe6N,GAAmB,UAAY,UAAUrR,UAAEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,4BAQnKY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,SAAA,EAC5BJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2U,GAAkBvW,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAErhB,SAAC,WACnEJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAMyX,GAAWhN,GAAatU,GAAG,EAAEqK,SAAU5G,GAAYwE,KAAM,EAAG6d,QAAS,EAAG1F,YAAa,UAAWuF,OAAQ,EAAErhB,SAAEyS,IAAgB7S,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,KAAS,kBAMrMpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQhR,GAAkBsR,QAAStG,GAAwBna,UAC9DY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAChCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAGtd,MAAO,CAAEF,MAAO,SAAWvB,SAAC,sBACtFJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAACrd,QAAS,YAAYxD,SAC5BgQ,KACGpP,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EACHY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,QAAQvB,SAAA,CAAC,UAAQgQ,GAAahT,UAC3C4D,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,QAAQvB,SAAA,CAAC,SAAOgQ,GAAajL,SAC1CnE,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,QAAQvB,SAAA,CAAC,oBAAkBgQ,GAAa4J,qBAKjEhZ,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,SAAA,EAClDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS4U,GAAyBxW,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAErhB,SAAC,QAC1EJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAMmX,GAAc1M,GAAatU,GAAG,EAAEogB,YAAa,QAASnY,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAGtb,SAAU5G,GAAWa,SAAEqS,IAAezS,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,KAAS,iBAMrMpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ1Q,GAAiBgR,QAASrG,GAAuBpa,UAC5DY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAChCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAE/e,SAAE,qBAC3DJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAACrd,QAAS,YAAYxD,SAC5BgQ,KACGpP,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EACHY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAE,UAAQgQ,GAAahT,UAC5B4D,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAE,SAAOgQ,GAAajL,SAC3BnE,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAE,oBAAkBgQ,GAAa4J,qBAKlDhZ,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,SAAA,EAClDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS4U,GAAyBxW,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAErhB,SAAC,QAC1EJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAM+W,GAAatM,GAAatU,GAAG,EAAEogB,YAAa,QAASnY,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAGtb,SAAU5G,GAAWa,SAAEqS,IAAezS,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,KAAS,iBAOpMpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ9Q,GAAiBoR,QAASpG,GAAuBra,UAC5DY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,cAAcxD,SAAA,EAClCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,cAAeub,kBAAmB,EAAE/e,SAAC,qBAC5DJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAACrd,QAAS,cAAcxD,SAC9BgQ,KACGpP,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAAb,SAAA,EACHY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAC,UAAQgQ,GAAahT,UAC3B4D,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAC,SAAOgQ,GAAajL,SAC1BnE,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAC,oBAAkBgQ,GAAa4J,qBAKjDhZ,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,cAAemf,eAAgB,EAAE3iB,SAAA,EACpDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS8U,GAAwB1W,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAErhB,SAAC,QACzEJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAMoV,GAAa3K,GAAatU,GAAG,EAAEogB,YAAa,UAAWnY,KAAM,EAAG6d,QAAS,EAAGH,OAAQ,EAAGtb,SAAU5G,GAAWa,SAAEqS,IAAezS,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,KAAS,iBAKtMpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQlR,GAAkBwR,QAAS,kBAAMvR,IAAoB,EAAM,EAAElK,KAAK,KAAIhF,UACjFY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACgC,SAAS,MAAMpf,QAAS,YAAaqC,YAAa,EAAGC,YAAa,YAAY9F,SAAA,EACzFJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAE/e,UAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAU4b,MAAI,EAAAxiB,SAAC,kEACxGJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAS5G,SAAC,0CAE7CJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,UAClDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,aAAgBqf,QAAS,UAAWlf,KAAK,IAAI4B,QAAS,kBAAM2J,IAAoB,EAAM,EAAClP,UAC9GJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAS5G,SAAC,iCAWrF,C,6lCCrpEA,IAAI+K,EAAiB,oBAErBzO,EAA0BC,EAAAA,QAAWC,IAAI,UAGnC+K,GAHOjL,EAALG,MAAaH,EAANI,OACMH,EAAAA,QAAWC,IAAI,UAAUE,QAE5B8K,EAAAA,EAAAA,iBACZC,EAAwB,WAC5B,IAAM/H,EAAOF,EAAAA,KAAKkI,YAClB,OAAIhI,EACYA,EAAK1C,OAGnBsF,QAAQe,IAAI,sCACL,KAEX,EA+Be,SAASyf,IACtB,IAAM/a,GAAWK,EAAAA,EAAAA,eACXkC,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IACxD1N,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxBK,GAAFH,EAAA,GAAUA,EAAA,IACtBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAvB4K,GAAF3K,EAAA,GAASA,EAAA,IACdwB,EAAOC,EAAQ,OACfuM,EAAQvM,EAAQ,OAEtBxB,GADoBb,EAAAA,QAAWC,IAAI,UAAUC,OACLI,EAAAA,EAAAA,WAAS,IAAMQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GACvDyB,GADmBxB,EAAA,GAAiBA,EAAA,IACIR,EAAAA,EAAAA,WAAS,IAAMiC,IAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GACvDI,IADmBH,GAAA,GAAiBA,GAAA,IACZjC,EAAAA,EAAAA,UAAS,KAAGqC,IAAAnC,EAAAA,EAAAA,SAAAkC,GAAA,GAA7B8F,GAAI7F,GAAA,GAAEsM,GAAOtM,GAAA,GACpB1B,GAAwBC,EAAAA,UAAe,GAAMC,IAAAX,EAAAA,EAAAA,SAAAS,GAAA,GAAtCG,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,GAA0BJ,EAAAA,UAAe,GAAMK,IAAAf,EAAAA,EAAAA,SAAAc,GAAA,GAAxCklB,GAAKjlB,GAAA,GAAEklB,GAAQllB,GAAA,GACtBsN,IAAoCvO,EAAAA,EAAAA,WAAS,GAAMwO,IAAAtO,EAAAA,EAAAA,SAAAqO,GAAA,GAA5CjM,GAAUkM,GAAA,GAAEjM,GAAaiM,GAAA,GAChCC,IAAkCzO,EAAAA,EAAAA,WAAS,GAAM0O,IAAAxO,EAAAA,EAAAA,SAAAuO,GAAA,GAA1CvM,GAASwM,GAAA,GAAEvM,GAAYuM,GAAA,GAExBlM,IAAWC,EAAAA,EAAAA,eAEjBmM,IAA4C5O,EAAAA,EAAAA,WAAS,GAAM6O,IAAA3O,EAAAA,EAAAA,SAAA0O,GAAA,GAApDM,GAAcL,GAAA,GACrBC,IADwCD,GAAA,IACgB7O,EAAAA,EAAAA,WAAS,IAAK+O,IAAA7O,EAAAA,EAAAA,SAAA4O,GAAA,GAA/DO,GAAoBN,GAAA,GAC3BC,IADoDD,GAAA,IACM/O,EAAAA,EAAAA,WAAS,IAAMiP,IAAA/O,EAAAA,EAAAA,SAAA8O,GAAA,GAAlEQ,GAAqBP,GAAA,GAC5BE,IADsDF,GAAA,IAChBjP,EAAAA,EAAAA,WAAS,IAAMoP,IAAAlP,EAAAA,EAAAA,SAAAiP,GAAA,GACrDG,IADkBF,GAAA,GAAgBA,GAAA,IACIpP,EAAAA,EAAAA,WAAS,IAAMuP,IAAArP,EAAAA,EAAAA,SAAAoP,GAAA,GAErDG,IAFkBF,GAAA,GAAgBA,GAAA,IAEcvP,EAAAA,EAAAA,WAAS,IAAM0P,IAAAxP,EAAAA,EAAAA,SAAAuP,GAAA,GAC/DE,IADuBD,GAAA,GAAqBA,GAAA,IACQ1P,EAAAA,EAAAA,WAAS,IAAM4P,IAAA1P,EAAAA,EAAAA,SAAAyP,GAAA,GACnEE,IADyBD,GAAA,GAAuBA,GAAA,IACA5P,EAAAA,EAAAA,WAAS,IAAM8P,IAAA5P,EAAAA,EAAAA,SAAA2P,GAAA,GAC/DG,IADuBF,GAAA,GAAqBA,GAAA,IACU9P,EAAAA,EAAAA,WAAS,IAAMiQ,IAAA/P,EAAAA,EAAAA,SAAA8P,GAAA,GACrEG,IAD0BF,GAAA,GAAwBA,GAAA,IACNjQ,EAAAA,EAAAA,WAAS,IAAMoQ,IAAAlQ,EAAAA,EAAAA,SAAAiQ,GAAA,GAG3DG,IAHqBF,GAAA,GAAmBA,GAAA,IAGJpQ,EAAAA,EAAAA,WAAS,IAAMuQ,IAAArQ,EAAAA,EAAAA,SAAAoQ,GAAA,GACnDG,IADiBF,GAAA,GAAeA,GAAA,IACMvQ,EAAAA,EAAAA,WAAS,IAAM0Q,IAAAxQ,EAAAA,EAAAA,SAAAuQ,GAAA,GACrDG,IADkBF,GAAA,GAAgBA,GAAA,IACU1Q,EAAAA,EAAAA,WAAS,IAAM6Q,IAAA3Q,EAAAA,EAAAA,SAAA0Q,GAAA,GAC3DI,IADqBH,GAAA,GAAmBA,GAAA,IACkB7Q,EAAAA,EAAAA,WAAS,IAAMiR,IAAA/Q,EAAAA,EAAAA,SAAA8Q,GAAA,GACzEE,IAD4BD,GAAA,GAA0BA,GAAA,IACJjR,EAAAA,EAAAA,WAAS,IAAMmR,IAAAjR,EAAAA,EAAAA,SAAAgR,GAAA,GACjEI,IADwBH,GAAA,GAAsBA,GAAA,IACEnR,EAAAA,EAAAA,WAAS,IAAMuR,IAAArR,EAAAA,EAAAA,SAAAoR,GAAA,GAAxDsD,GAAgBrD,GAAA,GAAEsD,GAAmBtD,GAAA,GAC5CG,IAAoC1R,EAAAA,EAAAA,WAAS,GAAM2R,IAAAzR,EAAAA,EAAAA,SAAAwR,GAAA,GAAhCrD,IAAFsD,GAAA,GAAeA,GAAA,IAKhCE,IAA0C7R,EAAAA,EAAAA,UAAS,IAAG8R,IAAA5R,EAAAA,EAAAA,SAAA2R,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAwDjS,EAAAA,EAAAA,UAAS,IAAGkS,IAAAhS,EAAAA,EAAAA,SAAA+R,GAAA,GAA7DmU,GAAoBlU,GAAA,GAAEC,GAAuBD,GAAA,GACpDc,IAAkChT,EAAAA,EAAAA,WAAS,GAAMkT,IAAAhT,EAAAA,EAAAA,SAAA8S,GAAA,GAA1CqT,GAASnT,GAAA,GAAEoT,GAAYpT,GAAA,GAIxBpC,KAHYmC,EAAAA,EAAAA,QAAO,KAGPA,EAAAA,EAAAA,QAAO,OACnB7B,IAAa6B,EAAAA,EAAAA,QAAO,MACpBzB,IAAgByB,EAAAA,EAAAA,QAAO,MACvBsT,IAAuBtT,EAAAA,EAAAA,QAAO,MAEpCI,IAA0CrT,EAAAA,EAAAA,WAAS,GAAMsT,IAAApT,EAAAA,EAAAA,SAAAmT,GAAA,GAAlDmT,GAAalT,GAAA,GAAEmT,GAAgBnT,GAAA,GACtCG,IAAoDzT,EAAAA,EAAAA,WAAS,GAAK0T,IAAAxT,EAAAA,EAAAA,SAAAuT,GAAA,GAA3DiT,GAAkBhT,GAAA,GAAEiT,GAAqBjT,GAAA,GAChDC,IAAsD3T,EAAAA,EAAAA,WAAS,GAAM4T,IAAA1T,EAAAA,EAAAA,SAAAyT,GAAA,GAA9DiT,GAAmBhT,GAAA,GAAEiT,GAAsBjT,GAAA,GAClDE,IAAsC9T,EAAAA,EAAAA,WAAS,GAAK+T,IAAA7T,EAAAA,EAAAA,SAAA4T,GAAA,GAA7CgT,GAAW/S,GAAA,GAAEgT,GAAchT,GAAA,GAElCG,IAA0ClU,EAAAA,EAAAA,UAAS,IAAGmU,IAAAjU,EAAAA,EAAAA,SAAAgU,GAAA,GAEtDI,IAFoBH,GAAA,GAAkBA,GAAA,IAEdnU,EAAAA,EAAAA,UAAS,KAAGuU,IAAArU,EAAAA,EAAAA,SAAAoU,GAAA,GAEpCI,IAFWH,GAAA,GAASA,GAAA,IACCtB,EAAAA,EAAAA,WAC2BjT,EAAAA,EAAAA,WAAS,IAAK2U,IAAAzU,EAAAA,EAAAA,SAAAwU,GAAA,GAArCsS,IAAFrS,GAAA,GAAqBA,GAAA,IAE5CG,IAA8C9U,EAAAA,EAAAA,WAAS,GAAM+U,IAAA7U,EAAAA,EAAAA,SAAA4U,GAAA,GAAvCC,GAAA,GAAoBA,GAAA,IAK1CrS,EAAAA,EAAAA,YAAU,WAEV,GAAG,CAACwM,GAAgBG,GAAsBG,MAyB1C9M,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACqP,MAIJrP,EAAAA,EAAAA,YAAU,WASR,OARoBC,EAAAA,KAAKC,oBAAmB,SAAAC,GACrCA,GAEHL,GAAS,SAGb,GAGF,GAAG,KAEuBmI,EAAAA,EAAAA,gBAA1B,IAGM8S,GAAkB,eAAA3Y,GAAAC,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMjB,GAAYC,EAAAA,EAAAA,gBACZgT,GAAoBvE,EAAAA,EAAAA,YAAW1O,EAAW,cAG1CkT,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAZuBE,GAAA,OAAAZ,EAAAe,MAAA,KAAAC,UAAA,KAwDlBmhB,GAAa,WACjBX,IAAa,GACbU,IAAoB,EACtB,EAMME,GAAgB,eAAA7a,GAAAtH,EAAAA,EAAAA,UAAG,YAGvB,GAFAxC,IAAc,GACdJ,IAAa,IAEa,IAAxBykB,KACkB,IAAlBJ,KACuB,IAAvBE,KACoB,IAApBhK,OACgB,IAAhBoK,IACkB,KAAlB/U,GAEA/L,YAAW,WAET7D,IAAa,GACbI,IAAc,EAChB,GAAG,UAEH,IAAK,IAAD4kB,EAEF,UAD4BlG,EAAAA,EAAAA,4BAA2Bte,EAAAA,KAAwB,OAApBwkB,EAAE/V,GAAW2G,cAAO,EAAlBoP,EAAoBxf,QAC/DlB,OAAS,EAOzB,OALAoO,IAAoB,GACpBxG,IAAc,GACdqO,IAAc,GACdva,IAAa,QACbI,IAAc,GAGhB,IACQ0b,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,kBAEjD0C,EAAAA,EAAAA,gCAA+BqG,EAAAA,kBAAmBhW,GAAW2G,QAAQpQ,MAAO6J,GAAcuG,QAAQpQ,OACrGxB,MAAK,SAACkhB,GAEQA,EAAexkB,KAI5B,IAAK,IAADykB,EAAAC,EAAAC,EAAAC,EAAAC,EAIIC,EAAWvW,GAAW2G,QAAQpQ,MAC9BigB,GAASxiB,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAYsiB,GAC7B7I,EAAU,CACdvY,QAAQ,mBAAoB2B,GAAI,4BAA4C,OAA5Cof,EAA2BxW,GAAUiH,cAAO,EAAjBuP,EAAmB3f,OAAK,WAAWye,GAAoB,eAClHpH,UAAWb,EACXY,SAAU,CACRZ,EAAc7D,eACd,mBAAmBpS,GAAI,4BAA4C,OAA5Cqf,EAA2BzW,GAAUiH,cAAO,EAAjBwP,EAAmB5f,OAAK,WAAWye,GAAoB,gBAAe9L,cACxH,gBAAgBA,cAChB,QAAQA,cACRxJ,GAAUiH,QAAQpQ,MAAM2S,cACxB8L,GAAqB9L,cACrBpS,GAAKoS,cACLgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,eAEzB2E,aAAa,IAGf2B,EAAAA,EAAAA,QAAOgH,EAAQ,CAEbznB,MAAyB,OAApBqnB,EAAEpW,GAAW2G,cAAO,EAAlByP,EAAoB7f,MAC3BO,KAAuB,OAAnBuf,EAAE3W,GAAUiH,cAAO,EAAjB0P,EAAmB9f,MACzB0U,KAA2B,OAAvBqL,EAAElW,GAAcuG,cAAO,EAArB2P,EAAuB/f,MAC7BY,KAAMwJ,GACNgL,YAAaqJ,GACbzF,eAAgBxC,EAChBoC,gBAAiBpC,EACjBvS,QAAQ,IAIV6R,GAAmBqB,GACnBrZ,QAAQe,IAAIsY,GACZrZ,QAAQe,IAAI2X,GACZhc,IAAa,GACbI,IAAc,GACdslB,KAzGVvB,IAAa,GACbU,IAAoB,GA2GVvhB,QAAQe,IAAI,kCAAmCmhB,EACjD,CAAE,MAAOniB,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,CASF,IACCa,OAAM,SAACb,GACNC,QAAQe,IAAI,6DACZf,QAAQe,IAAIhB,GACZrD,IAAa,GACbI,IAAc,EAChB,GACJ,CAAE,MAAOiD,GACWA,EAAMrG,KACHqG,EAAMe,QAC3Bd,QAAQe,IAAI,iFAEZrE,IAAa,GACbI,IAAc,EAChB,CAEJ,IAAC,kBA3HqB,OAAA8J,EAAAxG,MAAA,KAAAC,UAAA,KA6HhB+hB,GAAc,WAGlB/W,GAAUiH,QAAQpQ,MAAQ,GAC1ByJ,GAAW2G,QAAQpQ,MAAQ,GAC3B6J,GAAcuG,QAAQpQ,MAAQ,GAC9B4e,GAAqBxO,QAAQpQ,MAAQ,GAErC0G,IAAc,GACdwG,IAAoB,GACpBkS,IAAe,GAEfF,IAAuB,GACvBJ,IAAiB,GACjBE,IAAsB,GAEtB3U,GAAiB,IACjBG,GAAwB,GAO1B,EA6EM3G,GAAuB,SAACC,GACxBA,EAASC,SACED,EAASE,OACAC,SAGpBC,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,GAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,KAGJqG,EAAAA,EAAAA,SAAQlJ,EAAAA,MACLwD,MAAK,WAEJ3D,GAAS,SACX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,GAEN,GAgBA9C,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,EAfuB,WAAO,IAADC,EAC7BC,EAAyB,OAAnBD,EAAGpJ,EAAAA,KAAKkI,kBAAW,EAAhBkB,EAAkB5L,MACjC,GAAI6L,EAAQ,CACV,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,EAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,GAE1C,CAEE,OAAO,WACLhJ,GAAS,SACX,CAEJ,CAGsB0J,GAEpB,OAAO,WAELJ,GACF,CACF,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACR,IAAMyJ,EAAmBvB,IACrBuB,IACFC,GAAqBD,GACrB/L,EAAS+L,GAET0P,GADmB1P,GAGvB,GAAG,IAEH,IAAM0P,GAAsB,SAAC7W,GAC3B,IAAMG,GAAUC,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAYL,IAEhBiH,EAAAA,EAAAA,YAAW9G,GAAS,SAACC,GACvC,GAAIA,EAAIsG,SAAU,CAChB,IAAMxD,EAAO9C,EAAIuG,OAAOzD,KAClBK,EAAOnD,EAAIuG,OAAOpD,KACxBoG,GAAQzG,GACR+C,EAAQ1C,EAEV,MACE9C,QAAQe,IAAI,0BAEhB,GAIF,EAIM4F,GAAoB,eAAAwO,GAAA7V,EAAAA,EAAAA,UAAG,UAAO5E,GAClC,IACE,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,EAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC/B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,GAASwB,EAAAA,EAAAA,cAAaf,EAAKzD,MAE7B,MACEzC,QAAQe,IAAI,0BAEhB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CACF,IAAC,gBAjByBG,GAAA,OAAAiV,EAAA/U,MAAA,KAAAC,UAAA,KA6CpBgiB,GAAuB,WAAO,IAADC,EAAAC,EAC3BC,EAA0C,OAAxBF,EAAGvW,GAAcuG,cAAO,EAArBgQ,EAAuBpgB,MAC5CugB,EAAwD,OAA/BF,EAAGzB,GAAqBxO,cAAO,EAA5BiQ,EAA8BrgB,MAC1DwgB,EAA2BF,EAAqBA,EAAmBxhB,OAAS,EAElFggB,GACEwB,IAAuBC,GAA6BC,GAA4B,GAElFxB,GAAsBsB,IAAuBC,GAC7CrB,GAAuBsB,GAA4B,EAErD,EAwCMzL,GAAgB,WAAO,IAAD0L,EACpBC,EAA+B,OAArBD,EAAGhX,GAAW2G,cAAO,EAAlBqQ,EAAoBzgB,MAIvC,MAHmB,mDACQgV,KAAK0L,EAGlC,EAEMC,GAAoB,SAAC3gB,GACzB0G,GAAcqO,GAAc/U,GAQ9B,EAoFMia,GAASxY,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,GAER+a,MAAO,CACL/a,KAAM,KAGV,OACE/C,EAAAA,EAAAA,MAAC2C,EAAAA,mBAAkB,CAAAvD,SAAA,EACjBJ,EAAAA,EAAAA,MA3mBiB,WACnB,OAAOA,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAAA1D,UACZJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ+C,GAAWzC,QAASqD,GAAY9e,KAAK,KAAIhF,UACtDY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACgC,SAAS,MAAMpf,QAAS,YAAaqC,YAAa,EAAGC,YAAa,YAAY9F,SAAA,EAC3FJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAE/e,UAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAU4b,MAAI,EAAAxiB,SAAC,kEAC1FJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UAETJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAS5G,SAAC,yEAE7BJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,UACpDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,aAAgBqf,QAAS,UAAWlf,KAAK,IAAI4B,QAASue,GAAYriB,MAAO,CAAEF,MAAO,SAAWvB,SAAC,eAOnI,GA0lBiB,KACbY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE9DY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACF+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAI9BJ,EAAAA,EAAAA,KAACqf,EAAAA,QAAU,CACTlU,eAAgBA,KAElBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,EAAG,EAAG,EAAG,KAAM2D,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAC7FJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAKpF,EACL0gB,SAAUD,EAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAOlB9e,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,IAAK,GAAI2D,EAAG,CAAC,EAAG,EAAG,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAE1GJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAKoH,EACLkU,SAAUD,EAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAGlB9e,EAAAA,EAAAA,MAzFY,SAAHiY,GAAiC,IAA3B9S,EAAI8S,EAAJ9S,KAAM2a,EAAa7H,EAAb6H,cAC3B3N,GAA8ClV,EAAAA,EAAAA,WAAS,GAAMmV,GAAAjV,EAAAA,EAAAA,SAAAgV,EAAA,GAAtD8N,EAAe7N,EAAA,GAAE8N,EAAkB9N,EAAA,GAEpC+N,EAAc,WAClBD,GAAoBD,EACtB,EAEA,OACEjgB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UACjDJ,EAAAA,EAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UAC3BJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAO,CACNC,OAAQN,EACRO,QAAS,SAACC,GAAY,OACpBzf,EAAAA,EAAAA,MAACO,EAAAA,QAAIkG,EAAAA,EAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC/HJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,EAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC1H,EAETkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAE1CJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACvCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASvL,GAwDoB,CAAC+E,KAAMuF,EAAWoV,cAxIhB,YAEpBhX,EAAAA,EAAAA,SAAQlJ,EAAAA,MAAMwD,MAAK,WAEjB3D,GAAS,UACTpC,EAAS,IACTuO,GAAQ,GACV,IAAGtI,OAAM,SAACb,GAEV,GAGF,QAkIMzC,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAIjCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGod,SAAU,EAAGC,UAAW,EAAEhhB,UAEtCJ,EAAAA,EAAAA,KAACshB,EAAAA,WAAU,CAACvd,KAAM,EAAGwd,sBAAuB,CAAEJ,SAAU,GAAI/gB,UAI1DJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC+D,GAAG,IAAIJ,QAAQ,UAAU9G,OAAO,OAAMsD,UAGzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAO2D,EAAE,OAAO4d,OAAQ,EAAErhB,UACjDJ,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAACC,KAAM,EAAE3D,UACdJ,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAACE,GAAG,IAAG5D,UAGZY,EAAAA,EAAAA,MAACuD,EAAAA,QAAK,CAACrD,MAAO,EAAGhB,EAAE,OAAOC,WAAW,SAAQC,SAAA,EAC3CJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+d,UAAW,EAAG3Y,aAAc,EAAGnF,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,QAASihB,KAAM,SAASxiB,SAAC,kDAC7FJ,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACH0c,IAAKtT,GAAWlJ,gBAAiBsf,GAAkBrf,aA/LnD,WAAO,IAAD0gB,EAC7BxB,GAA4C,MAAZ,OAAjBwB,EAAAzX,GAAUiH,cAAO,EAAjBwQ,EAAmB5gB,OACpC,EA6L4GsB,YAAa,QAASkZ,kBAAoB2E,GAA4B,UAAd,YAAyB5E,kBAAmB,EAAG3d,SAAS,KAAKwD,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,WAAaC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,UAAY2D,YAAY,OAAOC,qBAAqB,QAAQ5D,MAAM,WAC5V3B,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACH0c,IAAKhT,GAAYvJ,aAzMhB,WACxBgN,IAAoB,GACpByT,IACF,EAsM2E1gB,gBAAiBsf,GAAkBxiB,MAAQkQ,GAA6B,UAAV,QAAqB3L,YAAa,QAASkZ,kBAAmBzF,KAAkB,YAAc,UAAWwF,kBAAmB,EAAG3d,SAAS,KAAKwD,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,WAAaC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,UAAY2D,YAAY,QAAQC,qBAAqB,WAGxYvF,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACH0c,IAAK5S,GAAe5J,gBAAiBsf,GAAkB/E,kBAAmByE,GAAsB,YAAc,UAAW1E,kBAAmB,EAAGra,aAlR3I,WAU3BigB,IACF,EAuQ4MvjB,SAAS,KAAK0E,YAAa,QAASV,KAAMzH,GAAO,OAAS,WAAYiH,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAMpH,GAAO,aAAe,SAAYqH,KAAM,EAAGC,GAAG,IAAI1D,MAAM,UAAY8D,mBAAmBzF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAM3H,IAASD,GAAK,EAACqC,UACzaJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAMpH,GAAO,aAAe,mBAAsBqH,KAAM,EAAGQ,GAAG,IAAIjE,MAAM,YACrF2D,YAAY,WAAWC,qBAAqB,OAAO5D,MAAM,WACvE3B,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CAACtE,EAAG,CACRuE,KAAM,MACNC,GAAI,MACJC,GAAI,OACH0c,IAAKmC,GAAsB3e,gBAAiBsf,GAAkB/E,kBAAmBqE,GAAgB,YAAc,UAAWtE,kBAAmB,EAAGra,aA5QrI,WAAO,IAAD4gB,EAAAC,EAClCT,EAA0C,OAAxBQ,EAAGjX,GAAcuG,cAAO,EAArB0Q,EAAuB9gB,MAC5CugB,EAAwD,OAA/BQ,EAAGnC,GAAqBxO,cAAO,EAA5B2Q,EAA8B/gB,MAC1DwgB,EAA2BF,EAAqBA,EAAmBxhB,OAAS,EAElFggB,GACEwB,IAAuBC,GAA6BC,GAA4B,GAElFxB,GAAsBsB,IAAuBC,EAC/C,EAmQoN3jB,SAAS,KAAK0E,YAAa,QAASV,KAAM2d,GAAQ,OAAS,WAAYne,kBAAkBhF,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAMge,GAAQ,aAAe,SAAY/d,KAAM,EAAGC,GAAG,IAAI1D,MAAM,UAAY8D,mBAAmBzF,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMyd,IAAUD,GAAM,EAAC/iB,UACrbJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAMge,GAAQ,aAAe,mBAAsB/d,KAAM,EAAGQ,GAAG,IAAIjE,MAAM,YACtF2D,YAAY,mBAAmBC,qBAAqB,QAAQ5D,MAAM,WAC9EgY,OACA3Z,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAEtDyR,KACC7R,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,yDAErDyjB,KACA7jB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,sDAErDujB,KACA3jB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,6BAGvDJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACC,SAAU,GAAIG,MAAO,QAASihB,MAAI,EAAAxiB,SAAC,gFACzCJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACiG,YAA+B,KAAlB8I,GAAuB,YAAc,UAAW/I,YAAa,EAAE7F,UAC/EY,EAAAA,EAAAA,MAACof,EAAAA,QAAI,CAACwF,KAAK,OAAOC,QAAS,MAAOxkB,eAAe,SAASH,MAAO,EAAEd,SAAA,EACjEJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACL4b,OAAQ,EACR3b,OAAQ,CAAElC,QAA0B,YAAjBoL,GAA8B,UAAY,gBAC7D5J,KAAK,KACLa,YAAY,IACZC,YAAY,QACZhG,EAAG,CAAEuE,KAAM,GAAIC,GAAI,GAAIC,GAAI,IAC3BgB,QApcY,WAKtCsJ,GAJa,YAKbG,GAAwB,WAC1B,EA8b4BxL,QAA0B,YAAjBoL,GAA8B,UAAY,UAAU5O,UAE7DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,gBAGpCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACL4b,OAAQ,EACR3b,OAAQ,CAAElC,QAA0B,WAAjBoL,GAA6B,UAAY,gBAC5D5J,KAAK,KACLa,YAAY,IACZC,YAAY,QACZhG,EAAG,CAAEuE,KAAM,GAAIC,GAAI,GAAIC,GAAI,IAC3BgB,QApeW,WAIrCsJ,GAHa,WAKbG,GAAwB,UAC1B,EA8d4BxL,QAA0B,WAAjBoL,GAA6B,UAAY,UAAU5O,UAE5DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,eAGpCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACL4b,OAAQ,EACR3b,OAAQ,CAAElC,QAA0B,SAAjBoL,GAA2B,UAAY,gBAC1D5J,KAAK,KACLa,YAAY,IACZC,YAAY,QACZhG,EAAG,CAAEuE,KAAM,GAAIC,GAAI,GAAIC,GAAI,IAC3BgB,QAveS,WAInCsJ,GAHa,SAKbG,GAAwB,QAC1B,EAie4BxL,QAA0B,SAAjBoL,GAA2B,UAAY,UAAU5O,UAE1DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,aAGpCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACL4b,OAAQ,EACR3b,OAAQ,CAAElC,QAA0B,SAAjBoL,GAA2B,UAAY,gBAC1D5J,KAAK,KACLa,YAAY,IACZC,YAAY,QACZhG,EAAG,CAAEuE,KAAM,GAAIC,GAAI,GAAIC,GAAI,IAC3BgB,QAtgBS,WAInCsJ,GAHa,SAIbG,GAAwB,QAC1B,EAigB4BxL,QAA0B,SAAjBoL,GAA2B,UAAY,UAAU5O,UAE1DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,aAGpCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACL4b,OAAQ,EACR3b,OAAQ,CAAElC,QAA0B,OAAjBoL,GAAyB,UAAY,gBACxD5J,KAAK,KACLa,YAAY,IACZC,YAAY,QACZhG,EAAG,CAAEuE,KAAM,GAAIC,GAAI,GAAIC,GAAI,IAC3BgB,QA9eO,WAKjCsJ,GAJa,OAKbG,GAAwB,MAC1B,EAwe4BxL,QAA0B,OAAjBoL,GAAyB,UAAY,UAAU5O,UAExDJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,gBAIxCY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAGG,eAAe,SAASsF,aAAc,EAAEvG,SAAA,EACxDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,WAAcmC,SAAU,CAAEnC,QAAS,WAAcoC,OAAQ,CAAEpC,QAAS,WAAcA,QAAQ,eAAewB,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CACnLuE,KAAM,IACNC,GAAI,IACJC,GAAI,KACHgB,QAASmf,GAAY1kB,UAAEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAAUvB,SAAC,aAC3DJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,WAAcmC,SAAU,CAAEnC,QAAS,WAAcoC,OAAQ,CAAEpC,QAAS,WAAcA,QAAQ,UAAUwB,KAAK,KAAKa,YAAY,IAAIC,YAAY,QAAQhG,EAAG,CAC9KuE,KAAM,IACNC,GAAI,IACJC,GAAI,KACHgB,QAASwe,GAAkBhe,SAAU5G,GAAWa,SAAEjB,IAAYa,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,MAASpF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,4CAyBnK,C,y1CCv5BkBzD,EAAAA,QAAWC,IAAI,UAAzBC,MAAR,IAWIipB,GAA6B,GAC7BC,GAA4B,GAC5BC,GAA+B,EAC/BC,GAAuB,GACvBC,GAA0B,GAE1BC,GAA4B,GAS5BC,GAAuB,GACvBC,GAA0B,GAC1Blb,GAAiB,kBACjBmb,GAAwB,GACxBC,GAAwB,GACxBC,GAAiB,GAEf7e,IAAYC,EAAAA,EAAAA,gBAEZ6e,GAAqB,SAAH1kB,GAA2C,IAArC8e,EAAO9e,EAAP8e,QAAS6F,EAAQ3kB,EAAR2kB,SAAUC,EAAU5kB,EAAV4kB,WAEzCC,GAA2Bxe,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMue,wBAAwB,IAEtF,OACE5mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQqG,EAA0B/F,QAASA,EAAQzgB,UACxDY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAC3BumB,KAGH3mB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SACtBsmB,UAKP1mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASkb,EAAShf,MAAO,CAAEF,MAAO,SAAUvB,SAAC,eAQlG,EAEM2mB,GAAqB,SAAHzd,GAA2C,IAArCuX,EAAOvX,EAAPuX,QAAS6F,EAAQpd,EAARod,SAAUC,EAAUrd,EAAVqd,WAEzCK,GAAqB5e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM2e,kBAAkB,IAE1E,OACEhnB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQyG,EAAoBnG,QAASA,EAAQzgB,UAClDY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAC3BumB,KAGH3mB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SACtBsmB,UAKP1mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASkb,EAAShf,MAAO,CAAEF,MAAO,SAAUvB,SAAC,eAQlG,EAEM6mB,GAAe,WACnB,IAAMC,GAAsB9e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6e,mBAAmB,IAG5E,OAEElnB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxgB,gBAAgB,qBAChB9C,KAAM,EACN4d,QAASuF,EAAsB,GAAK,OAAO9mB,UAG3CJ,EAAAA,GAAAA,KAAC8D,EAAAA,QAAM,CAACC,KAAM,EAAE3D,UACdY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACqE,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,SAAA,EACtEJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,WACzB3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAQvB,SAAC,gCAQhC,EAGMknB,GAAoB,SAAHzP,GAAsE,IAAhE0P,EAAkB1P,EAAlB0P,mBAErBpf,GAF6D0P,EAApB2P,qBAAoC3P,EAAd4P,gBAEpDjf,EAAAA,EAAAA,gBACXkf,GAAkBtf,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqf,eAAe,IAC9DC,GAAsBvf,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMsf,mBAAmB,IAC5E3qB,GAAsBC,EAAAA,EAAAA,WAAS2qB,EAAAA,GAAAA,WAAS1qB,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA9BE,EAAA,GAAQA,EAAA,GAIlB,OAAO8C,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACZC,cAAeH,EACfzhB,YAAaqhB,EAAqB,YAAc,YAChDxjB,KAAM,EACNgkB,cAAe,SAACnjB,GACdmhB,GAA4BnhB,EAC5BuD,GAAS6f,EAAAA,EAAAA,wBAAuBpjB,GAClC,EACAqjB,mBAAmB,sBACnB3iB,YAAY,sBACZ4iB,cAAe,CACbC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACDsnB,EAAgB/rB,KAAI,SAACoe,GAAI,OAExB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAM1D,EACMwO,GAAe,SAAHtQ,GAA4B,IAAtBuQ,EAAavQ,EAAbuQ,cAEhBrgB,GAAWK,EAAAA,EAAAA,eACXigB,GAAargB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMogB,UAAU,IACpDC,GAAiBtgB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqgB,cAAc,IAIlE,OAAO1oB,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACZC,cAAeY,EACfxiB,YAAasiB,EAAgB,YAAc,YAC3CzkB,KAAM,EACNgkB,cAAe,SAACnjB,GACdqhB,GAAuBrhB,EACvBuD,GAASwgB,EAAAA,EAAAA,mBAAkB/jB,GAC7B,EACAqjB,mBAAmB,iBACnB3iB,YAAY,iBACZ4iB,cAAe,CACbC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACDqoB,EAAW9sB,KAAI,SAACoe,GAAI,OAEnB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAK1D,EAGM6O,GAAgB,SAAH1Q,GAA2C,IAArC2Q,EAAY3Q,EAAZ2Q,aAAcC,EAAe5Q,EAAf4Q,gBAErCxrB,GAAwDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAhEyrB,EAAoBxrB,EAAA,GAAEyrB,EAAuBzrB,EAAA,GAG9C0rB,EAA0B,WAC9BD,GAAwB,EAC1B,EAEME,EAA2B,WAC/BF,GAAwB,EAC1B,EAIA,OAEEhoB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAASsjB,EAAyBllB,KAAM,EAAE3D,UACnDJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACI,MAAOikB,EAAcO,QAASH,OAGvCjoB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAK,CAACjC,OAAQwI,EAAsBlI,QAASqI,EAA0BG,YAAU,EAAAjpB,SAAA,EAChFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAAA5gB,UACZJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACnD,OAAQ,OAAQiH,KAAM,EAAE3D,UAE3BJ,EAAAA,GAAAA,KAACspB,GAAAA,SAAQ,CACPC,YAAYjR,EAAAA,EAAAA,cAAY,SAAAqD,GACtBmN,EAAgBnN,EAAI6N,YAEpBjD,GAAwB5K,EAAI6N,WAC5BN,GACF,GAAG,IACHO,aAAWjnB,EAAAA,EAAAA,SAAA,GACRqmB,EAAe,CAAEa,UAAU,EAAMC,mBAAmB,EAAMC,iBAAkB,YAE/EC,YAAa,SAACxJ,GAAS,MACP,SAAdA,GAAuBrgB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,iBAAiBxD,MAAM,aAAe3B,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,WAAY,EAE7ImoB,mBAAmB,EACnBC,YAAalB,EACbmB,cAAY,aAU1B,EAEMC,GAAoB,SAAHrR,GAShB,IARLsR,EAA8BtR,EAA9BsR,+BACAC,EAAsBvR,EAAtBuR,uBACAC,EAAkBxR,EAAlBwR,mBACAC,EAA8BzR,EAA9ByR,+BACAC,EAAyB1R,EAAzB0R,0BACA7B,EAAU7P,EAAV6P,WAKMtgB,GAJOyQ,EAAb2R,eAIiB/hB,EAAAA,EAAAA,gBACXgiB,GAAwBpiB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmiB,qBAAqB,IAChFhtB,GAA8BP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GACpCitB,GADQhtB,EAAA,GAAYA,EAAA,IACN2K,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoiB,WAAW,KAC5DxrB,GAA0EhC,EAAAA,EAAAA,WAAS,GAAMiC,GAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GAAlFyrB,EAA6BxrB,EAAA,GAAEyrB,EAAgCzrB,EAAA,GACtEG,GAAwDpC,EAAAA,EAAAA,WAAS,GAAMqC,GAAAnC,EAAAA,EAAAA,SAAAkC,EAAA,GACjEqoB,GADqBpoB,EAAA,GAAyBA,EAAA,IAC5B8I,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqf,eAAe,KAEpElc,GAAkDvO,EAAAA,EAAAA,WAAS,GAAMwO,GAAAtO,EAAAA,EAAAA,SAAAqO,EAAA,GAA1Dof,EAAiBnf,EAAA,GAAEof,EAAoBpf,EAAA,GAC9CC,GAAwBzO,EAAAA,EAAAA,UAAS,IAAG0O,GAAAxO,EAAAA,EAAAA,SAAAuO,EAAA,GAEpCG,GAFWF,EAAA,GAASA,EAAA,IAEoB1O,EAAAA,EAAAA,UAASwtB,IAAY3e,GAAA3O,EAAAA,EAAAA,SAAA0O,EAAA,GAAtDgd,EAAY/c,EAAA,GAAEgd,EAAehd,EAAA,GACpCC,GAAoD9O,EAAAA,EAAAA,WAAS,GAAM+O,GAAA7O,EAAAA,EAAAA,SAAA4O,EAAA,GAA5D+e,EAAkB9e,EAAA,GAAE+e,EAAqB/e,EAAA,GAChDC,GAAoDhP,EAAAA,EAAAA,WAAS,GAAMiP,GAAA/O,EAAAA,EAAAA,SAAA8O,EAAA,GAA5Dsb,EAAkBrb,EAAA,GAAE8e,GAAqB9e,EAAA,GAChDE,IAA0CnP,EAAAA,EAAAA,WAAS,GAAMoP,IAAAlP,EAAAA,EAAAA,SAAAiP,GAAA,GAAlDoc,GAAanc,GAAA,GAAE4e,GAAgB5e,GAAA,GACtCE,IAAsCtP,EAAAA,EAAAA,UAAS+oB,IAA6BxZ,IAAArP,EAAAA,EAAAA,SAAAoP,GAAA,GAArE2e,GAAW1e,GAAA,GAAE2e,GAAc3e,GAAA,GAGlCE,IAA4CzP,EAAAA,EAAAA,WAAS2qB,EAAAA,GAAAA,WAASjb,IAAAxP,EAAAA,EAAAA,SAAAuP,GAAA,GAAvD+a,GAAc9a,GAAA,GAAEye,GAAiBze,GAAA,GAClC6a,IAAuBtX,EAAAA,EAAAA,QAAO,MAW9Bmb,KAVkBnb,EAAAA,EAAAA,QAAO,MAUW,WAAO,IAADob,EAC9CX,GAAiC,GACP,OAA1BW,EAAAlB,EAAmBpV,UAAnBsW,EAA4BC,QAC5BxF,GAA4B,GAC5BqF,IAAkBxD,EAAAA,GAAAA,WAClB3B,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,EACxBtiB,GAAS6f,EAAAA,EAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,EAAAA,mBAAkB,KAC3BoC,GAAsB,GACtBC,IAAsB,GACtBC,IAAiB,EACnB,GAMMO,GAAwB,WAC5BX,GAAqB,EACvB,GAEAlrB,EAAAA,EAAAA,YAAU,WACR,IAQM8rB,EARUjB,EAAsB7uB,KAAI,SAACoe,GACzC,IACM2R,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAEtC,OAAO4R,WAAWD,EAAYE,OAAOvhB,QAAQ,IAAK,MAAQ,CAC5D,IAG4BwhB,QAAO,SAACC,EAAaC,GAAY,OAAKD,EAAcC,CAAY,GAAE,GACrDC,iBACzCb,GAAeM,GACfzF,GAA+ByF,CAEjC,GAAG,CAACjB,IAEJ,IAAMpN,IAAa9E,EAAAA,EAAAA,cAAY,WAAO,IAAD2T,EAAAC,EAInC,GAAyC,KAAX,OAA1BD,EAAA7B,EAAmBpV,cAAO,EAA1BiX,EAA4BrnB,QACU,IAAX,OAA1BsnB,EAAA9B,EAAmBpV,cAAO,EAA1BkX,EAA4BtnB,QACC,IAA7BmhB,IACwB,IAAxBE,GACH,CAAC,IAADkG,EAAAC,EAEyC,KAAX,OAA1BD,EAAA/B,EAAmBpV,cAAO,EAA1BmX,EAA4BvnB,QAAoD,IAAX,OAA1BwnB,EAAAhC,EAAmBpV,cAAO,EAA1BoX,EAA4BxnB,QACzEmmB,GAAsB,GAGS,IAA7BhF,IACFiF,IAAsB,GAGI,IAAxB/E,IACFgF,IAAiB,EAErB,KAEK,CACH,IAAMoB,EAAgBvG,GAA2BwG,WAAU,SAAAvS,GAAI,OAAIA,EAAKgM,GAA0B,IAElG,IAAuB,IAAnBsG,EAAsB,CAAC,IAADE,EAElB1T,GAAc2T,EAAAA,EAAAA,WAAU1G,IAC9BjN,EAAYwT,GAAetG,IAA6B,CACtD0G,YAAa1G,GACb6F,OAAkC,OAA5BW,EAAEnC,EAAmBpV,cAAO,EAA1BuX,EAA4B3nB,MACpC8W,KAAM6K,GACNmG,SAAUzG,IAEZH,GAA6BjN,EAC7B1Q,GAASwkB,EAAAA,EAAAA,0BAAyB7G,KAClC3d,GAAS6f,EAAAA,EAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,EAAAA,mBAAkB,KAC3ByB,EAAmBpV,QAAQuW,QAC3BxF,GAA4B,GAC5BE,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,CAE1B,KAAO,CAAC,IAADmC,EACL7B,GAAsB,GACtBC,IAAsB,GACtBC,IAAiB,GAEjB,IAAM4B,GAAOrqB,EAAAA,EAAAA,SAAA,GACVujB,GAA4B,CAC3B0G,YAAa1G,GACb6F,OAAkC,OAA5BgB,EAAExC,EAAmBpV,cAAO,EAA1B4X,EAA4BhoB,MACpC8W,KAAM6K,GACNmG,SAAUzG,KAGdH,GAA0B,GAAAgH,QAAAC,EAAAA,EAAAA,SAAOjH,IAA0B,CAAE+G,IAC7DnqB,QAAQe,IAAIqiB,IAEZ3d,GAASwkB,EAAAA,EAAAA,0BAAyB7G,KAElCsF,IAAkBxD,EAAAA,GAAAA,WAClBwC,EAAmBpV,QAAQuW,QAC3BxF,GAA4B,GAC5BE,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,EACxBtiB,GAAS6f,EAAAA,EAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,EAAAA,mBAAkB,IAG7B,CAEF,CAIF,GAAG,IAIGqE,IAAkB1U,EAAAA,EAAAA,cAAY,SAACyB,GACnCrX,QAAQe,IAAIsW,EAAK6R,QACjBxB,EAAmBpV,QAAQiF,eAAe,CAAElV,KAAMgV,EAAK6R,SACvDzjB,GAAS6f,EAAAA,EAAAA,wBAAuBjO,EAAK0S,cACrC1G,GAA4BhM,EAAK0S,YACjCtkB,GAASwgB,EAAAA,EAAAA,mBAAkB5O,EAAK2S,WAChCzG,GAAuBlM,EAAK2S,SAC5BnG,GAAwBxM,EAAK2B,KAC7BoN,EAAgB/O,EAAK2B,KACvB,GAAG,IAkBGuR,GAAwB,WAC5BtC,GAAiC,EAEnC,EACMuC,GAAuB,WAC3BvC,GAAiC,EAEnC,EACA,OACE3pB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLa,aAAc,EACd3C,KAAM,EACN4B,QArKmC,WACvCglB,GAAiC,EACnC,EAoKM1H,QAAS,UACTphB,MAAO,CAAEF,MAAO,SAChBuf,UAAUlhB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,WAAWC,KAAM,GAAIzD,MAAM,UAAWvB,UACpEY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAC,4BAAuB8qB,SAG/BlrB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQmK,EAA+B7J,QAASwK,GAAmCjmB,KAAM,OAAOhF,UACrGY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG,MAAO2D,EAAG,OAAOzD,SAAA,EACnDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAUxD,UAC/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,2BAK3CJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACTY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACnD,OAAQ,OAAOsD,SAAA,EAClBY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4hB,cAAe,EAAEzhB,SAAA,EACpBY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACpCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,SAAA,EAChHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,aAEnEJ,EAAAA,GAAAA,KAACotB,GAAgC,CAC/BC,QAAQ,cACRC,oBAAqBpD,EACrBqD,YAAapD,EACbqD,MAAM,eACNC,SAAU,cACVC,aAAcC,EAAAA,0BACdhH,WAAW,6BACX/d,KAAM8e,EACNuF,sBAAuBA,GACvBC,qBAAsBA,SAI1BltB,EAAAA,GAAAA,KAACsnB,GAAiB,CAACC,mBAAoBA,EAAoBC,qBAAsBA,GAAsBC,eAAgBA,GAAgB2D,kBAAmBA,SA0B5JpqB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACpCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,UAChHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAE,cAEtEJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CACJ0B,YAAa4kB,EAAqB,YAAc,YAChD/mB,KAAM,EACNsd,IAAK+I,EACLtlB,aAAculB,EACd/kB,YAAY,SACZ1B,QAAS,QACT2B,qBAAsB,YACtBP,kBAAkBhF,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,QAAUC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,oBAGlFX,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACpCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,UAChHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,YAGrEJ,EAAAA,GAAAA,KAAC4oB,GAAa,CAACE,gBAAiBA,EAAiBD,aAAcA,QAGjE7nB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACpCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,SAAA,EAChHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,aAGnEJ,EAAAA,GAAAA,KAACotB,GAAgC,CAC/BC,QAAQ,SACRC,oBAAqBhD,EACrBiD,YAAapD,EACbqD,MAAM,UACNC,SAAU,SACVC,aAAcC,EAAAA,0BACdhH,WAAW,wBACX/d,KAAM6f,EACNwE,sBAAuBA,GACvBC,qBAAsBA,SAK1BltB,EAAAA,GAAAA,KAACuoB,GAAY,CAACC,cAAeA,SAG/BxoB,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAASyX,GACTlB,YAAa,UACb9W,KAAM,KACNsB,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACNlH,MAAO,MACPswB,UAAW,SACXjM,UAAUlhB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMxD,MAAM,QAAQyD,KAAM,KAAOhF,SAChE,YAKHY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAAG,SAAA,EACFY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8e,cAAc,MAAMI,kBAAmB,EAAGjZ,YAAY,WAAWtC,QAAQ,UAASxD,SAAA,EACrFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,kBACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,YACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,UACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,aACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,cAEpDoqB,EAAsB7uB,KAAI,SAACoe,EAAM6T,GAChC,IACMlC,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAGtC,OACE/Y,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAa8e,cAAc,MAAMnb,QAAS,YAAawb,kBAAkB,WAAWD,kBAAmB,EACzG9d,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EAC/CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYe,eAC3CzrB,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAA,CAAC,OAAEsrB,EAAYE,WAC5C5rB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYhQ,QAC3C1b,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYgB,YAC3C1rB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG6b,WAAY,EAAGiG,QAAS,MAAMzlB,SAAA,EAE1CJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAAC3B,KAAM,EAAG0d,OAAQ,EAAG9b,QAAS,kBAAMqnB,GAAgBtB,EAAY,EAACtrB,SACxE,SAAA6Y,GAIM,IAHL4U,EAAS5U,EAAT4U,UACS5U,EAAT6U,UACS7U,EAAT8U,UAEA,OAAO/tB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAASiqB,EAAY,cAAgB,cAAennB,aAAc,EAAEtG,UACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAC,UAExD,KAGFJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAAC3B,KAAM,EAAG0d,OAAQ,EAAG9b,QAAS,kBAzLrC,SAAC8mB,GAExB,IAAMuB,EAAYlI,GAA2BwG,WAAU,SAACvS,GAAI,OAAKzd,OAAOD,KAAK0d,GAAM,KAAO0S,CAAW,IAErG,IAAmB,IAAfuB,EAAkB,CAEpB,IAAMnB,GAAOE,EAAAA,EAAAA,SAAOjH,IACpB+G,EAAQoB,OAAOD,EAAW,GAG1B7lB,GAASwkB,EAAAA,EAAAA,0BAAyBE,IAClC/G,GAA6B+G,CAC/B,CACF,CA4KoEqB,CAAiBxC,EAAYe,YAAY,EAACrsB,SACrF,SAAAoZ,GAIM,IAHLqU,EAASrU,EAATqU,UACSrU,EAATsU,UACStU,EAATuU,UAEA,OAAO/tB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAASiqB,EAAY,YAAc,YAAannB,aAAc,EAAEtG,UACnFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAC,YAExD,SA7BIwtB,EAkCd,aASN5sB,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAGrE,MAAO,OAAQwE,eAAgB,gBAAgBjB,SAAA,EAC/DJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,KACX/D,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS0lB,GACTnP,YAAa,OACb9W,KAAM,KACNsB,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EAAE3D,SACT,mBAQPJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQqK,EAAmB/J,QAAS2K,GAAuBnC,YAAU,EAAAjpB,UAC1EY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,aAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,cAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,0CAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS6lB,GACTtP,YAAa,WACbnY,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SACjB,QAGDJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS,WAET,EACA5B,KAAM,EAAGqB,KAAM,KAAM8W,YAAa,QAASxV,aAAc,EAAEtG,SAAC,sBAY5E,EAEMyH,GAAwB,WAC5B,IAAM/H,EAAOquB,EAAAA,mBAAmBrmB,YAChC,OAAIhI,EACYA,EAAK1C,OAGnBsF,QAAQe,IAAI,sCACL,KAEX,EAKM2qB,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BAErBC,GAAmB,SAAH5T,GAAyH,IAAnH6T,EAAwB7T,EAAxB6T,yBAA0BC,EAA2B9T,EAA3B8T,4BAA6BC,EAAiB/T,EAAjB+T,kBAAmBC,EAAchU,EAAdgU,eAAgBC,EAAiBjU,EAAjBiU,kBAO9GC,EAAyB,WAC7BJ,GAA4B,EAC9B,EAEA,OACEztB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,IAAK,EACLoI,MAAO,EACPc,GAAG,YACHzhB,aAAc,EACdvG,WAAW,SACXkB,eAAe,SACfsgB,QAASiN,EAAoB,OAAS,QAAQxuB,UAE9CJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QApBa,WAC5B8oB,GAA4B,EAC9B,EAkBiD1qB,KAAM,EAAE3D,UACjDJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,QAAQmtB,OAAQ,iBAI9E9uB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQiO,EAA0B3N,QAASgO,EAAwBxF,YAAU,EAAAjpB,UAClFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,oBAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,aACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAcihB,MAAI,EAAAxiB,SAAC,YAGhCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,aAAavB,SAAA,CAAC,mCACMY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,aAAcihB,MAAI,EAAAxiB,SAAA,CAAEuuB,EAAejrB,OAAO,OAAQ,8BAIpG1D,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASkpB,EAAwB3S,YAAa,WAAYnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QAGxGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+oB,EAAmB3qB,KAAM,EAAGqB,KAAM,KAAM8W,YAAa,QAASxV,aAAc,EAAEtG,SAAC,6BAS9G,EAEM2uB,GAAgB,SAAH/T,GAAyD,IAAnDgU,EAAmBhU,EAAnBgU,oBAAqBC,EAAsBjU,EAAtBiU,uBACtC9mB,GAAWK,EAAAA,EAAAA,eACT3L,EAAUF,EAAAA,QAAWC,IAAI,UAAzBC,MAEFqyB,GAAqB9mB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6mB,kBAAkB,IAC1EtiB,GAA8B3P,EAAAA,EAAAA,WAAS,GAAK4P,GAAA1P,EAAAA,EAAAA,SAAAyP,EAAA,GAArCuiB,EAAOtiB,EAAA,GACR8hB,GADoB9hB,EAAA,IACHzE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMsmB,cAAc,KAE5DC,GAAoBxmB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMumB,iBAAiB,IAClEQ,GAAmBhnB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM+mB,gBAAgB,IAItEtiB,GAAgE7P,EAAAA,EAAAA,WAAS,GAAM8P,GAAA5P,EAAAA,EAAAA,SAAA2P,EAAA,GAAxE0hB,EAAwBzhB,EAAA,GAAE0hB,EAA2B1hB,EAAA,GAC5DE,GAA0ChQ,EAAAA,EAAAA,WAAS,GAAKiQ,GAAA/P,EAAAA,EAAAA,SAAA8P,EAAA,GAAjDoiB,EAAaniB,EAAA,GAAEoiB,EAAgBpiB,EAAA,GACtCE,GAAsCnQ,EAAAA,EAAAA,WAAS,GAAMoQ,GAAAlQ,EAAAA,EAAAA,SAAAiQ,EAAA,GAA9CmiB,EAAWliB,EAAA,GAAEmiB,EAAcniB,EAAA,GAClCE,GAAoCtQ,EAAAA,EAAAA,UAASN,EAAAA,QAAWC,IAAI,UAAUC,OAAM2Q,GAAArQ,EAAAA,EAAAA,SAAAoQ,EAAA,GAArEkiB,EAAUjiB,EAAA,GAAEkiB,EAAaliB,EAAA,GAChCE,GAA8CzQ,EAAAA,EAAAA,WAAS,GAAM0Q,GAAAxQ,EAAAA,EAAAA,SAAAuQ,EAAA,GAArCiiB,GAAFhiB,EAAA,GAAoBA,EAAA,IAC1CE,GAA0C5Q,EAAAA,EAAAA,UAAS,IAAG6Q,IAAA3Q,EAAAA,EAAAA,SAAA0Q,EAAA,GAA/C+hB,GAAa9hB,GAAA,GAAE+hB,GAAgB/hB,GAAA,GACtCG,IAAkDhR,EAAAA,EAAAA,WAAS,GAAMiR,IAAA/Q,EAAAA,EAAAA,SAAA8Q,GAAA,GAA1D6hB,GAAiB5hB,GAAA,GAAE6hB,GAAoB7hB,GAAA,GAC9CC,IAAwDlR,EAAAA,EAAAA,WAAS,GAAMmR,IAAAjR,EAAAA,EAAAA,SAAAgR,GAAA,GAAhE6hB,GAAoB5hB,GAAA,GAAE6hB,GAAuB7hB,GAAA,GAE9C8hB,IAAmB5X,EAAAA,EAAAA,cAAY,SAACnU,GAGpCwrB,GAAmB,GACnBE,GAAiB1rB,GACjB4rB,IAAqB,EAGvB,GAAG,IAEGlR,GAASxY,EAAAA,QAAWC,OAAO,CAC/B6pB,SAAU,CACR1O,OAAQ,GACR3kB,OAAQ,GACRsiB,kBAAmB,OACnBD,kBAAmB,IAErBiR,KAAM,CACJ1P,YAAa,GAEf2P,iBAAkB,CAChB7uB,SAAU,IAEZ8uB,kBAAmB,CACjB9uB,SAAU,IAEZ+uB,UAAW,CACT1zB,MAAO,GACPC,OAAQ,IAEV0zB,iBAAkB,CAChB1zB,OAAQ,GACR0E,SAAU,IAEZ+E,UAAW,CACTxC,KAAM,EACN0sB,WAAY,IAGdC,IAAK,CACHlvB,SAAU,GACVmvB,WAAY,GACZ/O,QAAS,GAEXgP,KAAM,CACN,EACAC,cAAe,CACbh0B,MAAO,GACPC,OAAQ,GACR+J,gBAAiB,QACjBxF,eAAgB,SAChBlB,WAAY,UAEd2wB,iBAAkB,CAChBj0B,MAAO,GACPC,OAAQ,GACRkiB,SAAU,WACVqI,MAAO,EACPpI,IAAK,GAEP8R,UAAW,CACTl0B,MAAO,GACPC,OAAQ,GACRsH,WAAY,UACZ4a,SAAU,cAIRgS,GAAyB,eAAA3U,GAAAra,EAAAA,EAAAA,UAAG,YAEhC,GADAmG,GAAS8oB,EAAAA,EAAAA,wBAAsB,IACD,KAA1BtC,EAAejrB,OAAnB,CAIA,IAAMwtB,EAAU,CACdC,UAAW,QAEXnO,SAAU,IACVoO,UAAW,IACXC,eAAgB,GAAK1C,EAAejrB,OACpC4tB,eAAgB,CACdC,YAAY,EACZtnB,KAAM,WAIV,IACE,IAAMunB,QAAiBC,EAAAA,EAAAA,oBAAmBP,GAC1C,GAAIM,EAASE,UAEX,YADAhvB,QAAQe,IAAI,+BAEP,GAAI+tB,EAAS/uB,MAElB,YADAC,QAAQe,IAAI,sBAAuB+tB,EAAS/uB,OAEvC,IAAK+uB,EAASG,QAAqC,IAA3BH,EAASG,OAAOjuB,OAE7C,YADAhB,QAAQe,IAAI,uBAKd,IAAMmuB,GAAS7E,EAAAA,EAAAA,SAAO4B,GAChBkD,EAAWL,EAASG,OAAOh2B,IAAI,WAAD,IAAAghB,GAAA3a,EAAAA,EAAAA,UAAC,UAAO8vB,UACvBC,MAAMD,EAAM3tB,KAAKf,MAAK,SAAC4uB,GAAG,OAAKA,EAAIC,MAAM,KACtC7sB,KACP,KAAO,KAAO,GACZwsB,EAAUM,MAAK,SAACpT,GAAK,OAAKA,EAAM3a,MAAQ2tB,EAAM3tB,GAAG,KAE9DytB,EAAUhb,KAAKkb,GAGjB7B,IAAwB,EAE5B,IAAG,OAAF,SAAAttB,GAAA,OAAAga,EAAA7Z,MAAA,KAAAC,UAAE,CAAF,CAXoC,UAa/BovB,QAAQC,IAAIP,GAElB,IAAMQ,EAAgBT,EAAUlT,MAAM,EAAG,IACzCvW,GAASmqB,EAAAA,EAAAA,mBAAkBD,IAC3BjM,GAAuBiM,EAEnBA,EAAc3uB,QAAU,IAC1ByE,GAASoqB,EAAAA,EAAAA,sBAAoB,GAOjC,CAAE,MAAO9vB,GACPC,QAAQe,IAAI,sBAAuBhB,EACrC,CA1DA,CA2DF,IAAC,kBA/D8B,OAAA4Z,EAAAvZ,MAAA,KAAAC,UAAA,KAiEzByvB,IAAala,EAAAA,EAAAA,cAAY,WAC7B,GAAIqW,EAAejrB,OAAS,EAAG,CAI7B,IAAM+uB,GAAqB1F,EAAAA,EAAAA,SAAO4B,GAGlCxmB,GAASmqB,EAAAA,EAAAA,mBAAkBG,GAC7B,CAEF,GAAG,CAAChD,KAEJ9vB,EAAAA,EAAAA,YAAU,WACR,IAAM+yB,EAAoB,SAAH3V,GAAoB,IAAd4V,EAAM5V,EAAN4V,OAC3BjD,EAAciD,EAAO91B,MACvB,EAIA,OAFAF,EAAAA,QAAWi2B,iBAAiB,SAAUF,GAE/B,WACL/1B,EAAAA,QAAWk2B,oBAAoB,SAAUH,EAC3C,CACF,GAAG,KAEH/yB,EAAAA,EAAAA,YAAU,WACR6yB,IACF,GAAG,CAACA,KAIJ,IAAM9D,IAAoBpW,EAAAA,EAAAA,cAAY,WACpCmW,GAA4B,GAM5BQ,GAEF,GAAG,IAIG6D,IAAaxa,EAAAA,EAAAA,cAAY,SAACyB,GAI9B,OAAIwV,GAIAvvB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAgBqE,MAAOua,GAAO9E,KAAK3Z,UACrCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,SAAA,EAE/BJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,GAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,GAAAA,QAAUpb,WAAW4uB,WAEnChzB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,KAAM,EACNoI,OAAQ,EACRc,GAAG,qBACHzhB,aAAc,GACdvG,WAAW,SACXkB,eAAe,SAAQjB,UAEvBJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMstB,GAAuBlZ,EAAK5V,IAAI,EAAEwd,QAASwN,EAAU,QAAU,OAAO/uB,UAC9FJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,sBAAwBC,KAAM,EAAGzD,MAAO,QAASmtB,OAAQ,oBArB9E/U,EAAK5V,MAgCfnE,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAeqE,MAAOua,GAAO9E,KAAK3Z,UACpCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,SAAA,EAE/BJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,GAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,GAAAA,QAAUpb,WAAW4uB,WAInChzB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,KAAM,EACNoI,OAAQ,EACRc,GAAG,qBACHzhB,aAAc,GACdvG,WAAW,SACXkB,eAAe,SAAQjB,UAEvBJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMstB,GAAuBlZ,EAAK5V,IAAI,EAAEwd,QAASwN,EAAU,QAAU,OAAO/uB,UAC9FJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,sBAAwBC,KAAM,EAAGzD,MAAO,QAASmtB,OAAQ,oBAvB9E/U,EAAKje,GAgCrB,GAAG,IAEGq3B,IAAsB7a,EAAAA,EAAAA,cAAY,SAACyB,GAIvC,OAAIwV,GAIAvvB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAgBqE,MAAOua,GAAO9E,KAAK3Z,UACrCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,UAE/BJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,GAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,GAAAA,QAAUpb,WAAW4uB,aAT7BjZ,EAAK5V,MAqBfnE,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAeqE,MAAOua,GAAO9E,KAAK3Z,UACpCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,UAE/BJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,GAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,GAAAA,QAAUpb,WAAW4uB,aAT7BjZ,EAAKje,GAmBrB,GAAG,IAGGs3B,GAAoB,eAAA/V,GAAArb,EAAAA,EAAAA,UAAG,YAa3B,IACE,IAAMwvB,QAAiBC,EAAAA,EAAAA,oBAbT,CACdN,UAAW,QAEXnO,SAAU,IACVoO,UAAW,IACXC,eAAgB,GAChBC,eAAgB,CACdC,YAAY,EACZtnB,KAAM,YAMR,GAAIunB,EAASE,UAEX,YADAhvB,QAAQe,IAAI,+BAEP,GAAI+tB,EAAS/uB,MAElB,YADAC,QAAQe,IAAI,sBAAuB+tB,EAAS/uB,OAEvC,IAAK+uB,EAASG,QAAqC,IAA3BH,EAASG,OAAOjuB,OAE7C,YADAhB,QAAQe,IAAI,uBAYd,IAPA,IAAM4vB,EAAe7B,EAASG,OAAOzU,QACnC,SAAC4U,EAAOlE,EAAO0F,GAAI,OAAK1F,IAAU0F,EAAKhH,WAAU,SAACiH,GAAC,OAAKA,EAAEpvB,MAAQ2tB,EAAM3tB,GAAG,GAAC,IAIxEqvB,EAAiB,GACjBC,EAAa,GACV7F,EAAQ,EAAGA,EAAQyF,EAAa3vB,OAAQkqB,IAAS,CACxD,IAAM9O,EAAQuU,EAAazF,UACRmE,MAAMjT,EAAM3a,KAAKf,MAAK,SAAC4uB,GAAG,OAAKA,EAAIC,MAAM,KACtC7sB,KACP,KAAO,KAAO,IAC3BouB,EAAe5c,KAAKkI,GACpB2U,EAAW7c,KAAKgX,IAEhBqC,IAAwB,EAE5B,CAIA,IASMoC,EATemB,EAAe5C,MAAK,SAAC2C,EAAGG,GAG3C,OAFeD,EAAWD,EAAeG,QAAQJ,IAClCE,EAAWD,EAAeG,QAAQD,GAEnD,IAKmChV,MAAM,EAAG,IAE5C0H,GAAuBiM,EACnBA,EAAc3uB,OAAS,IACzByE,GAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,EAAAA,sBAAoB,KAG3BF,EAAc3uB,QAAU,KAC1ByE,GAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,EAAAA,sBAAoB,KAG/BpqB,GAASmqB,EAAAA,EAAAA,mBAAkBlM,IAE7B,CAAE,MAAO3jB,GACPC,QAAQe,IAAI,sBAAuBhB,EACrC,CACF,IAAC,kBA3EyB,OAAA4a,EAAAva,MAAA,KAAAC,UAAA,KAiFpBkwB,IAAyB3a,EAAAA,EAAAA,cAAY,SAACnU,IAE1CiiB,GAAuBA,GAAqBlJ,QAAO,SAACnD,GAElD,OAAOA,EAAK5V,MAAQA,CACtB,KAEyBT,OAAS,IAChCyE,GAASoqB,EAAAA,EAAAA,sBAAoB,IAGI,GAA/BnM,GAAqB1iB,SACvByE,GAASoqB,EAAAA,EAAAA,sBAAoB,IAC7BpqB,GAASyrB,EAAAA,EAAAA,uBAAqB,KAEhCzrB,GAASmqB,EAAAA,EAAAA,mBAAkBlM,IAe7B,GAAG,IAMH,OACEplB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAIEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGmC,YAAa,QAASD,YAAa,EAAE7F,UACjDJ,EAAAA,GAAAA,KAACshB,EAAAA,WAAU,CAACvd,KAAM,EAAGwd,sBAAuB,CAAEJ,SAAU,GAAI/gB,UAC1DY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACoB,eAAgB,SAAUlB,WAAY,SAAU0D,EAAG,OAAQ3D,EAAG,OAAOE,SAAA,EAExEJ,EAAAA,GAAAA,KAACuuB,GAAgB,CACfC,yBAA0BA,EAC1BC,4BAA6BA,EAC7BC,kBAAmBA,GACnBC,eAAgBA,EAChBC,kBAAmBA,KAErB5tB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACoB,eAAgB,SAAU8rB,UAAW,SAAUhtB,WAAY,SAAUshB,OAAQ,EAAErhB,SAAA,EAElFJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAACqgB,QAASiN,EAAoB,QAAU,OAAQjpB,QAASytB,GAAsBnuB,IAAIjF,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,wBAA0BC,KAAM,IAAKC,GAAG,IAAI1D,MAAM,WAG9JX,EAAAA,GAAAA,MAACsgB,EAAAA,WAAU,CACT+N,cAAeA,EACftrB,KAAM,EAAE3D,SAAA,EAERY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG4d,QAASuN,EAAqB,OAAS,OAAQryB,MAAO,OAAQsD,WAAY,SAAUkB,eAAgB,SAASjB,SAAA,EAGzHJ,EAAAA,GAAAA,KAAC6zB,EAAAA,iBAAgB,CAEfxS,IAAK2N,EACL8E,WAAYnF,EACZoF,eAAgB,IAChBC,YAAqB,IAARn3B,EACbo3B,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAsB,EACtBC,mBAAoB,EACpBC,oBAAqB,EACrBC,aAAajc,EAAAA,EAAAA,cAAY,WAClBiX,GACHC,GAAe,GAGfF,GAAiB,EAErB,GAAG,IACHkF,WAAWlc,EAAAA,EAAAA,cAAY,WACrBgX,GAAiB,EACnB,GAAG,IACHmF,cAAcnc,EAAAA,EAAAA,cAAY,SAAC1P,GAErBA,EAAKlF,SAAWkF,IAClBT,GAASmqB,EAAAA,EAAAA,mBAAkB1pB,IAC3Bwd,GAAuBxd,EAG3B,GAAG,IACH8rB,YAAa,SAAC3a,EAAM6T,GAClBsC,GAAiBtC,EAAMzpB,IACzB,EACAwwB,aAAc,SAAC5a,GAAI,OAAKA,EAAK5V,GAAG,EAChC2uB,YACExa,EAAAA,EAAAA,cAAY,SAACyB,EAAM6T,GAAK,OAAKkF,GAAW/Y,EAAM6T,EAAM,GAAE,OAE1D5tB,EAAAA,GAAAA,KAAC8D,EAAAA,QAAM,CAAA1D,UACLJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAACqgB,QAASyN,EAAmB,QAAU,OAAQzpB,QAASqrB,GAA2B/rB,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWE,GAAI,IAAKD,KAAM,GAAIzD,MAAM,gBAOjJ3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG4d,QAASuN,EAAqB,OAAS,OAAQryB,MAAO,OAAOuD,UAGzEJ,EAAAA,GAAAA,KAAC6zB,EAAAA,iBAAgB,CACfe,UAAU,EACVvT,IAAK2N,EACL8E,WAAYnF,EACZqF,YAAqB,IAARn3B,EACbo3B,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAsB,EACtBC,mBAAoB,EACpBC,oBAAqB,EACrBI,YAAa,SAAC3a,EAAM6T,GAClBsC,GAAiBtC,EAAMzpB,IACzB,EACAwwB,aAAc,SAAC5a,GAAI,OAAKA,EAAK5V,GAAG,EAChC2uB,YACExa,EAAAA,EAAAA,cAAY,SAACyB,EAAM6T,GAAK,OAAKuF,GAAoBpZ,EAAM6T,EAAM,GAAE,eAWzE5tB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,IAAK,EACLmI,KAAM,EACN1gB,aAAc,EACd9C,QAAS,qBACTzD,WAAW,SACXkB,eAAe,SACfsgB,QAASiN,EAAoB,OAAS,QAAQxuB,UAC9CY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACqe,WAAY,EAAGc,YAAa,EAAG/e,MAAO,QAASihB,MAAI,EAACiS,QAAM,EAACrzB,SAAU,GAAGpB,SAAA,CAAC,YAAUuuB,EAAejrB,OAAO,yCAYvH1D,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQuP,GAAmBjP,QAAS,kBAAMkP,IAAqB,EAAM,EAAE3qB,KAAM,OAAOhF,UAEzFY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,MAAO2D,EAAG,MAAOD,QAAS,qBAAsB8C,aAAc,GAAIib,QAAQ,OAAOxhB,WAAW,SAASkB,eAAe,SAASyzB,aAAc,SAAS10B,SAAA,EAC1JJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,CAAC9gB,MAAO,WAC1B3B,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CAEV7wB,OAAQ,CAAEC,IAAKyrB,IACfxrB,WAAW,UACXL,KAAM,EACNM,IAAKurB,GACL/rB,EAAG,IACH3D,EAAG,MANE0vB,UAaX5vB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQyP,GAAsBnP,QAAS,kBAAMoP,IAAwB,EAAM,EAAC7vB,UACjFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,aAAaxD,SAAA,EACnCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,aAAaxD,UACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,eAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACTrd,QAAS,aACTijB,gBAAiB,EACjBC,gBAAiB,aACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAcihB,MAAI,EAAAxiB,SAAC,aAGhCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAavB,SAAC,oDAK/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,aAAaxD,UACrDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAAS,kBAAMsqB,IAAwB,EAAM,EAAEpuB,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBASjI,EAGM40B,GAAmB,SAAH5W,GAA4G,IAAtG6W,EAAa7W,EAAb6W,cAAeC,EAAY9W,EAAZ8W,aAAcC,EAAoB/W,EAApB+W,qBAAsBC,EAAkBhX,EAAlBgX,mBAAoBC,EAAuBjX,EAAvBiX,wBAC3FC,GAAqBplB,EAAAA,EAAAA,QAAO,MAC5BqlB,GAAkBrlB,EAAAA,EAAAA,QAAO,MAE/B,OACElP,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAAEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ0U,EAAepU,QAASwU,EAAyBG,gBAAiBF,EAAoBG,cAAeL,EAAmBh1B,UACvIY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,gBAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACTrd,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,cAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,0BAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACwb,IAAKiU,EAAoBpZ,YAAa,UAAWnY,KAAK,IAAI4B,QAAS0vB,EAAyBxzB,MAAO,CAAEF,MAAO,SAAUvB,SAAC,iBAQrIJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ2U,EAAcrU,QAASsU,EAAsBK,gBAAiBD,EAAiBE,cAAeL,EAAmBh1B,UAC9HY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,aAAaxD,SAAA,EACnCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,aAAaxD,UACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,eAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACTrd,QAAS,aACTijB,gBAAiB,EACjBC,gBAAiB,aACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAcihB,MAAI,EAAAxiB,SAAC,aAGhCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAavB,SAAC,iCAK/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,aAAaxD,UACrDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACwb,IAAKkU,EAAiBrZ,YAAa,UAAWnY,KAAK,IAAI4B,QAASwvB,EAAsBtzB,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAQvI,EAGMs1B,GAAyB,SAAH7V,GAsDa,IArDvC8V,EAAiB9V,EAAjB8V,kBACAC,EAAqB/V,EAArB+V,sBACAC,EAAWhW,EAAXgW,YACAC,EAAkBjW,EAAlBiW,mBACAC,EAAYlW,EAAZkW,aACAC,EAAYnW,EAAZmW,aACAC,EAAUpW,EAAVoW,WACAC,EAAWrW,EAAXqW,YACAC,EAAWtW,EAAXsW,YACAC,EAAWvW,EAAXuW,YACAC,EAAYxW,EAAZwW,aACAC,EAAczW,EAAdyW,eACAC,EAAe1W,EAAf0W,gBACAC,EAAc3W,EAAd2W,eACAC,EAAc5W,EAAd4W,eACAC,EAAY7W,EAAZ6W,aACAC,EAAkB9W,EAAlB8W,mBACAC,EAAmB/W,EAAnB+W,oBACAC,EAAehX,EAAfgX,gBACAC,EAAUjX,EAAViX,WACAC,EAAmBlX,EAAnBkX,oBACAC,EAAUnX,EAAVmX,WACAC,EAAoBpX,EAApBoX,qBACAC,EAAmBrX,EAAnBqX,oBACAC,EAAoBtX,EAApBsX,qBACAC,EAAyBvX,EAAzBuX,0BACAC,EAAexX,EAAfwX,gBACAC,EAAWzX,EAAXyX,YACAC,EAAc1X,EAAd0X,eACAC,EAAY3X,EAAZ2X,aACAC,EAAY5X,EAAZ4X,aACAC,EAAW7X,EAAX6X,YACAC,EAAa9X,EAAb8X,cACAC,EAAc/X,EAAd+X,eACAC,EAAoBhY,EAApBgY,qBACAzC,EAAkBvV,EAAlBuV,mBACA0C,GAAejY,EAAfiY,gBACAC,GAAqBlY,EAArBkY,sBACAC,GAAgBnY,EAAhBmY,iBACAC,GAAwBpY,EAAxBoY,yBACAC,GAAuBrY,EAAvBqY,wBACAC,GAAetY,EAAfsY,gBACAC,GAASvY,EAATuY,UACAC,GAAUxY,EAAVwY,WACAC,GAAgBzY,EAAhByY,iBACAC,GAAa1Y,EAAb0Y,cACAC,GAAc3Y,EAAd2Y,eACAC,GAAiB5Y,EAAjB4Y,kBACAC,GAAqB7Y,EAArB6Y,sBACAC,GAA0B9Y,EAA1B8Y,2BACApO,GAAa1K,EAAb0K,cACAqO,GAAY/Y,EAAZ+Y,aACAC,GAAmBhZ,EAAnBgZ,oBACAC,GAA+BjZ,EAA/BiZ,gCAGM3wB,IAAWK,EAAAA,EAAAA,eAIXuwB,IAAW3wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM0wB,QAAQ,IAChDC,IAAkB5wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM2wB,eAAe,IAC9DC,IAAW7wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM4wB,QAAQ,IAEhDC,IAAmB9wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6wB,gBAAgB,IAChEC,IAAW/wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM8wB,QAAQ,IAChDC,IAAYhxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM+wB,SAAS,IAClDC,IAAYjxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMgxB,SAAS,IAClDC,IAAgBlxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMixB,aAAa,IAC1DC,IAAenxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkxB,YAAY,IACxDC,IAAoBpxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmxB,iBAAiB,IAClEC,IAAWrxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoxB,QAAQ,IAItDlrB,IAAkCtR,EAAAA,EAAAA,UAAS,IAAGuR,IAAArR,EAAAA,EAAAA,SAAAoR,GAAA,GAAvCmrB,GAASlrB,GAAA,GAAEmrB,GAAYnrB,GAAA,GAC9BG,IAA8C1R,EAAAA,EAAAA,WAAS,GAAM2R,IAAAzR,EAAAA,EAAAA,SAAAwR,GAAA,GAAtDirB,GAAehrB,GAAA,GAAEirB,GAAkBjrB,GAAA,GAC1CE,IAA0C7R,EAAAA,EAAAA,WAAS,GAAM8R,IAAA5R,EAAAA,EAAAA,SAAA2R,GAAA,GAAlDmmB,GAAalmB,GAAA,GAAE+qB,GAAgB/qB,GAAA,GACtCG,IAAwCjS,EAAAA,EAAAA,WAAS,GAAMkS,IAAAhS,EAAAA,EAAAA,SAAA+R,GAAA,GAAhDgmB,GAAY/lB,GAAA,GAAE4qB,GAAe5qB,GAAA,GACpCc,IAAsChT,EAAAA,EAAAA,UAAS,IAAGkT,IAAAhT,EAAAA,EAAAA,SAAA8S,GAAA,GAClDK,IADkBH,GAAA,GAAgBA,GAAA,IACRlT,EAAAA,EAAAA,UAAS,KAAGsT,IAAApT,EAAAA,EAAAA,SAAAmT,GAAA,GACtCI,IADYH,GAAA,GAAUA,GAAA,IACAtT,EAAAA,EAAAA,UAAS,IAAE0T,IAAAxT,EAAAA,EAAAA,SAAAuT,GAAA,GAmD3BspB,IAnDIrpB,GAAA,GAAQA,GAAA,IAmDA2H,EAAAA,EAAAA,aAAY,WAAD,IAAA2hB,GAAAj4B,EAAAA,EAAAA,UAAC,UAAOk4B,GAEnC/xB,IAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAEE,IAAM8iB,QAAkBC,EAAAA,EAAAA,UAAQ/Y,EAAAA,EAAAA,KAAI+M,GAAY8L,EAAU,MAGpDG,QAAalI,QAAQC,IACzB+H,EAAUG,MAAM3+B,IAAI,WAAD,IAAA4+B,GAAAv4B,EAAAA,EAAAA,UAAC,UAAOw4B,GAEzB,MAAO,CAAEr2B,UADSs2B,EAAAA,EAAAA,gBAAeD,GACnBE,SAAUF,EAAQr1B,KAClC,IAAC,gBAAAtC,GAAA,OAAA03B,EAAAz3B,MAAA,KAAAC,UAAA,EAHmB,KAOtBs3B,EAAKzJ,MAAK,SAAC2C,EAAGG,GAGZ,OAFkBiH,SAASpH,EAAEmH,UACXC,SAASjH,EAAEgH,SAE/B,IAEIL,EAAK32B,OAAS,GAChByE,IAAS8oB,EAAAA,EAAAA,wBAAsB,IAC/B9oB,IAASmqB,EAAAA,EAAAA,mBAAkB+H,IAC3BlyB,IAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,IAASoqB,EAAAA,EAAAA,sBAAoB,IAC7BnM,GAAuBiU,IAKvBlyB,IAAS8oB,EAAAA,EAAAA,wBAAsB,IAC/B9oB,IAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,IAASoqB,EAAAA,EAAAA,sBAAoB,IAC7BpqB,IAASmqB,EAAAA,EAAAA,mBAAkB,KAC3BnqB,IAAS8oB,EAAAA,EAAAA,wBAAsB,IAC/B7K,GAAuB,IAIzB1jB,QAAQe,IAAI42B,EAEd,CAAE,MAAO53B,GAEPC,QAAQD,MAAM,4BAA6BA,EAC7C,CACF,IAAC,gBAAAG,GAAA,OAAAq3B,EAAAn3B,MAAA,KAAAC,UAAA,EA/C6B,GA+C3B,KAGG63B,IAAoBtiB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAAa,IAAD64B,EAGhD,GAA0C,MAAZ,OAA1BA,EAAAzF,EAAmBpgB,cAAO,EAA1B6lB,EAA4Bj2B,OAAc,CAAC,IAADk2B,EAC5C3yB,IAASkP,EAAAA,EAAAA,yBAAuB,IAChCwiB,IAAmB,GACnBC,IAAiB,GACjBC,IAAgB,GAEhB,IAAM5jB,GAAIC,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBAAoBrW,EAAAA,EAAAA,OAAM,UAAW,KAAgC,OAA5BwjB,EAAE1F,EAAmBpgB,cAAO,EAA1B8lB,EAA4Bl2B,QAEvHm2B,QAAsB5jB,EAAAA,EAAAA,SAAQhB,GAEhC4kB,EAAchjB,OAChBrV,QAAQe,IAAI,sBAEZ0E,IAAS8oB,EAAAA,EAAAA,wBAAsB,IAC/B4I,IAAmB,GACnBE,IAAgB,GAChB5xB,IAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,IAASoqB,EAAAA,EAAAA,sBAAoB,IAC7BpqB,IAASmqB,EAAAA,EAAAA,mBAAkB,KAC3BlM,GAAuB,GACvBje,IAASkP,EAAAA,EAAAA,yBAAuB,KAUhC0jB,EAAcrkB,QAAQ,WAAD,IAAAskB,GAAAh5B,EAAAA,EAAAA,UAAC,UAAO+X,GAC3B,IAAMnR,EAAOmR,EAAKnR,OAUoB,SAAAqyB,IAUrC,OAVqCA,GAAAj5B,EAAAA,EAAAA,UAAtC,YACE,IACE,IAAMk5B,GAAgB74B,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS/kB,EAAKuyB,aACzC9hB,EAAAA,EAAAA,QAAO6hB,IACjBvyB,UACd6vB,GAAexjB,QAAQomB,YAAYlV,GAAwByN,QAAQ0H,GAAct2B,MAErF,CAAE,MAAOtC,GACPC,QAAQD,MAAM,6CAA8CA,EAC9D,CACF,KAACK,MAAA,KAAAC,UAAA,CAnBDy1B,GAAexjB,QAAQsmB,QAEvBzB,IAAmB,GAmBnB,IACE,IAAMqB,GAAgB74B,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS/kB,EAAKuyB,MAC7D3xB,QAAoB6P,EAAAA,EAAAA,QAAO6hB,GACjC,GAAI1xB,EAAYb,SAAU,CACxB,IAAM4yB,EAAyB/xB,EAAYZ,OAAO4yB,MAClD7B,GAAa4B,GACbrV,GAA0BqV,CAC5B,CACF,CAAE,MAAO94B,GACPC,QAAQD,MAAM,6CAA8CA,EAC9D,CAEAmzB,IA/B0B,WAOYqF,EAAAn4B,MAAC,KAADC,UAAA,CAyBtC04B,GACA9F,EAAkB3gB,QAAQomB,YAAYpC,GAAgBrF,QAAQ/qB,EAAK8yB,cACnEnD,GAAcvjB,QAAQomB,YAAYrC,GAASpF,QAAQ/qB,EAAKuyB,OAExDxD,EAAc3iB,QAAQomB,YAAYjV,GAA0BwN,QAAQgH,SAAS/xB,EAAK+yB,QAAS,MAC3F/D,EAAe5iB,QAAQomB,YAAYrF,EAAapC,QAAQ/qB,EAAKgzB,WAC7D3F,EAAWjhB,QAAQomB,YAAYnC,GAAS3M,WAAU,SAAAvS,GAAI,OAAIA,EAAKje,KAAO8M,EAAKizB,MAAM,KACjF3F,EAAYlhB,QAAQomB,YAAY/B,GAAU/M,WAAU,SAAAvS,GAAI,OAAIA,EAAKje,KAAO8M,EAAKkzB,OAAO,KACpF3F,EAAYnhB,QAAQomB,YAAYhC,GAAU9M,WAAU,SAAAvS,GAAI,OAAIA,EAAKje,KAAO8M,EAAKmzB,OAAO,KACpF3F,EAAYphB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKozB,iBAAmB,KACnE3F,EAAarhB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKqzB,eAAiB,KAClE3F,EAAethB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKszB,WAAa,KAChE3F,EAAgBvhB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKuzB,YAAc,KAClE3F,EAAexhB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKwzB,mBAAqBxzB,EAAKwzB,mBAAmB/xB,QAAQ,wBAAyB,KAAO,KACxIosB,EAAezhB,QAAQomB,YAAYpF,EAAarC,QAAQ/qB,EAAKyzB,WAC7D3F,EAAa1hB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK0zB,QAAU1zB,EAAK0zB,QAAQjyB,QAAQ,wBAAyB,KAAO,KAChHssB,EAAmB3hB,QAAQomB,YAAYlC,GAAiBvF,QAAQ/qB,EAAK2zB,eACrE3F,EAAoB5hB,QAAQomB,YAAY5B,GAAkB7F,QAAQ/qB,EAAK4zB,gBACvE3F,EAAgB7hB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK6zB,eAAiB,KACrE3F,EAAW9hB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK8zB,OAAS,KACxD3F,EAAoB/hB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK+zB,eAAiB/zB,EAAK+zB,eAAetyB,QAAQ,wBAAyB,KAAKuyB,WAAa,KAChJ5F,EAAWhiB,QAAQomB,YAAYjC,GAASxF,QAAQ/qB,EAAKi0B,OACrD5F,EAAqBjiB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKk0B,gBAAkBl0B,EAAKk0B,gBAAgBzyB,QAAQ,wBAAyB,KAAO,KACxI6sB,EAAoBliB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKm0B,eAAiBn0B,EAAKm0B,eAAe1yB,QAAQ,wBAAyB,KAAO,KACrI8sB,EAAqBniB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKo0B,gBAAkBp0B,EAAKo0B,gBAAgB3yB,QAAQ,wBAAyB,KAAO,KACxI+sB,EAA0BpiB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKq0B,sBAAwB,KACtF5F,EAAgBriB,QAAQomB,YAAY9B,GAAc3F,QAAQ/qB,EAAKs0B,YAC/D5F,EAAYtiB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKu0B,OAASv0B,EAAKu0B,OAAO9yB,QAAQ,wBAAyB,KAAO,KAE7GktB,EAAeviB,QAAQomB,YAAY7B,GAAajN,WAAU,SAAAvS,GAAI,OAAIA,EAAKxC,gBAAkB3O,EAAKw0B,SAAS7lB,aAAa,KACpHigB,EAAaxiB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKy0B,SAAW,KAC5D5F,EAAaziB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK00B,gBAAkB,KACnE5F,EAAY1iB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAK20B,SAAW30B,EAAK20B,SAASlzB,QAAQ,wBAAyB,KAAO,KACjHmc,GAAiB5d,EAAK20B,SAAW30B,EAAK20B,SAASlzB,QAAQ,wBAAyB,KAAO,GA5L/D,SAACtF,GAC/B,IAAMy4B,EAAez4B,EAAKsF,QAAQ,UAAW,IAG7C,GAAImzB,EAAaC,WAAW,KAE1B5H,EAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,SAF7C,CAOA,IAAM24B,EAAiBF,EAAa9e,MAAM,EAAG,GAEvCif,EAAiBD,EAAerzB,QAAQ,wBAAyB,KAEvE,GAAuB,KAAnBszB,EAAuB,CACzB,IAAMC,EAAkBjS,WAAW+R,GAAkBjE,GAErD,GAAKoE,MAAMD,GAOTlG,EAAY1iB,QAAQpQ,MAAQ+4B,EAC5B9H,EAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,SARhB,CAC3B,IAAM+4B,EAA2BF,EAAgBG,QAAQ,GAAG1zB,QAAQ,wBAAyB,KAE7FqtB,EAAY1iB,QAAQpQ,MAAQ+4B,EAC5B9H,EAAY7gB,QAAQiF,eAAe,CAAElV,KAAM+4B,GAC7C,CAKF,MAEEpG,EAAY1iB,QAAQpQ,MAAQ,GAC5BixB,EAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,IAvB7C,CAyBF,CA4JQi5B,CAAwBp1B,EAAK20B,SAAW30B,EAAK20B,SAAW,UA+BtCU,GAAdr1B,EAAKs1B,MACP3T,GAAcvV,QAAQiF,eAAe,CAAElV,KAAM,KAG7CwlB,GAAcvV,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKs1B,aAGnCD,GAAbr1B,EAAKu1B,KACPvF,GAAa5jB,QAAQiF,eAAe,CAAElV,KAAM,KAI5C6zB,GAAa5jB,QAAQiF,eAAe,CAAElV,KAAM6D,EAAKu1B,OAInDC,GAAcC,mBAAqBz1B,EAAKy1B,mBACxCD,GAAcE,iBAAmB11B,EAAK01B,iBACtCF,GAAcG,iBAAmB31B,EAAK21B,iBACtCH,GAAcI,iBAAmB51B,EAAK41B,iBACtCJ,GAAcK,cAAgB71B,EAAK61B,cACnCL,GAAcM,cAAgB91B,EAAK81B,cACnCN,GAAcO,cAAgB/1B,EAAK+1B,cACnCP,GAAcQ,cAAgBh2B,EAAKg2B,cACnCR,GAAcS,YAAcj2B,EAAKi2B,YACjCT,GAAcU,YAAcl2B,EAAKk2B,YACjCV,GAAcW,cAAgBn2B,EAAKm2B,cACnCX,GAAcY,YAAcp2B,EAAKo2B,YACjCZ,GAAca,aAAer2B,EAAKq2B,aAClCb,GAAcc,WAAat2B,EAAKs2B,WAChCd,GAAce,eAAiBv2B,EAAKu2B,eACpCf,GAAcgB,YAAcx2B,EAAKw2B,YACjChB,GAAciB,cAAgBz2B,EAAKy2B,cACnCjB,GAAckB,cAAgB12B,EAAK02B,cACnClB,GAAcmB,cAAgB32B,EAAK22B,cACnCnB,GAAcoB,aAAe52B,EAAK42B,aAClCpB,GAAcqB,eAAiB72B,EAAK62B,eACpCrB,GAAcsB,aAAe92B,EAAK82B,aAClCtB,GAAcuB,aAAe/2B,EAAK+2B,aAClCvB,GAAcwB,aAAeh3B,EAAKg3B,aAClCxB,GAAcyB,eAAiBj3B,EAAKi3B,eACpCzB,GAAc0B,eAAiBl3B,EAAKk3B,eACpC1B,GAAc2B,eAAiBn3B,EAAKm3B,eACpC3B,GAAc4B,aAAep3B,EAAKo3B,aAClC5B,GAAc6B,aAAer3B,EAAKq3B,aAClC7B,GAAc8B,eAAiBt3B,EAAKs3B,eACpC9B,GAAc+B,aAAev3B,EAAKu3B,aAClC/B,GAAcgC,kBAAoBx3B,EAAKw3B,kBACvChC,GAAciC,kBAAoBz3B,EAAKy3B,kBACvCjC,GAAckC,oBAAsB13B,EAAK03B,oBACzClC,GAAcmC,oBAAsB33B,EAAK23B,oBACzCnC,GAAcoC,oBAAsB53B,EAAK43B,oBACzCpC,GAAcqC,sBAAwB73B,EAAK63B,sBAC3CrC,GAAcsC,oBAAsB93B,EAAK83B,oBACzCtC,GAAcuC,oBAAsB/3B,EAAK+3B,oBACzCvC,GAAcwC,kBAAoBh4B,EAAKg4B,kBACvCxC,GAAcyC,kBAAoBj4B,EAAKi4B,kBACvCzC,GAAc0C,oBAAsBl4B,EAAKk4B,oBAEzCC,KAEAC,GAAoBj8B,KAAO6D,EAAK8yB,YAAc9yB,EAAK8yB,YAAc,GACjEuF,GAAal8B,KAAO6D,EAAKuyB,KAAOvyB,EAAKuyB,KAAO,GAC5CE,GAAct2B,KAAO6D,EAAK4yB,MAAQ5yB,EAAK4yB,MAAQ,GAC/C0F,GAAgBn8B,KAAO6D,EAAK+yB,QAAU/yB,EAAK+yB,QAAU,GACrDwF,GAAiBp8B,KAAO6D,EAAKgzB,SAAWhzB,EAAKgzB,SAAW,GACxDwF,GAAar8B,KAAO6D,EAAKy4B,KAAOz4B,EAAKy4B,KAAO,GAC5CC,GAAcv8B,KAAO6D,EAAK24B,MAAQ34B,EAAK24B,MAAQ,GAC/CC,GAAcz8B,KAAO6D,EAAK64B,MAAQ74B,EAAK64B,MAAQ,GAC/CL,GAAatlC,GAAK8M,EAAKizB,OAASjzB,EAAKizB,OAAS,GAC9CyF,GAAcxlC,GAAK8M,EAAKkzB,QAAUlzB,EAAKkzB,QAAU,GACjD0F,GAAc1lC,GAAK8M,EAAKmzB,QAAUnzB,EAAKmzB,QAAU,GACjD2F,GAAwB38B,KAAO6D,EAAKozB,gBAAkBpzB,EAAKozB,gBAAkB,GAC7E3V,GAA0Bzd,EAAK+4B,QAAU/4B,EAAK+4B,QAAU,GACxDC,GAAiB78B,KAAO6D,EAAKyzB,SAAWzzB,EAAKyzB,SAAW,GACxDwF,GAAqB98B,KAAO6D,EAAK2zB,aAAe3zB,EAAK2zB,aAAe,GACpEuF,GAAsB/8B,KAAO6D,EAAK4zB,cAAgB5zB,EAAK4zB,cAAgB,GACvEuF,GAAah9B,KAAO6D,EAAKi0B,KAAOj0B,EAAKi0B,KAAO,GAC5CmF,GAAkBj9B,KAAO6D,EAAKs0B,UAAYt0B,EAAKs0B,UAAY,GAC3D+E,GAAiBl9B,KAAO6D,EAAKw0B,SAAWx0B,EAAKw0B,SAAW,GACxD4D,GAAoBj8B,KAAO6D,EAAK8yB,YAAc9yB,EAAK8yB,YAAc,GACjE5V,GAA6Bld,EAAK4hB,sBAAwB5hB,EAAK4hB,sBAAwB,GACvFriB,IAASwkB,EAAAA,EAAAA,0BAAyB/jB,EAAK4hB,sBAAwB5hB,EAAK4hB,sBAAwB,WAEtFwP,GAAU3T,IAEhBle,IAASkP,EAAAA,EAAAA,yBAAuB,GAUlC,IAAG,OAAF,SAAAkC,GAAA,OAAAyhB,EAAAl4B,MAAA,KAAAC,UAAE,CAAF,CArMqB,GAwM1B,CAIF,IAAG,IAWGoyB,IAAuB7c,EAAAA,EAAAA,cAAY,WACvCyhB,IAAgB,GAEhBjE,GAGF,GAAG,IAEGT,IAA0B/c,EAAAA,EAAAA,cAAY,WAC1CwhB,IAAiB,GAEjBtB,GAAexjB,QAAQomB,YAAYlV,GAAwByN,QAAQ0H,GAAct2B,MAInF,GAAG,IAEGm9B,IAAoB5pB,EAAAA,EAAAA,cAAY,WAEpCqgB,IAEF,GAAG,IAGGwJ,IAAmB7pB,EAAAA,EAAAA,aAAY,WAAD,IAAA8pB,GAAApgC,EAAAA,EAAAA,UAAC,UAAO+X,GAC1C2e,KAIA,IACE,GAA0B,KAAtBuI,GAAal8B,KAEf,IAEE,IAAMm2B,GAAgB74B,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS5T,GAExDvQ,QAAoB6P,EAAAA,EAAAA,QAAO6hB,GACjC,GAAI1xB,EAAYb,SAAU,CACxB,IAAM4yB,EAAyB/xB,EAAYZ,OAAO4yB,MAClD7B,GAAa4B,GACbrV,GAA0BqV,CAM5B,CACF,CAAE,MAAO94B,GACPC,QAAQD,MAAM,6CAA8CA,EAC9D,CAOJ,CAAE,MAAOA,GACPC,QAAQD,MAAM,6CAA8CA,EAC9D,CAEF,IAAC,gBAAAiX,GAAA,OAAA0oB,EAAAt/B,MAAA,KAAAC,UAAA,EApCoC,GAoClC,CAAC4qB,EAAAA,0BAA2B+L,GAAWX,KAEpCsJ,IAAiC/pB,EAAAA,EAAAA,cAAY,SAACvT,GAElD,IACM24B,EADe34B,EAAKsF,QAAQ,UAAW,IACTqU,MAAM,EAAG,IAC7C0W,EAAmBpgB,QAAQpQ,MAAQ84B,EACnCrX,GAA0BqX,EAC1B7F,GAWF,GAAG,IAEGyK,IAAqBhqB,EAAAA,EAAAA,cAAY,WAEG,KAAtB2oB,GAAal8B,MAAemhB,GAAwBxiB,OAAS,IAG7EwiB,GAA0B,GAC1ByT,GAAa,IAIjB,GAAG,IAEH,OACE34B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAC1NJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa4xB,GAAiB7xB,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACK,gBAAiB+1B,GAAmBjY,aAAa,GAAGtB,IAAK+T,EAAoBtwB,aAAcu9B,GAAgC/8B,YAAY,mBAC1NG,mBACEzF,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAAC1G,UAAWy6B,GAAiB2I,cAAc,SAASn9B,KAAM,KAAM8W,YAAa,UAClFgF,UAAUlhB,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,WAAaC,KAAM,EAAGzD,MAAM,UACpEgE,QAAS,WACPi1B,KACApC,GAAexjB,QAAQomB,YAAYlV,GAAwByN,QAAQ0H,GAAct2B,MACnF,EAAE3E,SAAC,gBAITJ,EAAAA,GAAAA,KAACg1B,GAAgB,CAACI,mBAAoBA,EAAoBH,cAAeA,GAAe6E,iBAAkBA,GAAkB5E,aAAcA,GAAc6E,gBAAiBA,GAAiB1E,wBAAyBA,GAAyBF,qBAAsBA,SAMpQn0B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAO3f,YAAa,QAASiZ,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EACpFY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,qBAAsBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACzNJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa2yB,GAAqB5yB,YAAa,EAAE7F,UAC/EJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACg+B,aAAa,UAAUz+B,KAAM,EAAGsd,IAAK0V,EAAqBjyB,aAAcg0B,GAAiCl1B,QAAS,QAASoB,kBAAkBhF,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,QAAUC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,cAAgB2D,YAAY,iBAAiBC,qBAAsB,oBAIvRvE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAAYJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QACvMJ,EAAAA,GAAAA,KAACyiC,GAAe,CAACpV,QAAQ,OAAOC,oBAAqB4K,GAAyB3K,YAAa4K,GAAiB3K,MAAM,OAAOC,SAAU,OAAQC,aAAcC,EAAAA,0BAA2BhH,WAAW,qBAAqB/d,KAAMmwB,SAG5N/4B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKiX,GAAkB10B,QAAS,QAASG,KAAM,EAAGmC,YAAakyB,GAAWnyB,YAAa,EAAE7F,UAG5FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKkX,GACLoK,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMmwB,GACNsK,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB6wB,GAAal8B,KAAOqL,EACpBooB,GAAexjB,QAAQsmB,QACvBD,GAAct2B,KAAO,GACrBo9B,GAAiB/xB,EAGnB,GAAG,IACHkzB,kBAAkB,oBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EAAGsyB,gBAAc,EACjBc,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,kBAClBC,iBAAkB,CAAEtkB,UAAW,GAC/BukB,mBAAiB,EACjBC,QAAM,UAKZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,YAAaJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAExMJ,EAAAA,GAAAA,KAAC+jC,GAAoB,CACnB9L,yBAA0BA,GAC1BF,sBAAuBA,GACvBC,iBAAkBA,GAClBe,SAAUA,SAEd/4B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKoX,GAAmB70B,QAAS,QAASG,KAAM,EAAGmC,YAAamyB,GAAYpyB,YAAa,EAAE7F,UAG9FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CAEbtZ,QAASkZ,GACTjhB,IAAKmX,GAGLmK,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAGZoH,KAAM8wB,GACN2J,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrBirB,GAAct2B,KAAOqL,EAIrB8xB,IACF,GAAG,IACHoB,kBAAkB,qBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,mBAClBC,iBAAkB,CAAEtkB,UAAW,EAAGziB,MAAO,QACzCgnC,mBAAiB,EACjBC,QAAM,WAQlB,EAEM1W,GAAmC,SAAH4W,GAAqJ,IAA/Ird,EAAUqd,EAAVrd,WAAY/d,EAAIo7B,EAAJp7B,KAAM4kB,EAAKwW,EAALxW,MAAOC,EAAQuW,EAARvW,SAAUC,EAAYsW,EAAZtW,aAAcH,EAAWyW,EAAXzW,YAAaD,EAAmB0W,EAAnB1W,oBAAqBD,EAAO2W,EAAP3W,QAASH,EAAoB8W,EAApB9W,qBAAsBD,EAAqB+W,EAArB/W,sBAC5Jrc,GAA0C3T,EAAAA,EAAAA,WAAS,GAAM4T,GAAA1T,EAAAA,EAAAA,SAAAyT,EAAA,GAAlDqzB,EAAapzB,EAAA,GAAEqzB,EAAgBrzB,EAAA,GACtCE,GAAwC9T,EAAAA,EAAAA,WAAS,GAAM+T,GAAA7T,EAAAA,EAAAA,SAAA4T,EAAA,GAAhDozB,EAAYnzB,EAAA,GAAEozB,EAAepzB,EAAA,GACpCG,GAA8ClU,EAAAA,EAAAA,WAAS,GAAMmU,GAAAjU,EAAAA,EAAAA,SAAAgU,EAAA,GAAtDkzB,EAAejzB,EAAA,GAAEkzB,EAAkBlzB,EAAA,GAC1CG,GAAkCtU,EAAAA,EAAAA,WAAS,GAAMuU,GAAArU,EAAAA,EAAAA,SAAAoU,EAAA,GAA1CgzB,EAAS/yB,EAAA,GAAEgzB,EAAYhzB,EAAA,GAC9BG,GAAgD1U,EAAAA,EAAAA,WAAS,GAAM2U,GAAAzU,EAAAA,EAAAA,SAAAwU,EAAA,GAAxD8yB,EAAgB7yB,EAAA,GAAE8yB,GAAmB9yB,EAAA,GAC5CG,IAAkC9U,EAAAA,EAAAA,UAAS2L,GAAKoJ,IAAA7U,EAAAA,EAAAA,SAAA4U,GAAA,GAAzC4yB,GAAS3yB,GAAA,GAAE4yB,GAAY5yB,GAAA,GAC9BG,IAA4ClV,EAAAA,EAAAA,WAAS,GAAMmV,IAAAjV,EAAAA,EAAAA,SAAAgV,GAAA,GAApD0yB,GAAczyB,GAAA,GAAE0yB,GAAiB1yB,GAAA,GAElC2yB,IAAwBzsB,EAAAA,EAAAA,cAC5B,SAACyB,GACC6qB,IAAa,SAACI,GAEZ,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAE/D,GACF,GACA,IASIW,GAAkB,eAAAuqB,GAAAjjC,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuBqY,GAAA,OAAAmqB,EAAAniC,MAAA,KAAAC,UAAA,KAalB4V,IAAYL,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC5B,IAE2BkjC,EAFrBC,GAAc9iC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,GACrD+X,QAAqB/rB,EAAAA,EAAAA,QAAO8rB,GAC9BC,EAAaz8B,UAEfi8B,IAAgC,OAAnBM,EAAAE,EAAax8B,aAAM,EAAnBs8B,EAAsBzX,KAAa,GAEpD,IAAG,CAACC,EAAciX,KAUZvnB,IAAa9E,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC7B0iC,IAAoB,GAEpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,UACQ/Y,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,IAAQ7qB,EAAAA,EAAAA,SAAA,GAAKirB,EAAWkX,KAC/ED,IAAoB,GACpBR,GAAiB,GACjBM,GAAa,GAGb,IAAMzoB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,IACrEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,KAAIjW,eAC7DiW,EAAK,YAAWjW,eACnB,IAAIiW,EAAK,aAAYjW,cACrB,UAAUA,cACViW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI3BmD,GAAmBqB,EAErB,CAAE,MAAOtZ,GACPiiC,IAAoB,GACpBY,KACA5iC,QAAQD,MAAMA,EAChB,CAGF,IAAG,CAACirB,EAAciX,GAAWlX,EAAUJ,IAGjCkY,IAAsBjtB,EAAAA,EAAAA,cAAY,WACtCwsB,IAAkB,GAClBnsB,KACAurB,GAAiB,GACjBjX,GACF,GAAG,CAACgX,EAAeY,KAEbW,IAAuBltB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YACvCkrB,IACAgX,GAAiB,GACjBY,IAAkB,EAEpB,IAAG,CAACb,EAAeY,KAObY,IAAqBntB,EAAAA,EAAAA,cAAY,WACrC8rB,GAAgB,GAChBoB,KACAV,IAAkB,GAClB7X,GAEF,GAAG,IAEGyY,IAAsBptB,EAAAA,EAAAA,cAAY,WAAO,IAADqtB,EAC5CvB,GAAgB,GAChBmB,KACmB,OAAnBI,EAAApY,EAAYvY,UAAZ2wB,EAAqBpa,OACvB,GAAG,CAAC4Y,IAEEyB,IAA6BttB,EAAAA,EAAAA,cAAY,WAC7CgsB,GAAmB,GAEnBiB,IACF,GAAG,CAAClB,IAEEwB,IAA4BvtB,EAAAA,EAAAA,cAAY,WAC5CgsB,GAAmB,GACnBkB,KACApB,GAAgB,GAChBU,IAAkB,GAClB7X,GACF,GAAG,CAACoX,EAAiBF,EAAcU,KAE7BiB,IAAsBxtB,EAAAA,EAAAA,cAAY,WACtCksB,GAAa,GACbN,GAAiB,GACjBY,IAAkB,EACpB,GAAG,CAACP,EAAWN,EAAeY,KAExBS,IAAuBhtB,EAAAA,EAAAA,cAAY,WACvCksB,GAAa,GACbN,GAAiB,EACnB,GAAG,CAACK,EAAWN,IAET8B,GAAe,eAAAC,GAAAhkC,EAAAA,EAAAA,UAAG,YAAa,IAADikC,EAE5Br9B,EAA0B,OAAtBq9B,EAAG1Y,EAAYvY,cAAO,EAAnBixB,EAAqBrhC,MAC5BshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAGpD+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,GAAa,KAAT1S,EAAa,CAEf87B,IAAoB,GAEpB,IACE,IAAM0B,GAAqB/vB,EAAAA,EAAAA,YAAWqX,EAAcL,GAC9C8X,GAAc9iC,EAAAA,EAAAA,KAAI+jC,EAAoB/Y,SACtCxP,EAAAA,EAAAA,QAAOsnB,GAAW3iC,EAAAA,EAAAA,SAAA,GAAKirB,EAAW4Y,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAImZ,KAAc,CAAEI,OAAO,IAE7E,IAAMvqB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,QACjEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,SAAQjW,eAC7DiW,EAAK,UAASjW,eACjB,IAAIiW,EAAK,WAAUjW,cACnB,QAAQA,cACRiW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB2oB,IAAoB,GAEpBmB,KAIAnjC,QAAQe,IAAI,0BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,kCAAmCA,GACjDiiC,IAAoB,EACtB,CACF,CAMF,IAAC,kBAhEoB,OAAAsB,EAAAljC,MAAA,KAAAC,UAAA,KAkErB,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG1C,eAAe,SAASlB,WAAY,WAAYugB,YAAa,EAAEtgB,SAEzEykC,IAKA7kC,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WAJf3B,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACC,WAAW,EAAO7gC,QAAS4/B,GAAoBnlC,UAC/DJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAoBC,KAAM,EAAGzD,MAAM,eAShF3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ0jB,EACRpjB,QAAS2kB,GAAsBnc,YAAU,EAAAjpB,UACzCY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAEumB,OAEhC3mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAClEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,SAASzlB,SAAA,EAChCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACE,WAAY,WAAWC,UAC1BJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS8/B,GAAmBrlC,UAAEJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAGxG3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAEtG,UAEpEJ,EAAAA,GAAAA,KAACymC,EAAAA,QAAiB,CAChBniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAM+7B,GACNhQ,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAA4T,GAAA,IAAG3sB,EAAI2sB,EAAJ3sB,KAAM4sB,EAAID,EAAJC,KAAI,OAEvB3lC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,sBAAuBub,kBAAmB,EAAGC,kBAAmB,eAAgByG,QAAS,MAAOxkB,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EACpKJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMo/B,GAAsBhrB,EAAK,EAAC3Z,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eAClH3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,KACrD/Z,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACkhC,UAAWD,EAAKvmC,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBACzE,EAGR6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAuuB,GAAA,IAAGj+B,EAAIi+B,EAAJj+B,KAAI,OAAOg8B,GAAah8B,EAAK,GAAE,cAOjE5I,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS6/B,GAAsBtpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASmgC,GAAqB/hC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,oBAOpFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQgkB,EACR1jB,QAASykB,GAAqBllC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGRJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2/B,GAAsBppB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASyX,GAAYrZ,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWslC,EAAgCrkC,SAAC,mBAOvHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJ6G,YAAU,EACV9I,OAAQ4jB,EACRtjB,QAAS6kB,GACTlQ,gBAAiBjI,EAAYntB,UAC7BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,OAAKotB,QAEpCxtB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP9/B,UAAW,SACX9G,EAAG,OACHmhB,IAAKkM,EACLwZ,WAAS,EACTjiC,aAAcwoB,EACd0Z,WAAY,EACZ1hC,YAAY,+CAGhBtF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+/B,GAAqBxpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WAClGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASogC,GAAiB5mC,YAAWslC,EAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,mBAO5HJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8jB,EAAiBxjB,QAAS+kB,GAA2BxlC,UAClEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,yBAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,8BAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASigC,GAA4B/jC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAavH,EAEMqiC,GAAkB,SAAHwE,GAAwG,IAAlGtgB,EAAUsgB,EAAVtgB,WAAY/d,EAAIq+B,EAAJr+B,KAAM4kB,EAAKyZ,EAALzZ,MAAOC,EAAQwZ,EAARxZ,SAAUC,EAAYuZ,EAAZvZ,aAAcH,EAAW0Z,EAAX1Z,YAAaD,EAAmB2Z,EAAnB3Z,oBAAqBD,EAAO4Z,EAAP5Z,QAC5G9a,GAA0CtV,EAAAA,EAAAA,WAAS,GAAMuV,GAAArV,EAAAA,EAAAA,SAAAoV,EAAA,GAAlD0xB,EAAazxB,EAAA,GAAE0xB,EAAgB1xB,EAAA,GACtCG,GAAwC1V,EAAAA,EAAAA,WAAS,GAAM2V,GAAAzV,EAAAA,EAAAA,SAAAwV,EAAA,GAAhDwxB,EAAYvxB,EAAA,GAAEwxB,EAAexxB,EAAA,GACpCM,GAA8CjW,EAAAA,EAAAA,WAAS,GAAMkW,GAAAhW,EAAAA,EAAAA,SAAA+V,EAAA,GAAtDmxB,EAAelxB,EAAA,GAAEmxB,EAAkBnxB,EAAA,GAC1CI,GAAkCtW,EAAAA,EAAAA,WAAS,GAAMuW,GAAArW,EAAAA,EAAAA,SAAAoW,EAAA,GAA1CgxB,EAAS/wB,EAAA,GAAEgxB,EAAYhxB,EAAA,GAC9BG,GAAgD1W,EAAAA,EAAAA,WAAS,GAAM2W,GAAAzW,EAAAA,EAAAA,SAAAwW,EAAA,GAAxD8wB,EAAgB7wB,EAAA,GAAE8wB,EAAmB9wB,EAAA,GAC5CE,GAAkC7W,EAAAA,EAAAA,UAAS2L,GAAKmL,IAAA5W,EAAAA,EAAAA,SAAA2W,EAAA,GAAzC6wB,GAAS5wB,GAAA,GAAE6wB,GAAY7wB,GAAA,GAC9BG,IAA4CjX,EAAAA,EAAAA,WAAS,GAAMkX,IAAAhX,EAAAA,EAAAA,SAAA+W,GAAA,GAApD2wB,GAAc1wB,GAAA,GAAE2wB,GAAiB3wB,GAAA,GAElC4wB,IAAwBzsB,EAAAA,EAAAA,cAC5B,SAACyB,GACC6qB,IAAa,SAACI,GAEZ,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAE/D,GACF,GACA,IASIW,GAAkB,eAAAwsB,GAAAllC,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuB0Z,GAAA,OAAA+qB,EAAApkC,MAAA,KAAAC,UAAA,KAalB4V,IAAYL,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC5B,IAE2BmlC,EAFrBhC,GAAc9iC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,GACrD+X,QAAqB/rB,EAAAA,EAAAA,QAAO8rB,GAC9BC,EAAaz8B,UAEfi8B,IAAgC,OAAnBuC,EAAA/B,EAAax8B,aAAM,EAAnBu+B,EAAsB1Z,KAAa,GAEpD,IAAG,CAACC,EAAciX,KAUZvnB,IAAa9E,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC7B0iC,GAAoB,GAEpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,UACQ/Y,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,IAAQ7qB,EAAAA,EAAAA,SAAA,GAAKirB,EAAWkX,KAC/ED,GAAoB,GACpBR,GAAiB,GACjBM,GAAa,GAGb,IAAMzoB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,IACrEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,KAAIjW,eAC7DiW,EAAK,YAAWjW,eACnB,IAAIiW,EAAK,aAAYjW,cACrB,UAAUA,cACViW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI3BmD,GAAmBqB,EAErB,CAAE,MAAOtZ,GACPiiC,GAAoB,GACpBY,KACA5iC,QAAQD,MAAMA,EAChB,CAGF,IAAG,CAACirB,EAAciX,GAAWlX,EAAUJ,IAGjCkY,IAAsBjtB,EAAAA,EAAAA,cAAY,WACtCwsB,IAAkB,GAClBnsB,KACAurB,GAAiB,EACnB,GAAG,CAACD,EAAeY,KAEbW,IAAuBltB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YACvCkiC,GAAiB,GACjBY,IAAkB,EACpB,IAAG,CAACb,EAAeY,KAQbY,IAAqBntB,EAAAA,EAAAA,cAAY,WACrC8rB,GAAgB,GAChBoB,KACAV,IAAkB,EAEpB,GAAG,IAEGY,IAAsBptB,EAAAA,EAAAA,cAAY,WAAO,IAAD8uB,EAC5ChD,GAAgB,GAChBmB,KACmB,OAAnB6B,EAAA7Z,EAAYvY,UAAZoyB,EAAqB7b,OACvB,GAAG,CAAC4Y,IAEEyB,IAA6BttB,EAAAA,EAAAA,cAAY,WAC7CgsB,GAAmB,GAEnBiB,IACF,GAAG,CAAClB,IAEEwB,IAA4BvtB,EAAAA,EAAAA,cAAY,WAC5CgsB,GAAmB,GACnBkB,KACApB,GAAgB,GAChBU,IAAkB,EACpB,GAAG,CAACT,EAAiBF,EAAcU,KAE7BiB,IAAsBxtB,EAAAA,EAAAA,cAAY,WACtCksB,GAAa,GACbN,GAAiB,GACjBY,IAAkB,EACpB,GAAG,CAACP,EAAWN,EAAeY,KAExBS,IAAuBhtB,EAAAA,EAAAA,cAAY,WACvCksB,GAAa,GACbN,GAAiB,EACnB,GAAG,CAACK,EAAWN,IAET8B,GAAe,eAAAsB,GAAArlC,EAAAA,EAAAA,UAAG,YAAa,IAADslC,EAE5B1+B,EAA0B,OAAtB0+B,EAAG/Z,EAAYvY,cAAO,EAAnBsyB,EAAqB1iC,MAC5BshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAGpD+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,GAAa,KAAT1S,EAAa,CAEf87B,GAAoB,GAEpB,IACE,IAAM0B,GAAqB/vB,EAAAA,EAAAA,YAAWqX,EAAcL,GAC9C8X,GAAc9iC,EAAAA,EAAAA,KAAI+jC,EAAoB/Y,SACtCxP,EAAAA,EAAAA,QAAOsnB,GAAW3iC,EAAAA,EAAAA,SAAA,GAAKirB,EAAW4Y,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAImZ,KAAc,CAAEI,OAAO,IAE7E,IAAMvqB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,QACjEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,SAAQjW,eAC7DiW,EAAK,UAASjW,eACjB,IAAIiW,EAAK,WAAUjW,cACnB,QAAQA,cACRiW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB2oB,GAAoB,GAEpBmB,KAIAnjC,QAAQe,IAAI,0BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,kCAAmCA,GACjDiiC,GAAoB,EACtB,CACF,CAMF,IAAC,kBAhEoB,OAAA2C,EAAAvkC,MAAA,KAAAC,UAAA,KAkErB,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG1C,eAAe,SAASlB,WAAY,WAAYugB,YAAa,EAAEtgB,SAEzEykC,IAKA7kC,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WAJf3B,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACC,WAAW,EAAO7gC,QAAS4/B,GAAoBnlC,UAC/DJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAoBC,KAAM,EAAGzD,MAAM,eAShF3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ0jB,EACRpjB,QAAS2kB,GAAqBplC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAEumB,OAEhC3mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAClEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,SAASzlB,SAAA,EAChCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACE,WAAY,WAAWC,UAC1BJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS8/B,GAAmBrlC,UAAEJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAGxG3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAEtG,UAEpEJ,EAAAA,GAAAA,KAACymC,EAAAA,QAAiB,CAChBniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAM+7B,GACNhQ,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAAyU,GAAA,IAAGxtB,EAAIwtB,EAAJxtB,KAAM4sB,EAAIY,EAAJZ,KAAI,OAEvB3lC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,sBAAuBub,kBAAmB,EAAGC,kBAAmB,eAAgByG,QAAS,MAAOxkB,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EACpKJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMo/B,GAAsBhrB,EAAK,EAAC3Z,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eAClH3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,KACrD/Z,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACkhC,UAAWD,EAAKvmC,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBACzE,EAGR6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAkvB,GAAA,IAAG5+B,EAAI4+B,EAAJ5+B,KAAI,OAAOg8B,GAAah8B,EAAK,GAAE,cAOjE5I,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS6/B,GAAsBtpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASmgC,GAAqB/hC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,oBAOpFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQgkB,EACR1jB,QAASykB,GAAqBllC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGRJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2/B,GAAsBppB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASyX,GAAYrZ,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWslC,EAAgCrkC,SAAC,mBAOvHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ4jB,EACRtjB,QAAS6kB,GACTlQ,gBAAiBjI,EAAYntB,UAC7BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,OAAKotB,QAEpCxtB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP9/B,UAAW,SACX9G,EAAG,OACHmhB,IAAKkM,EACLwZ,WAAS,EACTjiC,aAAcwoB,EACd0Z,WAAY,EACZ1hC,YAAY,+CAGhBtF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+/B,GAAqBxpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WAClGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASogC,GAAiB5mC,YAAWslC,EAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,mBAO5HJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8jB,EAAiBxjB,QAAS+kB,GAA2BxlC,UAClEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,yBAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,8BAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASigC,GAA4B/jC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAavH,EAGMqnC,GAAqB,SAAHC,GAAkJ,IAA5I/gB,EAAU+gB,EAAV/gB,WAAY/d,EAAI8+B,EAAJ9+B,KAAM4kB,EAAKka,EAALla,MAAOC,EAAQia,EAARja,SAAUC,EAAYga,EAAZha,aAAcia,EAAeD,EAAfC,gBAAiBpa,EAAWma,EAAXna,YAAaD,EAAmBoa,EAAnBpa,oBAAqBsa,EAAuBF,EAAvBE,wBAAyBva,EAAOqa,EAAPra,QACzJ/Y,GAA0CrX,EAAAA,EAAAA,WAAS,GAAMsX,GAAApX,EAAAA,EAAAA,SAAAmX,EAAA,GAAlD2vB,EAAa1vB,EAAA,GAAE2vB,EAAgB3vB,EAAA,GACtCC,GAAwCvX,EAAAA,EAAAA,WAAS,GAAMwX,GAAAtX,EAAAA,EAAAA,SAAAqX,EAAA,GAAhD2vB,EAAY1vB,EAAA,GAAE2vB,EAAe3vB,EAAA,GACpCQ,GAA8ChY,EAAAA,EAAAA,WAAS,GAAMiY,GAAA/X,EAAAA,EAAAA,SAAA8X,EAAA,GAAtDovB,EAAenvB,EAAA,GAAEovB,EAAkBpvB,EAAA,GAC1CE,GAAkCnY,EAAAA,EAAAA,WAAS,GAAMoY,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAA1CmvB,EAASlvB,EAAA,GAAEmvB,EAAYnvB,EAAA,GAC9BG,GAAgDvY,EAAAA,EAAAA,WAAS,GAAMwY,GAAAtY,EAAAA,EAAAA,SAAAqY,EAAA,GAAxDivB,GAAgBhvB,EAAA,GAAEivB,GAAmBjvB,EAAA,GAC5CG,IAAkC3Y,EAAAA,EAAAA,UAAS2L,GAAKiN,IAAA1Y,EAAAA,EAAAA,SAAAyY,GAAA,GAAzC+uB,GAAS9uB,GAAA,GAAE+uB,GAAY/uB,GAAA,GAC9BE,IAA4C9Y,EAAAA,EAAAA,WAAS,GAAM+Y,IAAA7Y,EAAAA,EAAAA,SAAA4Y,GAAA,GAApD8uB,GAAc7uB,GAAA,GAAE8uB,GAAiB9uB,GAAA,GAElC+uB,IAAwBzsB,EAAAA,EAAAA,cAC5B,SAACyB,GACC6qB,IAAa,SAACI,GAEZ,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAE/D,GACF,GACA,IASIW,GAAkB,eAAAmtB,GAAA7lC,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuB+Z,GAAA,OAAAqrB,EAAA/kC,MAAA,KAAAC,UAAA,KAalB4V,IAAYL,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC5B,IAE2B8lC,EAFrB3C,GAAc9iC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,GACrD+X,QAAqB/rB,EAAAA,EAAAA,QAAO8rB,GAC9BC,EAAaz8B,UAEfi8B,IAAgC,OAAnBkD,EAAA1C,EAAax8B,aAAM,EAAnBk/B,EAAsBra,KAAa,GAEpD,IAAG,CAACC,EAAciX,KAUZvnB,IAAa9E,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC7B0iC,IAAoB,GAEpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,UACQ/Y,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,IAAQ7qB,EAAAA,EAAAA,SAAA,GAAKirB,EAAWkX,KAC/ED,IAAoB,GACpBR,GAAiB,GACjBM,GAAa,GAGb,IAAMzoB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,IACrEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,KAAIjW,eAC7DiW,EAAK,YAAWjW,eACnB,IAAIiW,EAAK,aAAYjW,cACrB,UAAUA,cACViW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI3BmD,GAAmBqB,EAErB,CAAE,MAAOtZ,GACPiiC,IAAoB,GACpBY,KACA5iC,QAAQD,MAAMA,EAChB,CAGF,IAAG,CAACirB,EAAciX,GAAWlX,EAAUJ,IAGjCkY,IAAsBjtB,EAAAA,EAAAA,cAAY,WACtCwsB,IAAkB,GAClBnsB,KACAurB,GAAiB,EACnB,GAAG,IAEGsB,IAAuBltB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YACvCkiC,GAAiB,GACjBY,IAAkB,EACpB,IAAG,IAQGW,IAAqBntB,EAAAA,EAAAA,cAAY,WACrC8rB,GAAgB,GAChBoB,KACAV,IAAkB,GAClBvX,EAAYvY,QAAQuW,QACpBoc,EAAgB3yB,QAAQuW,OAC1B,GAAG,IAEGma,IAAsBptB,EAAAA,EAAAA,cAAY,WACtC8rB,GAAgB,GAChBmB,IAEF,GAAG,IAEGK,IAA6BttB,EAAAA,EAAAA,cAAY,WAC7CgsB,GAAmB,GAEnBiB,IACF,GAAG,IAEGM,IAA4BvtB,EAAAA,EAAAA,cAAY,WAC5CgsB,GAAmB,GACnBkB,KACApB,GAAgB,GAChBU,IAAkB,EAEpB,GAAG,IAEGgB,IAAsBxtB,EAAAA,EAAAA,cAAY,WACtCksB,GAAa,GACbN,GAAiB,GACjBY,IAAkB,EACpB,GAAG,IAEGQ,IAAuBhtB,EAAAA,EAAAA,cAAY,WACvCksB,GAAa,GACbN,GAAiB,EACnB,GAAG,IAEG6B,GAAe,eAAAgC,GAAA/lC,EAAAA,EAAAA,UAAG,YAAa,IAADgmC,EAAAC,EAE5Br/B,EAA0B,OAAtBo/B,EAAGza,EAAYvY,cAAO,EAAnBgzB,EAAqBpjC,MAC5BsjC,EAAkC,OAA1BD,EAAGN,EAAgB3yB,cAAO,EAAvBizB,EAAyBrjC,MACpCshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IACtDglC,EAAgBD,EAAS/B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAG5D+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAGvD,GAAa,KAAT1S,GAA4B,KAAbs/B,EAAiB,CAClCxD,IAAoB,GACpB,IACE,IAAM0B,GAAqB/vB,EAAAA,EAAAA,YAAWqX,EAAcL,GAC9C8X,GAAc9iC,EAAAA,EAAAA,KAAI+jC,EAAoB/Y,GAEtC+a,EAAelC,EAAUvqC,KAAI,SAACiN,EAAMglB,GAAK,MAAM,CACnD9xB,GAAIqsC,EAAcva,GAClBzoB,KAAMyD,EACP,IAEKy/B,EAAe,CAAC,EACtBA,EAAa5a,GAAY4Y,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAIqb,UAEjCvqB,EAAAA,EAAAA,QAAOsnB,EAAakD,EAAc,CAAE/B,OAAO,IAOjD,IAAMvqB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,QACjEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,IAAIiW,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,SAAQjW,eAC7DiW,EAAK,UAASjW,eACjB,IAAIiW,EAAK,WAAUjW,cACnB,QAAQA,cACRiW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB2oB,IAAoB,GAEpBmB,KAIAnjC,QAAQe,IAAI,0BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,kCAAmCA,GACjDiiC,IAAoB,EACtB,CACF,CAIF,IAAC,kBA7EoB,OAAAqD,EAAAjlC,MAAA,KAAAC,UAAA,KA+ErB,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG1C,eAAe,SAASlB,WAAY,WAAYugB,YAAa,EAAEtgB,SAEzEykC,IAKA7kC,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WAJf3B,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS4/B,GAAqBiB,WAAW,EAAMpmC,UAC/DJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAoBC,KAAM,EAAGzD,MAAM,eAShF3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ0jB,EACRpjB,QAAS2kB,GAAqBplC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAEumB,OAEhC3mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAClEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,SAASzlB,SAAA,EAChCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACE,WAAY,WAAWC,UAC1BJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS8/B,GAAmBrlC,UAAEJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAGxG3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAEtG,UAEpEJ,EAAAA,GAAAA,KAACymC,EAAAA,QAAiB,CAChBniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAM+7B,GACNhQ,aAAc,SAAC5a,GAAI,OAAKA,EAAKje,EAAE,EAC/Bg3B,WAAY,SAAAwV,GAAA,IAAGvuB,EAAIuuB,EAAJvuB,KAAM4sB,EAAI2B,EAAJ3B,KAAI,OAEvB3lC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,sBAAuBub,kBAAmB,EAAGC,kBAAmB,eAAgByG,QAAS,MAAOxkB,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EACpKJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMo/B,GAAsBhrB,EAAK,EAAC3Z,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eAClH3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,EAAK5U,QAC1DnF,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACkhC,UAAWD,EAAKvmC,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBACzE,EAGR6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAiwB,GAAA,IAAG3/B,EAAI2/B,EAAJ3/B,KAAI,OAAOg8B,GAAah8B,EAAK,GAAE,cAOjE5I,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS6/B,GAAsBtpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASmgC,GAAqB/hC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,oBAOpFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQgkB,EACR1jB,QAASykB,GAAqBllC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGRJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2/B,GAAsBppB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASyX,GAAYrZ,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWslC,GAAgCrkC,SAAC,mBAOvHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ4jB,EACRtjB,QAAS6kB,GACTlQ,gBAAiBmS,EACjBviC,KAAM,KAAKhF,UACXY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,OAAKotB,QAGpCxsB,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAG0d,OAAQ,EAAErhB,SAAA,EACnCY,EAAAA,GAAAA,MAACC,EAAAA,QAAM,CAACC,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAS5G,SAAC,UAC3BJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP/iC,KAAM,EACNiD,UAAW,SACX9G,EAAG,OACHmhB,IAAKsmB,EACLZ,WAAS,EACTjiC,aAAc8iC,EACdZ,WAAY,EACZ1hC,YAAY,gDAGhBtE,EAAAA,GAAAA,MAACC,EAAAA,QAAM,CAACC,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAS5G,SAAC,UAC3BJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP/iC,KAAM,EACNiD,UAAW,SACX9G,EAAG,OACHmhB,IAAKkM,EACLwZ,WAAS,EACTjiC,aAAcwoB,EACd0Z,WAAY,EACZ1hC,YAAY,mDAKlBtF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS+/B,GACTxpB,YAAa,QACbnY,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SAAC,WAGnBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAASogC,GACT5mC,YAAWslC,GACX1gC,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SAAC,mBAU3BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8jB,EAAiBxjB,QAAS+kB,GAA2BxlC,UAClEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,yBAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,8BAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASigC,GAA4B/jC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAavH,EAIM2jC,GAAuB,SAAHyE,GAAyF,IAAnFvQ,EAAwBuQ,EAAxBvQ,yBAA0BF,EAAqByQ,EAArBzQ,sBAAuBC,EAAgBwQ,EAAhBxQ,iBAAkBe,EAAQyP,EAARzP,SAEjGhZ,GAA0C9iB,EAAAA,EAAAA,WAAS,GAAM+iB,GAAA7iB,EAAAA,EAAAA,SAAA4iB,EAAA,GAAlD0oB,EAAazoB,EAAA,GAAE0oB,EAAgB1oB,EAAA,GACtC2oB,GAA4C1rC,EAAAA,EAAAA,WAAS,GAAM2rC,GAAAzrC,EAAAA,EAAAA,SAAAwrC,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAoC9rC,EAAAA,EAAAA,WAAS,GAAM+rC,GAAA7rC,EAAAA,EAAAA,SAAA4rC,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwDlsC,EAAAA,EAAAA,WAAS,GAAMmsC,GAAAjsC,EAAAA,EAAAA,SAAAgsC,EAAA,GAAhEE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,GAA0DtsC,EAAAA,EAAAA,UAAS,GAAEusC,GAAArsC,EAAAA,EAAAA,SAAAosC,EAAA,GAA9DE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GACtDG,GAAgE1sC,EAAAA,EAAAA,UAAS,GAAE2sC,GAAAzsC,EAAAA,EAAAA,SAAAwsC,EAAA,GAApEE,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GAC5DG,IAA0C9sC,EAAAA,EAAAA,UAAS,IAAG+sC,IAAA7sC,EAAAA,EAAAA,SAAA4sC,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAoDltC,EAAAA,EAAAA,WAAS,GAAMmtC,IAAAjtC,EAAAA,EAAAA,SAAAgtC,GAAA,GAA5DE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAChDG,IAA0DttC,EAAAA,EAAAA,WAAS,GAAMutC,IAAArtC,EAAAA,EAAAA,SAAAotC,GAAA,GAAlEE,GAAqBD,GAAA,GAAEE,GAAwBF,GAAA,GACtDG,IAAoD1tC,EAAAA,EAAAA,WAAS,GAAM2tC,IAAAztC,EAAAA,EAAAA,SAAAwtC,GAAA,GACnEE,IADyBD,GAAA,GAAuBA,GAAA,IACpB3tC,EAAAA,EAAAA,WAAS,IAAM6tC,IAAA3tC,EAAAA,EAAAA,SAAA0tC,GAAA,GAC3CE,IADaD,GAAA,GAAWA,GAAA,IACU7tC,EAAAA,EAAAA,WAAS,IAAM+tC,IAAA7tC,EAAAA,EAAAA,SAAA4tC,GAAA,GAA/B3rC,IAAF4rC,GAAA,GAAcA,GAAA,IAC9BC,IAA4ChuC,EAAAA,EAAAA,WAAS,GAAMiuC,IAAA/tC,EAAAA,EAAAA,SAAA8tC,GAAA,GAApDpG,GAAcqG,GAAA,GAAEpG,GAAiBoG,GAAA,GACxCC,IAAgDluC,EAAAA,EAAAA,WAAS,GAAMmuC,IAAAjuC,EAAAA,EAAAA,SAAAguC,GAAA,GAAxD1G,GAAgB2G,GAAA,GAAE1G,GAAmB0G,GAAA,GAEtCC,GAAkB,eAAAC,GAAAtpC,EAAAA,EAAAA,UAAG,YAAa,IAADupC,EAErC,GAA6C,+BAAZ,OAA7BA,EAAAxT,EAAsB/iB,cAAO,EAA7Bu2B,EAA+B3mC,OAAuC,CAAC,IAAD4mC,EAIzCC,EAFzBC,GAAkBrpC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SAAuC,OAA/B6d,EAAEzT,EAAsB/iB,cAAO,EAA7Bw2B,EAA+B5mC,OACrG+mC,QAAyBtyB,EAAAA,EAAAA,QAAOqyB,GACtC,GAAIC,EAAiBhjC,SACnBuhC,IAAwC,OAAvBuB,EAAAE,EAAiB/iC,aAAM,EAAvB6iC,EAAyBjQ,QAAS,SAInD0O,GAAiB,GAGrB,CAGF,IAAC,kBAjBuB,OAAAoB,EAAAxoC,MAAA,KAAAC,UAAA,KAgClB6oC,IAAyBtzB,EAAAA,EAAAA,cAC7B,SAACyB,GACCmwB,IAAiB,SAAC2B,GAEhB,OADyBA,EAAc3uB,QAAO,SAACse,GAAK,OAAKA,IAAUzhB,CAAI,GAEzE,GACF,GACA,IAGIW,GAAkB,eAAAoxB,GAAA9pC,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuBga,GAAA,OAAAqvB,EAAAhpC,MAAA,KAAAC,UAAA,KAalBgpC,IAAkBzzB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAAa,IAADgqC,EAAAC,EAI9C,GAHAvB,IAAyB,GACzBhoC,QAAQe,IAAiC,OAA9BuoC,EAACjU,EAAsB/iB,cAAO,EAA7Bg3B,EAA+BpnC,OAEE,+BAAZ,OAA7BqnC,EAAAlU,EAAsB/iB,cAAO,EAA7Bi3B,EAA+BrnC,OACjC,IAAK,IAADsnC,EAAAC,EAAAC,QACI7pC,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SAAuC,OAA/Bue,EAAEnU,EAAsB/iB,cAAO,EAA7Bk3B,EAA+BtnC,OAAQ,CAAE42B,MAAOyO,KACpHS,IAAyB,GAEzB,IACQxvB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEjDS,EAAU,CACdvY,QAAQ,mBAAoB6hC,GAAatgC,KAAI,gCAA4D,OAA5DonC,EAA+BpU,EAAsB/iB,cAAO,EAA7Bm3B,EAA+BvnC,OAAK,IAChHqX,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,mBAAmB8tB,GAAatgC,KAAI,gCAA4D,OAA5DqnC,EAA+BrU,EAAsB/iB,cAAO,EAA7Bo3B,EAA+BxnC,OAAK,KAAI2S,cAC3G,eAAeA,cACf,QAAQA,cACR,SAASA,cACTwgB,EAAsB/iB,QAAQpQ,MAAM2S,cACpC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI3BmD,GAAmBqB,GAEnBswB,IACF,CAAE,MAAO5pC,GACPC,QAAQD,MAAMA,GACdioC,IAAyB,GACzB2B,IACF,MAIA3B,IAAyB,EAM7B,IAAG,CAAC/c,EAAAA,0BAA2Bsc,KAQzBqC,IAA2Bh0B,EAAAA,EAAAA,cAAY,WAAO,IAADi0B,EACjDC,GAAwBznC,KAAuC,OAAnCwnC,EAAGtU,EAAyBjjB,cAAO,EAAhCu3B,EAAkC3nC,MACjEymC,IAGF,GAAG,IAEGoB,IAA8Bn0B,EAAAA,EAAAA,cAAY,WAC9CgyB,IAAsB,EAExB,GAAG,IAGGoC,IAAuBp0B,EAAAA,EAAAA,cAAY,WACvCwsB,IAAkB,GAClBoE,GAAc,GACdmC,KACAjsC,IAAa,EACf,GAAG,IAEGutC,IAAwBr0B,EAAAA,EAAAA,cAAY,WACxCwsB,IAAkB,GAElBoE,GAAc,GACd9pC,IAAa,GACbsqC,GAAyB,SAAAkD,GAAO,OAAIA,EAAU,CAAC,IAC/C1C,GAAiB,GACnB,GAAG,IAEG2C,IAA0Bv0B,EAAAA,EAAAA,cAAY,WAC1CwsB,IAAkB,GAClB4D,GAAiB,GAEjBQ,GAAc,GACd9pC,IAAa,EACf,GAAG,IAEG0tC,IAA2Bx0B,EAAAA,EAAAA,cAAY,WAC3Co0B,KACAhE,GAAiB,GACjB1Q,EAAiBhjB,QAAQuW,QACzB+e,IAAsB,GACtBlrC,IAAa,GACb0qC,GAA4B,SAAA8C,GAAO,OAAIA,EAAU,CAAC,GAEpD,GAAG,IAEGG,IAAiCz0B,EAAAA,EAAAA,cAAY,WACjDwsB,IAAkB,GAClB4D,GAAiB,GACjBQ,GAAc,GACdlR,EAAiBhjB,QAAQuW,QACzB+d,GAAwB,EAG1B,GAAG,IAEG0D,IAAkC10B,EAAAA,EAAAA,cAAY,WAClDgxB,GAAwB,GACxBoD,KACAttC,IAAa,EACf,GAAG,IAEG6tC,IAA2B30B,EAAAA,EAAAA,cAAY,WAAO,IAAD40B,EACjDpI,IAAkB,GAE2B,+BAAZ,OAA7BoI,EAAAnV,EAAsB/iB,cAAO,EAA7Bk4B,EAA+BtoC,SACjCkkC,GAAkB,GAElBI,GAAc,GACd9pC,IAAa,GAIjB,GAAG,IAGGitC,IAA4B/zB,EAAAA,EAAAA,cAAY,WAC5CwwB,GAAkB,GAClB4D,KACAttC,IAAa,EACf,GAAG,IAEG+tC,GAAoB,eAAAC,GAAAprC,EAAAA,EAAAA,UAAG,YAAa,IAADqrC,EACjCzkC,EAA+B,OAA3BykC,EAAGrV,EAAiBhjB,cAAO,EAAxBq4B,EAA0BzoC,MACjCshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAGpD+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,GAAa,KAAT1S,EAAa,CACf87B,IAAoB,GACpB,IAAK,IAAD4I,EAAAC,EAAAC,EAEIC,GAAoBp3B,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SAC1D+f,GAAarrC,EAAAA,EAAAA,KAAIorC,EAAmD,OAAlCH,EAAErV,EAAyBjjB,cAAO,EAAhCs4B,EAAkC1oC,aACtEiZ,EAAAA,EAAAA,QAAO6vB,EAAY,CAAElS,MAAO6K,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAImZ,KAAc,CAAEI,OAAO,IAEvE,IAAMvqB,EAAU,CACdvY,QAAQ,iBAAkB6hC,GAAatgC,KAAI,0BAAyD,OAAzDwoC,EAAyBtV,EAAyBjjB,cAAO,EAAhCu4B,EAAkC3oC,OAAK,MAC3GqX,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,eACd,iBAAiB8tB,GAAatgC,KAAI,0BAAyD,OAAzDyoC,EAAyBvV,EAAyBjjB,cAAO,EAAhCw4B,EAAkC5oC,OAAK,OAAM2S,cACxG,cAAcA,cACd,QAAQA,cACR,QAAQA,cACR0gB,EAAyBjjB,QAAQpQ,MAAM2S,cACvC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmtB,IAAoB,GACpBhqB,GAAmBqB,GAEnBgxB,KAEArqC,QAAQe,IAAI,0BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,kCAAmCA,GACjDiiC,IAAoB,EACtB,CACF,CAIF,IAAC,kBA1DyB,OAAA0I,EAAAtqC,MAAA,KAAAC,UAAA,KAiE1B,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAEEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG1C,eAAe,SAASlB,WAAY,WAAYugB,YAAa,EAAEtgB,SAEzEykC,IAKC7kC,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WAJhB3B,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACC,WAAW,EAAO7gC,QAAS+mC,GAAqBtsC,UAChEJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAoBC,KAAM,EAAGzD,MAAM,eAQhF3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ0oB,EACRpoB,QAAS8rB,GAAsBvsC,UAC/BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,2BAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAClEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,SAAU/oB,OAAQ,IAAIsD,SAAA,EAC7CJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACE,WAAY,WAAWC,UAC1BJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAASknC,GAAwBzsC,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAE5G3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CAA6BxG,IAAK0W,EAAuBhQ,cAAeukB,GAA0BrkB,mBAAmB,cAAc3iB,YAAY,cAAc4iB,cAAe,CACjLC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACC24B,EAASp9B,KAAI,SAACoe,GAAI,OAEjB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAN3C0vB,MAWfzpC,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAEtG,UAEpEJ,EAAAA,GAAAA,KAACymC,EAAAA,QAAiB,CAChBniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAMqhC,GACNtV,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAA6a,GAAA,IAAG5zB,EAAI4zB,EAAJ5zB,KAAM4sB,EAAIgH,EAAJhH,KAAI,OAEvB3lC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,wBAAyBub,kBAAmB,EAAGC,kBAAmB,eAAgByG,QAAS,MAAOxkB,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EACtKJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMimC,GAAuB7xB,EAAK,EAAC3Z,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eACnH3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,KACrD/Z,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACkhC,UAAWD,EAAKvmC,UAACJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBACzE,EAGR6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAs1B,GAAA,IAAGhlC,EAAIglC,EAAJhlC,KAAI,OAAOshC,GAAiBthC,EAAK,GAAE,cAOrE5I,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASgnC,GAAuBzwB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACpGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASsnC,GAA0BlpC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,oBAUzFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQkoB,EACR5nB,QAASisB,GACTtX,gBAAiByC,EAAyB73B,UAC1CY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,iBAE/BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,SAAA,EAClEJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CAAgCxG,IAAK4W,EAA0BlQ,cAAe0kB,GAA6BxkB,mBAAmB,cAAc3iB,YAAY,cAAc4iB,cAAe,CAC1LC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACC24B,EAASp9B,KAAI,SAACoe,GAAI,OAEjB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAN3C8vB,IAUb7pC,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP9/B,UAAW,SACX9G,EAAG,OACHmhB,IAAK2W,EACL+O,WAAS,EACTjiC,aA9PqB,WAAO,IAAD+oC,EAAAC,EAAAC,EAC/BC,EAAkC,OAA3BH,EAAG7V,EAAiBhjB,UAAc,OAAP84B,EAAxBD,EAA0BjpC,YAAF,EAAxBkpC,EAAiCG,cACzB,OAAxBF,EAAA/V,EAAiBhjB,UAAjB+4B,EAA0B9zB,eAAe,CAAElV,KAAMipC,GAEnD,EA2PYhH,WAAY,EACZ1hC,YAAY,0CACZ/F,aAAY8qC,SAGhBrqC,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASmnC,GAA0B5wB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACvGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASwnC,GAAsBhuC,YAAWslC,GAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,mBASjIJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQsoB,EACRhoB,QAASwrB,GAA0BjsC,UACnCY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,yBAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGRJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS0mC,GAA2BnwB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACxGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASomC,GAAiBhoC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWsrC,GAAqCrqC,SAAC,mBAMjIJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8oB,EAAsBxoB,QAASmsB,GAAgC5sC,UAC5EY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,kBAI/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,2EAM9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASqnC,GAAiCnrC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAS5H,EAKMshC,GAA0B,CAC9B38B,KAAM,IAIFsgC,GAAe,CACnBtgC,KAAM,IAIFk8B,GAAe,CACnBl8B,KAAM,IAGFynC,GAA0B,CAC9BznC,KAAM,IAKFs2B,GAAgB,CACpBt2B,KAAM,IAGFm8B,GAAkB,CACtBn8B,KAAM,IAGFo8B,GAAmB,CACvBp8B,KAAM,IAGF68B,GAAmB,CACvB78B,KAAM,IAGF88B,GAAuB,CAC3B98B,KAAM,IAGF+8B,GAAwB,CAC5B/8B,KAAM,IAGFg9B,GAAe,CACnBh9B,KAAM,IAGFq8B,GAAe,CACnBr8B,KAAM,GACNjJ,GAAI,IAGAwlC,GAAgB,CACpBv8B,KAAM,GACNjJ,GAAI,IAGA0lC,GAAgB,CACpBz8B,KAAM,GACNjJ,GAAI,IAGAkmC,GAAoB,CACxBj9B,KAAM,IAGFk9B,GAAmB,CACvBl9B,KAAM,IAGFi8B,GAAsB,CAC1Bj8B,KAAM,IAIJg8B,GAAW,EACT3C,GAAgB,CACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbC,aAAa,EACbC,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZC,gBAAgB,EAChBC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,GAGjBoN,GAAiB,SAAHC,GAAuC,IAAjC9rB,EAAK8rB,EAAL9rB,MAAO+rB,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SACzCC,GAA8BrxC,EAAAA,EAAAA,UAASoxC,GAASE,GAAApxC,EAAAA,EAAAA,SAAAmxC,EAAA,GAAzCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAW1B,OACEvuC,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAClCsE,QAVgB,WAElB8oC,GAAYD,GACZJ,GAAUI,EAEZ,EAKyBpuC,UAErBJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACFoB,eAAe,SACflB,WAAW,SACXuG,aAAc,EACd9C,QAAS4qC,EAAU,UAAY,QAC/B/sB,OAAQ,EACRC,SAAU,SAGVE,QAAS,EACT3b,YAAa,EACbC,YAAasoC,EAAU,QAAU,YAAYpuC,UAE7CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAGHyF,UAAW,SACX0nC,UAAW,EACX/sC,MAAO6sC,EAAU,QAAU,YAAYpuC,SAEtCiiB,OAKX,EAIe,SAASssB,KACtB,IAAMC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAEvCsL,GAAWK,EAAAA,EAAAA,eAGXkC,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IAExDmkC,GAA0C5xC,EAAAA,EAAAA,WAAS,GAAM6xC,GAAA3xC,EAAAA,EAAAA,SAAA0xC,EAAA,GACzDE,GADoBD,EAAA,GAAkBA,EAAA,IACZ7xC,EAAAA,EAAAA,UAAS,KAAG+xC,GAAA7xC,EAAAA,EAAAA,SAAA4xC,EAAA,GAAxB1xC,GAAF2xC,EAAA,GAAUA,EAAA,IACtBC,GAAwBhyC,EAAAA,EAAAA,UAAS,IAAGiyC,GAAA/xC,EAAAA,EAAAA,SAAA8xC,EAAA,GAC9BlwC,GADKmwC,EAAA,GAASA,EAAA,GACPlwC,EAAQ,QACfuM,EAAQvM,EAAQ,OAEtBmwC,GAAwBlyC,EAAAA,EAAAA,UAASyN,GAAU0kC,GAAAjyC,EAAAA,EAAAA,SAAAgyC,EAAA,GAA9BvjC,GAAFwjC,EAAA,GAASA,EAAA,IAEd3vC,GAAWC,EAAAA,GAAAA,eAEjB2vC,GAAoCpyC,EAAAA,EAAAA,UAASN,EAAAA,QAAWC,IAAI,UAAUC,OAAMyyC,GAAAnyC,EAAAA,EAAAA,SAAAkyC,EAAA,GAEtErgB,GAFWsgB,EAAA,GAAeA,EAAA,IAEJp/B,EAAAA,EAAAA,WAE5Bm1B,GAAatgC,KAAO2F,EAEpB,IAAM6f,IAAgBra,EAAAA,EAAAA,QAAO,MACvB0oB,IAAe1oB,EAAAA,EAAAA,QAAO,MACtBsnB,IAAetnB,EAAAA,EAAAA,QAAO,MACtBunB,IAAevnB,EAAAA,EAAAA,QAAO,MACtBwnB,IAAcxnB,EAAAA,EAAAA,QAAO,MACrB2lB,IAAc3lB,EAAAA,EAAAA,QAAO,MACrBq/B,IAAer/B,EAAAA,EAAAA,QAAO,MACtBynB,IAAgBznB,EAAAA,EAAAA,QAAO,MACvB0nB,IAAiB1nB,EAAAA,EAAAA,QAAO,MACxBs/B,IAAgBt/B,EAAAA,EAAAA,QAAO,MACvBkmB,IAAclmB,EAAAA,EAAAA,QAAO,MACrBklB,IAAqBllB,EAAAA,EAAAA,QAAO,MAC5BmmB,IAAenmB,EAAAA,EAAAA,QAAO,MACtBomB,IAAiBpmB,EAAAA,EAAAA,QAAO,MACxBqmB,IAAkBrmB,EAAAA,EAAAA,QAAO,MACzBsmB,IAAiBtmB,EAAAA,EAAAA,QAAO,MACxBumB,IAAiBvmB,EAAAA,EAAAA,QAAO,MACxBwmB,IAAexmB,EAAAA,EAAAA,QAAO,MACtBymB,IAAqBzmB,EAAAA,EAAAA,QAAO,MAC5B0mB,IAAsB1mB,EAAAA,EAAAA,QAAO,MAC7B2mB,IAAkB3mB,EAAAA,EAAAA,QAAO,MACzB4mB,IAAa5mB,EAAAA,EAAAA,QAAO,MACpB6mB,IAAsB7mB,EAAAA,EAAAA,QAAO,MAC7Bu/B,IAAYv/B,EAAAA,EAAAA,QAAO,MACnB8mB,IAAa9mB,EAAAA,EAAAA,QAAO,MACpB+lB,IAAa/lB,EAAAA,EAAAA,QAAO,MACpBgmB,IAAchmB,EAAAA,EAAAA,QAAO,MACrBimB,IAAcjmB,EAAAA,EAAAA,QAAO,MACrBmnB,IAAkBnnB,EAAAA,EAAAA,QAAO,MACzB+mB,IAAuB/mB,EAAAA,EAAAA,QAAO,MAC9BgnB,IAAsBhnB,EAAAA,EAAAA,QAAO,MAC7BinB,IAAuBjnB,EAAAA,EAAAA,QAAO,MAC9BknB,IAA4BlnB,EAAAA,EAAAA,QAAO,MACnCw/B,IAAiBx/B,EAAAA,EAAAA,QAAO,MACxBonB,IAAcpnB,EAAAA,EAAAA,QAAO,MACrBqnB,IAAiBrnB,EAAAA,EAAAA,QAAO,MACxBylB,IAAoBzlB,EAAAA,EAAAA,QAAO,MAC3BioB,IAAkBjoB,EAAAA,EAAAA,QAAO,MACzB8nB,IAAmB9nB,EAAAA,EAAAA,QAAO,MAC1By/B,IAA0Bz/B,EAAAA,EAAAA,QAAO,MACjC0/B,IAA2B1/B,EAAAA,EAAAA,QAAO,MAClC2/B,IAAkB3/B,EAAAA,EAAAA,QAAO,MACzB4/B,IAAkB5/B,EAAAA,EAAAA,QAAO,MACzB6/B,IAAsB7/B,EAAAA,EAAAA,QAAO,MAC7B8/B,IAAmB9/B,EAAAA,EAAAA,QAAO,MAC1B+/B,IAAmB//B,EAAAA,EAAAA,QAAO,MAC1BggC,IAAuBhgC,EAAAA,EAAAA,QAAO,MAC9BigC,IAAuBjgC,EAAAA,EAAAA,QAAO,MAC9BkgC,IAAuBlgC,EAAAA,EAAAA,QAAO,MAC9BmgC,IAAsBngC,EAAAA,EAAAA,QAAO,MAC7Bia,IAAyBja,EAAAA,EAAAA,QAAO,MAChCogC,IAAoBpgC,EAAAA,EAAAA,QAAO,MAC3Bka,IAAqBla,EAAAA,EAAAA,QAAO,MAG5BuY,IAAargB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMogB,UAAU,IAEpDwQ,IAAW7wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM4wB,QAAQ,IAChD95B,IAAYiJ,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMlJ,SAAS,IAClD+5B,IAAmB9wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6wB,gBAAgB,IAChEC,IAAW/wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM8wB,QAAQ,IAChDC,IAAYhxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM+wB,SAAS,IAClDC,IAAYjxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMgxB,SAAS,IAClDC,IAAgBlxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMixB,aAAa,IAC1DC,IAAenxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkxB,YAAY,IACxDP,IAAkB5wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM2wB,eAAe,IAC9DQ,IAAoBpxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmxB,iBAAiB,IAClEC,IAAWrxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoxB,QAAQ,IAChD8W,IAAcnoC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkoC,WAAW,IAGtDC,GAAQC,MAAMC,KAAK,CAAEhtC,OAAQ6sC,GADnB,KAC2C,IAAK,SAACI,EAAG/iB,GAAK,OAAK2iB,GAAc3iB,CAAK,IACjGzH,GAA4BqqB,GAK5B,IAAMxa,GAAe,CAAC,OAAQ,SAGxBuC,IAAgBroB,EAAAA,EAAAA,QAAO,MACvBsoB,IAAiBtoB,EAAAA,EAAAA,QAAO,MAExB6nB,IAAwB7nB,EAAAA,EAAAA,QAAO,MAC/B+nB,IAA2B/nB,EAAAA,EAAAA,QAAO,MAGxC0gC,IAAwD3zC,EAAAA,EAAAA,UAAS,SAAQ4zC,IAAA1zC,EAAAA,EAAAA,SAAAyzC,GAAA,GAAlEE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GAGpDG,IAAwC/zC,EAAAA,EAAAA,UAAS,aAAYg0C,IAAA9zC,EAAAA,EAAAA,SAAA6zC,GAAA,GAAtDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAkCn0C,EAAAA,EAAAA,UAAS,SAAQo0C,IAAAl0C,EAAAA,EAAAA,SAAAi0C,GAAA,GAA5ChZ,GAASiZ,GAAA,GAAEC,GAAYD,GAAA,GAC9BE,IAAoCt0C,EAAAA,EAAAA,UAAS,SAAQu0C,IAAAr0C,EAAAA,EAAAA,SAAAo0C,GAAA,GAA9ClZ,GAAUmZ,GAAA,GAAEC,GAAaD,GAAA,GAChCE,IAAwCz0C,EAAAA,EAAAA,UAAS,SAAQ00C,IAAAx0C,EAAAA,EAAAA,SAAAu0C,GAAA,GAAlDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA0C70C,EAAAA,EAAAA,UAAS,SAAQ80C,IAAA50C,EAAAA,EAAAA,SAAA20C,GAAA,GAApDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAsCj1C,EAAAA,EAAAA,UAAS,SAAQk1C,IAAAh1C,EAAAA,EAAAA,SAAA+0C,GAAA,GAAhDE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA8Cr1C,EAAAA,EAAAA,UAAS,SAAQs1C,IAAAp1C,EAAAA,EAAAA,SAAAm1C,GAAA,GAAxDxa,GAAeya,GAAA,GAAEC,GAAkBD,GAAA,GAC1CE,IAAwCx1C,EAAAA,EAAAA,UAAS,SAAQy1C,IAAAv1C,EAAAA,EAAAA,SAAAs1C,GAAA,GAAlDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA4C51C,EAAAA,EAAAA,UAAS,SAAQ61C,IAAA31C,EAAAA,EAAAA,SAAA01C,GAAA,GAAtDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA4Ch2C,EAAAA,EAAAA,UAAS,SAAQi2C,IAAA/1C,EAAAA,EAAAA,SAAA81C,GAAA,GAAtDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA0Cp2C,EAAAA,EAAAA,UAAS,SAAQq2C,IAAAn2C,EAAAA,EAAAA,SAAAk2C,GAAA,GAApDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAwCx2C,EAAAA,EAAAA,UAAS,SAAQy2C,IAAAv2C,EAAAA,EAAAA,SAAAs2C,GAAA,GAAlDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAkD52C,EAAAA,EAAAA,UAAS,SAAQ62C,IAAA32C,EAAAA,EAAAA,SAAA02C,GAAA,GAA5DE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,IAAkDh3C,EAAAA,EAAAA,UAAS,SAAQi3C,IAAA/2C,EAAAA,EAAAA,SAAA82C,GAAA,GAA5DE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,IAA8Cp3C,EAAAA,EAAAA,UAAS,SAAQq3C,IAAAn3C,EAAAA,EAAAA,SAAAk3C,GAAA,GAAxDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,IAAoCx3C,EAAAA,EAAAA,UAAS,SAAQy3C,IAAAv3C,EAAAA,EAAAA,SAAAs3C,GAAA,GAA9CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAsD53C,EAAAA,EAAAA,UAAS,SAAQ63C,IAAA33C,EAAAA,EAAAA,SAAA03C,GAAA,GAAhEhc,GAAmBic,GAAA,GAAEC,GAAsBD,GAAA,GAClDE,IAAkC/3C,EAAAA,EAAAA,UAAS,SAAQg4C,IAAA93C,EAAAA,EAAAA,SAAA63C,GAAA,GAA5CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAkCn4C,EAAAA,EAAAA,UAAS,SAAQo4C,IAAAl4C,EAAAA,EAAAA,SAAAi4C,GAAA,GAA5CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAoCv4C,EAAAA,EAAAA,UAAS,SAAQw4C,IAAAt4C,EAAAA,EAAAA,SAAAq4C,GAAA,GAA9CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAoC34C,EAAAA,EAAAA,UAAS,SAAQ44C,IAAA14C,EAAAA,EAAAA,SAAAy4C,GAAA,GAA9CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAwD/4C,EAAAA,EAAAA,UAAS,SAAQg5C,IAAA94C,EAAAA,EAAAA,SAAA64C,GAAA,GAAlEE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GACpDG,IAAsDn5C,EAAAA,EAAAA,UAAS,SAAQo5C,IAAAl5C,EAAAA,EAAAA,SAAAi5C,GAAA,GAAhEE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAClDG,IAAwDv5C,EAAAA,EAAAA,UAAS,SAAQw5C,IAAAt5C,EAAAA,EAAAA,SAAAq5C,GAAA,GAAlEE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GACpDG,IAA4C35C,EAAAA,EAAAA,UAAS,SAAQ45C,IAAA15C,EAAAA,EAAAA,SAAAy5C,GAAA,GAAtDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAAsC/5C,EAAAA,EAAAA,UAAS,SAAQg6C,IAAA95C,EAAAA,EAAAA,SAAA65C,GAAA,GAAhDE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA0Cn6C,EAAAA,EAAAA,UAAS,SAAQo6C,IAAAl6C,EAAAA,EAAAA,SAAAi6C,GAAA,GAApDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAgDv6C,EAAAA,EAAAA,UAAS,SAAQw6C,IAAAt6C,EAAAA,EAAAA,SAAAq6C,GAAA,GAA1DE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAItCG,IAAqB1nC,EAAAA,EAAAA,QAAO,MAG5BooB,IAAmBpoB,EAAAA,EAAAA,QAAO,MAC1BuoB,IAAoBvoB,EAAAA,EAAAA,QAAO,MAC3B2nC,IAAsB3nC,EAAAA,EAAAA,QAAO,MAC7B4nC,IAAuB5nC,EAAAA,EAAAA,QAAO,MAC9B6nC,IAAuB7nC,EAAAA,EAAAA,QAAO,MAC9B8nC,IAA2B9nC,EAAAA,EAAAA,QAAO,MAClC+nC,IAA4B/nC,EAAAA,EAAAA,QAAO,MACnCgoC,IAAmBhoC,EAAAA,EAAAA,QAAO,MAC1BioC,IAAmBjoC,EAAAA,EAAAA,QAAO,MAC1BkoC,IAAoBloC,EAAAA,EAAAA,QAAO,MAC3BmoC,IAAoBnoC,EAAAA,EAAAA,QAAO,MAC3BooC,IAAwBpoC,EAAAA,EAAAA,QAAO,MAC/BqoC,IAAuBroC,EAAAA,EAAAA,QAAO,MAC9BsoC,IAA0BtoC,EAAAA,EAAAA,QAAO,OAEvCvQ,EAAAA,EAAAA,YAAU,WAER+uB,KAEAvmB,GAASwkB,EAAAA,EAAAA,0BAAyB,KAClCxkB,GAAS8oB,EAAAA,EAAAA,wBAAsB,IAC/BmQ,GAAatlC,GAAK,GAClBslC,GAAar8B,KAAO,GACpBu8B,GAAcxlC,GAAK,GACnBwlC,GAAcv8B,KAAO,GACrBy8B,GAAc1lC,GAAK,GACnB0lC,GAAcz8B,KAAO,GACrBk8B,GAAal8B,KAAO,GACpBs2B,GAAct2B,KAAO,GACrBm8B,GAAgBn8B,KAAO,GACvBo8B,GAAiBp8B,KAAO,GACxB68B,GAAiB78B,KAAO,GACxB88B,GAAqB98B,KAAO,GAC5B+8B,GAAsB/8B,KAAO,GAC7Bg9B,GAAah9B,KAAO,GACpBi9B,GAAkBj9B,KAAO,GACzBk9B,GAAiBl9B,KAAO,GACxBi8B,GAAoBj8B,KAAO,GAC3BzI,OAAOD,KAAK+hC,IAAe1nB,SAAQ,SAAA+hC,GACjCra,GAAcqa,IAAY,CAC5B,IAEA/1C,QAAQe,IAAI,UAEZ,IAAM2F,EAAmBvB,KACzB,GAAIuB,EAAkB,CACpBC,GAAqBD,GACrB/L,EAAS+L,EAEX,CACF,GAAG,IAGH,IAAMC,GAAoB,eAAAqvC,GAAA12C,EAAAA,EAAAA,UAAG,UAAO5E,GAClC,IACE,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,GAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC/B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,GAASwB,EAAAA,EAAAA,cAAaf,EAAKzD,MAE7B,MACEzC,QAAQe,IAAI,0BAEhB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CACF,IAAC,gBAjByBoa,GAAA,OAAA67B,EAAA51C,MAAA,KAAAC,UAAA,KAoBpB2rB,IAAoBpW,EAAAA,EAAAA,cAAY,WACpCnQ,GAASmqB,EAAAA,EAAAA,mBAAkB,KAC3BlM,GAAuB,GACvBje,GAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,EAAAA,sBAAoB,GAC/B,GAAG,IAGGuD,IAAqBxd,EAAAA,EAAAA,cAAY,WAAO,IAADqgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAG3CC,KACAC,KAEoB,OAApBtB,EAAAnhB,GAAaxiB,UAAb2jC,EAAsBptB,QACF,OAApBqtB,EAAAnhB,GAAaziB,UAAb4jC,EAAsBrtB,QACH,OAAnBstB,EAAAnhB,GAAY1iB,UAAZ6jC,EAAqBttB,QACF,OAAnButB,EAAAjjB,GAAY7gB,UAAZ8jC,EAAqBvtB,QAED,OAApBwtB,EAAAxJ,GAAav6B,UAAb+jC,EAAsBxtB,QACD,OAArBytB,EAAAxJ,GAAcx6B,UAAdgkC,EAAuBztB,QACJ,OAAnB0tB,EAAA7iB,GAAYphB,UAAZikC,EAAqB1tB,QACD,OAApB2tB,EAAA7iB,GAAarhB,UAAbkkC,EAAsB3tB,QACA,OAAtB4tB,EAAA7iB,GAAethB,UAAfmkC,EAAwB5tB,QACD,OAAvB6tB,EAAA7iB,GAAgBvhB,UAAhBokC,EAAyB7tB,QACH,OAAtB8tB,EAAA7iB,GAAexhB,UAAfqkC,EAAwB9tB,QACJ,OAApB+tB,EAAA5iB,GAAa1hB,UAAbskC,EAAsB/tB,QACC,OAAvBguB,EAAA1iB,GAAgB7hB,UAAhBukC,EAAyBhuB,QACP,OAAlBiuB,EAAA1iB,GAAW9hB,UAAXwkC,EAAoBjuB,QACO,OAA3BkuB,EAAA1iB,GAAoB/hB,UAApBykC,EAA6BluB,QACZ,OAAjBmuB,EAAAjK,GAAUz6B,UAAV0kC,EAAmBnuB,QACS,OAA5BouB,EAAA1iB,GAAqBjiB,UAArB2kC,EAA8BpuB,QACH,OAA3BquB,EAAA1iB,GAAoBliB,UAApB4kC,EAA6BruB,QACD,OAA5BsuB,EAAA1iB,GAAqBniB,UAArB6kC,EAA8BtuB,QAC9B6L,GAA0BpiB,QAAQpQ,MAAQ,OACpB,OAAtBk1C,EAAApK,GAAe16B,UAAf8kC,EAAwBvuB,QACL,OAAnBwuB,EAAAziB,GAAYtiB,UAAZ+kC,EAAqBxuB,QAErB0V,GAAal8B,KAAO,GACpBs2B,GAAct2B,KAAO,GACrBm8B,GAAgBn8B,KAAO,GACvBo8B,GAAiBp8B,KAAO,GACxB68B,GAAiB78B,KAAO,GACxB88B,GAAqB98B,KAAO,GAC5B+8B,GAAsB/8B,KAAO,GAC7Bg9B,GAAah9B,KAAO,GACpBq8B,GAAar8B,KAAO,GACpBu8B,GAAcv8B,KAAO,GACrBy8B,GAAcz8B,KAAO,GACrBq8B,GAAatlC,GAAK,GAClBwlC,GAAcxlC,GAAK,GACnB0lC,GAAc1lC,GAAK,GACnBkmC,GAAkBj9B,KAAO,GACzBk9B,GAAiBl9B,KAAO,GACxBi8B,GAAoBj8B,KAAO,GAC3BgsC,GAAwB,SAExBO,GAAa,SACbG,GAAc,SACdI,GAAgB,SAChBI,GAAiB,SACjBI,GAAe,SACfG,GAAmB,SACnBI,GAAgB,SAChBI,GAAkB,SAClBI,GAAkB,SAClBI,GAAiB,SACjBI,GAAgB,SAChBI,GAAqB,SACrBI,GAAqB,SACrBI,GAAmB,SACnBI,GAAc,SACdG,GAAuB,SACvBI,GAAa,SACbI,GAAa,SACbQ,GAAc,SACdJ,GAAc,SACdQ,GAAwB,SACxBI,GAAuB,SACvBI,GAAwB,SACxBI,GAAkB,SAClBI,GAAe,SACfI,GAAiB,SACjBI,GAAoB,SACpBxG,GAAgB,aAEhBJ,GAAwB,QAE1B,GAAG,IAqEGmJ,IAAe5hC,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAE/B,IAAMm4C,GAAa94B,EAAAA,EAAAA,KAAI+M,GAAQ,GAAI/H,IAKnC,IAEE,IAAM+zB,EAAmBh0B,GAAqBzqB,KAAI,SAACm2B,EAAOlE,GAAK,OAAKA,EAAMgP,UAAU,IAG9Eyd,QAAmBjgB,EAAAA,EAAAA,SAAQ+f,SAC3BhoB,QAAQC,IACZioB,EAAW/f,MACRpd,QAAO,SAACsd,GAAO,OAAM4f,EAAiBj9B,SAASqd,EAAQr1B,KAAK,IAC5DxJ,KAAI,SAAC6+B,GAAO,OAAK8f,EAAAA,EAAAA,cAAa9f,EAAQ,WAGrCrI,QAAQC,IACZhM,GAAqBzqB,IAAI,WAAD,IAAA4+C,GAAAv4C,EAAAA,EAAAA,UAAC,UAAO8vB,EAAOlE,GACrC,IAAQzpB,EAAQ2tB,EAAR3tB,IACFq2C,EAAY5sB,EAAMgP,WAElBpL,QAAiBO,MAAM5tB,GACvB8tB,QAAaT,EAASS,OAOtBwoB,GAJS9jC,SAAS+jC,cAAc,UACnBC,WAAW,MAGlB,IAAI12C,OAChBw2C,EAAIG,IAAMC,IAAIC,gBAAgB7oB,GAG9BwoB,EAAIM,QAAM/4C,EAAAA,EAAAA,UAAG,YAEX,IAAMg5C,EAASrkC,SAAS+jC,cAAc,UAChCO,EAAMD,EAAOL,WAAW,MAK1BO,EAAWT,EAAI59C,MACfs+C,EAAYV,EAAI39C,OAGhB29C,EAAI59C,MANS,MAOfq+C,EAPe,IAQfC,EARe,IAQFV,EAAI39C,OAAqB29C,EAAI59C,OAGxCs+C,EAVc,MAWhBD,EAXgB,IAWJA,EAAwBC,EACpCA,EAZgB,KAgBlBH,EAAOn+C,MAAQq+C,EACfF,EAAOl+C,OAASq+C,EAGhBF,EAAIG,UAAUX,EAAK,EAAG,EAAGS,EAAUC,GAIlBV,EAAI39C,OAAS29C,EAAI59C,MADlC,IAEM2E,EAFqB,EAETw5C,EAAOn+C,MAA8B,IAEvDo+C,EAAII,KAAI,QAAW75C,EAAQ,WAC3By5C,EAAIK,UAAY,OAChBL,EAAInY,YAAc,cAClBmY,EAAIM,uBAAwB,EAC5BN,EAAIO,UAAY,EAGhB,IAAMC,EAAa,oBAAuBn1B,GACpCo1B,EAAYT,EAAIU,YAAYF,GAAe5+C,MAQ3C++C,GAAWZ,EAAOn+C,MAAQ6+C,GAAa,EAAI,EAC3CG,EAAUb,EAAOl+C,OAAS,GAAK,EAGrCm+C,EAAIa,WAAa,GAGjBb,EAAIK,UAAY,QAChBL,EAAIc,SAASN,EAAeG,EAASC,GAGrCZ,EAAIa,WAAa,EAGjB,IAAME,GAAKhB,EAAOn+C,MAAQ6+C,GAAa,EACjCO,EAAIjB,EAAOl+C,OAAS,GAG1Bm+C,EAAIK,UAAY,OAChBL,EAAIc,SAASN,EAAeO,EAAGC,GAG/B,IAAMC,QAA6B,IAAI/pB,SAAQ,SAAA51B,GAC7Cy+C,EAAOmB,OAAO5/C,EAAS,aAAc,GACvC,IAGM6/C,GAAW/6B,EAAAA,EAAAA,KAAI+M,GAAY/H,GAAuB,IAAIm0B,SACtD6B,EAAAA,EAAAA,aAAYD,EAAUF,EAAsB,CAAEI,YAAa,cACnE,GAEF,IAAC,gBAAAr/B,EAAAkB,GAAA,OAAAo8B,EAAAz3C,MAAA,KAAAC,UAAA,EAjGwB,KAsG3BL,QAAQe,IAAI,6BAA6B4iB,GAC3C,CAAE,MAAO5jB,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,CACF,IAAG,IAGG85C,IAAejkC,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAAa,IAADw6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAE3C71C,GAASkP,EAAAA,EAAAA,yBAAuB,IAEhC85B,GAAgB,aAChBG,GAAa,SACbG,GAAc,SACdI,GAAgB,SAChBI,GAAiB,SACjBI,GAAe,SACfG,GAAmB,SACnBI,GAAgB,SAChBI,GAAkB,SAClBI,GAAkB,SAClBI,GAAiB,SACjBI,GAAgB,SAChBI,GAAqB,SACrBI,GAAqB,SACrBI,GAAmB,SACnBI,GAAc,SACdG,GAAuB,SACvBI,GAAa,SACbI,GAAa,SACbI,GAAc,SACdI,GAAc,SACdI,GAAwB,SACxBI,GAAuB,SACvBI,GAAwB,SACxBI,GAAkB,SAClBI,GAAe,SACfI,GAAiB,SACjBI,GAAoB,SACpB5G,GAAwB,SAExB,IAAMkN,EAAqC,IAArBhd,GAAal8B,MACX,IAAtBs2B,GAAct2B,MACU,IAAxBm8B,GAAgBn8B,MACS,IAAzBo8B,GAAiBp8B,MACQ,IAAzB68B,GAAiB78B,MACY,IAA7B88B,GAAqB98B,MACS,IAA9B+8B,GAAsB/8B,MACD,IAArBg9B,GAAah9B,MACQ,IAArBq8B,GAAar8B,MACS,IAAtBy8B,GAAcz8B,MACQ,IAAtBu8B,GAAcv8B,MACY,IAA1Bi9B,GAAkBj9B,MACO,IAAzBk9B,GAAiBl9B,MACW,IAA5Bi8B,GAAoBj8B,KAEhBm5C,EAAoD,KAAX,OAA1B1B,EAAApnB,GAAmBpgB,cAAO,EAA1BwnC,EAA4B53C,QAA6C,KAAX,OAAnB63C,EAAArmB,GAAYphB,cAAO,EAAnBynC,EAAqB73C,QACpD,KAAX,OAApB83C,EAAArmB,GAAarhB,cAAO,EAApB0nC,EAAsB93C,QACW,KAAX,OAAtB+3C,EAAArmB,GAAethB,cAAO,EAAtB2nC,EAAwB/3C,QACS,KAAX,OAAtBg4C,EAAApmB,GAAexhB,cAAO,EAAtB4nC,EAAwBh4C,QACS,IAAX,OAAtBi4C,EAAArmB,GAAexhB,cAAO,EAAtB6nC,EAAwBj4C,QACO,KAAX,OAApBk4C,EAAApmB,GAAa1hB,cAAO,EAApB8nC,EAAsBl4C,QACS,IAAX,OAApBm4C,EAAArmB,GAAa1hB,cAAO,EAApB+nC,EAAsBn4C,QACY,KAAX,OAAvBo4C,EAAAnmB,GAAgB7hB,cAAO,EAAvBgoC,EAAyBp4C,QACI,KAAX,OAAlBq4C,EAAAnmB,GAAW9hB,cAAO,EAAlBioC,EAAoBr4C,QACc,IAAX,OAAvBs4C,EAAArmB,GAAgB7hB,cAAO,EAAvBkoC,EAAyBt4C,QACI,IAAX,OAAlBu4C,EAAArmB,GAAW9hB,cAAO,EAAlBmoC,EAAoBv4C,QACkB,IAAX,OAA3Bw4C,EAAArmB,GAAoB/hB,cAAO,EAA3BooC,EAA6Bx4C,QACS,KAAX,OAA3By4C,EAAAtmB,GAAoB/hB,cAAO,EAA3BqoC,EAA6Bz4C,QACU,KAAX,OAA5B04C,EAAArmB,GAAqBjiB,cAAO,EAA5BsoC,EAA8B14C,QACQ,KAAX,OAA3B24C,EAAArmB,GAAoBliB,cAAO,EAA3BuoC,EAA6B34C,QACU,KAAX,OAA5B44C,EAAArmB,GAAqBniB,cAAO,EAA5BwoC,EAA8B54C,QACc,KAAX,OAAjC64C,EAAArmB,GAA0BpiB,cAAO,EAAjCyoC,EAAmC74C,QACI,IAAX,OAA5B84C,EAAAzmB,GAAqBjiB,cAAO,EAA5B0oC,EAA8B94C,QACQ,IAAX,OAA3B+4C,EAAAzmB,GAAoBliB,cAAO,EAA3B2oC,EAA6B/4C,QACU,IAAX,OAA5Bg5C,EAAAzmB,GAAqBniB,cAAO,EAA5B4oC,EAA8Bh5C,QACc,IAAX,OAAjCi5C,EAAAzmB,GAA0BpiB,cAAO,EAAjC6oC,EAAmCj5C,QACL,KAAX,OAAnBk5C,EAAAxmB,GAAYtiB,cAAO,EAAnB8oC,EAAqBl5C,QACS,IAAX,OAAnBm5C,EAAAzmB,GAAYtiB,cAAO,EAAnB+oC,EAAqBn5C,QACU,KAAX,OAApBo5C,EAAAxmB,GAAaxiB,cAAO,EAApBgpC,EAAsBp5C,OAGlBu5C,EAAoB7hD,OAAO8hD,OAAOhgB,IAAeigB,OAAM,SAACz5C,GAAK,OAAe,IAAVA,CAAe,IAIvF,GAFAlC,QAAQe,IAAIy6C,GAAgBD,GAExBC,GAAgBD,GAAiBE,EAAmB,CAAC,IAADG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GACtDx3C,GAASkP,EAAAA,EAAAA,yBAAuB,IAChCugC,GAAmB5iC,QAAQ4qC,eAAe,CAAEC,SAAU,WAClD1B,GAEFz7C,QAAQe,IAAI,0BACZstC,GAAwB,eAKxBruC,QAAQe,IAAI,iCAIqB,KAAX,OAApB66C,EAAA9mB,GAAaxiB,cAAO,EAApBspC,EAAsB15C,SACxB4yB,GAAaxiB,QAAQ4qC,eAAe,CAAEC,SAAU,WAChD1O,GAAgB,eAGW,IAAzBlP,GAAiBl9B,OACnBwzC,GAAqBvjC,QAAQ4qC,eAAe,CAAEC,SAAU,WACxDtI,GAAiB,eAGa,IAA5BvW,GAAoBj8B,OACtByzC,GAAwBxjC,QAAQ4qC,eAAe,CAAEC,SAAU,WAC3DlI,GAAoB,eAGY,KAAX,OAAnB4G,EAAAjnB,GAAYtiB,cAAO,EAAnBupC,EAAqB35C,QAA6C,IAAX,OAAnB45C,EAAAlnB,GAAYtiB,cAAO,EAAnBwpC,EAAqB55C,SAC3D0yB,GAAYtiB,QAAQ4qC,eAAe,CAAEC,SAAU,WAC/C1I,GAAe,eAGa,IAA1BnV,GAAkBj9B,OACpBuzC,GAAsBtjC,QAAQ4qC,eAAe,CAAEC,SAAU,WACzD9I,GAAkB,eAGuB,KAAX,OAA5B0H,EAAAtnB,GAAqBniB,cAAO,EAA5BypC,EAA8B75C,QAAsD,IAAX,OAA5B85C,EAAAvnB,GAAqBniB,cAAO,EAA5B0pC,EAA8B95C,SAC7EuyB,GAAqBniB,QAAQ4qC,eAAe,CAAEC,SAAU,WACxDlJ,GAAwB,eAGgB,KAAX,OAA3BgI,EAAAznB,GAAoBliB,cAAO,EAA3B2pC,EAA6B/5C,QAAqD,IAAX,OAA3Bg6C,EAAA1nB,GAAoBliB,cAAO,EAA3B4pC,EAA6Bh6C,SAC3EsyB,GAAoBliB,QAAQ4qC,eAAe,CAAEC,SAAU,WACvDtJ,GAAuB,eAGkB,KAAX,OAA5BsI,EAAA5nB,GAAqBjiB,cAAO,EAA5B6pC,EAA8Bj6C,QAAsD,IAAX,OAA5Bk6C,EAAA7nB,GAAqBjiB,cAAO,EAA5B8pC,EAA8Bl6C,SAC7EqyB,GAAqBjiB,QAAQ4qC,eAAe,CAAEC,SAAU,WACxD1J,GAAwB,eAGD,IAArBpU,GAAah9B,OACfmzC,GAAiBljC,QAAQ4qC,eAAe,CAAEC,SAAU,WACpD1K,GAAa,eAGkB,KAAX,OAAlB4J,EAAAjoB,GAAW9hB,cAAO,EAAlB+pC,EAAoBn6C,QAA4C,IAAX,OAAlBo6C,EAAAloB,GAAW9hB,cAAO,EAAlBgqC,EAAoBp6C,SACzDkyB,GAAW9hB,QAAQ4qC,eAAe,CAAEC,SAAU,WAC9CjL,GAAc,eAE0B,KAAX,OAA3BqK,EAAAloB,GAAoB/hB,cAAO,EAA3BiqC,EAA6Br6C,QAAqD,IAAX,OAA3Bs6C,EAAAnoB,GAAoB/hB,cAAO,EAA3BkqC,EAA6Bt6C,SAC3EmyB,GAAoB/hB,QAAQ4qC,eAAe,CAAEC,SAAU,WACvD9K,GAAuB,eAGa,KAAX,OAAvBoK,EAAAtoB,GAAgB7hB,cAAO,EAAvBmqC,EAAyBv6C,SAC3BiyB,GAAgB7hB,QAAQ4qC,eAAe,CAAEC,SAAU,WACnDrL,GAAmB,eAGa,IAA9B1S,GAAsB/8B,OACxBkzC,GAA0BjjC,QAAQ4qC,eAAe,CAAEC,SAAU,WAC7DzL,GAAqB,eAGU,IAA7BvS,GAAqB98B,OACvBizC,GAAyBhjC,QAAQ4qC,eAAe,CAAEC,SAAU,WAC5D7L,GAAqB,eAGY,KAAX,OAApBoL,EAAA1oB,GAAa1hB,cAAO,EAApBoqC,EAAsBx6C,QAA8C,IAAX,OAApBy6C,EAAA3oB,GAAa1hB,cAAO,EAApBqqC,EAAsBz6C,SAC7D8xB,GAAa1hB,QAAQ4qC,eAAe,CAAEC,SAAU,WAChDjM,GAAgB,eAGW,IAAzBhS,GAAiB78B,OACnBgzC,GAAqB/iC,QAAQ4qC,eAAe,CAAEC,SAAU,WACxDrM,GAAiB,eAGkB,KAAX,OAAtB8L,EAAA9oB,GAAexhB,cAAO,EAAtBsqC,EAAwB16C,QAAgD,IAAX,OAAtB26C,EAAA/oB,GAAexhB,cAAO,EAAtBuqC,EAAwB36C,SACjE4xB,GAAexhB,QAAQ4qC,eAAe,CAAEC,SAAU,WAClDzM,GAAkB,eAGiB,KAAX,OAAtBoM,EAAAlpB,GAAethB,cAAO,EAAtBwqC,EAAwB56C,SAC1B0xB,GAAethB,QAAQ4qC,eAAe,CAAEC,SAAU,WAClD7M,GAAkB,eAGe,KAAX,OAApByM,GAAAppB,GAAarhB,cAAO,EAApByqC,GAAsB76C,SACxByxB,GAAarhB,QAAQ4qC,eAAe,CAAEC,SAAU,WAChDjN,GAAgB,eAGgB,KAAX,OAAnB8M,GAAAtpB,GAAYphB,cAAO,EAAnB0qC,GAAqB96C,SACvBwxB,GAAYphB,QAAQ4qC,eAAe,CAAEC,SAAU,WAC/CxN,GAAe,eAES,IAAtB7Q,GAAcz8B,OAChBqzC,GAAkBpjC,QAAQ4qC,eAAe,CAAEC,SAAU,WACrDlK,GAAc,eAGU,IAAtBrU,GAAcv8B,OAChBszC,GAAkBrjC,QAAQ4qC,eAAe,CAAEC,SAAU,WACrD9J,GAAc,eAIS,IAArB3U,GAAar8B,OACfozC,GAAiBnjC,QAAQ4qC,eAAe,CAAEC,SAAU,WACpDtK,GAAa,eAIc,IAAzBpU,GAAiBp8B,OACnB+yC,GAAqB9iC,QAAQ4qC,eAAe,CAAEC,SAAU,WACxD5N,GAAiB,eAGS,IAAxB/Q,GAAgBn8B,OAClB8yC,GAAoB7iC,QAAQ4qC,eAAe,CAAEC,SAAU,WACvDhO,GAAgB,eAGQ,IAAtBxW,GAAct2B,OAChB0zB,GAAkBzjB,QAAQ4qC,eAAe,CAAEC,SAAU,WACrDpO,GAAc,eAGS,IAArBxQ,GAAal8B,OACfuzB,GAAiBtjB,QAAQ4qC,eAAe,CAAEC,SAAU,WACpDvO,GAAa,eAG0B,KAAX,OAA1BqO,GAAAvqB,GAAmBpgB,cAAO,EAA1B2qC,GAA4B/6C,SAC9BwwB,GAAmBpgB,QAAQ4qC,eAAe,CAAEC,SAAU,WACtDrN,GAAmB,cAGvB,KACK,CAAC,IAADsN,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GACGC,IAAqB5qC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAC3DgU,GAAoC,OAA7Bme,GAAG1qB,GAAmBpgB,cAAO,EAA1B8qC,GAA4Bl7C,MACtCs8C,IAAW7+C,EAAAA,EAAAA,KAAI4+C,GAAoBtf,IACnCwf,SAAgB9nC,EAAAA,EAAAA,QAAO6nC,IAE7B/4C,GAASkP,EAAAA,EAAAA,yBAAuB,IAChCiP,GAA2C,OAAtBy5B,GAAG3pB,GAAYphB,cAAO,EAAnB+qC,GAAqBn7C,MAC7C,IAyCIw8C,GAxCIlmC,UADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SAEFE,IADiBC,IAAOH,IAAUI,OAAO,kBACzBD,IAAOH,IAAUI,OAAO,6BACxCC,GAAOF,IAAOH,IAAUI,OAAO,QAC/BE,GAAQH,IAAOH,IAAUI,OAAO,MAChCG,GAAeJ,IAAOH,IAAUI,OAAO,SACvCI,GAAOL,IAAOH,IAAUI,OAAO,cAC/BK,GAAMN,IAAOH,IAAUI,OAAO,MAC9BM,GAAOP,IAAOH,IAAUI,OAAO,SAC/BO,GAAyBR,IAAOH,IAAUI,OAAO,YAIjD4f,IAAgB7kB,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBACtD9I,IAASxiB,EAAAA,EAAAA,KAAI64B,GAAyC,OAA5B8kB,GAAE5qB,GAAmBpgB,cAAO,EAA1BgrC,GAA4Bp7C,OASxDy8C,IAPUF,GAAQv4C,aAEEyQ,EAAAA,EAAAA,QAAOwL,IAKZ,CACA,OADAo7B,GACnB7pB,GAAYphB,cAAO,EAAnBirC,GAAqBr7C,MACD,OADMs7C,GAC1B1oB,GAAaxiB,cAAO,EAApBkrC,GAAsBt7C,MACI,OADCu7C,GAC3B/qB,GAAmBpgB,cAAO,EAA1BmrC,GAA4Bv7C,MAC5Bs8B,GAAgBn8B,KAChBk8B,GAAal8B,KACbs2B,GAAct2B,KACM,OADFq7C,GAClB/pB,GAAarhB,cAAO,EAApBorC,GAAsBx7C,MACnBq8B,GAAal8B,KAAI,IAAIs2B,GAAct2B,KACnCm8B,GAAgBn8B,KAAI,IAAIk8B,GAAal8B,OAEpCu8C,GAAiB,CACrB5lC,KAAMN,GACNmiB,SAAU7F,GAAY1iB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAClDk3C,UAAWlc,GAAatgC,MAIpBy8C,GAAmC,OAAtBnB,GAAG3oB,GAAY1iB,cAAO,EAAnBqrC,GAAqBz7C,MACvC4hB,KAAmBg7B,IAAmC,KAAlBA,KACtCJ,IAAkB/a,EAAAA,EAAAA,YAAWib,KAG/B,IAAM14C,GAAInB,GAAAA,GAAA,CACRuU,SAAUqlC,GACVI,WAAYr7B,GAAqB1iB,OACjC8mB,sBAAuB1E,IACnBs7B,IAAmB,CAAEM,WAAYN,KAAmB,CAAF,GAKtDz/B,SAAS,EACTggC,QAAQ,EACRhgB,QAAmC,OAA5B2e,GAAElrB,GAAmBpgB,cAAO,EAA1BsrC,GAA4B17C,MACrCu2B,KAAM8F,GAAal8B,KACnBy2B,MAAOH,GAAct2B,KACrB42B,QAASuF,GAAgBn8B,KACzB62B,SAAUuF,GAAiBp8B,KAC3Bi3B,gBAAoC,OAArBukB,GAAEnqB,GAAYphB,cAAO,EAAnBurC,GAAqB37C,MACtCq3B,cAAmC,OAAtBukB,GAAEnqB,GAAarhB,cAAO,EAApBwrC,GAAsB57C,MACrCs3B,UAAiC,OAAxBukB,GAAEnqB,GAAethB,cAAO,EAAtByrC,GAAwB77C,MACnCu3B,WAAmC,OAAzBukB,GAAEnqB,GAAgBvhB,cAAO,EAAvB0rC,GAAyB97C,MACrCw3B,mBAAoB5F,GAAexhB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAC/DgyB,SAAUuF,GAAiB78B,KAC3Bu3B,QAAS5F,GAAa1hB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAClDkyB,aAAcsF,GAAqB98B,KACnCy3B,cAAesF,GAAsB/8B,KACrC03B,cAAsC,OAAzBkkB,GAAE9pB,GAAgB7hB,cAAO,EAAvB2rC,GAAyB/7C,MACxC83B,MAAyB,OAApBkkB,GAAE9pB,GAAW9hB,cAAO,EAAlB4rC,GAAoBh8C,MAC3B+3B,eAAgB5F,GAAoB/hB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAChEwyB,KAAMkF,GAAah9B,KACnBs8B,KAAMD,GAAar8B,KACnBw8B,MAAOD,GAAcv8B,KACrB08B,MAAOD,GAAcz8B,KACrB82B,OAAQuF,GAAatlC,GACrBggC,QAASwF,GAAcxlC,GACvBigC,QAASyF,GAAc1lC,GACvBghC,gBAAiB7F,GAAqBjiB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAClE0yB,eAAgB7F,GAAoBliB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAChE2yB,gBAAiB7F,GAAqBniB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAClE4yB,qBAAsB7F,GAA0BpiB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAC5E6yB,UAAW8E,GAAkBj9B,KAC7Bo4B,OAAQ7F,GAAYtiB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAChD+yB,SAAU6E,GAAiBl9B,KAC3B22B,YAAasF,GAAoBj8B,KACjCs4B,QAA6B,OAAtBwjB,GAAErpB,GAAaxiB,cAAO,EAApB6rC,GAAsBj8C,MAC/B04B,eAAoC,OAAtBwjB,GAAErpB,GAAaziB,cAAO,EAApB8rC,GAAsBl8C,MACtCs5B,MAA4B,OAAvB6iB,GAAEx2B,GAAcvV,cAAO,EAArB+rC,GAAuBn8C,MAC9Bu5B,KAA0B,OAAtB6iB,GAAEpoB,GAAa5jB,cAAO,EAApBgsC,GAAsBp8C,MAE5Bg9C,QAAS,CACPnjB,cAAeL,GAAcK,cAC7BC,cAAeN,GAAcM,cAC7BC,cAAeP,GAAcO,cAC7BC,cAAeR,GAAcQ,cAC7BC,YAAaT,GAAcS,YAC3BC,YAAaV,GAAcU,YAC3BC,cAAeX,GAAcW,cAC7BC,YAAaZ,GAAcY,YAC3BC,aAAcb,GAAca,aAC5BC,WAAYd,GAAcc,WAC1BC,eAAgBf,GAAce,eAC9BC,YAAahB,GAAcgB,YAC3BC,cAAejB,GAAciB,cAC7BC,cAAelB,GAAckB,cAC7BC,cAAenB,GAAcmB,eAG/Bd,cAAeL,GAAcK,cAC7BC,cAAeN,GAAcM,cAC7BC,cAAeP,GAAcO,cAC7BC,cAAeR,GAAcQ,cAC7BC,YAAaT,GAAcS,YAC3BC,YAAaV,GAAcU,YAC3BC,cAAeX,GAAcW,cAC7BC,YAAaZ,GAAcY,YAC3BC,aAAcb,GAAca,aAC5BC,WAAYd,GAAcc,WAC1BC,eAAgBf,GAAce,eAC9BC,YAAahB,GAAcgB,YAC3BC,cAAejB,GAAciB,cAC7BC,cAAelB,GAAckB,cAC7BC,cAAenB,GAAcmB,cAE7BhC,SAAU7F,GAAY1iB,QAAQpQ,MAAMyF,QAAQ,KAAM,IAElDw3C,aAAc,CACZxjB,mBAAoBD,GAAcC,mBAClCC,iBAAkBF,GAAcE,iBAChCC,iBAAkBH,GAAcG,iBAChCC,iBAAkBJ,GAAcI,kBAIlCH,mBAAoBD,GAAcC,mBAClCC,iBAAkBF,GAAcE,iBAChCC,iBAAkBH,GAAcG,iBAChCC,iBAAkBJ,GAAcI,iBAEhCsjB,SAAU,CACRtiB,aAAcpB,GAAcoB,aAC5BC,eAAgBrB,GAAcqB,eAC9BC,aAActB,GAAcsB,aAC5BC,aAAcvB,GAAcuB,aAC5BC,aAAcxB,GAAcwB,aAC5BC,eAAgBzB,GAAcyB,eAC9BC,eAAgB1B,GAAc0B,eAC9BC,eAAgB3B,GAAc2B,eAC9BC,aAAc5B,GAAc4B,cAG9BR,aAAcpB,GAAcoB,aAC5BC,eAAgBrB,GAAcqB,eAC9BC,aAActB,GAAcsB,aAC5BC,aAAcvB,GAAcuB,aAC5BC,aAAcxB,GAAcwB,aAC5BC,eAAgBzB,GAAcyB,eAC9BC,eAAgB1B,GAAc0B,eAC9BC,eAAgB3B,GAAc2B,eAC9BC,aAAc5B,GAAc4B,aAE5B+hB,SAAU,CACR9hB,aAAc7B,GAAc6B,aAC5BC,eAAgB9B,GAAc8B,eAC9BC,aAAc/B,GAAc+B,cAE9BF,aAAc7B,GAAc6B,aAC5BC,eAAgB9B,GAAc8B,eAC9BC,aAAc/B,GAAc+B,aAE5B6hB,cAAe,CACb5hB,kBAAmBhC,GAAcgC,kBACjCC,kBAAmBjC,GAAciC,kBACjCC,oBAAqBlC,GAAckC,oBACnCC,oBAAqBnC,GAAcmC,oBACnCC,oBAAqBpC,GAAcoC,oBACnCC,sBAAuBrC,GAAcqC,sBACrCC,oBAAqBtC,GAAcsC,oBACnCC,oBAAqBvC,GAAcuC,oBACnCC,kBAAmBxC,GAAcwC,kBACjCC,kBAAmBzC,GAAcyC,kBACjCC,oBAAqB1C,GAAc0C,qBAGrCV,kBAAmBhC,GAAcgC,kBACjCC,kBAAmBjC,GAAciC,kBACjCC,oBAAqBlC,GAAckC,oBACnCC,oBAAqBnC,GAAcmC,oBACnCC,oBAAqBpC,GAAcoC,oBACnCC,sBAAuBrC,GAAcqC,sBACrCC,oBAAqBtC,GAAcsC,oBACnCC,oBAAqBvC,GAAcuC,oBACnCC,kBAAmBxC,GAAcwC,kBACjCC,kBAAmBzC,GAAcyC,kBACjCC,oBAAqB1C,GAAc0C,sBAarC,GAAIqgB,GAAQx4C,UACVpG,EAAAA,EAAAA,WAAUsiB,GAAQjc,IACfxF,MAAIpB,EAAAA,EAAAA,UAAC,YACJ,IAAK,IAADigD,EAAAC,EAAAC,EAAAC,QAEIlI,KACN/xC,GAASkP,EAAAA,EAAAA,yBAAuB,IAChClP,GAASk6C,EAAAA,EAAAA,8BAA4B,IAErC,UAE4BhpC,EAAAA,EAAAA,QAAOwL,IAEjC,GAAIs8B,GAAQx4C,SAAU,CACpB,IAAM25C,EAAUnB,GAAQv4C,OACxB,GAAI05C,EACF,GAAI,cAAeA,EAAS,CAE1B5/C,QAAQe,IAAI,eAEZ,IAAM8+C,EAAU,CACdC,YAAapnC,UAIT7Y,EAAAA,EAAAA,WAAUsiB,GAAQ09B,EAC1B,KAAO,CAEL7/C,QAAQe,IAAI,cAEZ,IAAM8+C,EAAU,CACdE,UAAWrnC,UAIP7Y,EAAAA,EAAAA,WAAUsiB,GAAQ09B,EAC1B,KACK,CAEL7/C,QAAQe,IAAI,cAEZ,IAAM8+C,EAAU,CACdE,UAAWrnC,UAIP7Y,EAAAA,EAAAA,WAAUsiB,GAAQ09B,EAC1B,CACF,MAEE7/C,QAAQe,IAAI,aAEhB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CAEA,IAAMsZ,EAAU,CACdvY,QAAQ,qBAAsB6hC,GAAatgC,KAAI,eAAkC,OAAlCk9C,EAAczqB,GAAaxiB,cAAO,EAApBitC,EAAsBr9C,OAAK,kCAAoD,OAApDs9C,EAAiC9rB,GAAYphB,cAAO,EAAnBktC,EAAqBt9C,OAAK,IACnJqX,UAAWb,GACXc,aAAa,EACbF,SAAU,CACRZ,GAAc7D,cACd6d,GAAmBpgB,QAAQpQ,MAAM2S,eACjC,qBAAqB8tB,GAAatgC,KAAI,eAAkC,OAAlCo9C,EAAc3qB,GAAaxiB,cAAO,EAApBmtC,EAAsBv9C,OAAK,kCAAoD,OAApDw9C,EAAiChsB,GAAYphB,cAAO,EAAnBotC,EAAqBx9C,OAAK,KAAI2S,cAC9I,kBAAkBA,cAClB,UAAUA,cACV,UAAUA,cACVigB,GAAaxiB,QAAQpQ,MAAM2S,cAC3B6e,GAAYphB,QAAQpQ,MAAM2S,cAC1B8tB,GAAatgC,KAAKwS,cAClBgE,GAAKhE,cACLiE,GAAMjE,cACNkE,GAAalE,cACbmE,GAAKnE,cACLoE,GAAIpE,cACJqE,GAAKrE,cACLsE,GAAuBtE,gBAG3BpP,GAASkP,EAAAA,EAAAA,yBAAuB,IAChCqX,KACAhU,GAAmBqB,GACnB+I,KACApiB,QAAQe,IAAI,iCAEd,CAAE,MAAOhB,GAEPC,QAAQD,MAAM,2BAA4BA,EAC5C,CACF,KACCa,OAAM,SAACb,GACN0F,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQD,MAAM,4BAA6BA,EAC7C,QAEC,CACH,IAAMigD,GAAiBj7C,GAAAA,GAAA,GAClBmB,IAAI,IACP65C,UAAWrnC,MAGbyC,EAAAA,EAAAA,QAAOgH,GAAQ69B,IACZt/C,MAAIpB,EAAAA,EAAAA,UAAC,YAEJ,IAAK,IAAD2gD,EAAAC,EAAAC,EAAAC,QACI5I,KACN/xC,GAASkP,EAAAA,EAAAA,yBAAuB,IAChClP,GAAS46C,EAAAA,EAAAA,wBAAsB,IAiD/B,IAAMhnC,EAAU,CACdvY,QAAQ,mBAAoB6hC,GAAatgC,KAAI,aAAgC,OAAhC49C,EAAYnrB,GAAaxiB,cAAO,EAApB2tC,EAAsB/9C,OAAK,kCAAoD,OAApDg+C,EAAiCxsB,GAAYphB,cAAO,EAAnB4tC,EAAqBh+C,OAAK,IAC/IqX,UAAWb,GACXc,aAAa,EACbF,SAAU,CACRZ,GAAc7D,cACd6d,GAAmBpgB,QAAQpQ,MAAM2S,eACjC,mBAAmB8tB,GAAatgC,KAAI,aAAgC,OAAhC89C,EAAYrrB,GAAaxiB,cAAO,EAApB6tC,EAAsBj+C,OAAK,kCAAoD,OAApDk+C,EAAiC1sB,GAAYphB,cAAO,EAAnB8tC,EAAqBl+C,OAAK,KAAI2S,cAC1I,gBAAgBA,cAChB,UAAUA,cACV,QAAQA,cACRigB,GAAaxiB,QAAQpQ,MAAM2S,cAC3B6e,GAAYphB,QAAQpQ,MAAM2S,cAC1B8tB,GAAatgC,KAAKwS,cAClBgE,GAAKhE,cACLiE,GAAMjE,cACNkE,GAAalE,cACbmE,GAAKnE,cACLoE,GAAIpE,cACJqE,GAAKrE,cACLsE,GAAuBtE,gBAI3BmX,KACAhU,GAAmBqB,GACnB+I,KACApiB,QAAQe,IAAI,+BAEd,CAAE,MAAOhB,GAET,CAGF,KACCa,OAAM,SAACb,GACN0F,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQD,MAAM,0BAA2BA,EAC3C,GACJ,CAEF,CAGF,IAAG,IAKGiY,GAAkB,eAAAsoC,GAAAhhD,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BACd,CAAE,MAAOhB,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuBwgD,GAAA,OAAAD,EAAAlgD,MAAA,KAAAC,UAAA,KAelBi3C,GAA0B,WAC9BjZ,KAEA3C,GAAcC,oBAAqB,EACnCD,GAAcE,kBAAmB,EACjCF,GAAcG,kBAAmB,EACjCH,GAAcI,kBAAmB,EACjCJ,GAAcK,eAAgB,EAC9BL,GAAcM,eAAgB,EAC9BN,GAAcO,eAAgB,EAC9BP,GAAcQ,eAAgB,EAC9BR,GAAcS,aAAc,EAC5BT,GAAcU,aAAc,EAC5BV,GAAcW,eAAgB,EAC9BX,GAAcY,aAAc,EAC5BZ,GAAca,cAAe,EAC7Bb,GAAcc,YAAa,EAC3Bd,GAAce,gBAAiB,EAC/Bf,GAAcgB,aAAc,EAC5BhB,GAAciB,eAAgB,EAC9BjB,GAAckB,eAAgB,EAC9BlB,GAAcmB,eAAgB,EAC9BnB,GAAcoB,cAAe,EAC7BpB,GAAcqB,gBAAiB,EAC/BrB,GAAcsB,cAAe,EAC7BtB,GAAcuB,cAAe,EAC7BvB,GAAcwB,cAAe,EAC7BxB,GAAcyB,gBAAiB,EAC/BzB,GAAc0B,gBAAiB,EAC/B1B,GAAc2B,gBAAiB,EAC/B3B,GAAc4B,cAAe,EAC7B5B,GAAc6B,cAAe,EAC7B7B,GAAc8B,gBAAiB,EAC/B9B,GAAc+B,cAAe,EAC7B/B,GAAcgC,mBAAoB,EAClChC,GAAciC,mBAAoB,EAClCjC,GAAckC,qBAAsB,EACpClC,GAAcmC,qBAAsB,EACpCnC,GAAcoC,qBAAsB,EACpCpC,GAAcqC,uBAAwB,EACtCrC,GAAcsC,qBAAsB,EACpCtC,GAAcuC,qBAAsB,EACpCvC,GAAcwC,mBAAoB,EAClCxC,GAAcyC,mBAAoB,EAClCzC,GAAc0C,qBAAsB,CACtC,EAEMhc,IAAcxM,EAAAA,EAAAA,cAAY,WAAO,IAAD4qC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEpCzK,KACAtrB,KACAurB,KAGA9xC,GAASwkB,EAAAA,EAAAA,0BAAyB,KAClC7G,GAA6B,GAC7BE,GAA+B,GAC/BQ,GAAiB,GAES,OAA1B08B,EAAA9tB,GAAmBpgB,UAAnBkuC,EAA4B33B,QACR,OAApB43B,EAAA3rB,GAAaxiB,UAAbmuC,EAAsB53B,QACF,OAApB63B,EAAA3rB,GAAaziB,UAAbouC,EAAsB73B,QACH,OAAnB83B,EAAA3rB,GAAY1iB,UAAZquC,EAAqB93B,QACF,OAAnB+3B,EAAAztB,GAAY7gB,UAAZsuC,EAAqB/3B,QAED,OAApBg4B,EAAAhU,GAAav6B,UAAbuuC,EAAsBh4B,QACD,OAArBi4B,EAAAhU,GAAcx6B,UAAdwuC,EAAuBj4B,QACJ,OAAnBk4B,EAAArtB,GAAYphB,UAAZyuC,EAAqBl4B,QACD,OAApBm4B,EAAArtB,GAAarhB,UAAb0uC,EAAsBn4B,QACA,OAAtBo4B,EAAArtB,GAAethB,UAAf2uC,EAAwBp4B,QACD,OAAvBq4B,EAAArtB,GAAgBvhB,UAAhB4uC,EAAyBr4B,QACH,OAAtBs4B,EAAArtB,GAAexhB,UAAf6uC,EAAwBt4B,QACJ,OAApBu4B,EAAAptB,GAAa1hB,UAAb8uC,EAAsBv4B,QACC,OAAvBw4B,EAAAltB,GAAgB7hB,UAAhB+uC,EAAyBx4B,QACP,OAAlBy4B,EAAAltB,GAAW9hB,UAAXgvC,EAAoBz4B,QACO,OAA3B04B,EAAAltB,GAAoB/hB,UAApBivC,EAA6B14B,QACZ,OAAjB24B,EAAAzU,GAAUz6B,UAAVkvC,EAAmB34B,QACS,OAA5B44B,EAAAltB,GAAqBjiB,UAArBmvC,EAA8B54B,QACH,OAA3B64B,EAAAltB,GAAoBliB,UAApBovC,EAA6B74B,QACD,OAA5B84B,EAAAltB,GAAqBniB,UAArBqvC,EAA8B94B,QAC9B6L,GAA0BpiB,QAAQpQ,MAAQ,OACpB,OAAtB0/C,EAAA5U,GAAe16B,UAAfsvC,EAAwB/4B,QACL,OAAnBg5B,EAAAjtB,GAAYtiB,UAAZuvC,EAAqBh5B,QACA,OAArBi5B,EAAAj6B,GAAcvV,UAAdwvC,EAAuBj5B,QACH,OAApBk5B,EAAA7rB,GAAa5jB,UAAbyvC,EAAsBl5B,QACtB0V,GAAal8B,KAAO,GACpBs2B,GAAct2B,KAAO,GACrBm8B,GAAgBn8B,KAAO,GACvBo8B,GAAiBp8B,KAAO,GACxB68B,GAAiB78B,KAAO,GACxB88B,GAAqB98B,KAAO,GAC5B+8B,GAAsB/8B,KAAO,GAC7Bg9B,GAAah9B,KAAO,GACpBq8B,GAAar8B,KAAO,GACpBu8B,GAAcv8B,KAAO,GACrBy8B,GAAcz8B,KAAO,GACrBq8B,GAAatlC,GAAK,GAClBwlC,GAAcxlC,GAAK,GACnB0lC,GAAc1lC,GAAK,GACnBkmC,GAAkBj9B,KAAO,GACzBk9B,GAAiBl9B,KAAO,GACxBi8B,GAAoBj8B,KAAO,GAE3BgsC,GAAwB,SAExBO,GAAa,SACbG,GAAc,SACdI,GAAgB,SAChBI,GAAiB,SACjBI,GAAe,SACfG,GAAmB,SACnBI,GAAgB,SAChBI,GAAkB,SAClBI,GAAkB,SAClBI,GAAiB,SACjBI,GAAgB,SAChBI,GAAqB,SACrBI,GAAqB,SACrBI,GAAmB,SACnBI,GAAc,SACdG,GAAuB,SACvBI,GAAa,SACbI,GAAa,SACbQ,GAAc,SACdJ,GAAc,SACdQ,GAAwB,SACxBI,GAAuB,SACvBI,GAAwB,SACxBI,GAAkB,SAClBI,GAAe,SACfI,GAAiB,SACjBI,GAAoB,SACpBxG,GAAgB,aAEhBJ,GAAwB,QAO1B,GAAG,IAsHG/S,IAlBYrhC,EAAAA,QAAWC,IAAI,UAAzBC,MAkBwB,SAACkI,GAC/B,IAAMy4B,EAAez4B,EAAKsF,QAAQ,UAAW,IAG7C,GAAImzB,EAAaC,WAAW,KAI1B,OAFA/F,GAAY1iB,QAAQpQ,MAAQ,QAC5BixB,GAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,KAK7C,IAAM24B,EAAiBF,EAAa9e,MAAM,EAAG,GAEvCif,EAAiBD,EAAerzB,QAAQ,wBAAyB,KAEvE,GAAuB,KAAnBszB,EAAuB,CACzB,IAAMC,EAAkBjS,WAAW+R,GAAkBjE,GAErD,GAAKoE,MAAMD,GAOTlG,GAAY1iB,QAAQpQ,MAAQ+4B,EAC5B9H,GAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,SARhB,CAC3B,IAAM+4B,EAA2BF,EAAgBG,QAAQ,GAAG1zB,QAAQ,wBAAyB,KAE7FqtB,GAAY1iB,QAAQpQ,MAAQ+4B,EAC5B9H,GAAY7gB,QAAQiF,eAAe,CAAElV,KAAM+4B,GAC7C,CAKF,MAEEpG,GAAY1iB,QAAQpQ,MAAQ,GAC5BixB,GAAY7gB,QAAQiF,eAAe,CAAElV,KAAM,IAE/C,IAEApF,EAAAA,EAAAA,YAAU,WAAO,IAAD+kD,EACd1mB,GAA2C,OAApB0mB,EAAChtB,GAAY1iB,cAAO,EAAnB0vC,EAAqB9/C,MAC/C,GAAG,CAAC60B,KAIJ,IA+UM1D,GAAe,CACnB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGI4uB,GAAuB,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAM3BC,IALSv5B,WAAuC,OAA7Bi5B,EAAC3tB,GAAqBjiB,UAAc,OAAP6vC,EAA5BD,EAA8BhgD,YAAF,EAA5BigD,EAAqCx6C,QAAQ,KAAM,MAAQ,IACvEshB,WAAsC,OAA5Bm5B,EAAC5tB,GAAoBliB,UAAc,OAAP+vC,EAA3BD,EAA6BlgD,YAAF,EAA3BmgD,EAAoC16C,QAAQ,KAAM,MAAQ,IACpEshB,WAAuC,OAA7Bq5B,EAAC7tB,GAAqBniB,UAAc,OAAPiwC,EAA5BD,EAA8BpgD,YAAF,EAA5BqgD,EAAqC56C,QAAQ,KAAM,MAAQ,GAE1C,KACZ0zB,QAAQ,GAGvC3G,GAA0BpiB,QAAQiF,eAAe,CAAElV,KAAMmgD,GAC3D,EAiBMrtB,GAAuB,WAAO,IAADstB,EAsB3B9nB,EAAO,GArBG+D,GAAatlC,IACgB,OAA7BqpD,EAAG/vB,GAAmBpgB,cAAO,EAA1BmwC,EAA4BvgD,OAC9B08B,GAAcxlC,GAmByB,IAlBvC0lC,GAAc1lC,GAqB/Bs6B,GAAYphB,QAAQiF,eAAe,CAAElV,KAAMs4B,IAC3CqE,GAAwB38B,KAAOs4B,CAEjC,EAGM3E,GAAwB,WAC5B,IAoBM2E,EApBa6D,GAAgBn8B,KAoBJ,IAnBfk8B,GAAal8B,KAmBe,IAlB3Bs2B,GAAct2B,KAoB/ByyB,GAAaxiB,QAAQiF,eAAe,CAAElV,KAAMs4B,GAE9C,EAsCM4c,GAAc,WASlB1hB,GAAcvjB,QAAQsmB,QACtB9C,GAAexjB,QAAQsmB,QACvB3D,GAAc3iB,QAAQsmB,QACtB1D,GAAe5iB,QAAQsmB,QACvB7E,GAAezhB,QAAQsmB,QACvB3E,GAAmB3hB,QAAQsmB,QAC3B1E,GAAoB5hB,QAAQsmB,QAC5BtE,GAAWhiB,QAAQsmB,QACnBrF,GAAWjhB,QAAQsmB,QACnBpF,GAAYlhB,QAAQsmB,QACpBnF,GAAYnhB,QAAQsmB,QACpBjE,GAAgBriB,QAAQsmB,QACxB/D,GAAeviB,QAAQsmB,QACvB3F,GAAkB3gB,QAAQsmB,OAG5B,EAKA8pB,IAA4BnoD,EAAAA,EAAAA,WAAS,GAAMooD,IAAAloD,EAAAA,EAAAA,SAAAioD,GAAA,GAycrC/vB,IAzcOgwB,GAAA,GAAWA,GAAA,IAycQ/sC,EAAAA,EAAAA,cAAY,WAC1CnQ,GAAS46C,EAAAA,EAAAA,wBAAsB,GACjC,GAAG,KAEGuC,IAAgChtC,EAAAA,EAAAA,cAAY,WAChDnQ,GAASk6C,EAAAA,EAAAA,8BAA4B,GACvC,GAAG,IAEGxjC,GAASxY,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,GAER+a,MAAO,CACL/a,KAAM,KA0CV,OAIE/C,EAAAA,GAAAA,MAAC2C,EAAAA,mBAAkB,CAAAvD,SAAA,EAEjBY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE9DY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CACF+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAE9BJ,EAAAA,GAAAA,KAACqf,EAAAA,QAAU,CACTlU,eAAgBA,MAElBnL,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,EAAG,EAAG,EAAG,KAAM2D,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAC7FJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAKpF,EACL0gB,SAAUD,GAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,GAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAOlB9e,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,IAAK,GAAI2D,EAAG,CAAC,EAAG,EAAG,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAC1GJ,EAAAA,GAAAA,KAACwf,GAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAKoH,EACLkU,SAAUD,GAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,GAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAIlB9e,EAAAA,GAAAA,MA1IY,SAAHulD,GAAiC,IAA3BpgD,EAAIogD,EAAJpgD,KAAM2a,EAAaylC,EAAbzlC,cAC3B0lC,GAA8CvoD,EAAAA,EAAAA,WAAS,GAAMwoD,GAAAtoD,EAAAA,EAAAA,SAAAqoD,EAAA,GAAtDvlC,EAAewlC,EAAA,GAAEvlC,EAAkBulC,EAAA,GAEpCtlC,EAAc,WAClBD,GAAoBD,EACtB,EAEA,OACEjgB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UACjDJ,EAAAA,GAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UAC3BJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAO,CACNC,OAAQN,EACRO,QAAS,SAACC,GAAY,OACpBzf,EAAAA,GAAAA,MAACO,EAAAA,QAAIkG,GAAAA,GAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC/HJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC1H,EAETkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAE1CJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACvCJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASvL,GAyGoB,CAAC+E,KAAMuF,EAAWoV,cAtnChB,YAEpBhX,EAAAA,EAAAA,SAAQqlB,EAAAA,oBAAoB/qB,MAAK,WAE/B3D,EAAS,UACTpC,EAAS,IACTuO,EAAQ,GACV,IAAGtI,OAAM,WAET,GAGF,QAioCMtD,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAKjCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGod,SAAU,EAAGC,UAAW,EAAEhhB,UAKtCJ,EAAAA,GAAAA,KAACshB,EAAAA,WAAU,CAACvd,KAAM,EAAGwd,sBAAuB,CAAEJ,SAAU,GAAI/gB,UAC1DJ,EAAAA,GAAAA,KAACK,EAAAA,QAAkB,CAACC,SAAS,EAAMC,QAAS,CAC1CC,QAAS,GACRE,QAAS,CACVF,QAAS,EACTG,WAAY,CACVC,SAAU,MAEZR,UAGAY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC+D,GAAG,IAAIJ,QAAQ,UAAU9G,OAAO,OAAO+oB,QAAS,SAASzlB,SAAA,EAG5DJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAOuhB,OAAQ,EAAG1C,cAAe,SAAU8C,cAAe,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,MAMtG7hB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAQ,UAAU1D,EAAE,OAAOuhB,OAAQ,EAAG1C,cAAe,SAAS3e,UAGjEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,CAAC,SAAU,SAAU,SAAU,SAAU,MAAO,OAAQ/oB,OAAQ,OAAQiH,KAAM,EAAG4d,QAASitB,EAAc,KAAO,OAAS,OAAOxuC,SAAA,EAC3IJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC4lB,QAAS,MAAO9hB,KAAM,EAAE3D,UAC3BJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACwhB,OAAQ,EAAG1d,KAAM,EAAG8hB,QAAS,CAAC,UAAUzlB,UAG3CY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACiG,YAAa,QAASD,YAAa,EAAGob,IAAKu2B,GAAmBx3C,SAAA,EAEjEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,UAAWwb,kBAAmB,QAASD,kBAAmB,IAAI/e,UACnFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,mCAezEJ,EAAAA,GAAAA,KAAC01B,GAAsB,CACrBC,kBAAmBA,GACnBC,sBAvKE,WAG5Bmb,GAAwB,SAExBO,GAAa,SACbG,GAAc,SACdI,GAAgB,SAChBI,GAAiB,SACjBI,GAAe,SACfG,GAAmB,SACnBI,GAAgB,SAChBI,GAAkB,SAClBI,GAAkB,SAClBI,GAAiB,SACjBI,GAAgB,SAChBI,GAAqB,SACrBI,GAAqB,SACrBI,GAAmB,SACnBI,GAAc,SACdG,GAAuB,SACvBI,GAAa,SACbI,GAAa,SACbQ,GAAc,SACdJ,GAAc,SACdQ,GAAwB,SACxBI,GAAuB,SACvBI,GAAwB,SACxBI,GAAkB,SAClBI,GAAe,SACfI,GAAiB,SACjBI,GAAoB,SACpBxG,GAAgB,aAEhBJ,GAAwB,QAG1B,EAmI4Bjb,mBAAoBA,GACpBkkB,wBAAyBA,GACzBnkB,YAAaA,GACb2a,MAAOA,GACPza,aAAcA,GACdkD,SAAUA,GACVI,UAAWA,GACXD,UAAWA,GACXpD,aAAcA,GACdkD,iBAAkBA,GAClBM,kBAAmBA,GACnBL,SAAUA,GACVG,cAAeA,GACfC,aAAcA,GACdtD,WAAYA,GACZC,YAAaA,GACbC,YAAaA,GACbC,YAAaA,GACbC,aAAcA,GACdC,eAAgBA,GAChBC,gBAAiBA,GACjBC,eAAgBA,GAChBC,eAAgBA,GAChBC,aAAcA,GACdC,mBAAoBA,GACpBC,oBAAqBA,GACrBC,gBAAiBA,GACjBC,WAAYA,GACZC,oBAAqBA,GACrBC,WAAYA,GACZC,qBAAsBA,GACtBC,oBAAqBA,GACrBC,qBAAsBA,GACtBC,0BAA2BA,GAC3BC,gBAAiBA,GACjBC,YAAaA,GACbC,eAAgBA,GAChBC,aAAcA,GACdC,aAAcA,GACdC,YAAaA,GACbC,cAAeA,GACfC,eAAgBA,GAChBC,qBAAsBA,GACtBzC,mBAAoBA,GACpB0C,gBAAiBA,GACjBC,sBAAuBA,GACvBC,iBAAkBA,GAClBC,yBAA0BA,GAC1BC,wBAvqCI,WAAO,IAADwtB,EAAAC,EAAAC,EAC9B5X,EAAiC,OAA1B0X,EAAGvtB,GAAgBnjB,UAAc,OAAP2wC,EAAvBD,EAAyB9gD,YAAF,EAAvB+gD,EAAgC1X,cACzB,OAAvB2X,EAAAztB,GAAgBnjB,UAAhB4wC,EAAyB3rC,eAAe,CAAElV,KAAMipC,GAElD,EAoqC4B7V,gBAAiBA,GACjBE,WAAYA,GAEZD,UAAWA,GACXE,iBAAkBA,GAClBC,cAAeA,GACfC,eAAgBA,GAChBC,kBAAmBA,GACnBC,sBAAuBA,GACvBC,2BA9vBO,WACjC,IAoBM0E,EApBa6D,GAAgBn8B,KAoBJ,IAnBfk8B,GAAal8B,KAmBe,IAlB3Bs2B,GAAct2B,KAoB/ByyB,GAAaxiB,QAAQiF,eAAe,CAAElV,KAAMs4B,GAG9C,EAquB4B9S,cAAeA,GACfqO,aAAcA,GACdC,oBAAqBA,GACrBC,gCA9uCY,SAAC/zB,GAEvC,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C+K,GAAoB/hB,QAAQpQ,MAAQ+4B,CAEtC,KAuuC0B38B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOjiB,QAAS,UAAWG,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,gCAAiCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACnOJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKw2B,GAAqBj0C,QAAS,QAASG,KAAM,EAAGmC,YAAa0rC,GAAc3rC,YAAa,EAAE7F,UAElGJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKsW,GACLgL,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAM4nC,GACNnN,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB8wB,GAAgBn8B,KAAOqL,EAEvBsoB,IAEF,GAAG,IACH4K,kBAAkB,oBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,OAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,OAMV9jC,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKy2B,GAAsBl0C,QAAS,QAASG,KAAM,EAAGmC,YAAa8rC,GAAe/rC,YAAa,EAAE7F,UAGpGJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKuW,GACL+K,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMmtB,GACNsN,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB+wB,GAAiBp8B,KAAOqL,CAG1B,GAAG,IACHkzB,kBAAkB,mBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,QAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,OACPipD,aAAc,QAEhBjiB,mBAAiB,EACjBC,QAAM,UAOZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACktB,UAAW,SAAUppB,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAAYJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAEzMJ,EAAAA,GAAAA,KAACynC,GAAkB,CACjBpa,QAAS,OACTC,oBAzzCA,WAAO,IAADy4B,EAC9BC,EAAuC,OAA1BD,EAAGjW,GAAgB96B,cAAO,EAAvB+wC,EAAyBnhD,MAC/C,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRrW,GAAgB96B,QAAQiF,eAAe,CAAElV,KAAMipC,GACjD,CACF,EAizCgCpG,wBA/yCI,WAAO,IAADwe,EAAAC,EAAAC,EAClCtY,EAAqC,OAA9BoY,EAAGrW,GAAoB/6B,UAAc,OAAPqxC,EAA3BD,EAA6BxhD,YAAF,EAA3ByhD,EAAoCpY,cACzB,OAA3BqY,EAAAvW,GAAoB/6B,UAApBsxC,EAA6BrsC,eAAe,CAAElV,KAAMipC,GAItD,EA0yCgCrG,gBAAiBoI,GACjBxiB,YAAauiB,GACbtiB,MAAM,OACNC,SAAU,OACVC,aAAcC,EAAAA,0BACdhH,WAAW,qBACX/d,KAAMqwB,SAEVj5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK82B,GAAkBv0C,QAAS,QAASG,KAAM,EAAGmC,YAAaovC,GAAWrvC,YAAa,EAAE7F,UAE5FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAK4U,GACL0M,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMqwB,GAASt9B,KAAI,SAACoe,GAAI,OAAKA,CAAI,IACjCspB,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrBgxB,GAAar8B,KAAOqL,EAAajL,KACjCi8B,GAAatlC,GAAKsU,EAAatU,GAC/B+7B,IACF,GAAG,IACHyL,kBAAkB,oBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,EAAajL,IACtB,EACAq+B,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,EAAK5U,IACd,EACAw+B,kBAAkB,mBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAKZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACktB,UAAW,SAAUppB,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAEpNJ,EAAAA,GAAAA,KAACynC,GAAkB,CACjBpa,QAAS,QACTC,oBA73CC,WAAO,IAADi5B,EAC/BP,EAAwC,OAA3BO,EAAGvW,GAAiBh7B,cAAO,EAAxBuxC,EAA0B3hD,MAChD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRnW,GAAiBh7B,QAAQiF,eAAe,CAAElV,KAAMipC,GAClD,CACF,EAq3CgCpG,wBAn3CK,WAAO,IAAD4e,EAAAC,EAAAC,EACnC1Y,EAAsC,OAA/BwY,EAAGtW,GAAqBl7B,UAAc,OAAPyxC,EAA5BD,EAA8B5hD,YAAF,EAA5B6hD,EAAqCxY,cACzB,OAA5ByY,EAAAxW,GAAqBl7B,UAArB0xC,EAA8BzsC,eAAe,CAAElV,KAAMipC,GACvD,EAi3CgCrG,gBAAiBuI,GACjB3iB,YAAayiB,GACbxiB,MAAM,QACNC,SAAU,QACVC,aAAcC,EAAAA,0BACdhH,WAAW,sBACX/d,KAAMywB,SAEVr5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKg3B,GAAmBz0C,QAAS,QAASG,KAAM,EAAGmC,YAAa4vC,GAAY7vC,YAAa,EAAE7F,UAE9FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAK6U,GACLyM,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMywB,GAAU19B,KAAI,SAACoe,GAAI,OAAKA,CAAI,IAClCspB,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrBkxB,GAAcv8B,KAAOqL,EAAajL,KAClCm8B,GAAcxlC,GAAKsU,EAAatU,GAChC+7B,IACF,GAAG,IACHyL,kBAAkB,qBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,EAAajL,IACtB,EACAq+B,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,EAAK5U,IACd,EACAw+B,kBAAkB,oBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAKZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACktB,UAAW,SAAUppB,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAEpNJ,EAAAA,GAAAA,KAACynC,GAAkB,CACjBpa,QAAS,QACTC,oBAp8CC,WAAO,IAADq5B,EAC/BX,EAAwC,OAA3BW,EAAG1W,GAAiBj7B,cAAO,EAAxB2xC,EAA0B/hD,MAChD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRlW,GAAiBj7B,QAAQiF,eAAe,CAAElV,KAAMipC,GAClD,CACF,EA47CgCpG,wBA17CK,SAAC7iC,GAEpC,IAAMy4B,EAAez4B,EAAKsF,QAAQ,YAAa,IAG/C8lC,GAAqBn7B,QAAQpQ,MAAQ44B,CACvC,EAq7CgCmK,gBAAiBwI,GACjB5iB,YAAa0iB,GACbziB,MAAM,QACNC,SAAU,QACVC,aAAcC,EAAAA,0BACdhH,WAAW,sBACX/d,KAAMwwB,SAEVp5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK+2B,GAAmBx0C,QAAS,QAASG,KAAM,EAAGmC,YAAawvC,GAAYzvC,YAAa,EAAE7F,UAE9FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAK8U,GACLwM,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMwwB,GAAUz9B,KAAI,SAACoe,GAAI,OAAKA,CAAI,IAClCspB,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrBoxB,GAAcz8B,KAAOqL,EAAajL,KAClCq8B,GAAc1lC,GAAKsU,EAAatU,GAChC+7B,IACF,GAAG,IACHyL,kBAAkB,qBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,EAAajL,IACtB,EACAq+B,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,EAAK5U,IACd,EACAw+B,kBAAkB,oBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAYZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,uBAAwBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAC3NJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaksC,GAAansC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAGtB,IAAK+U,GAAatxB,aAp9C/G,WAAO,IAAD8hD,EAAAC,EAAAC,EAC9B9Y,EAA6B,OAAtB4Y,EAAGxwB,GAAYphB,UAAc,OAAP6xC,EAAnBD,EAAqBhiD,YAAF,EAAnBiiD,EAA4B5Y,cACzB,OAAnB6Y,EAAA1wB,GAAYphB,UAAZ8xC,EAAqB7sC,eAAe,CAAElV,KAAMipC,IAE5CnW,IACF,EA+8CsLvyB,YAAY,4BAGxKtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,6BAA8BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACjOJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaysC,GAAc1sC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAGtB,IAAKgV,GAAcvxB,aAl9ChH,WAAO,IAADiiD,EAAAC,EAAAC,EAC/BjZ,EAA8B,OAAvB+Y,EAAG1wB,GAAarhB,UAAc,OAAPgyC,EAApBD,EAAsBniD,YAAF,EAApBoiD,EAA6B/Y,cACzB,OAApBgZ,EAAA5wB,GAAarhB,UAAbiyC,EAAsBhtC,eAAe,CAAElV,KAAMipC,GAE/C,EA88CyL1oC,YAAY,kCAG3KtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,iBAAkBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACrNJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa6sC,GAAgB9sC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAGtB,IAAKiV,GAAgBxxB,aAl9ClH,WAAO,IAADoiD,EAAAC,EAAAC,EACjCpZ,EAAgC,OAAzBkZ,EAAG5wB,GAAethB,UAAc,OAAPmyC,EAAtBD,EAAwBtiD,YAAF,EAAtBuiD,EAA+BlZ,cACzB,OAAtBmZ,EAAA9wB,GAAethB,UAAfoyC,EAAwBntC,eAAe,CAAElV,KAAMipC,GAEjD,EA88C+L1oC,YAAY,sBAGjLtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,UAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,oBACvIJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa,QAASD,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAGtB,IAAKkV,GAAiBzxB,aAl9C3G,WAAO,IAADuiD,EAAAC,EAAAC,EAClCvZ,EAAiC,OAA1BqZ,EAAG9wB,GAAgBvhB,UAAc,OAAPsyC,EAAvBD,EAAyBziD,YAAF,EAAvB0iD,EAAgCrZ,cACzB,OAAvBsZ,EAAAhxB,GAAgBvhB,UAAhBuyC,EAAyBttC,eAAe,CAAElV,KAAMipC,GAElD,EA88C0L1oC,YAAY,uBAG5KtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,0BAA2BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAC9NJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaitC,GAAgBltC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAKmV,GAAgB1xB,aA/8CrJ,SAACC,GAElC,IAIM24B,EAJe34B,EAAKsF,QAAQ,UAAW,IAITqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9CwK,GAAexhB,QAAQpQ,MAAQ+4B,CACjC,EAm8CkO55B,KAAM,EAAGuB,YAAY,0BAAyBtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,gBAGjRY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,eAAgBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAC3MJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG1C,eAAe,SAASlB,WAAY,WAAYugB,YAAa,QAE7E1gB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK02B,GAAsBn0C,QAAS,QAASG,KAAM,EAAGmC,YAAaqtC,GAAettC,YAAa,EAAE7F,UAQpGJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKoV,GACLkM,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMotB,GACNqN,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrBwxB,GAAiB78B,KAAOqL,CAG1B,GAAG,IACHkzB,kBAAkB,wBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,uBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAOZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUvpB,QAAS,UAAWG,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,cAAeJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACtOJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaytC,GAAc1tC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAKqV,GAAc5xB,aA5gDnJ,SAACC,GAEhC,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C0K,GAAa1hB,QAAQpQ,MAAQ+4B,CAC/B,EAigD4N55B,KAAM,EAAGuB,YAAY,cAAatF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,gBAG/PY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOjiB,QAAS,UAAWG,KAAM,EAAE3D,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,mBAAoBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAEhNJ,EAAAA,GAAAA,KAACyiC,GAAe,CAACpV,QAAS,eAAgBC,oBA5sDhC,WAAO,IAADo6B,EACtC1B,EAA+C,OAAlC0B,EAAG/X,GAAwB36B,cAAO,EAA/B0yC,EAAiC9iD,MACvD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRxW,GAAwB36B,QAAQiF,eAAe,CAAElV,KAAMipC,GACzD,CACF,EAmsD8HzgB,YAAaoiB,GAAyBniB,MAAM,eAAeC,SAAU,eAAgBC,aAAcC,EAAAA,0BAA2BhH,WAAW,6BAA6B/d,KAAMswB,SAE9Ql5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK22B,GAA0Bp0C,QAAS,QAASG,KAAM,EAAGmC,YAAa6tC,GAAmB9tC,YAAa,EAAE7F,UAW5GJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKsV,GACLgM,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMswB,GACNmK,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrByxB,GAAqB98B,KAAOqL,CAG9B,GAAG,IACHkzB,kBAAkB,4BAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,2BAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAMZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,qBAAsBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAElNJ,EAAAA,GAAAA,KAACyiC,GAAe,CACdpV,QAAQ,gBACRC,oBAjsDS,WAAO,IAADq6B,EACvC3B,EAAgD,OAAnC2B,EAAG/X,GAAyB56B,cAAO,EAAhC2yC,EAAkC/iD,MACxD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRvW,GAAyB56B,QAAQiF,eAAe,CAAElV,KAAMipC,GAC1D,CACF,EAyrDgCzgB,YAAaqiB,GACbpiB,MAAM,iBACNC,SAAU,gBACVC,aAAcC,EAAAA,0BACdhH,WAAW,6BACX/d,KAAMswB,SAGVl5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK42B,GAA2Br0C,QAAS,QAASG,KAAM,EAAGmC,YAAaiuC,GAAmBluC,YAAa,EAAE7F,UAE7GJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKuV,GACL+L,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAM4wB,GACN6J,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB0xB,GAAsB/8B,KAAOqL,CAG/B,GAAG,IACHkzB,kBAAkB,8BAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,6BAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAMZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAC1NJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaquC,GAAiBtuC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAKwV,GAAiB/xB,aAlrD1I,SAACC,GAEnC,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C6K,GAAgB7hB,QAAQpQ,MAAQ+4B,CAClC,EAuqDyNr4B,YAAY,2BAG3MtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,YAAaJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAChNJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAayuC,GAAY1uC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAKyV,GAAYhyB,aA1qDrI,SAACC,GAE9B,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C8K,GAAW9hB,QAAQpQ,MAAQ+4B,CAC7B,EA+pD0Mr4B,YAAY,iBAI5LtE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACktB,UAAW,SAAUppB,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAAYJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAEzMJ,EAAAA,GAAAA,KAACyiC,GAAe,CACdpV,QAAQ,OACRC,oBA53DA,WAAO,IAADs6B,EAC9B5B,EAAuC,OAA1B4B,EAAG/X,GAAgB76B,cAAO,EAAvB4yC,EAAyBhjD,MAC/C,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRtW,GAAgB76B,QAAQiF,eAAe,CAAElV,KAAMipC,GACjD,CACF,EAo3DgCzgB,YAAasiB,GACbriB,MAAM,OACNC,SAAU,OACVC,aAAcC,EAAAA,0BACdhH,WAAW,qBACX/d,KAAMuwB,SAGVn5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAK62B,GAAkBt0C,QAAS,QAASG,KAAM,EAAGmC,YAAagvC,GAAWjvC,YAAa,EAAE7F,UAW5FJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAK2V,GACL2L,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMuwB,GACNkK,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB2xB,GAAah9B,KAAOqL,CAGtB,GAAG,IACHkzB,kBAAkB,oBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,mBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAMZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOjiB,QAAS,UAAWupB,UAAW,SAAUppB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,gBAAiBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACzPJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAagwC,GAAsBjwC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAK4V,GAAsBnyB,aAnwD3J,SAACC,GAExC,IAAMy4B,EAAez4B,EAAKsF,QAAQ,WAAY,IAGxCw9C,EAAWrqB,EAAa7J,QAAQ,KAahCgK,IAXY,IAAdkqB,EAEerqB,EAAa9e,MAAM,EAAGmpC,EAAW,GAAKrqB,EAAa9e,MAAMmpC,GAAUx9C,QAAQ,MAAO,IAElFmzB,GAIa9e,MAAM,EAAG,GAGHrU,QAAQ,wBAAyB,KAEvE4sB,GAAqBjiB,QAAQpQ,MAAQ+4B,EAErCgnB,IACF,EA4uDoP5gD,KAAM,EAAGuB,YAAY,YAAWtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,aACnRJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAaowC,GAAqBrwC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAK6V,GAAqBpyB,aA1uD1J,SAACC,GAEvC,IAAMy4B,EAAez4B,EAAKsF,QAAQ,WAAY,IAGxCw9C,EAAWrqB,EAAa7J,QAAQ,KAahCgK,IAXY,IAAdkqB,EAEerqB,EAAa9e,MAAM,EAAGmpC,EAAW,GAAKrqB,EAAa9e,MAAMmpC,GAAUx9C,QAAQ,MAAO,IAElFmzB,GAIa9e,MAAM,EAAG,GAGHrU,QAAQ,wBAAyB,KAEvE6sB,GAAoBliB,QAAQpQ,MAAQ+4B,EAEpCgnB,IACF,EAmtDiP5gD,KAAM,EAAGuB,YAAY,WAAUtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,aAC/QJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAawwC,GAAsBzwC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAG6f,aAAa,UAAUnhB,IAAK8V,GAAsBryB,aAltD3J,SAACC,GAExC,IAAMy4B,EAAez4B,EAAKsF,QAAQ,WAAY,IAGxCw9C,EAAWrqB,EAAa7J,QAAQ,KAahCgK,IAXY,IAAdkqB,EAEerqB,EAAa9e,MAAM,EAAGmpC,EAAW,GAAKrqB,EAAa9e,MAAMmpC,GAAUx9C,QAAQ,MAAO,IAElFmzB,GAIa9e,MAAM,EAAG,GAGHrU,QAAQ,wBAAyB,KAEvE8sB,GAAqBniB,QAAQpQ,MAAQ+4B,EACrCgnB,IAEF,EA2rDoP5gD,KAAM,EAAGuB,YAAY,YAAWtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,aACnRJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAE3D,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACg+B,aAAa,UAAUnhB,IAAK+V,GAA2BzU,aAAa,OAAO7d,aA1rD5G,SAACC,GAE7C,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9CoL,GAA0BpiB,QAAQpQ,MAAQ+4B,EAC1CgnB,IACF,EA8qD+M/gD,QAAS,YAAauC,UAAQ,EAAC2hD,UAAU,EAAO/jD,KAAM,EAAGuB,YAAY,kBAAiBtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,mBAGtSY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,iBAAkBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAE9MJ,EAAAA,GAAAA,KAACyiC,GAAe,CACdpV,QAAQ,YACRC,oBAl6DK,WAAO,IAADy6B,EACnC/B,EAA4C,OAA/B+B,EAAG3X,GAAqBp7B,cAAO,EAA5B+yC,EAA8BnjD,MACpD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACR/V,GAAqBp7B,QAAQiF,eAAe,CAAElV,KAAMipC,GACtD,CACF,EA05DgCzgB,YAAa6iB,GACb5iB,MAAM,aACNC,SAAU,YACVC,aAAcC,EAAAA,0BACdhH,WAAW,2BACX/d,KAAM0wB,SAGVt5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKi3B,GAAuB10C,QAAS,QAASG,KAAM,EAAGmC,YAAa4wC,GAAgB7wC,YAAa,EAAE7F,UAWtGJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKgW,GACLsL,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAM0wB,GACN+J,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB4xB,GAAkBj9B,KAAOqL,CAG3B,GAAG,IACHkzB,kBAAkB,0BAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,yBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAKZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAKvb,QAAS,UAAUxD,SAAA,EAC1FY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,aAAcJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WACjNJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAagxC,GAAajxC,YAAa,EAAE7F,UAACY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAAApnD,SAAA,EAACJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACme,aAAa,GAAGtB,IAAKiW,GAAakL,aAAa,UAAU19B,aAhxDlJ,SAACC,GAE/B,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9CsL,GAAYtiB,QAAQpQ,MAAQ+4B,CAC9B,EAqwDyN55B,KAAM,EAAGuB,YAAY,aAAYtF,EAAAA,GAAAA,KAACynD,EAAAA,gBAAe,CAACrnD,SAAU,gBAG3PY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOzG,kBAAmB,QAASD,kBAAmB,IAAI/e,SAAA,EACtEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,gBAAiBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,QAE7MJ,EAAAA,GAAAA,KAACyiC,GAAe,CACdpV,QAAQ,WACRC,oBA3/DI,WAAO,IAAD06B,EAClChC,EAA2C,OAA9BgC,EAAG3X,GAAoBr7B,cAAO,EAA3BgzC,EAA6BpjD,MACnD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACR9V,GAAoBr7B,QAAQiF,eAAe,CAAElV,KAAMipC,GACrD,CACF,EAm/DgCzgB,YAAa8iB,GACb7iB,MAAM,YACNC,SAAU,WACVC,aAAcC,EAAAA,0BACdhH,WAAW,0BACX/d,KAAM2wB,SAGVv5B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKk3B,GAAsB30C,QAAS,QAASG,KAAM,EAAGmC,YAAaoxC,GAAerxC,YAAa,EAAE7F,UAEpGJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKkW,GACLoL,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAM2wB,GACN8J,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB6xB,GAAiBl9B,KAAOqL,CAG1B,GAAG,IACHkzB,kBAAkB,yBAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,wBAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,UAKZ9iC,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOoiC,eAAgB,QAASllC,eAAgB,IAAKnf,QAAS,UAAUxD,SAAA,EACpFJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,UAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,4BACvIJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa,QAASD,YAAa,EAAE7F,UACnEJ,EAAAA,GAAAA,KAACiqB,GAAiB,CAChBC,+BAzjEO,WAAO,IAADg+B,EACrClC,EAA8C,OAAjCkC,EAAG/9B,GAAuBnV,cAAO,EAA9BkzC,EAAgCtjD,MACtD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRh8B,GAAuBnV,QAAQiF,eAAe,CAAElV,KAAMipC,GACxD,CACF,EAijEgC7jB,uBAAwBA,GACxBC,mBAAoBA,GACpBC,+BA//DO,SAACtlB,GAEtC,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C5B,GAAmBpV,QAAQpQ,MAAQ+4B,CACrC,EAq/DgCrT,0BAljEE,WAAO,IAAD69B,EAChCnC,EAAyC,OAA5BmC,EAAG7X,GAAkBt7B,cAAO,EAAzBmzC,EAA2BvjD,MACjD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACR7V,GAAkBt7B,QAAQiF,eAAe,CAAElV,KAAMipC,GACnD,CACF,EA0iEgCvlB,WAAYA,GACZ8B,cAAeA,WAIrBvpB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOoiC,eAAgB,QAASllC,eAAgB,IAAKnf,QAAS,UAAUxD,SAAA,EACpFY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOsH,UAAW,SAAUppB,KAAM,EAAG5D,WAAY,aAAaC,SAAA,EAACJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAC1NJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC2D,QAAS,QAASG,KAAM,EAAGmC,YAAa4qC,GAAsB7qC,YAAa,EAAE7F,UAACJ,EAAAA,GAAAA,MA9mDlF,WAC3B,IAAAooD,GAAwDnrD,EAAAA,EAAAA,WAAS,GAAMorD,GAAAlrD,EAAAA,EAAAA,SAAAirD,EAAA,GAAhEE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,GAA0DvrD,EAAAA,EAAAA,WAAS,GAAMwrD,GAAAtrD,EAAAA,EAAAA,SAAAqrD,EAAA,GAAlEE,EAAyBD,EAAA,GAAE59B,EAAoB49B,EAAA,GAEtDE,GAAsB1rD,EAAAA,EAAAA,UAAS8jC,IAAS6nB,GAAAzrD,EAAAA,EAAAA,SAAAwrD,EAAA,GAA5BE,GAAFD,EAAA,GAAQA,EAAA,IAOZE,EAAiC,WACrCP,GAAwB,EAC1B,EAMM/8B,EAAwB,WAC5BX,GAAqB,EACvB,EAEA,OACE7pB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLa,aAAc,EACd3C,KAAM,EACN4B,QArBgC,WACpC4iD,GAAwB,EAC1B,EAoBMtlC,QAAS,UACTphB,MAAO,CAAEF,MAAO,SAChBuf,UAAUlhB,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,WAAWC,KAAM,GAAIzD,MAAM,UAAWvB,SAAC,qBAKhFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ+nC,EACRznC,QAASioC,EAAgC1jD,KAAM,OAAQikB,YAAU,EAAAjpB,UACjEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG,MAAO2D,EAAG,MAAMzD,SAAA,EAClDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAalBzhB,EAAAA,GAAAA,MAACsgB,EAAAA,WAAU,CAACvd,KAAM,EAAGgb,cAAe,SAAU0C,OAAQ,GAAGrhB,SAAA,EAMvDJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASihB,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,sBAI1DY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcC,mBAA2Dhc,MAAM,iCAAiC+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcC,mBAAqBmQ,CAAO,GAAC,sBAArHzN,KACvF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcE,iBAAuDjc,MAAM,gBAAgB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcE,iBAAmBkQ,CAAO,GAAC,oBAAlGzN,KACnF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcG,iBAAuDlc,MAAM,mBAAmB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcG,iBAAmBiQ,CAAO,GAAC,oBAArGzN,KACnF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcI,iBAAuDnc,MAAM,cAAc+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcI,iBAAmBgQ,CAAO,GAAC,oBAAhGzN,QAGrF/gC,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,eAGzEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcK,cAAiDpc,MAAM,0BAA0B+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcK,cAAgB+P,CAAO,GAAC,iBAAzGzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcM,cAAiDrc,MAAM,yBAAyB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcM,cAAgB8P,CAAO,GAAC,iBAAxGzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcO,cAAiDtc,MAAM,cAAc+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcO,cAAgB6P,CAAO,GAAC,iBAA7FzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcQ,cAAiDvc,MAAM,eAAe+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcQ,cAAgB4P,CAAO,GAAC,iBAA9FzN,QAE/E//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcS,YAA6Cxc,MAAM,YAAY+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcS,YAAc2P,CAAO,GAAC,eAAzFzN,KACzE/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcU,YAA6Czc,MAAM,aAAa+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcU,YAAc0P,CAAO,GAAC,eAA1FzN,KACzE/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcW,cAAiD1c,MAAM,uBAAuB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcW,cAAgByP,CAAO,GAAC,iBAAtGzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcY,YAA6C3c,MAAM,sBAAsB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcY,YAAcwP,CAAO,GAAC,eAAnGzN,QAE3E//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAca,aAA+C5c,MAAM,aAAa+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAca,aAAeuP,CAAO,GAAC,gBAA3FzN,KAC3E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcc,WAA2C7c,MAAM,kBAAkB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcc,WAAasP,CAAO,GAAC,cAA9FzN,KACvE/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAce,eAAmD9c,MAAM,0BAA0B+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAce,eAAiBqP,CAAO,GAAC,kBAA1GzN,KAC/E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcgB,YAA6C/c,MAAM,iBAAiB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcgB,YAAcoP,CAAO,GAAC,eAA9FzN,QAE3E//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAciB,cAAiDhd,MAAM,uBAAuB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAciB,cAAgBmP,CAAO,GAAC,iBAAtGzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAckB,cAAiDjd,MAAM,wBAAwB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAckB,cAAgBkP,CAAO,GAAC,iBAAvGzN,KAC7E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcmB,cAAiDld,MAAM,sBAAsB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcmB,cAAgBiP,CAAO,GAAC,iBAArGzN,KAC7E/gC,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,UAI5MzhB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,gBAEzEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcoB,aAA+Cnd,MAAM,gBAAgB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcoB,aAAegP,CAAO,GAAC,gBAA9FzN,KAC3E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcqB,eAAmDpd,MAAM,mBAAmB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcqB,eAAiB+O,CAAO,GAAC,kBAAnGzN,KAC/E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcsB,aAA+Crd,MAAM,gBAAgB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcsB,aAAe8O,CAAO,GAAC,gBAA9FzN,KAC3E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcuB,aAA+Ctd,MAAM,cAAc+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcuB,aAAe6O,CAAO,GAAC,gBAA5FzN,QAE7E//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcwB,aAA+Cvd,MAAM,gBAAgB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcwB,aAAe4O,CAAO,GAAC,gBAA9FzN,KAC3E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcyB,eAAmDxd,MAAM,wBAAwB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcyB,eAAiB2O,CAAO,GAAC,kBAAxGzN,KAC/E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc0B,eAAmDzd,MAAM,oBAAoB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc0B,eAAiB0O,CAAO,GAAC,kBAApGzN,KAC/E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc2B,eAAmD1d,MAAM,kBAAkB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc2B,eAAiByO,CAAO,GAAC,kBAAlGzN,QAEjF//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc4B,aAA+C3d,MAAM,iBAAiB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc4B,aAAewO,CAAO,GAAC,gBAA/FzN,KAC3E/gC,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,OAC1MzhB,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,OAC1MzhB,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,UAG5MzhB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,gBAEzEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc6B,aAA+C5d,MAAM,eAAe+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc6B,aAAeuO,CAAO,GAAC,gBAA7FzN,KAC3E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc8B,eAAmD7d,MAAM,qBAAqB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc8B,eAAiBsO,CAAO,GAAC,kBAArGzN,KAC/E/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc+B,aAA+C9d,MAAM,UAAU+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc+B,aAAeqO,CAAO,GAAC,gBAAxFzN,KAC3E/gC,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,UAG5MzhB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAAG,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAACphB,SAAU,GAAI3E,MAAO,OAAOuD,SAAC,sBAEzEY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcgC,kBAAyD/d,MAAM,oBAAoB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcgC,kBAAoBoO,CAAO,GAAC,qBAAvGzN,KACrF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAciC,kBAAyDhe,MAAM,eAAe+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAciC,kBAAoBmO,CAAO,GAAC,qBAAlGzN,KACrF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAckC,oBAA6Dje,MAAM,gCAAgC+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAckC,oBAAsBkO,CAAO,GAAC,uBAArHzN,KACzF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcmC,oBAA6Dle,MAAM,kBAAkB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcmC,oBAAsBiO,CAAO,GAAC,uBAAvGzN,QAE3F//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcoC,oBAA6Dne,MAAM,sBAAsB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcoC,oBAAsBgO,CAAO,GAAC,uBAA3GzN,KACzF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcqC,sBAAiEpe,MAAM,6BAA6B+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcqC,sBAAwB+N,CAAO,GAAC,yBAApHzN,KAC7F/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcsC,oBAA6Dre,MAAM,oBAAoB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcsC,oBAAsB8N,CAAO,GAAC,uBAAzGzN,KACzF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcuC,oBAA6Dte,MAAM,0BAA0B+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcuC,oBAAsB6N,CAAO,GAAC,uBAA/GzN,QAE3F//B,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAC3BJ,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcwC,kBAAyDve,MAAM,iBAAiB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcwC,kBAAoB4N,CAAO,GAAC,qBAApGzN,KACrF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAcyC,kBAAyDxe,MAAM,eAAe+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAcyC,kBAAoB2N,CAAO,GAAC,qBAAlGzN,KACrF/gC,EAAAA,GAAAA,KAACkuC,GAAc,CAACG,SAAUjQ,GAAc0C,oBAA6Dze,MAAM,wBAAwB+rB,SAAU,SAACI,GAAO,OAAKpQ,GAAc0C,oBAAsB0N,CAAO,GAAC,uBAA7GzN,KACzF/gC,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACwiB,cAAe,EAAGzkD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAa8E,UAAQ,EAAA/F,UAACJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAW,SAASuG,aAAc,EAAG3C,KAAM,EAAGoC,UAAQ,EAACvC,QAAS,QAAS6d,OAAQ,aAG9MzgB,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAGrE,MAAO,OAAQwE,eAAgB,gBAAgBjB,SAAA,EAC/DJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS,WA7InBklB,GAAqB,EA+IX,EACA3O,YAAa,OACb9W,KAAM,KACNsB,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EAAE3D,SACT,WAGDJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,KACX/D,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAASmjD,EACT5sC,YAAa,UACb9W,KAAM,KACNsB,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EAAE3D,SACT,gBAoBPJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQmoC,EAA2B7nC,QAAS2K,EAAuBnC,YAAU,EAAAjpB,UAClFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,aAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,cAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,0CAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS6lB,EACTtP,YAAa,WACbnY,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SACjB,QAGDJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS,WACPq0C,KACA6O,EAAO9nB,MACPvV,GACF,EACAznB,KAAM,EAAGqB,KAAM,KAAM8W,YAAa,QAASxV,aAAc,EAAEtG,SAAC,sBAY5E,GAo3CoI,UAI1GY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4lB,QAAS,MAAOoiC,eAAgB,QAASllC,eAAgB,IAAKnf,QAAS,UAAUxD,SAAA,EACpFY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAMzlB,SAAA,EAAEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAU3rB,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,mBAAoBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWH,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIpB,SAAC,WAGlNJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACohB,IAAKm3B,GAAyB50C,QAAS,QAASG,KAAM,EAAGmC,YAAawxC,GAAkBzxC,YAAa,EAAE7F,UAE1GJ,EAAAA,GAAAA,KAAC0iC,EAAAA,QAAc,CACbrhB,IAAKsU,GACLgN,YAAa,CACX5+B,KAAM,EACNlH,MAAO,OACPgK,gBAAiB,QACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdkb,QAAS,GAEXghB,gBAAiB,CACf57B,UAAW,OACXrF,MAAO,UACPH,SAAU,IAEZqhC,cAAe,CACbh8B,gBAAiB,UACjBX,YAAa,UACbD,YAAa,EACbS,aAAc,EACdo8B,YAAa,UACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbC,SAAU,CACRt8B,gBAAiB,UACjBC,gBAAiB,GACjBN,kBAAmB,IAErB48B,aAAc,CACZzhC,MAAO,UACPH,SAAU,IAEZoH,KAAMowB,GACNqK,UAAU/qB,EAAAA,EAAAA,cAAY,SAAClI,GACrB4wB,GAAoBj8B,KAAOqL,CAG7B,GAAG,IACHkzB,kBAAkB,4BAClBC,yBAA0B,SAACnzB,GACzB,OAAOA,CACT,EACAozB,mBAAoB,SAACC,GACnB,OACEzjC,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CACPzb,KAAMs+B,EAAW,aAAe,eAChC9hC,MAAO,UACPyD,KAAM,IAGZ,EACAs+B,oBAAqB,SAAC3pB,GACpB,OAAOA,CACT,EACA4pB,kBAAkB,2BAClBC,iBAAkB,CAChBtkB,UAAW,EACXvb,KAAM,EACNlH,MAAO,QAETgnC,mBAAiB,EACjBC,QAAM,iBAelB9jC,EAAAA,GAAAA,KAAA,SAAM,KAACA,EAAAA,GAAAA,KAAA,SAAM,KAACA,EAAAA,GAAAA,KAAA,SAAM,KAACA,EAAAA,GAAAA,KAAA,UAErBA,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAQ,UAAU1D,EAAE,OAAOuhB,OAAQ,EAAG1C,cAAe,SAAU8C,cAAe,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAGzhB,UAEhHJ,EAAAA,GAAAA,KAAC+uB,GAAa,CAACC,oBAAqBA,EAAqBC,uBAh9ChD,WAC7B9mB,GAASmqB,EAAAA,EAAAA,mBAAkB,KAC3BlM,GAAuB,GACvBje,GAASyrB,EAAAA,EAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,EAAAA,sBAAoB,IAC7BpqB,GAAS8oB,EAAAA,EAAAA,wBAAsB,GACjC,YAk9CgBjxB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG0d,OAAQ,EAAG1C,cAAe,SAAUlb,EAAG,OAAQ8d,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAQvhB,UACrHY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC4D,EAAG,OAAQ3D,EAAG,OAAOE,SAAA,EAExBY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAAC2C,KAAM,EAAE3D,SAAA,EACdJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CACJ6c,IAAKmW,GACLtxB,YAAagrC,GACb5rC,YAAY,WAAWmc,OAAQ,EAAG7d,QAAS,QAASqC,YAAa,EAAGV,qBAAsB,YAAaxB,KAAM,KAC/G/D,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAAC2C,KAAM,EAAE3D,UACdY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAACzjD,KAAM,EAAE3D,SAAA,EAClBJ,EAAAA,GAAAA,KAACgpD,EAAAA,eAAc,CAACplD,QAAS,UAAWqC,YAAa,EAAGC,YAAa,QAASrE,MAAO,CAAEF,MAAO,SAAWvB,SAAU,YAC/GJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACT,KAAM,EAAGsd,IAAKkJ,GAAerkB,YAAagrC,GAAc5rC,YAAY,OAAO1B,QAAS,QAASqC,YAAa,EAAGV,qBAAsB,uBAKhJvE,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAAC2C,KAAM,EAAE3D,SAAA,EACdJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CAAC/iC,KAAM,EAAGsd,IAAKoW,GAAcvxB,YAAY,YAAYtC,QAAS,QAAS0B,YAAY,+BAA+BW,YAAa,EAAGV,qBAAsB,YAAakc,OAAQ,KACtLzhB,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACke,UAAW,EAAGvb,KAAM,EAAE3D,UAC5BY,EAAAA,GAAAA,MAACwmD,EAAAA,WAAU,CAACzjD,KAAM,EAAE3D,SAAA,EAClBJ,EAAAA,GAAAA,KAACgpD,EAAAA,eAAc,CAACplD,QAAS,UAAWqC,YAAa,EAAGC,YAAa,QAASrE,MAAO,CAAEF,MAAO,SAAWA,MAAO,QAASvB,SAAU,UAC/HJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACuiC,WAAS,EAAChjC,KAAM,EAAGsd,IAAKuX,GAAc1yB,YAAagrC,GAAc5rC,YAAY,OAAO1B,QAAS,QAASqC,YAAa,EAAGV,qBAAsB,uBAMzJvE,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAAAhB,SAAA,EACLJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACg+B,aAAa,UAAUz+B,KAAM,EAAGsd,IAAKqW,GAAa5yB,aAAck5B,GAAyB93B,YAAY,YAAYtC,QAAS,QAASoB,kBAAkBhF,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,QAAUC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,cAAgB2D,YAAY,YAAYmc,OAAQ,EAAGxb,YAAa,EAAGV,qBAAsB,eACjTvF,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAAC2B,UAAQ,EAACkb,IAAKwU,GAAa9xB,KAAM,EAAGmC,YAAY,YAAYtC,QAAS,QAASoB,kBAAkBhF,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,WAAaC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,cAAgB2D,YAAY,IAAImc,OAAQ,EAAGxb,YAAa,EAAGV,qBAAsB,uBAM7PvE,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,MAAOpE,OAAQ,EAAGI,cAAe,GAAI4O,WAAY,GAAI9O,QAASitB,EAAc,KAAO,OAAS,OAAOxuC,SAAA,EAE1HJ,EAAAA,GAAAA,MA70DO,SAAHipD,GAAyB,IAAnBnkC,EAAWmkC,EAAXnkC,YAC1BokC,GAAkDjsD,EAAAA,EAAAA,WAAS,GAAMksD,GAAAhsD,EAAAA,EAAAA,SAAA+rD,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAExCG,GAAuBhxC,EAAAA,EAAAA,cAAY,WACvC+wC,GAAqB,EAIvB,GAAG,IAEGE,GAAwBjxC,EAAAA,EAAAA,cAAY,WACxC+wC,GAAqB,EACvB,GAAG,IAIH,OACEroD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLa,aAAc,EACd3C,KAAM,EACNH,QAAS,UACT+B,QAAS2jD,EACTznD,MAAO,CAAEF,MAAO,aAChBmE,OAAQ,CAAElC,QAAS,WAAYxD,SAChC,WAIDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ6oC,EAAmBvoC,QAAS0oC,EAAsBnpD,UAC/DY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,aAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,cAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,iHAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS4jD,EACTrtC,YAAa,WACbnY,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SACjB,QAGDJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAAS,WACP4jD,IACAzkC,GACF,EACA/gB,KAAM,EAAGqB,KAAM,KAAM8W,YAAa,QAASxV,aAAc,EAAEtG,SAAC,sBAS5E,GA8vDmC,CAAC0kB,YAAaA,MAC/B9kB,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACa,aAAc,EAAG3C,KAAM,EAAGH,QAAS,UAAWuC,UAAQ,IAAU,KAACnG,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAAC9B,KAAM,EAAGH,QAAS,UAAWuC,UAAQ,KAEtHnG,EAAAA,GAAAA,MAx/CQ,SAAHwpD,GAA0B,IAApBjN,EAAYiN,EAAZjN,aAC3BkN,GAAoDxsD,EAAAA,EAAAA,WAAS,GAAMysD,GAAAvsD,EAAAA,EAAAA,SAAAssD,EAAA,GAA5DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAK1CG,EAAyB,WAC7BD,GAAsB,EACxB,EAEA,OACE5oD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLa,aAAc,EACd3C,KAAM,EACN4B,QAbwB,WAC5BikD,GAAsB,EACxB,EAYMhmD,QAAS,UACTkC,OAAQ,CAAElC,QAAS,WAAaxD,SAAC,iBAInCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQopC,EAAoB9oC,QAASgpC,EAAuBzpD,UACjEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAQxD,SAAA,EAC9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,QAAQxD,UACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,WACTijB,gBAAiB,EACjBC,gBAAiB,QACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASihB,MAAI,EAAAxiB,SAAC,gBAG3BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAQvB,SAAC,2HAK1BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,QAAQxD,UAChDY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CACLF,QAASkkD,EACT3tC,YAAa,WACbnY,KAAM,EACNqB,KAAM,KACNsB,aAAc,EAAEtG,SACjB,QAGDJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAAC1G,UAAWA,GAAWwG,SAAO3D,EAAAA,EAAAA,UAAE,kBAC/Bu6C,IACNsN,GACF,IACE9lD,KAAM,EAAGqB,KAAM,KAAM8W,YAAa,UAAWxV,aAAc,EAAEtG,SAAC,4BAS9E,GAk7CoC,CAACm8C,aAAcA,uBAa/Cv8C,EAAAA,GAAAA,KAACinB,GAAY,KAmBbjnB,EAAAA,GAAAA,KAACymB,GAAkB,CAAC5F,QAASykC,GAA+B3+B,WAAY,mBAAoBD,SAAU,uCACtG1mB,EAAAA,GAAAA,KAAC+mB,GAAkB,CAAClG,QAASwU,GAAyB1O,WAAY,iBAAkBD,SAAU,2EAKpG,C,q3CC7uPkB/pB,EAAAA,QAAWC,IAAI,UAAzBC,MAAR,IAEIitD,GACAC,GAFA5+C,GAAiB,gBAGjB6+C,GAAmB,GACnBC,GAAmB,GAEnBC,GAAiB,GAEjBC,GAA0B,GAC1BC,GAAyB,GAIzBC,GAA6B,GAE7BC,GAAqC,GAIrCC,GAAuB,GACvBC,GAAmB,GAEnBC,GAAwB,GAExBC,GAA+B,EAE/BC,GAAK,GACLC,GAAY,GAEZC,GAAwB,CACxBC,QAAS,CAET,EACAC,IAAK,GACLC,gBAAiB,GACjBC,iBAAkB,GAClBC,cAAe,GACfC,YAAa,GAEbC,UAAW,CACP/pB,KAAM,GACNgqB,QAAS,IAGbC,UAAW,CACPC,YAAa,KACbpmD,KAAM,GACNqmD,QAAS,GACTC,cAAe,GACfC,IAAK,GACLtuD,MAAO,IAGXuuD,YAAa,CACTC,gBAAiB,KACjBzmD,KAAM,GACNqmD,QAAS,GACTC,cAAe,GACfC,IAAK,GACLtuD,MAAO,IAGXyuD,eAAgB,CACZC,UAAW,GACXC,oBAAqB,KACrBC,eAAgB,GAChBC,gBAAiB,KACjBC,eAAgB,EAChB3uB,SAAU,EACV4uB,aAAc,EACdC,eAAgB,EAChBC,gBAAiB,EACjBnhC,YAAa,EACbohC,eAAgB,GAChBC,gBAAiB,IAGrBC,iBAAkB,CACdC,QAAS,GACTC,YAAa,GACbC,YAAa,CAEb,EACAC,aAAc,GACdC,eAAgB,KAKpBC,GAAuB,GACvBC,GAAyB,GAGvBplD,IAAYC,EAAAA,EAAAA,gBAEZC,GAAwB,WAE1B,IAAM/H,EAAOquB,EAAAA,mBAAmBrmB,YAChC,OAAIhI,EACcA,EAAK1C,MAIZ,IAEf,EAEM4vD,GAAc,SAACpkD,GACjB,IACI,IAAMqkD,EAAY,yBAAWrwB,WAC7B,OAAOswB,EAAAA,IAAIC,QAAQvkD,EAAMqkD,GAAWrwB,UACxC,CAAE,MAAOn6B,GAKL,OAJAC,QAAQD,MAAM,yBAA0BA,GAIjC,IACX,CACJ,EAEM2qD,GAAc,SAACC,GACjB,IACI,IAAMJ,EAAY,yBAAWrwB,WAG7B,OADcswB,EAAAA,IAAII,QAAQD,EAAYJ,GACzBrwB,SAAS2wB,EAAAA,IAAIC,KAC9B,CAAE,MAAO/qD,GAKL,OAJAC,QAAQD,MAAM,yBAA0BA,GAIjC,IACX,CACJ,EAGMgrD,GAAiB,SAAH1rD,GAAkB,IAAZ6G,EAAI7G,EAAJ6G,KAEhB8kD,GAAmBtlD,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAMqlD,gBAAgB,IAEhD9kD,EAAK0jB,WAAU,SAAAvS,GAAI,OAAI2zC,EAAiBC,cAAc/oD,MAAQmV,EAAKnV,KAAK,IAG5F,OACI5E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUswB,WAAY,GAAKrwB,SAEvEwI,EAAKjN,KAAI,SAACoe,EAAM6T,GAAK,OAClB5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAatpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,UAAWC,SAAA,EAEpEJ,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAOtI,EAAKyT,MAAO5pB,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAYvB,UACxEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdG,gBAAiB6mD,EAAiBC,cAAc/oD,MAAQmV,EAAKnV,MAAQ,UAAY,UACjFvD,eAAgB,UAClBjB,SAEGstD,EAAiBC,cAAc/oD,MAAQmV,EAAKnV,OACzC5E,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAKnF,EAAAA,MAAAA,CAAQ,eAAoC+a,EAAKnV,MAAK,YAC3D6a,SAAUD,EAAAA,QAAUC,SAASsT,QAEjCzuB,MAAO,CACHwpD,UAAW,yBACXjxD,MAAO,GACPC,OAAQ,GACRqwB,UAAW,UAEf/oB,WAAYob,EAAAA,QAAUpb,WAAWub,WAGrC3f,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAKnF,EAAAA,MAAAA,CAAQ,eAAoC+a,EAAKnV,MAAK,WAC3D6a,SAAUD,EAAAA,QAAUC,SAASsT,QAEjCzuB,MAAO,CACHwpD,UAAW,yBACXjxD,MAAO,GACPC,OAAQ,GACRqwB,UAAW,UAEf/oB,WAAYob,EAAAA,QAAUpb,WAAWub,cAOhDiO,EAAQhlB,EAAKlF,OAAS,IACnB1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTxH,OAAQ,EACRD,MAAO,GACPgK,gBAAiB6mD,EAAiBC,cAAc/oD,OAASmV,EAAKnV,MAAQ,UAAY,eAhDnFgpB,EAmDJ,KAIvB,EAGMmgC,GAAa,CACf,CAAEvgC,MAAO,cAAe5oB,MAAO,GAC/B,CAAE4oB,MAAO,0BAA2B5oB,MAAO,GAC3C,CAAE4oB,MAAO,aAAc5oB,MAAO,GAC9B,CAAE4oB,MAAO,oBAAqB5oB,MAAO,GACrC,CAAE4oB,MAAO,oBAAqB5oB,MAAO,GACrC,CAAE4oB,MAAO,YAAa5oB,MAAO,GAC7B,CAAE4oB,MAAO,mBAAoB5oB,MAAO,IAIlCqiB,GAAe,WACjB,IAAMC,GAAsB9e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6e,mBAAmB,IAG5E,OACIlnB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACH0a,SAAU,WACVC,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,qBACjB9C,KAAM,EACN4d,QAASuF,EAAsB,OAAS,OACxC7lB,eAAgB,SAChBlB,WAAY,UACdC,UAGFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,SAAA,EACrEJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,WACzB3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,8BAMjD,EAyBM4tD,GAAe,SAAH1kD,GAAmD,IAA7CkkB,EAAKlkB,EAALkkB,MAAO7nB,EAAO2D,EAAP3D,QAASsoD,EAAQ3kD,EAAR2kD,SAAUC,EAAW5kD,EAAX4kD,YACxCC,EAAcF,EAAW,CAAEpnD,gBAAiB,WAAc,CAAC,EAC3D+nC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAC7CG,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA1C6wB,EAAS3wB,EAAA,GAAEkxD,EAAYlxD,EAAA,GAG9B,OACI8D,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN2oD,UAJQ,WAAH,OAASD,GAAa,EAAM,EAKjCE,WAJS,WAAH,OAASF,GAAa,EAAO,EAKnC5nB,WAAW,EACX7gC,QAASA,EACTrB,MAAKmD,GAAA,CAAIZ,gBAAiBgnB,EAAY,UAAY,cAAejM,QAAS,GAAI2sC,eAAgB3f,EAAc,KAAO,GAAK,EAAG3oC,YAAa,EAAGC,YAAa,cAAe0Z,WAAY,EAAG/iB,MAAO,IAAKkiB,cAAe,MAAO5e,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,GAAMynD,GAAc/tD,SAAA,EAE1SJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAOssD,EAAW,UAAY,UAAWzsD,SAAU,GAAI8C,MAAO,CAAE7C,WAAYwsD,EAAW,IAAM,IAAK9gC,UAAW,SAAUnmB,UAAW,UAAY5G,SAAEotB,IACrJ0gC,IAIb,EAEMM,GAAe,SAAH32C,GAAiE,IAA3D2V,EAAK3V,EAAL2V,MAAO7nB,EAAOkS,EAAPlS,QAASsoD,EAAQp2C,EAARo2C,SAAUQ,EAAU52C,EAAV42C,WAAYC,EAAa72C,EAAb62C,cAC1DpxD,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA1CuwB,EAAStwB,EAAA,GAAE6wD,EAAY7wD,EAAA,GAG9B,OACIyD,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAASA,EACT0oD,UAPQ,WAAH,OAASD,GAAa,EAAM,EAQjCE,WAPS,WAAH,OAASF,GAAa,EAAO,EAQnC9pD,MAAO,CACHsd,QAAS,EACT/kB,MAAO,IACP4kB,OAAQ,EACR1C,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBonD,EAAW,UAAapgC,EAAY,UAAY,WACnEztB,SAAA,CAED6tD,EAAWQ,EAAaC,GACzB1uD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAOssD,EAAW,UAAY,UAAWzsD,SAAU,GAAI8C,MAAO,CAAE7C,WAAYwsD,EAAW,IAAM,IAAKruC,WAAY,GAAKxf,SAAEotB,MAKvI,EAoCMmhC,GAAyB,WAE3B,OACI3uD,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHsd,QAAS,GACTzhB,WAAY,aACZ4e,cAAe,MACflY,gBAAiB,SACnBzG,SAAA,EAGFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdG,gBAAiB,UACjB6Z,YAAa,OAIrB1f,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,SAAA,CACpBqwC,MAAMC,KAAK,CAAEhtC,OAAQ,IAAK/H,KAAI,SAACg1C,EAAGie,GAAQ,OACvC5uD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAEDtpD,MAAO,CACHxH,OAAQ,GACR+J,gBAAiB,UACjBF,aAAc,EACd9J,MAAO,MACP6J,aAAc,IAChB,QAPWkoD,EAQf,KAEN5uD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT0a,SAAU,WACVqI,MAAO,GAAIvqB,OAAQ,GACnB+J,gBAAiB,UACjBF,aAAc,EACd9J,MAAO,KACP6J,aAAc,MAGlB1G,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHoC,aAAc,EACdG,gBAAiB,UACjBmY,SAAU,WACVqI,OAAQ,GACRpI,KAAM,GACN2C,QAAS,GACTuL,UAAW,mBASvC,EAIM0hC,GAA6B,SAAH52C,GAA8C,IAAxC62C,EAAgC72C,EAAhC62C,iCAE5BC,GAA+B3mD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM0mD,4BAA4B,IACxF3xD,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAChF4xD,EAAgB1E,GACtB9sD,GAA8CP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAtDyxD,EAAexxD,EAAA,GAAEyxD,EAAkBzxD,EAAA,GACpC0xD,EAAc,WAChBL,GAEJ,EAGMM,EAAqB,eAAAl3C,GAAAlW,EAAAA,EAAAA,UAAG,UAAOqtD,GACjC,IAAMl2C,GAAc9W,EAAAA,EAAAA,KAAI4U,EAAAA,wBAAyB,kBAAmB7Z,GACpE8xD,GAAmB,GACnB,IAEI,IAAM/N,QAAgB9nC,EAAAA,EAAAA,QAAOF,GAE7B,GAAIgoC,EAAQx4C,SAAU,CAClB,IAGM2mD,GAHiBnO,EAAQv4C,OAAO2mD,iBAAmB,IAGfryC,QAAO,SAAAsyC,GAAQ,OAAIA,EAAShiC,QAAU6hC,CAAa,UAGvF9sD,EAAAA,EAAAA,WAAU4W,EAAa,CAAEo2C,gBAAiBD,IAEhD5sD,QAAQe,IAAI,6BACZyrD,GAAmB,GACnBC,GACJ,MACIzsD,QAAQe,IAAI,2BACZyrD,GAAmB,EAG3B,CAAE,MAAOzsD,GACLC,QAAQD,MAAM,wBAAyBA,GACvCysD,GAAmB,EAEvB,CACJ,IAAC,gBA7B0BvsD,GAAA,OAAAuV,EAAApV,MAAA,KAAAC,UAAA,KA+B3B,OAEI/C,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQwuC,EACRluC,QAASsuC,EAAY/uD,UAErBY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAE,8BACfJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,UACtBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,wEAI3CJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,GAAAA,MAAC6E,EAAAA,OAAO4pD,MAAK,CAACxsC,QAAQ,QAAQ/hB,MAAM,IAAGd,SAAA,EACnCJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACvB,MAAO,CAAEzH,MAAO,GAAIC,OAAQ,IAAO6I,QAASwpD,EAAalsC,QAAS,QAAS/G,YAAa,WAAW9b,SAAC,YAC5GJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAAC1G,YAAW8vD,EAAgCtpD,QAAS,kBAAMypD,EAAsBJ,EAAc,EAAE1qD,MAAO,CAAEsd,QAAS,GAAI9kB,OAAQ,IAAOmmB,QAAS,QAAS/G,YAAa,QAAQ9b,SAAC,oBAQ7M,EAEMsvD,GAAsB,SAAHt3C,GAA2H,IAArHu3C,EAAgBv3C,EAAhBu3C,iBAA8BC,GAAFx3C,EAAVy3C,WAAyBz3C,EAAbw3C,eAAeE,EAAa13C,EAAb03C,cAAeC,EAAa33C,EAAb23C,cAAeh2C,EAAI3B,EAAJ2B,KAAMi2C,EAAY53C,EAAZ43C,aAAcC,EAAc73C,EAAd63C,eAC1HhxD,GAA0DhC,EAAAA,EAAAA,WAAS,GAAMiC,GAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GAAlEixD,EAAqBhxD,EAAA,GAAEixD,EAAwBjxD,EAAA,GACtDG,GAA0DpC,EAAAA,EAAAA,WAAS,GAAMqC,GAAAnC,EAAAA,EAAAA,SAAAkC,EAAA,GAAlE+wD,EAAqB9wD,EAAA,GAAE+wD,EAAwB/wD,EAAA,GACtDkM,GAA0DvO,EAAAA,EAAAA,WAAS,GAAMwO,GAAAtO,EAAAA,EAAAA,SAAAqO,EAAA,GAAlE8kD,EAAqB7kD,EAAA,GAAE8kD,EAAwB9kD,EAAA,GACtDC,GAA8DzO,EAAAA,EAAAA,WAAS,GAAM0O,GAAAxO,EAAAA,EAAAA,SAAAuO,EAAA,GAAtE8kD,EAAuB7kD,EAAA,GAAE8kD,EAA0B9kD,EAAA,GAC1DE,GAAgD5O,EAAAA,EAAAA,WAAS,GAAM6O,GAAA3O,EAAAA,EAAAA,SAAA0O,EAAA,GAAxD6kD,EAAgB5kD,EAAA,GAAE6kD,EAAmB7kD,EAAA,GAC5CC,GAAsC9O,EAAAA,EAAAA,UAAS,MAAK+O,GAAA7O,EAAAA,EAAAA,SAAA4O,EAAA,GACpDE,GADkBD,EAAA,GAAgBA,EAAA,IACM/O,EAAAA,EAAAA,UAAS,OAAKiP,GAAA/O,EAAAA,EAAAA,SAAA8O,EAAA,GAAjC2kD,GAAF1kD,EAAA,GAAiBA,EAAA,IAC9B/D,GAAWK,EAAAA,EAAAA,eAwCjB,OACIxH,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACNC,QAAS,kBAxCD,SAACoU,GACbi2C,EAAah7C,QAAQpQ,MAAQmV,EAAKnV,MAClCqrD,GAAe,EACnB,CAqCuBtqD,CAAQoU,EAAK,EAC5Bs0C,UAAW,kBAAM8B,GAAyB,EAAK,EAC/C7B,WAAY,kBAAM6B,GAAyB,EAAM,EACjD7rD,MAAO,CACHsd,QAAS,GACT/a,gBAAiBqpD,EAAwB,UAAY,cACrDnsD,KAAM,EACN2C,aAAc,GAChBtG,SAAA,EACFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,MAAOsC,KAAM,GAAM8sD,cAAe,EAAGC,cAAc,OAAM1wD,SAAE2Z,EAAKyT,SAC3FxtB,EAAAA,GAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQmwC,EACR7vC,QAAS,kBAAM8vC,GAAoB,EAAM,EACzCnwC,QAAS,SAACC,GACN,OAAOzgB,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS+B,GAAAA,GAAA,GACTgZ,GAAY,IAChB9a,QAAS,kBAAMgrD,GAAoB,EAAK,EACxCtC,UAAW,kBAAMgC,GAAyB,EAAK,EAC/C/B,WAAY,kBAAM+B,GAAyB,EAAM,EACjD/rD,MAAO,CAAEuC,gBAAiBupD,EAAwB,UAAY,cAAexuC,QAAS,EAAGvgB,eAAgB,SAAUqF,aAAc,GAAKtG,UACtIJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC9tB,KAAM,GAAID,KAAK,wBAAwBxD,MAAM,cAE7D,EAAEvB,UAGFY,EAAAA,GAAAA,MAACsf,EAAAA,QAAQU,QAAO,CAAA5gB,SAAA,EAEZJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS,kBAhEb,SAACoU,GAEjBg2C,GAAc,GAEda,GAAgB,GAChBD,GAAoB,GACpBf,EAAc56C,QAAQpQ,MAAQmV,EAAKyT,MACnCsiC,EAAc96C,QAAQpQ,MAAQmV,EAAKnV,MACnC+qD,EAAiB51C,EAAKyT,MAE1B,CAsDuCujC,CAAYh3C,EAAK,EAChCs0C,UAAW,kBAAMkC,GAAyB,EAAK,EAC/CjC,WAAY,kBAAMiC,GAAyB,EAAM,EAAEjsD,MAAO,CAAEP,KAAM,EAAGlH,MAAO,GAAIgK,gBAAiBypD,EAAwB,UAAY,QAAS1uC,QAAS,GAAM4kB,WAAW,EAAMpmC,UAC9KJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,YAGVJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS,kBA7CN6nB,EA6C8BzT,EAAKyT,MA3C1DrlB,GAAS6oD,EAAAA,EAAAA,kCAAgC,SACzC1G,GAAqC98B,GAHf,IAACA,CA6CyC,EAC5C6gC,UAAW,kBAAMoC,GAA2B,EAAK,EACjDnC,WAAY,kBAAMmC,GAA2B,EAAM,EAAEnsD,MAAO,CAAEP,KAAM,EAAGlH,MAAO,GAAIgK,gBAAiB2pD,EAA0B,UAAY,QAAS5uC,QAAS,GAAM4kB,WAAW,EAAMpmC,UAClLJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,sBAMtBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,MAAOD,SAAU,IAAOqvD,cAAe,EAAGC,cAAc,OAAM1wD,SAAE2Z,EAAKnV,UAK5G,EAEMqsD,GAAkB,SAAHr4C,GAA0B,IAApBo3C,EAAYp3C,EAAZo3C,aACjB7nD,GAAWK,EAAAA,EAAAA,eACjB4D,GAAkDnP,EAAAA,EAAAA,WAAS,GAAMoP,GAAAlP,EAAAA,EAAAA,SAAAiP,EAAA,GAA1D8kD,EAAiB7kD,EAAA,GAAE8kD,EAAoB9kD,EAAA,GAC9CE,GAAwCtP,EAAAA,EAAAA,WAAS,GAAMuP,GAAArP,EAAAA,EAAAA,SAAAoP,EAAA,GAAhD6kD,EAAY5kD,EAAA,GAAE6kD,EAAe7kD,EAAA,GACpCE,GAAsCzP,EAAAA,EAAAA,WAAS,GAAM0P,GAAAxP,EAAAA,EAAAA,SAAAuP,EAAA,GAA9C4kD,EAAW3kD,EAAA,GAAEsjD,EAActjD,EAAA,GAClCC,GAAoC3P,EAAAA,EAAAA,UAAS,IAAG4P,GAAA1P,EAAAA,EAAAA,SAAAyP,EAAA,GAAzCkJ,EAAUjJ,EAAA,GAAE0kD,EAAa1kD,EAAA,GAChCC,GAAwC7P,EAAAA,EAAAA,UAAS,IAAG8P,GAAA5P,EAAAA,EAAAA,SAAA2P,EAAA,GAA7CsH,EAAYrH,EAAA,GAAEsH,EAAetH,EAAA,GACpCE,GAAoChQ,EAAAA,EAAAA,WAAS,GAAMiQ,GAAA/P,EAAAA,EAAAA,SAAA8P,EAAA,GAA5C4iD,EAAU3iD,EAAA,GAAE6iD,EAAa7iD,EAAA,GAEhCE,GAA8CnQ,EAAAA,EAAAA,WAAS,GAAMoQ,GAAAlQ,EAAAA,EAAAA,SAAAiQ,EAAA,GAAtDokD,EAAenkD,EAAA,GAAEokD,EAAkBpkD,EAAA,GAC1CE,GAA0CtQ,EAAAA,EAAAA,WAAS,GAAMuQ,GAAArQ,EAAAA,EAAAA,SAAAoQ,EAAA,GAAlDmkD,EAAalkD,EAAA,GAAEmkD,EAAgBnkD,EAAA,GACtCE,GAA0CzQ,EAAAA,EAAAA,UAAS,IAAG0Q,GAAAxQ,EAAAA,EAAAA,SAAAuQ,EAAA,GAA/CkkD,EAAajkD,EAAA,GAAEgiD,EAAgBhiD,EAAA,GAGtCE,IAAsC5Q,EAAAA,EAAAA,WAAS,GAAM6Q,IAAA3Q,EAAAA,EAAAA,SAAA0Q,GAAA,GAA9CgkD,GAAW/jD,GAAA,GAAEgkD,GAAchkD,GAAA,GAElCG,IAAwChR,EAAAA,EAAAA,UAAS,IAAGiR,IAAA/Q,EAAAA,EAAAA,SAAA8Q,GAAA,GAA7C8jD,GAAY7jD,GAAA,GAAE8jD,GAAe9jD,GAAA,GAE9B+jD,IAAiB/hD,EAAAA,EAAAA,QAAO,MACxB0/C,IAAgB1/C,EAAAA,EAAAA,QAAO,MACvB4/C,IAAgB5/C,EAAAA,EAAAA,QAAO,MAEvB9S,GAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAUhF80D,GAAmB,eAAAj5C,GAAAjX,EAAAA,EAAAA,UAAG,YACxB8vD,IAAe,GACf,IAAM34C,GAAc9W,EAAAA,EAAAA,KAAI4U,EAAAA,wBAAyB,kBAAmB7Z,IAEpE,IAAK,IAAD+0D,EAAAC,EAEMjR,QAAgB9nC,EAAAA,EAAAA,QAAOF,GAEzBk5C,EAAmB,GACjBC,EAAgC,OAAxBH,EAAGvC,GAAc56C,cAAO,EAArBm9C,EAAuBvtD,MAClCzC,EAAgC,OAAxBiwD,EAAGtC,GAAc96C,cAAO,EAArBo9C,EAAuBxtD,MAExC,GAAI0tD,GAAYnwD,EAAU,CACtB,GAAIg/C,EAAQx4C,SAAU,CAKlB,IAAMilB,GAHNykC,EAAmBlR,EAAQv4C,OAAO2mD,iBAAmB,IAGtBjjC,WAAU,SAAAkjC,GAAQ,OAAIA,EAAShiC,QAAUokC,CAAa,KAEtE,IAAXhkC,EAEAykC,EAAiBzkC,GAAS,CAAEJ,MAAO8kC,EAAU1tD,MAAOzC,GAGpDkwD,EAAiBz7C,KAAK,CAAE4W,MAAO8kC,EAAU1tD,MAAOzC,GAExD,MAEIO,QAAQe,IAAI,2BACZ4uD,EAAmB,CAAC,CAAE7kC,MAAO8kC,EAAU1tD,MAAOzC,UAI5C0b,EAAAA,EAAAA,QAAO1E,EAAa,CAAEo2C,gBAAiB8C,GAAoB,CAAE/rB,OAAO,IAE1E5jC,QAAQe,IAAI,2CAChB,MACIf,QAAQe,IAAI,0BAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,wCAAyCA,EAC3D,CAAC,QACGqvD,IAAe,GACfS,IACJ,CACJ,IAAC,kBA9CwB,OAAAt5C,EAAAnW,MAAA,KAAAC,UAAA,KAgEnBwvD,GAAsB,WACxBlB,GAAgB,GAChBtB,GAAc,GACd0B,GAAmB,GACnBE,GAAiB,GACjB/B,GAAc56C,QAAQuW,QACtBukC,GAAc96C,QAAQuW,OAE1B,GAOA5rB,EAAAA,EAAAA,YAAU,WACN,IAAMklB,GAASxiB,EAAAA,EAAAA,KAAI4U,EAAAA,wBAAyB,kBAAmB7Z,IAEzD2L,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACs8B,GACpC,GAAIA,EAAQx4C,SAAU,CAClB,IAAI6pD,EAAiBrR,EAAQv4C,OAAO2mD,gBAGpCiD,EAAe5hC,MAAK,SAAC2C,EAAGG,GACpB,IAAI++B,EAASl/B,EAAE/F,MAAMygB,cACjBykB,EAASh/B,EAAElG,MAAMygB,cACrB,OAAIwkB,EAASC,GACD,EAERD,EAASC,EACF,EAGJ,CACX,IAEAV,GAAgBQ,EACpB,MACI9vD,QAAQe,IAAI,oBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,2BAA4BA,EAC9C,IAGA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,CAACuoD,IAOJ,OACItwD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC6uD,GAA0B,CAACC,iCAPK,WAErC3mD,GAAS6oD,EAAAA,EAAAA,kCAAgC,GAC7C,KAKQhxD,EAAAA,GAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQ+wC,EACRzwC,QAhEe,WACvBovC,GAAe,GACfF,GAAc,GACdsB,GAAgB,EACpB,EA6DY77B,gBAAiBy8B,GACjBx8B,cAAeu6B,EACflvC,UAAW,MACXN,QAAS,SAACC,GACN,OAAOzgB,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS+B,GAAAA,GAAA,CACb++B,WAAW,GACP/lB,GAAY,IAChB9a,QAAS,kBAAMsqD,GAAe,EAAK,EACnC5B,UAAW,kBAAM8C,GAAqB,EAAK,EAC3C7C,WAAY,kBAAM6C,GAAqB,EAAM,EAC7C7sD,MAAO,SAAAqW,GAAU,MAAO,CACpB,CACIwM,OAAQ,EACRE,MAAO,IACPrI,SAAU,WACVtY,aAAc,GACdlG,QANSma,EAAPg4C,QAMiB,GAAM,GAEhC,EAACvyD,UAGFJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,2BAA2BC,KAAM,GAAIzD,MAAOuvD,EAAoB,UAAY,cAEnG,EAAE9wD,UACFY,EAAAA,GAAAA,MAACsf,EAAAA,QAAQU,QAAO,CAAC9gB,EAAG,IAAKwgB,YAAa,GAAGtgB,SAAA,EACrCJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQsyC,MAAK,KACd5xD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqd,QAASkuC,EAAa,OAAS,QAAUzvD,SAAA,EAACJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQoC,OAAM,CAAC7b,gBAAiB,QAAQzG,UAC9FJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,GAAI3D,UAC3CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIuC,KAAM,GAAI3D,SAAC,mCAG7DY,EAAAA,GAAAA,MAACsf,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,QAAS/J,OAAQ,IAAIsD,SAAA,EAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,WACnCJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKuuC,GACLtqD,YAAY,cACZC,qBAAqB,UACrButD,sBAAsB,cACtBxuD,MAAO,CAAExH,OAAQ,GAAI8kB,QAAS,GAAIkkC,aAAc,OAAQ7/C,YAAa,EAAGC,YAAa,UAAWQ,aAAc,MAClH1G,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,aACnCJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN9rB,WAAS,EACT1lB,IAAKyuC,GACLxqD,YAAY,gBACZC,qBAAqB,UACrButD,sBAAsB,cACtBxuD,MAAO,CAAExH,OAAQ,IAAK8kB,QAAS,GAAIkkC,aAAc,OAAQ7/C,YAAa,EAAGC,YAAa,UAAWQ,aAAc,SAGvH1G,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQwC,OAAM,CAACjc,gBAAiB,QAAQzG,UACrCY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,GAAIiiB,cAAe,MAAO1d,eAAgB,UAAYjB,SAAA,EACzEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN2oD,UAAW,kBAAMoD,GAAmB,EAAK,EACzCnD,WAAY,kBAAMmD,GAAmB,EAAM,EAC3C9rD,QAAS4sD,GACTjuD,MAAO,CAAEuC,gBAAiB2qD,EAAkB,UAAY,QAAS30D,MAAO,GAAI6J,aAAc,EAAGkb,QAAS,EAAG3b,YAAa,EAAGC,YAAa,UAAW6sD,iBAAkB,GAAK3yD,UACxKJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUvF,WAAY,KAAOrB,SAAC,cAG5DJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAASusD,GACT7D,UAAW,kBAAMsD,GAAiB,EAAK,EACvCrD,WAAY,kBAAMqD,GAAiB,EAAM,EACzCrtD,MAAO,CAAEuC,gBAAiB6qD,EAAgB,UAAY,UAAW70D,MAAO,GAAI6J,aAAc,EAAGkb,QAAS,EAAG3b,YAAa,EAAGC,YAAa,UAAW6sD,iBAAkB,GAAK3yD,SACvKyxD,IACI7xD,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACL4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,WAGP3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,QAASF,WAAY,KAAOrB,SAAC,oBAKzFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqd,QAAUkuC,EAAsB,OAAT,QAAmBzvD,SAAA,EAACJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQoC,OAAM,CAAC7b,gBAAiB,QAAQzG,UACtGY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,GAAI3D,SAAA,EAC3CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIuC,KAAM,GAAI3D,SAAC,sBACzDJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAAC8gC,WAAW,EAAO7gC,QAAS,kBAAMoqD,GAAc,EAAK,EAAE1B,UAAW,kBAAMgD,GAAgB,EAAK,EAAE/C,WAAY,kBAAM+C,GAAgB,EAAM,EAACjxD,UAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAWsxD,mBAAoB7B,EAAe,YAAc,QAAShxD,SAAC,kBAInIY,EAAAA,GAAAA,MAACsf,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,QAAS/J,OAAQ,IAAIsD,SAAA,EAChDJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK4wC,GACL3sD,YAAY,SACZC,qBAAqB,UACrButD,sBAAsB,cACtBxuD,MAAO,CAAExH,OAAQ,GAAI8kB,QAAS,GAAIkkC,aAAc,OAAQ7/C,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGC,aAAc,GAC/H67B,aAAa,SACb19B,aAvKP,SAACC,GAClBwsD,EAAcxsD,GACd,IAAMsZ,EAAW0zC,GAAa70C,QAAO,SAAAnD,GAAI,OACrCA,EAAKyT,MAAMjW,cAAc4F,SAASpY,EAAKwS,gBACvCwC,EAAKnV,MAAM2S,cAAc4F,SAASpY,EAAKwS,cAAc,IAEzDlD,EAAgBgK,EACpB,EAiK4BzZ,MAAOkR,IACVi8C,GAAaruD,OAAS,GAAK0Q,EAAa1Q,OAAS,GAC9C1D,EAAAA,GAAAA,KAACkzD,EAAAA,QAAQ,CACL5uD,MAAO,CAAExH,OAAQ,IAAKq2D,uBAAwB,GAC9CrgC,WAnJb,SAAHtZ,GAAkB,IAAZO,EAAIP,EAAJO,KAClB,OAAO/Z,EAAAA,GAAAA,KAAC0vD,GAAmB,CAACC,iBAAkBA,EAAkBE,WAAYA,EAAYD,cAAeA,GAAeE,cAAeA,GAAeC,cAAeA,EAAeh2C,KAAMA,EAAMi2C,aAAcA,EAAcC,eAAgBA,GAC9O,EAkJgCt7B,aAAc,SAAA5a,GAAI,OAAIA,EAAKyT,MAAMoP,UAAU,EAC3Ch0B,KAAMkN,EAAa1B,EAAe29C,MAEtC/xD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAK0rB,UAAW,UAAY/sB,SAAC,2CASxF,EAGMgzD,GAAc,SAAHp4C,GAA4B,IAAtBq4C,EAAIr4C,EAAJq4C,KAAMC,EAAQt4C,EAARs4C,SAEzB,IAAKD,EAAM,OAAO,KAKlB,IAAqB7tD,EAwBrB,OACIxE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUshB,OAAQ,GAAIrhB,SAAA,EAzBtDoF,EA0BA6tD,EAAK7tD,KAzBlBA,EAAK2X,SAAS,QACPnd,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,iBAAkBC,KARrC,GAQqDzD,MAAM,YAEpE6D,EAAK2X,SAAS,WAAa3X,EAAK2X,SAAS,qBAClCnd,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAM,iBAAkBC,KAX9C,GAW8DzD,MAAM,YAE7E6D,EAAK2X,SAAS,iBAAmB3X,EAAK2X,SAAS,kBAA6B,aAAT3X,GAC5DxF,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAM,kBAAmBC,KAd/C,GAc+DzD,MAAM,YAE9E6D,EAAK2X,SAAS,QAAU3X,EAAK2X,SAAS,qBAAuB3X,EAAK2X,SAAS,iBACpEnd,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACbtb,OAAQ,CAAEC,IAAKnF,EAAQ,OAA8BygB,SAAUD,EAAAA,QAAUC,SAASC,MAClFpb,MAAO,CACHzH,MAAO,GACPC,OAAQ,IAEZsH,WAAYob,EAAAA,QAAUpb,WAAWmvD,SAIlCvzD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBC,KA3BlC,GA2BkDzD,MAAM,YAMjE3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEsb,WAAY,IAAKxf,SAAEizD,EAAKluD,QACvCnF,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS2tD,EAASlzD,UACzBJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,QAAQC,KAAM,GAAIzD,MAAM,cAI5D,EAEM6xD,GAAgB,WAClB,IAAM9F,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAGtEv/C,IAFqB/F,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMorD,YAAY,KAEpBx2D,EAAAA,EAAAA,WAAS,IAAMmR,GAAAjR,EAAAA,EAAAA,SAAAgR,EAAA,GAAlDulD,EAAatlD,EAAA,GAAEulD,EAAgBvlD,EAAA,GACtCG,GAAwCtR,EAAAA,EAAAA,UAAS,MAAKuR,GAAArR,EAAAA,EAAAA,SAAAoR,EAAA,GAA/CqlD,EAAYplD,EAAA,GAAEqlD,EAAerlD,EAAA,GACpCG,GAAsD1R,EAAAA,EAAAA,UAAS,MAAK2R,GAAAzR,EAAAA,EAAAA,SAAAwR,EAAA,GAA7DmlD,EAAmBllD,EAAA,GAAEmlD,EAAsBnlD,EAAA,GAClDE,GAA0C7R,EAAAA,EAAAA,UAAS,MAAK8R,GAAA5R,EAAAA,EAAAA,SAAA2R,EAAA,GAAjDklD,EAAajlD,EAAA,GAAEklD,EAAgBllD,EAAA,GACtCG,GAAgCjS,EAAAA,EAAAA,UAAS,MAAKkS,GAAAhS,EAAAA,EAAAA,SAAA+R,EAAA,GAAvCglD,EAAQ/kD,EAAA,GAAEglD,EAAWhlD,EAAA,GAC5Bc,GAA8BhT,EAAAA,EAAAA,UAAS,MAAKkT,GAAAhT,EAAAA,EAAAA,SAAA8S,EAAA,GAArCmkD,EAAOjkD,EAAA,GAAEkkD,EAAUlkD,EAAA,GAC1BG,GAAgCrT,EAAAA,EAAAA,UAAS,IAAGsT,GAAApT,EAAAA,EAAAA,SAAAmT,EAAA,GAArCoqB,EAAQnqB,EAAA,GAAE+jD,EAAW/jD,EAAA,GAC5BG,GAAoDzT,EAAAA,EAAAA,WAAS,GAAM0T,GAAAxT,EAAAA,EAAAA,SAAAuT,EAAA,GAA5D6jD,EAAkB5jD,EAAA,GAAE6jD,EAAqB7jD,EAAA,GAChDC,GAA8D3T,EAAAA,EAAAA,WAAS,GAAM4T,GAAA1T,EAAAA,EAAAA,SAAAyT,EAAA,GAAtE6jD,GAAuB5jD,EAAA,GAAE6jD,GAA0B7jD,EAAA,GAC1DE,IAA0C9T,EAAAA,EAAAA,WAAS,GAAM+T,IAAA7T,EAAAA,EAAAA,SAAA4T,GAAA,GAAlD4jD,GAAa3jD,GAAA,GAAE4jD,GAAgB5jD,GAAA,GAChCg/C,IAAe9/C,EAAAA,EAAAA,QAAO,MAEtB2kD,GAAc,WAChBV,EAAY,MACZF,EAAiB,MACjBK,EAAY,KAEhB,EAEMQ,GAAa,WACfjB,EAAgB,MAChBE,EAAuB,MACvBM,EAAW,MACXC,EAAY,KAGhB,EAEMS,GAAU,eAAA14C,GAAAra,EAAAA,EAAAA,UAAG,YACf,IAAMgzD,EAAc,SAEpB,MAAoB,QAAhBC,EAAAA,QAASC,GACF,IAAI/iC,SAAQ,SAAC51B,EAAS44D,GACzB,IAAM1uD,EAAQkQ,SAAS+jC,cAAc,SACrCj0C,EAAMjB,KAAO,OACbiB,EAAM2uD,OAAS,uCACf3uD,EAAM4uD,SAAW,WACb,IAAMhC,EAAO5sD,EAAM6uD,MAAM,GAEzB,GAAIjC,EAAM,CACN,IAAK,CACD,kBACA,qBACA,0EACA,2BACA,oEACA,+BACA,2BACA,YACFl2C,SAASk2C,EAAK7tD,MAGZ,OAFA+vD,MAAM,8BACNJ,EAAO,yBAIX,GAAI9B,EAAKjuD,KAAO4vD,EAGZ,OAFAO,MAAM,2CACNJ,EAAO,sCAGXN,KAEA,IAAMW,EAAS,IAAIC,WACnBD,EAAOza,OAAS,SAAC7+C,GACbm4D,EAAWn4D,EAAEw5D,OAAOC,QACpBp5D,EAAQ82D,GACRQ,EAAgBR,GAChBU,EAAuB,CAAE5uD,KAAMkuD,EAAKluD,KAAMK,KAAM6tD,EAAK7tD,OACrD8uD,EAAYjB,EAAKluD,MACjB6qD,GAAah7C,QAAQ4gD,OACzB,EACAJ,EAAOK,QAAU,SAAC35D,GACdi5D,EAAOj5D,EACX,EACAs5D,EAAOM,cAAczC,EACzB,CACJ,EACA5sD,EAAMsvD,OACV,IAEO,IAAI5jC,SAAQ,SAAC51B,EAAS44D,IACzB1jC,EAAAA,EAAAA,oBAAmB,CAAEN,UAAW,UAAW,SAACK,GACxC,GAAIA,EAASE,UACTyjC,EAAO,oCACJ,GAAI3jC,EAASjuB,UAChB4xD,EAAO3jC,EAAS3yB,kBACb,CACH,IAAMizB,EAAQN,EAASG,OAAO,GAE9B,IAAKG,EAAMtsB,KAAKi4B,WAAW,UAIvB,OAHA03B,EAAO,qCACPI,MAAM,gCAKV,GAAIzjC,EAAMkkC,SAAWhB,EAGjB,OAFAG,EAAO,2CACPI,MAAM,sCAIV,IAAMU,EAAmBnkC,EAAM3tB,IACzBu2B,EAAW5I,EAAM4I,UAAY,eACnCn+B,EAAQ,CAAE4H,IAAK8xD,EAAkB9wD,KAAMu1B,IACvCy5B,EAAY8B,EAEhB,CACJ,GACJ,GAER,IAAC,kBAnFe,OAAA55C,EAAAvZ,MAAA,KAAAC,UAAA,KAqFVmzD,GAAW,eAAAv5C,GAAA3a,EAAAA,EAAAA,UAAG,YAChB,IAAMgzD,EAAc,SAEpB,MAAoB,QAAhBC,EAAAA,QAASC,GAEF,IAAI/iC,SAAQ,SAAC51B,EAAS44D,GACzB,IAAM1uD,EAAQkQ,SAAS+jC,cAAc,SACrCj0C,EAAMjB,KAAO,OACbiB,EAAM2uD,OAAS,UACf3uD,EAAM4uD,SAAW,WACb,IAAMhC,EAAO5sD,EAAM6uD,MAAM,GACzB,GAAIjC,EAAM,CAEN,IAAKA,EAAK7tD,KAAKi4B,WAAW,UAItB,OAHA03B,EAAO,qCACPI,MAAM,gCAKV,GAAIlC,EAAKjuD,KAAO4vD,EAIZ,OAHAG,EAAO,2CACPI,MAAM,sCAKVT,KACA,IAAMU,EAAS,IAAIC,WACnBD,EAAOM,cAAczC,GACrBmC,EAAOza,OAAS,WACZx+C,EAAQ,CAAE45D,QAASX,EAAOG,OAAQxwD,KAAMkuD,EAAKluD,OAC7CgvD,EAAYqB,EAAOG,QACnBrB,EAAYjB,EAAKluD,KAErB,EACA8uD,EAAiBZ,GACjBmC,EAAOK,QAAU,SAAApzD,GAAK,OAAI0yD,EAAO1yD,EAAO,CAC5C,CACJ,EACAgE,EAAMsvD,OACV,IAEO,IAAI5jC,SAAQ,SAAC51B,EAAS44D,IACzB1jC,EAAAA,EAAAA,oBAAmB,CAAEN,UAAW,UAAW,SAACK,GACxC,GAAIA,EAASE,UACTyjC,EAAO,oCACJ,GAAI3jC,EAASjuB,UAChB4xD,EAAO3jC,EAAS3yB,kBACb,CACH,IAAMizB,EAAQN,EAASG,OAAO,GAE9B,IAAKG,EAAMtsB,KAAKi4B,WAAW,UAGvB,OAFA03B,EAAO,qCACPI,MAAM,gCAIV,GAAIzjC,EAAMkkC,SAAWhB,EAGjB,OAFAG,EAAO,2CACPI,MAAM,gCAIV,IAAMU,EAAmBnkC,EAAM3tB,IACzBu2B,EAAW5I,EAAM4I,UAAY,eACnCn+B,EAAQ,CAAE4H,IAAK8xD,EAAkB9wD,KAAMu1B,IACvCy5B,EAAY8B,EAEhB,CACJ,GACJ,GAER,IAAC,kBAzEgB,OAAAt5C,EAAA7Z,MAAA,KAAAC,UAAA,KAwHXqzD,GAAc,eAAAr5C,GAAA/a,EAAAA,EAAAA,UAAG,YAAa,IAADq0D,EAC/BzB,IAAiB,GACjB,IACQ15C,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCACxCg7C,EAAuBj7C,IAAOH,GAAUI,OAAO,sBAE/Cle,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAChFm5D,EAAiC,OAAvBF,EAAGrG,GAAah7C,cAAO,EAApBqhD,EAAsBzxD,MAEzCorD,GAAah7C,QAAQuW,QACrBykC,GAAah7C,QAAQ4gD,QACrBd,KAEA,IAAM1mC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BAE3B,GAAI8lC,EAEA,IAEI,IAAIoC,EAAU,KACd,GAAIpC,EAAS,CAET,IAAMqC,GAAUp1C,EAAAA,EAAAA,KAAI+M,EAAQ,aAAcs/B,EAAiB5xD,GAAE,UAAUw6D,EAAoB,IAAI57B,GACzFg8B,QAAqBra,EAAAA,EAAAA,aAAYoa,EAAS7C,GAChD4C,QAAgB/7B,EAAAA,EAAAA,gBAAei8B,EAAar1C,IAChD,OAGMxG,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAMwxD,EAAWpzD,OACjBwzD,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,GACXyI,KAAM,CACFluD,KAAMu1B,EACNl1B,KAAM,aACNoxD,IAAKJ,WAKPj0D,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,qBACZC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,KAGbw3D,IAAiB,EAErB,CAAE,MAAO14D,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,MAGA04D,IAAiB,EAEzB,IAAC,kBA7DmB,OAAA73C,EAAAja,MAAA,KAAAC,UAAA,KAgEdo0D,GAAe,eAAA95C,GAAArb,EAAAA,EAAAA,UAAG,YAAa,IAADo1D,EAChCxC,IAAiB,GACjB,IA/GiBvB,EAgHTn4C,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCACxCg7C,EAAuBj7C,IAAOH,GAAUI,OAAO,sBAE/Cle,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAChFm5D,EAAiC,OAAvBa,EAAGpH,GAAah7C,cAAO,EAApBoiD,EAAsBxyD,MAInCwpB,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BAE3B,GAAI4lC,EAAU,CAEVlE,GAAah7C,QAAQuW,QACrBykC,GAAah7C,QAAQ4gD,QACrBf,KAEA,IACI,IAAIwC,EAAW,KACf,GAAInD,EAAU,CAEV,IAAMoD,QArIDjE,EAqIkCW,EApI5C,IAAI7hC,SAAQ,SAAC51B,EAAS44D,GACzB,IAAMK,EAAS,IAAIC,WACnBD,EAAOM,cAAczC,GACrBmC,EAAOza,OAAS,SAACwc,GACb,IAAM9c,EAAM,IAAIx2C,MAChBw2C,EAAIG,IAAM2c,EAAM7B,OAAOC,OACvBlb,EAAIM,OAAS,WACT,IAAMC,EAASrkC,SAAS+jC,cAAc,UAChCO,EAAMD,EAAOL,WAAW,MAK1B99C,EAAQ49C,EAAI59C,MACZC,EAAS29C,EAAI39C,OAEbD,EAAQC,EACJD,EANS,MAOTC,GAPS,IAOYD,EACrBA,EARS,KAWTC,EAVU,MAWVD,GAXU,IAWWC,EACrBA,EAZU,KAgBlBk+C,EAAOn+C,MAAQA,EACfm+C,EAAOl+C,OAASA,EAChBm+C,EAAIG,UAAUX,EAAK,EAAG,EAAG59C,EAAOC,GAChCk+C,EAAOmB,QAAO,SAAClqB,GACX11B,EAAQ,IAAIi7D,KAAK,CAACvlC,GAAOohC,EAAKluD,KAAM,CAChCK,KAAM,aACNiyD,aAAcC,KAAKC,QAE3B,GAAG,aAAc,GACrB,EACAld,EAAIob,QAAU,SAAApzD,GAAK,OAAI0yD,EAAO1yD,EAAO,CACzC,EACA+yD,EAAOK,QAAU,SAAApzD,GAAK,OAAI0yD,EAAO1yD,EAAO,CAC5C,KA4FkB25C,GAAW/6B,EAAAA,EAAAA,KAAI+M,EAAQ,aAAcs/B,EAAiB5xD,GAAE,UAAUw6D,EAAoB,IAAI57B,GAC1Fg8B,QAAqBra,EAAAA,EAAAA,aAAYD,EAAUkb,GACjDD,QAAiB58B,EAAAA,EAAAA,gBAAei8B,EAAar1C,IACjD,OAGMxG,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAMwxD,EAAWpzD,OACjBwzD,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,GACXyI,KAAM,CACFluD,KAAMu1B,EACNl1B,KAAM,QACNoxD,IAAKS,WAKP90D,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAa,gBACbC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,KAGbw3D,IAAiB,EAErB,CAAE,MAAO14D,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,MAEI04D,IAAiB,EAEzB,IAAC,kBA/DoB,OAAAv3C,EAAAva,MAAA,KAAAC,UAAA,KAkEf60D,GAAU,eAAAx5C,GAAApc,EAAAA,EAAAA,UAAG,YAAa,IAAD61D,EAC3BjD,IAAiB,GAEjB,IACQ15C,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCi7C,GAROl7C,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEhB,OAAvBu8C,EAAG7H,GAAah7C,cAAO,EAApB6iD,EAAsBjzD,OAKzC,GAHAorD,GAAah7C,QAAQuW,QACrBykC,GAAah7C,QAAQ4gD,QAEF,KAAfW,EAAmB,CACnB,IAAMn5D,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GACtF,UAGUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAMwxD,EAAWpzD,OACjBwzD,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAaP,EACbQ,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,KAEbw3D,IAAiB,EAErB,CAAE,MAAO14D,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,MAEI04D,IAAiB,EAGzB,IAAC,kBApDe,OAAAx2C,EAAAtb,MAAA,KAAAC,UAAA,KAsDV6rC,GAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAkBvCi7D,GAAoB,WAEL,OAAb5D,GACAiD,KAEY,OAAZ/C,EACAgC,KAGAwB,IAGR,EAEA,OAEI52D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAOkiB,cAAe,MAAO9Y,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGG,gBAAiB,SAAWzG,SAAA,EAEpIY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAUhb,KAAM,GAAK3D,SAAA,CAE9Cg0D,IAEOp0D,EAAAA,GAAAA,KAACozD,GAAW,CAACC,KAAMS,EAAqBR,SAAUwB,KAGzDZ,IACGlzD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACT0a,SAAU,WACVniB,MAAO,GACPC,OAAQ,GACR4J,aAAc,EACdgb,SAAU,SACVzb,YAAa,EACbC,YAAa,UACbub,OAAQ,GACVrhB,SAAA,EACEJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAK+vD,GACf5vD,MAAO,CAAEzH,MAAO,OAAQC,OAAQ,OAAQ4J,aAAc,IACtDtC,WAAYob,EAAAA,QAAUpb,WAAWmvD,SAErCvzD,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAASkvD,GACTvwD,MAAO,CACH0a,SAAU,WACVC,IAAK,EACLoI,MAAO,EACPxgB,gBAAiB,2BACjBH,aAAc,IAChBtG,UAEFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,QAAQC,KAAM,GAAIzD,MAAM,gBAKxDX,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,SAAA,EACnCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEyuD,iBAAkB,EAAGzzC,UAAW,GAAKlf,UAChDJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAK,2JAA4Jsb,SAAUD,EAAAA,QAAUC,SAASC,MACxMpb,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,IAElBtC,WAAYob,EAAAA,QAAUpb,WAAWmvD,WAGzCvzD,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK2uC,GACLjpB,WAAS,EACTzhC,YAAY,oBACZC,qBAAsB,UACtBwyD,WAzFG,SAAC77D,GAKhB0yC,IAHqB,MAKK,UAAtB1yC,EAAE87D,YAAYC,KAAoB/7D,EAAE87D,YAAYE,WAChDh8D,EAAEi8D,iBACFL,MAIZ,EA6EoBxzD,MAAO,CAAEwhD,aAAc,OAAQjpD,MAAO,OAAQC,OAAQ,GAAIqwB,UAAW,SAAUvL,QAAS,OAE5F5hB,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX7gC,QAAS,kBAAMgvD,GAAgB,KAAOmD,IAAmB,EACzDzJ,UAAW,kBAAMsF,GAAiB,EAAK,EACvCrF,WAAY,kBAAMqF,GAAiB,EAAM,EACzCrvD,MAAO,SAAAub,GAAA,IAAG8yC,EAAO9yC,EAAP8yC,QAAO,MAAO,CACpB,CACI/wC,QAAS,GACT3C,IAAK,GACLoI,MAAO,GACPrI,SAAU,WACVtY,aAAc,GACdG,gBAAiB6sD,EAAgB,UAAY,cAC7ClzD,QAASmyD,EAAU,GAAM,GAEhC,EAACvyD,SAEDu0D,IAAgB30D,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACrB4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,aAEP3B,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,OAAOC,KAAM,GAAIzD,MAAM,qBAM3D3B,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN2oD,UAAW,kBAAMmG,GAAsB,EAAK,EAC5ClG,WAAY,kBAAMkG,GAAsB,EAAM,EAC9ClwD,MAAO,SAAA21B,GAAU,MAAO,CACpB,CACIrY,QAAS,GACTuF,QAAS,GACTE,MAAO,IACPrI,SAAU,WACVtY,aAAc,GACdlG,QAPSy5B,EAAP04B,QAOiB,GAAM,GAEhC,EACDhtD,QAASuwD,GAAY91D,UAErBJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,gBAAgBC,KAAM,GAAIzD,MAAO4yD,EAAqB,UAAY,eAGrFv0D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN2oD,UAAW,kBAAMqG,IAA2B,EAAK,EACjDpG,WAAY,kBAAMoG,IAA2B,EAAM,EACnDpwD,MAAO,SAAAi2B,GAAU,MAAO,CACpB,CACI3Y,QAAS,GACTuF,QAAS,EACTE,MAAO,IACPrI,SAAU,WACVtY,aAAc,GACdlG,QAPS+5B,EAAPo4B,QAOiB,GAAM,GAEhC,EACDhtD,QAASovD,GAAW30D,UAEpBJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,cAAcC,KAAM,GAAIzD,MAAO8yD,GAA0B,UAAY,eAG7Fz0D,EAAAA,GAAAA,KAACixD,GAAe,CAACjB,aAAcA,OAK3C,EAKMoI,GAAgB,WAElB,OACIp4D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT4a,OAAQ,IACRF,SAAU,WACVtY,aAAc,GACdT,YAAa,EACb5E,eAAgB,SAChBlB,WAAY,SACZK,QAAS,GAETye,IAAK,GACLmI,KAAM,IACRhnB,UAEEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAWhK,MAAO,GAAIC,OAAQ,EAAG4J,aAAc,OAG3F,EAEM2xD,GAAe,SAAHC,GAAgG,IAA1Fv+C,EAAIu+C,EAAJv+C,KAAMpU,EAAO2yD,EAAP3yD,QAAS4yD,EAAaD,EAAbC,cAAetK,EAAQqK,EAARrK,SAAUuK,EAAaF,EAAbE,cAAeC,EAAaH,EAAbG,cAC3EtnD,GADsGmnD,EAAZI,cAC1Dz7D,EAAAA,EAAAA,UAAS,OAAKmU,GAAAjU,EAAAA,EAAAA,SAAAgU,EAAA,GAAvCkmD,EAAQjmD,EAAA,GAAEunD,EAAWvnD,EAAA,GAC5BG,GAAwDtU,EAAAA,EAAAA,UAAS,MAAKuU,GAAArU,EAAAA,EAAAA,SAAAoU,EAAA,GACtEI,GAD2BH,EAAA,GAAyBA,EAAA,IAClBvU,EAAAA,EAAAA,UAAS,KAAG2U,GAAAzU,EAAAA,EAAAA,SAAAwU,EAAA,GAAvCinD,EAAShnD,EAAA,GAAEinD,EAAYjnD,EAAA,GAC9BG,GAAgC9U,EAAAA,EAAAA,UAAS,IAAG+U,GAAA7U,EAAAA,EAAAA,SAAA4U,EAAA,GAArC+mD,EAAQ9mD,EAAA,GAAE+mD,EAAW/mD,EAAA,GACtB7J,GAAWK,EAAAA,EAAAA,eACjB2J,GAA8ClV,EAAAA,EAAAA,WAAS,GAAMmV,GAAAjV,EAAAA,EAAAA,SAAAgV,EAAA,GAAtD6mD,EAAe5mD,EAAA,GAAE6mD,EAAkB7mD,EAAA,GAC1CG,GAAsDtV,EAAAA,EAAAA,WAAS,GAAMuV,GAAArV,EAAAA,EAAAA,SAAAoV,EAAA,GAA9D2mD,EAAmB1mD,EAAA,GAAE2mD,EAAsB3mD,EAAA,GAClDG,GAA8C1V,EAAAA,EAAAA,WAAS,GAAM2V,GAAAzV,EAAAA,EAAAA,SAAAwV,EAAA,GAC7DO,GADsBN,EAAA,GAAoBA,EAAA,IACR3V,EAAAA,EAAAA,WAAS,IAAMkW,GAAAhW,EAAAA,EAAAA,SAAA+V,EAAA,GAA1C2a,EAAS1a,EAAA,GAAEi7C,EAAYj7C,EAAA,GAC9BI,GAAwCtW,EAAAA,EAAAA,UAAS,CAAC,GAAEuW,GAAArW,EAAAA,EAAAA,SAAAoW,EAAA,GAA/B6lD,GAAF5lD,EAAA,GAAiBA,EAAA,IAE9B6pB,GAAUtjB,EAAK+wC,SAAW/wC,EAAK+wC,QAAQztB,QAAUtjB,EAAK+wC,QAAQztB,QAAWtjB,EAAKs/C,SAAWt/C,EAAKs/C,QAAQh8B,QAAUtjB,EAAKs/C,QAAQh8B,QAAU,GACvIi8B,GAAkB,eAAAt+B,GAAAh5B,EAAAA,EAAAA,UAAG,YACvBmG,GAASoxD,EAAAA,EAAAA,iBAAgB,KACzBpxD,GAASqxD,EAAAA,EAAAA,qBAAoB,KAC7BrxD,GAASsxD,EAAAA,EAAAA,qBAAoB,KAC7B,IAAM50C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS5T,EAAKje,IAC5D,UACUyG,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpBoyC,MAAM,GAGd,CAAE,MAAOx0D,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,kBAbuB,OAAAu4B,EAAAl4B,MAAA,KAAAC,UAAA,MA0CxBpD,EAAAA,EAAAA,YAAU,WAEN,IAAMu6B,EAAangB,EAAK+wC,SAAW/wC,EAAK+wC,QAAQnpB,QAAU5nB,EAAK+wC,QAAQnpB,QAAW5nB,EAAKs/C,SAAWt/C,EAAKs/C,QAAQK,MAAQ3/C,EAAKs/C,QAAQK,MAAQ,GACtItrC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BACrB8tB,GAAW/6B,EAAAA,EAAAA,KAAI+M,EAAY8L,EAAU,OAE3CO,EAAAA,EAAAA,gBAAe2hB,GACVh5C,MAAK,SAACwzD,GACH+B,EAAY/B,EAChB,IACCtzD,OAAM,SAACb,GACAA,EAAMrG,KAENu8D,EAAY,wKAOpB,IAEJ,IACMgB,EAAQ5/C,EAAK6/C,aAAaC,SAE1Bh1C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAHI,WAGuCgsC,GAExD5wD,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACxiB,GACpC,GAAIA,EAAIsG,SAAU,CACd,IAAMC,EAAOvG,EAAIuG,OACjBwwD,EAAgBxwD,GAAc,CAAC,GAC/BiwD,EAAajwD,EAAKgwD,UAAYhwD,EAAKgwD,UAAY,IAC/CG,EAAYnwD,EAAKkwD,SAAWlwD,EAAKkwD,SAAW,GAEhD,MACIp2D,QAAQe,IAAI,qBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,4BAA6BA,EAC/C,IAGA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,IAEH,IAAM+wD,IAAoBzC,GAAwB,MAAZA,GAAgC,IAAZA,QAA8Bp5B,GAAZo5B,IAA0Bt9C,EAEhGggD,GAAiB/6D,EAAAA,MAAAA,CAAQ,eAAoC+a,EAAK4zC,cAAc/oD,MAAK,WACrFo1D,GAAkBh7D,EAAAA,MAAAA,CAAQ,eAAoC+a,EAAK4zC,cAAc/oD,MAAK,YAmC5F,OAAIk1D,IACO95D,EAAAA,GAAAA,KAAC2uD,GAAsB,KAI1B3tD,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN2oD,UApHI,WACZD,GAAa,EACjB,EAmHYE,WAjHK,WACbF,GAAa,EACjB,EAgHY5nB,WAAW,EACXliC,MAAO,CACHsd,QAAS,GACTzhB,WAAY,aACZ4e,cAAe,MACflY,gBAAiBonD,GAAwBpgC,EAAb,UAAqC,QACjE/G,gBAAiBmnC,EAAW,UAAY,cACxCgM,iBAAkBhM,EAAW,UAAY,cACzCpnC,gBAAiB,EACjBqzC,iBAAkB,GAGtBv0D,QApDQ,WAChBA,IAGAwkD,GAA0ByO,GAAwB,GAClDxO,GAAyB0O,GAAsB,GAC/C5O,GAAiBmN,GAAsB,GACvClvD,GAASgyD,EAAAA,EAAAA,gBAAe9C,GAAsB,KAEtBh6B,GACxB+wB,GAAa,GACb6K,GAAmB,EAGvB,EAsCiC74D,SAAA,CAEpB2Z,EAAKqgD,cAAep6D,EAAAA,GAAAA,KAACo4D,GAAa,KAEnCp4D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAOwE,eAAgB,UAAYjB,SACpDi3D,GACGr3D,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAKkzD,EAAU53C,SAAUD,EAAAA,QAAUC,SAASsT,QACtDzuB,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,IAElBtC,WAAYob,EAAAA,QAAUpb,WAAWub,WAGrC3f,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdG,gBAAiB,UACjB6Z,YAAa,SAK7B1f,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,SAAA,CACnBytB,GAA+L9T,EAAKk9C,KAAwL,MAA/Wj3D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIwd,SAAU,WAAYqI,MAAO,GAAI1lB,MAAO62D,EAAgB,UAAY,UAAW/2D,WAAY+2D,EAAgB,IAAM,KAAOp4D,SAAEq4D,KACtKz4D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACsvD,cAAe,EAAGC,cAAc,OAAOxsD,MAAO,CAAE9C,SAAU,GAAI3E,MAAO,MAAO6kB,SAAU,SAAUjgB,WAAY+2D,EAAgB,IAAM,IAAK72D,MAAO62D,EAAgB,UAAY,WAAap4D,SAAEi9B,MAC/Lr9B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACsvD,cAAe,EAAGC,cAAc,OAAOxsD,MAAO,CAAE9C,SAAU,GAAI3E,MAAO,MAAO6kB,SAAU,SAAU3d,KAAM,EAAGtC,WAAY+2D,EAAgB,IAAM,IAAK72D,MAAO62D,EAAgB,UAAY,WAAap4D,SAAKw4D,EAAS,IAAIE,KACxN94D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACsvD,cAAe,EAAGC,cAAc,OAAOxsD,MAAO,CAAE9C,SAAU,GAAI3E,MAAO,MAAO6kB,SAAU,SAAU3d,KAAM,EAAGtC,WAAY+2D,EAAgB,IAAM,IAAK72D,MAAO62D,EAAgB,UAAY,WAAap4D,SAAE2Z,EAAK88C,mBAAqB98C,EAAK6/C,aAAaC,SAAY9/C,EAAK+8C,YAAc/8C,EAAK+8C,YAAc,mBAAuB/8C,EAAK+8C,YAAW,UAAa/8C,EAAK+8C,YAAW,4BACxW/8C,EAAKk9C,MAcHj3D,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAK61D,GAAiBv6C,SAAUD,EAAAA,QAAUC,SAASsT,QAC7DzuB,MAAO,CACHwpD,UAAW,yBACXjxD,MAAO,GACPC,OAAQ,GACRkiB,SAAU,WACVqI,MAAO,GACPF,OAAQ,GAEZ/iB,WAAYob,EAAAA,QAAUpb,WAAWub,WAvBrC3f,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAK41D,GAAgBt6C,SAAUD,EAAAA,QAAUC,SAASsT,QAC5DzuB,MAAO,CACHwpD,UAAW,yBACXjxD,MAAO,GACPC,OAAQ,GACRkiB,SAAU,WACVqI,MAAO,GACPF,OAAQ,GAEZ/iB,WAAYob,EAAAA,QAAUpb,WAAWub,WAiBzC3f,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACsvD,cAAe,EAAGC,cAAc,OAAOxsD,MAAO,CAChD0a,SAAU,WACVqI,MAAO,EACPpI,IAAK,GACL2C,QAAS,GACTuL,UAAW,SACX3rB,SAAU,GACVkgB,SAAU,SACV3d,KAAM,EACNtC,WAAY+2D,EAAgB,IAAM,IAClC72D,MAAO62D,EAAgB,UAAY,WACrCp4D,SACG2Z,EAAKsgD,eAAiBtgD,EAAK4zC,cAAc/oD,MAAQ,EAAImV,EAAKsgD,cAAgB,KAG9ExsC,GAAa9T,EAAKk9C,OACfj3D,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,iBAAiBvB,UAAU,QAAQw5C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC/GJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAhMN,WAClBD,GAAa,GACb6K,GAAmB,EACvB,EA8L4B3K,WA5LL,WACnB2K,GAAmB,EACvB,EA2L4BtzD,QAAS2zD,GACTh1D,MAAO,CACH0a,SAAU,WACVqI,MAAO,EACPpI,KAAM,GACN2C,QAAS,GACTuL,UAAW,UACb/sB,UAGFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,iBAAiBC,KAAM,GAAIzD,MAAOq3D,EAAkB,UAAY,gBAK/FnrC,IACG7tB,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,kBAAkBvB,UAAU,QAAQw5C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAChHJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UA9NF,WACtBD,GAAa,GACb+K,GAAuB,EAC3B,EA4N4B7K,WA1ND,WACvB6K,GAAuB,EAC3B,EAyN4BxzD,QA1IF,WACtB4yD,IAGApO,GAA0ByO,GAAwB,GAClDxO,GAAyB0O,GAAsB,GAC/C5O,GAAiBmN,GAAsB,GACvClvD,GAASgyD,EAAAA,EAAAA,gBAAe9C,GAAsB,KAEtBh6B,GACxB+wB,GAAa,GACb6K,GAAmB,EAGvB,EA6H4B30D,MAAO,CACH0a,SAAU,WACVqI,OAAQ,GACRpI,KAAM,GACN2C,QAAS,GACTuL,UAAW,UACb/sB,UAGFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,cAAcC,KAAM,GAAIzD,MAAOu3D,EAAsB,UAAY,qBAarH,EAEMqB,GAAW,SAAHn4B,GAAmD,IAA7Co4B,EAAiBp4B,EAAjBo4B,kBAAmBC,EAAiBr4B,EAAjBq4B,kBAE7B/M,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAEhEgL,IADuBtwD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,KACzDtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqwD,YAAY,KAExDjF,IADsBrrD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMsyD,mBAAmB,KACvDvyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMorD,YAAY,KACxDmH,GAAkBxyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMuyD,eAAe,IAC9DC,GAAazyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMwyD,UAAU,IAEpD1yD,IADkB+H,EAAAA,EAAAA,QAAO,OACd1H,EAAAA,EAAAA,gBAEjBmL,GAAgC1W,EAAAA,EAAAA,UAAS,IAAG2W,GAAAzW,EAAAA,EAAAA,SAAAwW,EAAA,GAA3BglD,GAAF/kD,EAAA,GAAaA,EAAA,IAEpBknD,GAAWC,EAAAA,GAAAA,aAAXD,OAEFr7D,GAAWC,EAAAA,GAAAA,eAEXs7D,EAAgB,eAAAh3B,GAAAhiC,EAAAA,EAAAA,UAAG,YACrB,IAAM6iB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS8lC,GAEjDr2D,GADO+wB,EAAAA,mBAAmBrmB,YAClBqmB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IACtF,GAAc,KAAVA,EAEA,UACUmF,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpBoyC,MAAM,EACNC,QAAQ7wB,EAAAA,EAAAA,YAAWjpC,IAE3B,CAAE,MAAOqF,GACLC,QAAQD,MAAM,4BAA6BA,GAC3ChD,EAAS,qBAEb,CAIR,IAAC,kBAnBqB,OAAAukC,EAAAlhC,MAAA,KAAAC,UAAA,MA8TtBpD,EAAAA,EAAAA,YAAU,WAGFm7D,GAEA73D,YAAW,WACP,IAAMg4D,EAAgBC,mBAAmBJ,GAErCK,EADoB/N,GAAY6N,GAAer+B,WACvBuJ,MAAM,KAC9Bi1B,EAAcD,EAAM,GACpBE,EAAYF,EAAMA,EAAMz3D,OAAS,GAKrC,GAAK23D,EAAL,CAImB3N,EAAiB5C,SAAW4C,EAAiB5C,QAAQnpB,QAAU+rB,EAAiB5C,QAAQnpB,QAAW+rB,EAAiB2L,SAAW3L,EAAiB2L,QAAQK,OAAQhM,EAAiB2L,QAAQK,MAA5M,IACMtrC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BACrB8tB,GAAW/6B,EAAAA,EAAAA,KAAI+M,EAAYgtC,EAAW,MAuB5C,IApBA3gC,EAAAA,EAAAA,gBAAe2hB,GACVh5C,MAAK,SAACwzD,GACH+B,EAAY/B,GACZ1M,GAAiB0M,EACjBzuD,GAASgyD,EAAAA,EAAAA,gBAAevD,GAE5B,IACCtzD,OAAM,SAACb,GACAA,EAAMrG,KAENu8D,EAAY,wKAOpB,IAGAjL,EAAkB,CAEyB,OAAhC4N,EAAG5N,EAAiBkM,eAAjB0B,EAA+BzB,SAF1B,IAADyB,EAIZz2C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAHI,WAGuC0tC,GAExDE,GAAgBl5D,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmBytC,GAElEI,GAAqBtyD,EAAAA,EAAAA,YAAWqyD,GAAe,SAACl5D,GAClD,GAAIA,EAAIsG,SAAU,CACd,IAAMC,EAAOvG,EAAIuG,OACjBT,GAASszD,EAAAA,EAAAA,wBAAuB7yD,GAAc,CAAC,IAE/ClG,QAAQe,IAAImF,EAOhB,MACIlG,QAAQe,IAAI,qBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,4BAA6BA,EAC/C,IAEMsG,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACxiB,GACpC,GAAIA,EAAIsG,SAAU,CACd,IAAMC,EAAOvG,EAAIuG,OACjBT,GAASuzD,EAAAA,EAAAA,yBAAwB9yD,GAAc,CAAC,IAChDuhD,GAA0BvhD,EAAKgwD,UAAYhwD,EAAKgwD,UAAY,GAC5DxO,GAAyBxhD,EAAKkwD,SAAWlwD,EAAKkwD,SAAW,GAGzDp2D,QAAQe,IAAImF,EAOhB,MACIlG,QAAQe,IAAI,qBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,4BAA6BA,EAC/C,IAGA,OAAO,WAEHsG,IACAyyD,GACJ,CACJ,CAjFA,MAFI94D,QAAQD,MAAM,sBAAuB44D,EAwF7C,GAAG,GAGP,IAAMtyD,EAlZgB,WACtB,GAAK0qD,EAGA,CACDtrD,GAASqxD,EAAAA,EAAAA,qBAAoB,KAC7BrxD,GAASwzD,EAAAA,EAAAA,2BAAyB,IAClCX,IAEA,IAEI,IACMn2C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS8lC,GAEjDmI,GAAcvlD,EAAAA,EAAAA,YAAWwO,EAAQ,YAGjCg3C,GAAgBzlD,EAAAA,EAAAA,OAAMwlD,GAAatlD,EAAAA,EAAAA,SAAQ,YAAa,SAASC,EAAAA,EAAAA,OAAM,KAGvEulD,GAAiB5yD,EAAAA,EAAAA,YAAW2b,GAAQ,SAACrb,GACvC,GAAIA,EAAYb,SAAU,CACtB,IAEMozD,EAAUt0D,GAAAA,GAAA,GAFH+B,EAAYZ,QAGd,IACP9M,GAAI0N,EAAY1N,KAMpB,GAHAqM,GAASsxD,EAAAA,EAAAA,qBAAoBsC,IAGzBA,EAAW1B,eAA6C,IAA5B0B,EAAW1B,cAAqB,CAC5D,IAAM2B,GAAgB35D,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiBouC,EAAW1B,eAC3E4B,GAAqB/yD,EAAAA,EAAAA,YAAW8yD,GAAe,SAACE,GAClD,GAAIA,EAAmBvzD,SAAU,CAC7B,IAEMwzD,EAAiB10D,GAAAA,GAAA,GAFHy0D,EAAmBtzD,QAGrB,IACd9M,GAAIogE,EAAmBpgE,KAG3BqM,GAASi0D,EAAAA,EAAAA,gBAAeD,GAAwC,CAAC,GAErE,MAEIz5D,QAAQe,IAAI,kBACZ0E,GAASi0D,EAAAA,EAAAA,gBAAe,CAAC,GAEjC,IAGA,OAAO,WACHH,GAEJ,CACJ,CACI9zD,GAASi0D,EAAAA,EAAAA,gBAAe,CAAC,IACzB15D,QAAQe,IAAI,iBAGpB,CAEJ,IACM44D,GAAsBnzD,EAAAA,EAAAA,YAAW2yD,GAAe,SAAC9gC,GACnD,IAAIuhC,EAAW,GACfvhC,EAAcrkB,SAAQ,SAACrU,GACnB,IAAMuG,EAAOvG,EAAIuG,OACXqT,EAAYrT,EAAKqT,UAAYrT,EAAKqT,UAAU2gB,WAAa,KAC/D0/B,EAAS1lD,KAAInP,GAAAA,GAAC,CAAE3L,GAAIuG,EAAIvG,IAAO8M,GAAI,IAAEqT,UAAAA,IACzC,IAEA9T,GAASqxD,EAAAA,EAAAA,qBAAoB8C,IAC7Bn0D,GAASwzD,EAAAA,EAAAA,2BAAyB,IAClC5R,GAA4BhvB,EAAcjkB,KAAKikB,EAAcjkB,KAAKpT,OAAS,EAC/E,IAGA,OAAO,WACHo4D,IACAO,GAIJ,CACJ,CAAE,MAAO55D,GACLC,QAAQD,MAAM,wCAAyCA,EAE3D,CACJ,CACJ,CAuTwB85D,GAGpB,OAAO,WACCxzD,GAEAA,GAER,CAEJ,GAAG,CAAC0qD,KAKJ9zD,EAAAA,EAAAA,YAAU,WAEN,GAAIm7D,EAAQ,CACR,IAAM0B,EAAkBpP,GAAY0N,GAAQl+B,WAE5C35B,YAAW,WAEPkF,GAASoxD,EAAAA,EAAAA,iBAAgBiD,GAE7B,GAAG,EAGP,CACJ,GAAG,CAAC1B,IAEJ,IAAM2B,EAAe,eAAAx3B,GAAAjjC,EAAAA,EAAAA,UAAG,UAAO06D,EAAY5B,GACvC,GAAIA,IAAWrH,EAAc,CACzB,IAAMkJ,EAAkB3P,GAAY8N,GAC9B8B,EAAgBC,mBAAmBF,GACzCl9D,EAAS,sBAAsBm9D,GAY/Bz0D,GAASoxD,EAAAA,EAAAA,iBAAgBuB,IAEzB7Q,GAAmByS,EACJ5B,CAEnB,CACJ,IAAC,gBAtBoBl4D,EAAAC,GAAA,OAAAoiC,EAAAniC,MAAA,KAAAC,UAAA,KAwBf+5D,EAAqB,eAAAC,GAAA/6D,EAAAA,EAAAA,UAAG,UAAO06D,EAAY5B,GAC7C,IAAM6B,EAAkB3P,GAAY8N,GAQ9B7wD,EAAI,sBAPY4yD,mBAAmBF,GAUnCK,EADUrqC,OAAOsqC,SAASC,OAASvqC,OAAOsqC,SAASE,SAC9B,IAAIlzD,EAC/B0oB,OAAOyqC,KAAKJ,EAAU,UAItB/S,GAAmByS,EACJ5B,CAEnB,IAAC,gBApB0BvhD,EAAAG,GAAA,OAAAqjD,EAAAj6D,MAAA,KAAAC,UAAA,MAsB3BpD,EAAAA,EAAAA,YAAU,WACNwI,GAASoxD,EAAAA,EAAAA,iBAAgB,IAC7B,GAAG,CAACiB,IA0CJ,OAAI9B,EAAah1D,OAAS,GAElB1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAYC,UACtEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAK0rB,UAAW,UAAY/sB,SAAEo6D,EAAoB,6BAA+B,2BAOhHx6D,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIJ,EAAAA,GAAAA,KAACkzD,EAAAA,QAAQ,CACL5uD,MAAO,CAAExH,OAAQ,IAAKq2D,uBAAwB,GAC9CrgC,WAjCG,SAAHuqC,GAAkB,IAAZtjD,EAAIsjD,EAAJtjD,KAEZk0C,EAAWl0C,EAAKje,KAAO23D,EACvB+E,GAAiBz+C,EAAKk9C,KACtBwB,EA1+DK,SAACx8C,GAChB,IAAMwO,EAAc,IAAIitC,KAClB4F,EAAqBrhD,EAAU5R,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,KACnEkzD,EAAY,IAAI7F,KAAK4F,GAGrBE,EAAuB,IAAI9F,KAAKjtC,EAAYgzC,cAAehzC,EAAYizC,WAAYjzC,EAAYkzC,WAIrG,GAH2B,IAAIjG,KAAK6F,EAAUE,cAAeF,EAAUG,WAAYH,EAAUI,WAGtEC,YAAcJ,EAAqBI,UACtD,MAAO,WAGX,IACMC,EAAc,IAAInG,KAKxB,OAJAmG,EAAYC,QAAQD,EAAYF,UAAYE,EAAYE,UAAqC,IAAzBF,EAAYE,UAAkB,EAAI,IACtGF,EAAYG,SAAS,EAAG,EAAG,EAAG,GAG1BT,GAAaM,GAAeN,EAAYC,EACjCD,EAAUU,mBAAmB,QAAS,CAAEC,QAAS,UAKxDX,GADgB,IAAI7F,MAAK,IAAIA,MAAO+F,cAAe,EAAG,GAE/CF,EAAUU,mBAAmB,QAAS,CAAEziD,MAAO,QAASG,IAAK,YAIjE4hD,EAAUU,mBAAmB,QAAS,CAAEziD,MAAO,QAASG,IAAK,UAAWJ,KAAM,WACzF,CA08D8B4iD,CAAWpkD,EAAKg9C,iBAEtC,OACI/2D,EAAAA,GAAAA,KAACq4D,GAAY,CACTE,cAAe,kBAAMuE,EAAsB/iD,EAAK6/C,aAAaC,SAAU9/C,EAAKje,GAAG,EAC/E48D,aAAcA,EACd3+C,KAAMA,EACNpU,QAAS,kBAAM82D,EAAgB1iD,EAAK6/C,aAAaC,SAAU9/C,EAAKje,GAAG,EACnEmyD,SAAUA,EACVuK,cAAeA,EACfC,cAAeA,GAI3B,EAgBgB9jC,aAAc,SAAA5a,GAAI,OAAIA,EAAKje,GAAG8gC,UAAU,EACxCh0B,KAAM8vD,EACN0F,mBAAoB,EACpBC,oBAAqB,GACrBC,WAAY,GACZC,sBAAuB,IACvBC,uBAAuB,EACvBC,oBA7DK,WACjB,OACIz+D,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACMy6D,IACE76D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEwC,gBAAiB,GAAIic,eAAgB,EAAG7c,YAAa,UAAWpJ,OAAQ,IAAMsD,SACxFw6D,IACG56D,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACJ4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,eASnC,EA4CgB+8D,aAncO,WAGnB,IAAIC,EACJ,GAHAx2D,GAASy2D,EAAAA,EAAAA,qBAAmB,KAGvB9U,GAOD,OALApnD,QAAQe,IAAI,+DACZR,YAAW,WACPkF,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,GAC3B,GAAG,GA8IP,GAzIQnG,EAAah1D,QAAU,GACE,GAArB82D,EAEyB,GAArBC,EACyB,KAArBzQ,IACA7hD,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBhB,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,OAKVpO,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,WAAY,iBAAkB0yC,GAAiB/b,gBACrD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,MAMW,KAArByzC,IACA7hD,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,OAOVpO,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnjD,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,WAAY,iBAAkB0yC,GAAiB/b,gBACrD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,MASO,GAArBkkD,EACyB,KAArBzQ,IACA7hD,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrX,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,OASVpO,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,WAAY,iBAAkB0yC,GAAiB/b,gBACrD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,MAMW,KAArByzC,IACA7hD,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,OAQVpO,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvBF,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnjD,EAAAA,EAAAA,OAAM,WAAY,iBAAkB0yC,GAAiB/b,gBACrD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BY,EAAAA,EAAAA,YAAW4yC,KACXvzC,EAAAA,EAAAA,OAAM,OAQtBpO,GAAS02D,EAAAA,EAAAA,gBAAc,IACvB12D,GAASy2D,EAAAA,EAAAA,qBAAmB,KAShClG,EAAah1D,OAAS,GACtBT,YAAW,WACPkF,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,GAC3B,GAAG,QAIH,IAgCI,OA/BoB31D,EAAAA,EAAAA,YAAWy1D,GAAW,SAACj2D,GACvC,GAAIA,EAASqP,MAQT,OANArV,QAAQe,IAAI,6BACZR,YAAW,WACPkF,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,GAAS02D,EAAAA,EAAAA,gBAAc,IACvB/U,GAAoB,IACxB,GAAG,GAIP,IAAMgV,EAAY,GAClBp2D,EAASgO,SAAQ,SAACrU,GACdy8D,EAAUloD,KAAInP,GAAC,CACX3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEf,IAKA3F,YAAW,WACPkF,GAAS42D,EAAAA,EAAAA,iBAAgB,GAADjyC,QAAAC,EAAAA,EAAAA,SAAK2rC,GAAiBoG,KAC9C32D,GAASy2D,EAAAA,EAAAA,qBAAmB,IAC5B9U,GAAoBphD,EAASoO,KAAKpO,EAASoO,KAAKpT,OAAS,EAC7D,GAAG,EAEP,GAGJ,CAAE,MAAOjB,GACLC,QAAQD,MAAM,qCAAsCA,GACpDQ,YAAW,kBAAMkF,GAASy2D,EAAAA,EAAAA,qBAAmB,GAAO,GAAE,EAC1D,CAIR,KAmQJ,EAGMI,GAAa,SAAHC,GAAiBA,EAAX3pD,YAA2B2pD,EAAd1pD,eAA4D,IAA5CilD,EAAiByE,EAAjBzE,kBAAmBC,EAAiBwE,EAAjBxE,kBAE5DxI,GAAiB/hD,EAAAA,EAAAA,QAAO,MAC9B4D,GAAoC7W,EAAAA,EAAAA,UAAS,IAAG8W,GAAA5W,EAAAA,EAAAA,SAAA2W,EAAA,GAAzCgC,EAAU/B,EAAA,GAAEw9C,EAAax9C,EAAA,GAChCG,GAAwCjX,EAAAA,EAAAA,UAAS,IAAGkX,GAAAhX,EAAAA,EAAAA,SAAA+W,EAAA,GAA7CgrD,EAAY/qD,EAAA,GAAEgrD,EAAehrD,EAAA,GAC9BhM,GAAWK,EAAAA,EAAAA,eAEX2P,EAAU,eAAAuuB,GAAA1kC,EAAAA,EAAAA,UAAG,UAAAgkC,GAAgB,IAADo5B,EAC1BjpD,GAD0BkpD,EAAAA,EAAAA,SAAAr5B,GAG9B,IAAMs5B,EAAoC,OAAzBF,EAAGnN,EAAej9C,cAAO,EAAtBoqD,EAAwBx6D,MACnB,GAArB41D,EAEyB,GAArBC,EACoB,KAAhB6E,GACAnpD,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBhB,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAGVpO,GAASkP,EAAAA,EAAAA,yBAAuB,KAOhClB,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,EAAYrxB,gBAChD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAMM,KAAhB+oD,GACAnpD,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAGVpO,GAASkP,EAAAA,EAAAA,yBAAuB,KAMhClB,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnjD,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,EAAYrxB,gBAChD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KASO,GAArBkkD,EACoB,KAAhB6E,GACAnpD,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrX,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAGVpO,GAASkP,EAAAA,EAAAA,yBAAuB,KAOhClB,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,EAAYrxB,gBAChD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAMM,KAAhB+oD,GACAnpD,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAGVpO,GAASkP,EAAAA,EAAAA,yBAAuB,KAMhClB,GAAIC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IACnCnjD,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,EAAYrxB,gBAChD33B,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAWtB,IACI,IAAMxN,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACzN,GAC/B,IAAMo2D,EAAY,GAClBp2D,EAASgO,SAAQ,SAACrU,GACdy8D,EAAUloD,KAAInP,GAAC,CACX3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEf,IACAT,GAAS42D,EAAAA,EAAAA,iBAAgBD,IACzBhV,GAAoBphD,EAASoO,KAAKpO,EAASoO,KAAKpT,OAAS,EAG7D,IAGA,OAAO,WACCqF,GACAA,GAER,CACJ,CAAE,MAAOtG,GAELC,QAAQD,MAAM,qCAAsCA,EACxD,CAEJ,IAAC,gBAhJeqY,GAAA,OAAA4rB,EAAA5jC,MAAA,KAAAC,UAAA,MAwJhBpD,EAAAA,EAAAA,YAAU,WACN4xD,EAAc,IACdppD,GAASo3D,EAAAA,EAAAA,uBAAsB,KAC/BvV,GAAmB,GACnBiI,EAAej9C,QAAQpQ,MAAQ,GAC/Bu6D,GAAgB,EAEpB,GAAG,CAAC1E,EAAmBD,IAoCvB,OACIx5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUtD,MAAO,OAAQswB,UAAW,SAAUlnB,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAG+a,OAAQ,IAAKrhB,SAAA,EACjKJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK4wC,EACLptD,gBAtCc,WAAO,IAAD26D,EAGU,MAAZ,OAAtBA,EAAAvN,EAAej9C,cAAO,EAAtBwqD,EAAwB56D,QACxBuD,GAASo3D,EAAAA,EAAAA,uBAAsBtN,EAAej9C,QAAQpQ,MAAMzB,SAC5DouD,EAAcU,EAAej9C,QAAQpQ,MAAMzB,QAC3C6mD,GAAmBiI,EAAej9C,QAAQpQ,MAAMzB,SAGhDouD,EAAc,IACdvH,GAAmB,GACD,IAAdl0C,IACA3N,GAASo3D,EAAAA,EAAAA,uBAAsB,KAC/BpnD,KAQZ,EAkBY7S,YAAY,SACZC,qBAAqB,UACrButD,sBAAsB,cACtBxuD,MAAO,CAAEP,KAAM,EAAGjH,OAAQ,GAAI8kB,QAAS,GAAIkkC,aAAc,QACzDhhD,aAAc,kBAAMq6D,GAAgB,EAAK,EACzC38B,aAAa,WAEhB08B,GACGl/D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX7gC,QA1BQ,WACpBssD,EAAej9C,QAAQuW,QACvB4zC,GAAgB,GACG,KAAfrpD,IACAy7C,EAAc,IACdppD,GAASo3D,EAAAA,EAAAA,uBAAsB,KAC/Bp3D,GAASoxD,EAAAA,EAAAA,iBAAgB,KACzBvP,GAAmB,GAE3B,EAkBgB1lD,MAAO,SAAAuiC,GAAmB,MAAO,CAC7B,CACIngC,aAAc,GACdga,YAAa,GACblgB,QAJSqmC,EAAP8rB,QAIiB,GAAM,EAEzB9rD,gBANkBggC,EAAP44B,QAMgB,OAAS,eAE3C,EAACr/D,UAEFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,QAAQC,KAAM,GAAIzD,MAAM,WAEhD,OAEhB,EA0BM+9D,GAAe,WACjB,IAAAprD,GAAsDrX,EAAAA,EAAAA,WAAS,GAAMsX,GAAApX,EAAAA,EAAAA,SAAAmX,EAAA,GAA9DqrD,EAAmBprD,EAAA,GAAEqrD,EAAsBrrD,EAAA,GAClDC,GAA4CvX,EAAAA,EAAAA,WAAS,GAAMwX,GAAAtX,EAAAA,EAAAA,SAAAqX,EAAA,GAApDg9C,EAAe/8C,EAAA,GAAEorD,EAAgBprD,EAAA,GACxCQ,GAAsChY,EAAAA,EAAAA,WAAS,GAAMiY,GAAA/X,EAAAA,EAAAA,SAAA8X,EAAA,GAA9Cm8C,EAAYl8C,EAAA,GAAE4qD,EAAa5qD,EAAA,GAS5B6qD,EAA0B,WAC5BH,GAAuB,EAC3B,EAEMI,GAAc9vD,EAAAA,EAAAA,QAAO,MACrB+vD,GAAgB/vD,EAAAA,EAAAA,QAAO,MACvBgwD,GAAehwD,EAAAA,EAAAA,QAAO,MACtBiwD,GAAajwD,EAAAA,EAAAA,QAAO,MACpBkwD,GAAmBlwD,EAAAA,EAAAA,QAAO,MAC1BmwD,GAAmBnwD,EAAAA,EAAAA,QAAO,MAI1BowD,EAAc,eAAAr5B,GAAAjlC,EAAAA,EAAAA,UAAG,YAAa,IAADu+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzB/7C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,iBAAkB,gBAE1DkzC,EAAmC,OAAtBN,EAAGP,EAAYhrD,cAAO,EAAnBurD,EAAqB37D,MAOrCk8D,EAAe,CACjBC,SAAUF,EACVG,WARyC,OAAxBR,EAAGP,EAAcjrD,cAAO,EAArBwrD,EAAuB57D,MAS3Cq8D,UARuC,OAAvBR,EAAGP,EAAalrD,cAAO,EAApByrD,EAAsB77D,MASzC4mD,QARmC,OAArBkV,EAAGP,EAAWnrD,cAAO,EAAlB0rD,EAAoB97D,MASrCs8D,cAR+C,OAA3BP,EAAGP,EAAiBprD,cAAO,EAAxB2rD,EAA0B/7D,MASjDu8D,mBAR+C,OAA3BP,EAAGP,EAAiBrrD,cAAO,EAAxB4rD,EAA0Bh8D,OAWrD,UACUrC,EAAAA,EAAAA,WAAUsiB,GAAMriB,EAAAA,EAAAA,SAAA,GACjBq+D,EAAgBC,IAErBp+D,QAAQe,IAAI,oCACZs8D,GACJ,CAAE,MAAOt9D,GACLC,QAAQD,MAAM,oCAAqCA,EACvD,CACJ,IAAC,kBA5BmB,OAAAwkC,EAAAnkC,MAAA,KAAAC,UAAA,KA8BpB,OACI/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAjDY,WAC3Bi6D,GAAuB,EAC3B,EA+CoDt7D,MAAO,CAAE6oB,UAAW,SAAU4lC,iBAAkB,EAAGzzC,UAAW,GAAKlf,UAC3GJ,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAM,cAAeC,KAAM,GAAIzD,MAAM,eAGtD3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQo/C,EAAqB9+C,QAASk/C,EAAyB12C,YAAU,EAAAjpB,UAC5EY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,sBACdJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,OAAQiH,KAAM,GAAK3D,SAAA,EACtCY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,gBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK2+C,EACLz6D,qBAAqB,UACrBD,YAAY,YACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,kBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK4+C,EACL16D,qBAAqB,UACrBD,YAAY,cACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,gBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK6+C,EACL36D,qBAAqB,UACrBD,YAAY,YACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,cAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK8+C,EACL56D,qBAAqB,UACrBD,YAAY,UACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,qBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK++C,EACL76D,qBAAqB,UACrBD,YAAY,iBACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,qBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKg/C,EACL96D,qBAAqB,UACrBD,YAAY,iBACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,mBAMjJ9lD,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,gBAAiBlB,WAAY,UAAYC,SAAA,EACnGJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNpB,MAAO,CAAEzH,MAAO,IAAK+kB,QAAS,EAAGlb,aAAc,EAAGG,gBAAiB2qD,EAAkB,UAAY,WACjGnD,UAAW,kBAAMwR,GAAiB,EAAK,EACvCvR,WAAY,kBAAMuR,GAAiB,EAAM,EACzCl6D,QAASo6D,EAAwB3/D,UAEjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKuF,UAAW,SAAUrF,MAAO,SAAWvB,SAAC,cAG5EJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS26D,EACTh8D,MAAO,CAAEzH,MAAO,IAAK+kB,QAAS,EAAGlb,aAAc,EAAGG,gBAAiBuqD,EAAe,UAAY,WAC9F/C,UAAW,kBAAMyR,GAAc,EAAK,EACpCxR,WAAY,kBAAMwR,GAAc,EAAM,EAAC1/D,UAEvCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKuF,UAAW,SAAUrF,MAAO,SAAWvB,SAAC,sBAUxG,EAEMghE,GAAkB,WAEpB,IACM32C,GAAcriB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoiB,WAAW,IACtD42C,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAC5DjsD,GAA8CnY,EAAAA,EAAAA,UAAS,IAAGoY,GAAAlY,EAAAA,EAAAA,SAAAiY,EAAA,GAAnDksD,EAAejsD,EAAA,GAAEksD,EAAkBlsD,EAAA,GAC1CG,GAAgDvY,EAAAA,EAAAA,UAAS,CAAC,GAAEwY,GAAAtY,EAAAA,EAAAA,SAAAqY,EAAA,GAArDgsD,EAAgB/rD,EAAA,GAAEgsD,EAAmBhsD,EAAA,GAC5CG,GAAwC3Y,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBG,YAAYoU,SAAWM,EAAY7U,iBAAiBG,YAAYoU,SAAW,uCAAsClrD,GAAA1Y,EAAAA,EAAAA,SAAAyY,EAAA,GAA9O8rD,EAAY7rD,EAAA,GAAE8rD,EAAe9rD,EAAA,GAG9B+rD,GAAkB1xD,EAAAA,EAAAA,QAAO,OACLA,EAAAA,EAAAA,QAAO,OAGjCvQ,EAAAA,EAAAA,YAAU,WAkCN,GAAI8qB,EAAa,CAAC,IAADo3C,EACPnmD,EAAO,IAAIg8C,KAAKjtC,GAGhBq3C,EAAYpmD,EAAKqiD,SAEL,IAAd+D,EACApmD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GACT,IAAdmE,EACPpmD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GAE9BjiD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GAIlC,IAAMoE,EAAermD,EAAKsmD,cAAc77B,MAAM,KAAK,GACnDo7B,EAAmBF,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBC,QAAU4U,EAAY7U,iBAAiBC,QAAUsV,GACvJlX,GAAsB2B,iBAAiBC,QAAU4U,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBC,QAAU4U,EAAY7U,iBAAiBC,QAAUsV,EACrLlX,GAAsB2B,iBAAiBI,aAAeyU,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBI,aAAeyU,EAAY7U,iBAAiBI,aAAsC,OAA1BiV,EAAGD,EAAgB5sD,cAAO,EAAvB6sD,EAAyBj9D,MAE7NimD,GAAsB2B,iBAAiBE,YAAc2U,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBE,YAAc2U,EAAY7U,iBAAiBE,YAAcjiC,CAGrM,EAvDgC,WAC5B,IAAM5F,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,iBAAkB,iBAE5CzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACs8B,GACpC,GAAIA,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACfq5D,EAAe,CAAC,EAGtB3lE,OAAO4lE,QAAQt5D,GAAM8N,SAAQ,SAAAwwB,GAAmB,IAADi7B,GAAAhlE,EAAAA,EAAAA,SAAA+pC,EAAA,GAAXtiC,GAAFu9D,EAAA,GAAOA,EAAA,IACjCv9D,EAAMm8D,WACNkB,EAAar9D,EAAMm8D,UAAYn8D,EAEvC,IAEAlC,QAAQe,IAAIw+D,GACZR,EAAoBQ,GACpBpX,GAAsB2B,iBAAiBG,YAAcsV,EAAa,uCAGlEv/D,QAAQe,IAAIw+D,EAAa,uCAC7B,MACIv/D,QAAQe,IAAI,oBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,0BAA2BA,EAC7C,GAGJ,CA4BoB2/D,EACxB,GAAG,CAAC33C,IAoEJ,OACIzpB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,eAC5DJ,EAAAA,GAAAA,MApEU,SAAHqiE,GAAwD,IAAlDx5C,EAAYw5C,EAAZx5C,aAAcC,EAAeu5C,EAAfv5C,gBAEnC/S,GAF+DssD,EAAX53C,aAEIxtB,EAAAA,EAAAA,WAAS,IAAM+Y,GAAA7Y,EAAAA,EAAAA,SAAA4Y,EAAA,GAAhEgT,EAAoB/S,EAAA,GAAEgT,EAAuBhT,EAAA,GAG9CiT,EAA0B,WAC5BD,GAAwB,EAC5B,EAEME,EAA2B,WAC7BF,GAAwB,EAC5B,EAIA,OAEIhoB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACpB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,QACxIngD,QAASsjB,EAAwB7oB,UACjCJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAACjuD,MAAOikB,EAAcO,QAASH,OAG7CjoB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAK,CAACjC,OAAQwI,EAAsBlI,QAASqI,EAA0BG,YAAU,EAAAjpB,SAAA,EAC9EJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAAA5gB,UACVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,OAAQiH,KAAM,GAAI3D,UACrCJ,EAAAA,GAAAA,KAACspB,EAAAA,SAAQ,CACLC,YAAYjR,EAAAA,EAAAA,cAAY,SAAAqD,GACpBmN,EAAgBnN,EAAI6N,YACK7N,EAAI6N,WAC7BqhC,GAAsB2B,iBAAiBC,QAAU9wC,EAAI6N,WACrDN,GACJ,GAAG,IACHO,aAAWjnB,EAAAA,EAAAA,SAAA,GACNqmB,EAAe,CAAEa,UAAU,EAAMC,mBAAmB,EAAMC,iBAAkB,YAEjFC,YAAa,SAACxJ,GAAS,MACL,SAAdA,GAAuBrgB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,iBAAiBxD,MAAM,aAAe3B,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,WAAY,EAE/ImoB,mBAAmB,EACnBC,YAAalB,EAEbmB,cAAY,aAWxC,GAc0B,CAACS,YAAaA,EAAa5B,aAAcy4C,EAAiBx4C,gBAAiBy4C,QAG7FvgE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAG8sC,eAAgB,IAAMnuD,SAAA,EAC3EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,oBAC5DJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAe45C,EACf35C,cAlBU,SAACu6C,GACvB,IAAMC,EAAkBf,EAAiBc,GACzCX,EAAgBW,GAChBzX,GAAsB2B,iBAAiBG,YAAc4V,CAEzD,EAcgB3+D,QAAS,UACTqkB,mBAAmB,iBACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvBvrB,OAAQ,EACRD,MAAO,IACPyH,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAKnf,SAE3D9D,OAAOD,KAAKmlE,GAAkB7lE,KAAI,SAAColE,GAAQ,OACxC/gE,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAgBjG,MAAO0+C,EAAUn8D,MAAOm8D,GAAlCA,EAA8C,OAIxE/gE,EAAAA,GAAAA,KAAC0/D,GAAY,QAIjB1+D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,oBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsB2B,iBAAiBI,aAAehoD,CAC1D,EAAGyc,IAAKugD,EAAiB76B,WAAS,EAACpkB,aAAc0+C,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY7U,iBAAiBI,aAAeyU,EAAY7U,iBAAiBI,aAAe,4EAA6ErnD,qBAAqB,UAAUD,YAAY,QACnThB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,eA4BrJ,EAEM0c,GAAiB,WACnB,IAAM9U,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAEtDoB,GAAgBvyD,EAAAA,EAAAA,QAAO,MACvBwyD,GAAexyD,EAAAA,EAAAA,QAAO,MACtByyD,GAAkBzyD,EAAAA,EAAAA,QAAO,MACzB0yD,GAAiB1yD,EAAAA,EAAAA,QAAO,MAG9B6P,GAA0D9iB,EAAAA,EAAAA,UAAS,KAAI+iB,GAAA7iB,EAAAA,EAAAA,SAAA4iB,EAAA,GAAhE8iD,EAAqB7iD,EAAA,GAAE8iD,EAAwB9iD,EAAA,GACtD2oB,GAAkD1rC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeC,UAAYuV,EAAYxV,eAAeC,UAC/K4B,EAAiBqV,UAAY,MAAQ,OAAMn6B,GAAAzrC,EAAAA,EAAAA,SAAAwrC,EAAA,GADxCq6B,EAAiBp6B,EAAA,GAAEq6B,EAAoBr6B,EAAA,GAG9CG,GAAsD9rC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeE,oBAAsBsV,EAAYxV,eAAeE,oBAAsB2B,EAAiBwV,YAAWl6B,GAAA7rC,EAAAA,EAAAA,SAAA4rC,EAAA,GAA5OgjB,EAAmB/iB,EAAA,GAAEm6B,EAAsBn6B,EAAA,GAClDG,GAA4ClsC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeG,eAAiBqV,EAAYxV,eAAeG,eAAiB0B,EAAiB1B,gBAAe5iB,GAAAjsC,EAAAA,EAAAA,SAAAgsC,EAAA,GAA5N6iB,EAAc5iB,EAAA,GAErBG,GAFwCH,EAAA,IAEUnsC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeI,gBAAkBoV,EAAYxV,eAAeI,gBAAkByB,EAAiB0V,WAAS55B,GAAArsC,EAAAA,EAAAA,SAAAosC,EAAA,GAA9N85B,EAAiB75B,EAAA,GAMlB85B,GANwC95B,EAAA,GAExB63B,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAe0X,eAAiBlC,EAAYxV,eAAe0X,eAAgBlC,EAAYxV,eAAe0X,eAIpKrzD,EAAAA,EAAAA,QAAO,OAC3BszD,GAAqBtzD,EAAAA,EAAAA,QAAO,MAG5BuzD,EAAoB,SAAC7+D,GACvB,IAAM8+D,EAAS7d,OAAOjhD,EAAMyF,QAAQ,KAAM,KAC1C,OAAOwzB,MAAM6lC,GAAU,EAAIA,CAC/B,EAEMC,EAAuB,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EACzBxmC,EAAWkmC,EAAuC,OAAtBG,EAACnB,EAAcztD,cAAO,EAArB4uD,EAAuBh/D,OACpDo/D,EAAUP,EAAsC,OAArBI,EAACnB,EAAa1tD,cAAO,EAApB6uD,EAAsBj/D,OAClDs+D,EAAaO,EAAyC,OAAxBK,EAACnB,EAAgB3tD,cAAO,EAAvB8uD,EAAyBl/D,OACxDm+D,EAAYU,EAAwC,OAAvBM,EAACnB,EAAe5tD,cAAO,EAAtB+uD,EAAwBn/D,OAEtDq/D,EAAwB5Z,GAA2Bx+B,QAAO,SAACq4C,EAAKt/D,GAAK,OAAKs/D,EAAMT,EAAkB7+D,EAAM,GAAE,GAG1Gu/D,EAAQv6D,KAAKw6D,MAAM7mC,EAAWymC,EAAUd,EAAaH,EAAYkB,GAAuBj4C,iBAC9F82C,EAAyBqB,GACzBtZ,GAAsBgB,eAAe3gC,YAAci5C,CACvD,GAEAxkE,EAAAA,EAAAA,YAAU,WAAO,IAAD0kE,EAAAC,EAAAC,EAEZjB,EAAkBtuD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeS,eAAiB+U,EAAYxV,eAAeS,eAAenG,KAAK,MAAQ,GAC3Lqd,EAAmBxuD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeU,gBAAkB8U,EAAYxV,eAAeU,gBAAgBpG,KAAK,MAAQ,GAE9L0E,GAAsBgB,eAAeC,UAAYuV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeC,UAAYuV,EAAYxV,eAAeC,UAAYkX,EACrLnY,GAAsBgB,eAAeE,oBAAsBsV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeE,oBAAsBsV,EAAYxV,eAAeE,oBAAsBA,EACnNlB,GAAsBgB,eAAeG,eAAiBqV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeG,eAAiBqV,EAAYxV,eAAeG,eAAiBA,EACpMnB,GAAsBgB,eAAeQ,gBAAkBgV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeQ,gBAAkBgV,EAAYxV,eAAeQ,gBAAkBN,EAAsB,IAAM,EACnOlB,GAAsBgB,eAAeI,gBAAkBoV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeI,gBAAkBoV,EAAYxV,eAAeI,gBAAkBoX,EAEvMxY,GAAsBgB,eAAetuB,SAAW8jC,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAetuB,SAAW8jC,EAAYxV,eAAetuB,SAAgC,OAAxB8mC,EAAG5B,EAAcztD,cAAO,EAArBqvD,EAAuBz/D,MACzMimD,GAAsBgB,eAAeM,aAAekV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeM,aAAekV,EAAYxV,eAAeM,aAAmC,OAAvBmY,EAAG5B,EAAa1tD,cAAO,EAApBsvD,EAAsB1/D,MACpNimD,GAAsBgB,eAAeO,eAAiBiV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeO,eAAiBiV,EAAYxV,eAAeO,eAAsC,OAArB4W,EAAmD,OAAzBuB,EAAG3B,EAAe5tD,cAAO,EAAtBuvD,EAAwB3/D,MAAQ,EACjQimD,GAAsBgB,eAAeU,gBAAkB8U,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeU,gBAAkB8U,EAAYxV,eAAeU,gBAAkB,GACvM1B,GAAsBgB,eAAeS,eAAiB+U,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeS,eAAiB+U,EAAYxV,eAAeS,eAAiB,GACpMjC,GAA6BgX,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeU,gBAAkB8U,EAAYxV,eAAeU,gBAAkB,GAE7KoX,GACJ,GAAG,KAGHhkE,EAAAA,EAAAA,YAAU,WAENgjE,EAAgB3tD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeQ,iBAAiE,GAA9CgV,EAAYxV,eAAeQ,gBAA0BgV,EAAYxV,eAAeQ,gBAAkBN,EAAsB,IAAM,EAClQ4X,GAEJ,GAAG,CAAC5X,KAEJpsD,EAAAA,EAAAA,YAAU,WAENijE,EAAe5tD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeO,gBAA0D,OAAxCiV,EAAYxV,eAAeC,UAAqBuV,EAAYxV,eAAeO,eAAsC,OAArB4W,EAA6B,GAAK,EAChQN,EAAa1tD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYxV,eAAeM,aAAekV,EAAYxV,eAAeM,aAAoC,OAArB6W,EAA6B,EAAIwB,EAExMb,GAEJ,GAAG,CAACX,KAEJrjE,EAAAA,EAAAA,YAAU,WACNgkE,GAEJ,GAAG,CAACN,IAEJ,IAAMmB,IACD9W,EAAiB+W,GAAK/W,EAAiB+W,GACnC/W,EAAiB5C,SAAW4C,EAAiB5C,QAAQ7tB,qBAClDywB,EAAiB5C,QAAQ7tB,qBAAuB,GACxD4oB,OAAO6H,EAAiBvB,eAC1BpuB,QAAQ,GAYJ2mC,KATDhX,EAAiBnwB,SAAWmwB,EAAiBnwB,UACzCmwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAClDmwB,EAAiB5C,QAAQvtB,SAAW,IACvCmwB,EAAiBj0B,SAAWi0B,EAAiBj0B,SACzCi0B,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SACpDi0B,EAAiBiX,SAASlrC,SAAW,IACjD9N,WAAW64C,IACbzmC,QAAQ,IAGL2vB,EAAiBnwB,SAAWmwB,EAAiBnwB,UACzCmwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAClDmwB,EAAiB5C,QAAQvtB,SAAW,IACvCmwB,EAAiBj0B,SAAWi0B,EAAiBj0B,SACzCi0B,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SACpDi0B,EAAiBiX,SAASlrC,SAAW,IAC/CsE,QAAQ,IA+Dd,OACI/8B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAG0L,UAAW,UAAY/sB,UAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIigB,OAAQ,EAAG9f,MAAO,WAAavB,SAAC,uBAGlFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,gBAC5DY,EAAAA,GAAAA,MAAC6mB,EAAAA,QAAM,CACHC,cAAek7C,EACfj7C,cAAe,SAACnjB,GAAK,OAAKq+D,EAAqBr+D,EAAM,EACrDhB,QAAS,UACTqkB,mBAAmB,iBACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvBvrB,OAAQ,EACRwH,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAKnf,SAAA,EAE5DJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAajG,MAAO,MAAOzd,MAAO,OAA5B,QAClB5E,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAajG,MAAO,MAAOzd,MAAO,OAA5B,QAClB5E,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAajG,MAAO,MAAOzd,MAAO,OAA5B,WAEtB5E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,YAC9CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAG9f,MAAO,WAAavB,SAC1DstD,EAAiBiX,UAAYjX,EAAiBiX,SAASC,SAClD/e,OAAO6H,EAAiBiX,SAASC,UAAU7mC,QAAQ,GAAK,aAItE/8B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAGnC,UAAW,IAAMlf,SAAA,EACtEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,iBAC5DJ,EAAAA,GAAAA,KAAC6kE,EAAAA,SAAQ,CACLC,UAAW/Y,EACX3d,SAAU,SAAAxpC,GACNu+D,EAAuBv+D,GACvBimD,GAAsBgB,eAAeE,oBAAsBnnD,CAC/D,EACAN,MAAO,CAAEmd,OAAQ,EAAGvb,YAAa,WACjCd,KAAK,KACLvD,MAAO,CAAEJ,WAAY,WAgB7BT,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAIrhB,SAAA,EACtDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAIrhB,SAAC,gBAC3DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAGgP,WAAY,GAAIrwB,SAAC,OAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aA3FsB,SAACC,GACnC,IAAMggE,EAAehgE,EAAKsF,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MACvEo4D,EAAcztD,QAAQpQ,MAAQmgE,EAC9Bla,GAAsBgB,eAAetuB,SAAWwnC,EAChDpB,GACJ,EAuFgBtiD,IAAKohD,EACL9/C,aAAc0+C,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYxV,eAAetuB,SAAgC,OAArBylC,EAA6B,EAAI0B,EAC1In/D,qBAAqB,UACrBD,YAAY,YACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAIzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAIrhB,SAAA,EACtDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAIrhB,SAAC,cAC3DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAGgP,WAAY,GAAIrwB,SAAC,OAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAjGqB,SAACC,GAClC,IAAMggE,EAAehgE,EAAKsF,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MACvEq4D,EAAa1tD,QAAQpQ,MAAQmgE,EAC7Bla,GAAsBgB,eAAeM,aAAe4Y,EACpDpB,GACJ,EA6FgBtiD,IAAKqhD,EACL//C,aAAc6hD,EACdj/D,qBAAqB,UACrBD,YAAY,UACZhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAIzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAGE,QAA8B,OAArBqhD,EAA6B,OAAS,QAAS5iE,SAAA,EAC7GJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,gBAC5DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAGgP,WAAY,GAAKrwB,SAAC,OAC7DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aA/FuB,SAACC,GACpC,IAAMggE,EAAehgE,EAAKsF,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MACvEu4D,EAAe5tD,QAAQpQ,MAAQmgE,EAC/Bla,GAAsBgB,eAAeO,eAAiB2Y,EACtDpB,GACJ,EA2FgBtiD,IAAKuhD,EACLjgD,aAAc,GACdpd,qBAAqB,UACrBD,YAAW,YACXhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAIzI9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAGE,QAASoqC,EAAsB,OAAS,QAAS3rD,SAAA,EACtGJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,iBAC5DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAGgP,WAAY,GAAKrwB,SAAC,OAC7DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aApHwB,SAACC,GACrC,IAAMggE,EAAehgE,EAAKsF,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MACvEs4D,EAAgB3tD,QAAQpQ,MAAQmgE,EAChCla,GAAsBgB,eAAeQ,gBAAkB0Y,EAEvDpB,GACJ,EA+GgBtiD,IAAKshD,EACLp9D,qBAAqB,UACrBD,YAAW,eAAiBooD,EAAiB1B,eAAc,IAC3D1nD,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,WAErI9lD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,EAAG9f,MAAO,WAAavB,SAAA,IAAMstD,EAAiB1B,eAAc,UAIxGhrD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,iBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAACxxC,IAAKiiD,EAAmBx+D,aAzJR,SAACC,GAEpCu+D,EAAkBtuD,QAAQpQ,MAAQG,EAGlC,IAAMigE,EAAQjgE,EAAKohC,MAAM,MAEzB0kB,GAAsBgB,eAAeS,eAAiB0Y,CAC1D,EAiJ6Fj+B,WAAS,EAACxhC,qBAAqB,UAAUD,YAAY,OAClIhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,WACrI9lD,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAACxxC,IAAKmiD,EAAoB1+D,aA/KR,SAACC,GAErC,IAAMkgE,EAAgBlgE,EAAKohC,MAAM,MAAMxqC,KAAI,SAAAsqD,GACvC,IAAIif,EAAejf,EAAK57C,QAAQ,WAAY,IACtC8wD,EAAQ+J,EAAa/+B,MAAM,KAIjC,OAHIg1B,EAAMz3D,OAAS,IACfwhE,EAAe/J,EAAM,GAAK,IAAMA,EAAM,IAEnC+J,CACX,IAGA1B,EAAmBxuD,QAAQpQ,MAAQqgE,EAAc9e,KAAK,MAEtDkE,GAA6B4a,EAC7Bpa,GAAsBgB,eAAeU,gBAAkB0Y,EACvDtB,GAEJ,EA6J+F58B,WAAS,EAACxhC,qBAAqB,UAAUD,YAAY,QACpIhB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAGzI9lD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,aACvFnsB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAGthB,WAAY,UAAYC,SAAA,EAC7EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,mBAC9CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIigB,OAAQ,EAAG9f,MAAO,WAAavB,SAAA,IAAMyiE,SAMnG,EAEMsC,GAAwB,WAC1B,IAAMzX,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAC5D13B,GAAoD1sC,EAAAA,EAAAA,UAAS,IAAG2sC,GAAAzsC,EAAAA,EAAAA,SAAAwsC,EAAA,GAAzDy7B,EAAkBx7B,EAAA,GACzBG,GADgDH,EAAA,IACd3sC,EAAAA,EAAAA,UAAS,CAAC,IAAE+sC,GAAA7sC,EAAAA,EAAAA,SAAA4sC,EAAA,GAAvCs7B,EAASr7B,EAAA,GAAEs7B,EAAYt7B,EAAA,GAC9BG,GAAwCltC,EAAAA,EAAAA,UAAS,IAAGmtC,GAAAjtC,EAAAA,EAAAA,SAAAgtC,EAAA,GAA7Co7B,EAAYn7B,EAAA,GAAEo7B,EAAep7B,EAAA,GACpCG,GAAsDttC,EAAAA,EAAAA,UAAS,IAAGutC,GAAArtC,EAAAA,EAAAA,SAAAotC,EAAA,GAA3Dk7B,EAAmBj7B,EAAA,GAAEk7B,EAAsBl7B,EAAA,GAClDG,GAA8C1tC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYjW,UAAUC,QAAUqC,EAAiBrC,SAAQzgB,GAAAztC,EAAAA,EAAAA,SAAAwtC,EAAA,GAA9Jg7B,EAAe/6B,EAAA,GACtBC,GAD0CD,EAAA,IACF3tC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYjW,UAAU/pB,KAAOqsB,EAAiBrsB,OAAKyJ,GAAA3tC,EAAAA,EAAAA,SAAA0tC,EAAA,GAAlJ+6B,EAAY96B,EAAA,GAAE+6B,EAAe/6B,EAAA,GA+EpC,OA3EAnrC,EAAAA,EAAAA,YAAU,WACN+C,QAAQe,IAAI49D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYjW,UAAU/pB,KAAOqsB,EAAiBrsB,MAE/G,IAAMykC,EAAU,eAAAz+B,GAAArlC,EAAAA,EAAAA,UAAG,YACf,IAAM6iB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAErE,IACI,IAAMwzB,QAAgB9nC,EAAAA,EAAAA,QAAOwL,GAE7B,GAAIs8B,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACfm9D,EAAczpE,OAAOD,KAAKuM,GAC3BjN,KAAI,SAAAqqE,GAAQ,OAAAv+D,GAAA,CACTtC,KAAM6gE,EAAS37D,QAAQ,KAAM,MAC1BzB,EAAKo9D,GAAS,IAEpBp1C,MAAK,SAAC2C,EAAGG,GAAC,OAAKH,EAAE0yC,UAAYvyC,EAAEuyC,SAAS,IAC7CT,EAAgBO,EACpB,MACIrjE,QAAQe,IAAI,oBAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,IAAC,kBArBe,OAAA4kC,EAAAvkC,MAAA,KAAAC,UAAA,KAuBVmjE,EAAc,eAAA3+B,GAAAvlC,EAAAA,EAAAA,UAAG,YACnB,IAAM6iB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAErE,IACI,IAAMwzB,QAAgB9nC,EAAAA,EAAAA,QAAOwL,GAE7B,GAAIs8B,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACrB08D,EAAa18D,EACjB,MACIlG,QAAQe,IAAI,oBAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,IAAC,kBAfmB,OAAA8kC,EAAAzkC,MAAA,KAAAC,UAAA,KAiBpB+iE,IACAI,IAGArb,GAAsBO,UAAU/pB,KAAOggC,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYjW,UAAU/pB,KAAOggC,EAAYjW,UAAU/pB,KAAOukC,EACvJ/a,GAAsBO,UAAUC,QAAUgW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYjW,UAAUC,QAAUgW,EAAYjW,UAAUC,QAAUoa,CAEpK,GAAG,KAGH9lE,EAAAA,EAAAA,YAAU,WAEN,IAAMwmE,EAAsBf,EAAmBtrD,MAAK,SAAAuxC,GAAO,OAAIA,EAAQlmD,OAASwgE,CAAe,IAC3FQ,GAAuBA,EAAoBZ,aAC3CC,EAAgBW,EAAoBZ,cAEpCC,EAAgB,GAExB,GAAG,CAACG,EAAiBP,KAErBzlE,EAAAA,EAAAA,YAAU,WACN,IAAMs5B,EAAWosC,EAAUO,GACvB3sC,GAAYA,EAASoyB,SACrBqa,EAAuBzsC,EAASoyB,SAEhCR,GAAsBO,UAAUC,QAAUpyB,EAASoyB,UAEnDqa,EAAuB,IACvBhjE,QAAQe,IAAI,aAEpB,GAAG,CAACmiE,EAAcP,KAGdrlE,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UAsBIJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAe89C,EACf79C,cAAe,SAACnjB,GACZihE,EAAgBjhE,GAChBimD,GAAsBO,UAAU/pB,KAAOz8B,CAC3C,EACAhB,QAAS,UACTqkB,mBAAmB,cACnB3iB,YAAY,cACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvB/jB,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAInf,SAE1DmlE,EAAa5pE,KAAI,SAAC0lC,EAAMzT,GAAK,OAC1B5tB,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAajG,MAAOgf,EAAKl8B,KAAMP,MAAOy8B,EAAKl8B,MAArCyoB,EAA6C,OAMnF,EAEMw4C,GAAoB,WACtB,IAAM1Y,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAC5Dt2B,GAA0C9tC,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYlW,YAAeuC,EAAiB5C,SAAW4C,EAAiB5C,QAAQvpB,MAAQmsB,EAAiB5C,QAAQvpB,MAAQ,IAAIyJ,GAAA7tC,EAAAA,EAAAA,SAAA4tC,EAAA,GAA9Ns7B,EAAar7B,EAAA,GAAEs7B,EAAgBt7B,EAAA,GAChC3R,GAAYjxB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMgxB,SAAS,IASxD,OANA15B,EAAAA,EAAAA,YAAU,WAENkrD,GAAsBM,YAAckW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYlW,YAAckW,EAAYlW,YAAeuC,EAAiB5C,SAAW4C,EAAiB5C,QAAQvpB,MAAQmsB,EAAiB5C,QAAQvpB,MAAQ,EAEjP,GAAG,KAGCvhC,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAeu+C,EACft+C,cAAe,SAACnjB,GACZ0hE,EAAiB1hE,GACjBimD,GAAsBM,YAAcvmD,CACxC,EACAhB,QAAS,UACTqkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvB/jB,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAInf,SAC1Di5B,EAAU19B,KAAI,SAACoe,GAAI,OAChB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAejG,MAAOtI,EAAK5U,KAAMP,MAAOmV,EAAK5U,MAAvC4U,EAAKje,GAA0C,KAIjF,EAEMyqE,GAAwB,WAE1B,IAAM7Y,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IACtDpoC,GAAW7wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM4wB,QAAQ,IAEtDgS,IADkB7iC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMgxB,SAAS,KAChBp8B,EAAAA,EAAAA,UAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAI29D,EAAYnW,cAAiBwC,EAAiB5C,SAAW4C,EAAiB5C,QAAQzpB,KAAOqsB,EAAiB5C,QAAQzpB,KAAO,KAAI6J,GAAA/tC,EAAAA,EAAAA,SAAA8tC,EAAA,GAA5N26B,EAAY16B,EAAA,GAAE26B,EAAe36B,EAAA,GAWpC,OARAvrC,EAAAA,EAAAA,YAAU,WAGNkrD,GAAsBK,cAAgBmW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYnW,cAAgBmW,EAAYnW,cAAiBwC,EAAiB5C,SAAW4C,EAAiB5C,QAAQzpB,KAAOqsB,EAAiB5C,QAAQzpB,KAAO,GACjPwpB,GAAsBI,iBAAmBoW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYpW,iBAAmBoW,EAAYpW,iBAAmB,OAEjK,GAAG,KAGCjqD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAc,QACdC,cAAe,SAACnjB,GACZimD,GAAsBI,iBAAmBrmD,CAC7C,EACAhB,QAAS,UACTG,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvB/jB,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAInf,UAC3DJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAejG,MAAO,QAASzd,MAAO,SAAhC,YAGtB5E,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAe89C,EACf79C,cAAe,SAACnjB,GACZihE,EAAgBjhE,GAChBimD,GAAsBK,cAAgBtmD,CAC1C,EACAhB,QAAS,UACTG,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,KAEvB/jB,MAAO,CAAEsb,WAAY,GAAIc,YAAa,GAAInB,YAAa,GAAInf,SAC1D64B,EAASt9B,KAAI,SAACoe,GAAI,OACf/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAejG,MAAOtI,EAAK5U,KAAMP,MAAOmV,EAAK5U,MAAvC4U,EAAKje,GAA0C,QAMrF,EAEM0qE,GAAmB,SAAHh/B,GAAiBA,EAAXi/B,YAA2Bj/B,EAAdk/B,eAAsB,IACrDrF,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAE5Dl2B,GAAkCluC,EAAAA,EAAAA,YAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,IAAI29D,EAAY1V,YAAYC,iBAAuBxgB,GAAAjuC,EAAAA,EAAAA,SAAAguC,EAAA,GAAxI25B,EAAS15B,EAAA,GAAEu7B,EAAYv7B,EAAA,GAExBw7B,GAAkB12D,EAAAA,EAAAA,QAAO,MACzB22D,GAAqB32D,EAAAA,EAAAA,QAAO,MAC5B42D,GAAkB52D,EAAAA,EAAAA,QAAO,MACzB62D,GAAqB72D,EAAAA,EAAAA,QAAO,MAC5B82D,GAA2B92D,EAAAA,EAAAA,QAAO,MAClC+2D,GAAiB/2D,EAAAA,EAAAA,QAAO,MACxBg3D,GAAmBh3D,EAAAA,EAAAA,QAAO,MAwBhC,OAtBAvQ,EAAAA,EAAAA,YAAU,WAAO,IAADwnE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEZb,EAAgB5xD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYxmD,KAAOk8D,EAAY1V,YAAYxmD,KAAO,GACpJ0hE,EAAmB7xD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYH,QAAU6V,EAAY1V,YAAYH,QAAU,GAC7Jsb,EAAgB9xD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAY+b,KAAOrG,EAAY1V,YAAY+b,KAAO,GACpJX,EAAmB/xD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYN,QAAUgW,EAAY1V,YAAYN,QAAU,GAC7J2b,EAAyBhyD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYF,cAAgB4V,EAAY1V,YAAYF,cAAgB,GAC/Kwb,EAAejyD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYD,IAAM2V,EAAY1V,YAAYD,IAAM,GACjJwb,EAAiBlyD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYvuD,MAAQikE,EAAY1V,YAAYvuD,MAAQ,GAEvJytD,GAAsBc,YAAYxmD,KAAOk8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYxmD,KAAOk8D,EAAY1V,YAAYxmD,KAA8B,OAA1BgiE,EAAGP,EAAgB5xD,cAAO,EAAvBmyD,EAAyBviE,MACtLimD,GAAsBc,YAAYH,QAAU6V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYH,QAAU6V,EAAY1V,YAAYH,QAAoC,OAA7B4b,EAAGP,EAAmB7xD,cAAO,EAA1BoyD,EAA4BxiE,MAClMimD,GAAsBc,YAAY+b,KAAOrG,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAY+b,KAAOrG,EAAY1V,YAAY+b,KAA8B,OAA1BL,EAAGP,EAAgB9xD,cAAO,EAAvBqyD,EAAyBziE,MACtLimD,GAAsBc,YAAYN,QAAUgW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYN,QAAUgW,EAAY1V,YAAYN,QAAoC,OAA7Bic,EAAGP,EAAmB/xD,cAAO,EAA1BsyD,EAA4B1iE,MAClMimD,GAAsBc,YAAYF,cAAgB4V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYF,cAAgB4V,EAAY1V,YAAYF,cAAgD,OAAnC8b,EAAGP,EAAyBhyD,cAAO,EAAhCuyD,EAAkC3iE,MAC1NimD,GAAsBc,YAAYD,IAAM2V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYD,IAAM2V,EAAY1V,YAAYD,IAA4B,OAAzB8b,EAAGP,EAAejyD,cAAO,EAAtBwyD,EAAwB5iE,MAClLimD,GAAsBc,YAAYvuD,MAAQikE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYvuD,MAAQikE,EAAY1V,YAAYvuD,MAAgC,OAA3BqqE,EAAGP,EAAiBlyD,cAAO,EAAxByyD,EAA0B7iE,MAC1LimD,GAAsBc,YAAYC,gBAAkByV,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY1V,YAAYC,gBAAkByV,EAAY1V,YAAYC,gBAAkBkZ,CAGlM,GAAG,KAGC9jE,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,aAEvFntB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAG0L,UAAW,UAAY/sB,UAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIigB,OAAQ,EAAG9f,MAAO,WAAavB,SAAC,oBAElFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,UACvDJ,EAAAA,GAAAA,KAAC6kE,EAAAA,SAAQ,CACLC,UAAWA,EACX12B,SAAU,SAAAxpC,GACN+hE,EAAa/hE,GACbimD,GAAsBS,UAAUC,YAAc3mD,CAClD,EACAN,MAAO,CAAEmd,OAAQ,EAAGvb,YAAa,WACjCd,KAAK,KACLvD,MAAO,CAAEJ,WAAY,KAAMrB,SAC9B,yBAKLY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqd,QAASmjD,EAAY,OAAS,QAAU1kE,SAAA,EACnDY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,WAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYxmD,KAAOP,CAC7C,EACIyc,IAAKulD,EAAiBzgE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,OACtFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,cAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYH,QAAU5mD,CAChD,EAAGyc,IAAKwlD,EAAoB1gE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,UACxFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,WAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAY+b,KAAO9iE,CAC7C,EAAGyc,IAAKylD,EAAiB3gE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,OACrFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,cAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYN,QAAUzmD,CAChD,EAAGyc,IAAK0lD,EAAoB5gE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,UACxFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,qBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYF,cAAgB7mD,CACtD,EAAGyc,IAAK2lD,EAA0B7gE,SAAU2+D,EAAW/9B,WAAS,EAACxhC,qBAAqB,UAAUD,YAAY,iBACxGhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,UAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYD,IAAM9mD,CAC5C,EAAGyc,IAAK4lD,EAAgB9gE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,MACpFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,YAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBc,YAAYvuD,MAAQwH,CAC9C,EAAGyc,IAAK6lD,EAAkB/gE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,QACtFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,iBAKjM9lD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,cAGnG,EAEMw6C,GAAiB,WAEnB,IAAMja,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAC5D/yB,GAAkCrxC,EAAAA,EAAAA,YAASokE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,IAAI29D,EAAY/V,UAAUC,aAAmBhd,GAAApxC,EAAAA,EAAAA,SAAAmxC,EAAA,GAAlIw2B,EAASv2B,EAAA,GAAEo4B,EAAYp4B,EAAA,GAC9BM,GAAsC5xC,EAAAA,EAAAA,UAAS,CAAC,GAAE6xC,GAAA3xC,EAAAA,EAAAA,SAAA0xC,EAAA,GAA3C43B,EAAW33B,EAAA,GAAE43B,EAAc53B,EAAA,GAE5B84B,GAAgB13D,EAAAA,EAAAA,QAAO,MACvB23D,GAAmB33D,EAAAA,EAAAA,QAAO,MAC1B43D,GAAgB53D,EAAAA,EAAAA,QAAO,MACvB63D,GAAmB73D,EAAAA,EAAAA,QAAO,MAC1B83D,GAAyB93D,EAAAA,EAAAA,QAAO,MAChC+3D,GAAe/3D,EAAAA,EAAAA,QAAO,MACtBg4D,GAAiBh4D,EAAAA,EAAAA,QAAO,MAgE9B,OA7DAvQ,EAAAA,EAAAA,YAAU,WACN,IAAMwoE,EAAgB,eAAAzgC,GAAA1lC,EAAAA,EAAAA,UAAG,YACrB,GAAK0rD,EAAiBkM,eAAgBlM,EAAiBkM,aAAaC,SAApE,CACA,IAAMh1C,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,WAAY+/B,EAAiBkM,aAAaC,UAExF,IACI,IAAM1Y,QAAgB9nC,EAAAA,EAAAA,QAAOwL,GAE7B,GAAIs8B,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACrB89D,EAAevlB,EAAQv4C,QAEvBg/D,EAAc5yD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUnmD,KAAOk8D,EAAY/V,UAAUnmD,MAAUyD,EAAKgwD,UAAYhwD,EAAKgwD,UAAY,IAAE,KAAIhwD,EAAKkwD,SAAWlwD,EAAKkwD,SAAW,IACzN+O,EAAiB7yD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUE,QAAU6V,EAAY/V,UAAUE,SAAa5iD,EAAKw/D,WAAax/D,EAAKw/D,WAAa,IAAE,KAAIx/D,EAAKy/D,QAAUz/D,EAAKy/D,QAAU,IAClOP,EAAc9yD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUoc,KAAOrG,EAAY/V,UAAUoc,KAAI,IAAM9+D,EAAK8+D,KAAO9+D,EAAK8+D,KAAO,IACzKK,EAAiB/yD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUD,QAAUgW,EAAY/V,UAAUD,QAAO,IAAMziD,EAAKyiD,QAAUziD,EAAKyiD,QAAU,IACxL2c,EAAuBhzD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUG,cAAgB4V,EAAY/V,UAAUG,cAAa,IAAM7iD,EAAK0/D,gBAAkB1/D,EAAK0/D,gBAAkB,IAC1NL,EAAajzD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUI,IAAM2V,EAAY/V,UAAUI,IAAG,IAAM9iD,EAAK8iD,IAAM9iD,EAAK8iD,IAAM,IACpKwc,EAAelzD,QAAQpQ,MAAQy8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUluD,MAAQikE,EAAY/V,UAAUluD,MAAK,IAAMwL,EAAK2/D,UAAY3/D,EAAK2/D,UAAY,IAGtL1d,GAAsBS,UAAUnmD,KAAOk8D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUnmD,KAAOk8D,EAAY/V,UAAUnmD,MAAUyD,EAAKgwD,UAAYhwD,EAAKgwD,UAAY,IAAE,KAAIhwD,EAAKkwD,SAAWlwD,EAAKkwD,SAAW,IAClOjO,GAAsBS,UAAUE,QAAU6V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUE,QAAU6V,EAAY/V,UAAUE,SAAa5iD,EAAKw/D,WAAax/D,EAAKw/D,WAAa,IAAE,KAAIx/D,EAAKy/D,QAAUz/D,EAAKy/D,QAAU,IAC3Oxd,GAAsBS,UAAUoc,KAAOrG,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUoc,KAAOrG,EAAY/V,UAAUoc,KAAI,IAAM9+D,EAAK8+D,KAAO9+D,EAAK8+D,KAAO,IAClL7c,GAAsBS,UAAUD,QAAUgW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUD,QAAUgW,EAAY/V,UAAUD,QAAO,IAAMziD,EAAKyiD,QAAUziD,EAAKyiD,QAAU,IACjMR,GAAsBS,UAAUG,cAAgB4V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUG,cAAgB4V,EAAY/V,UAAUG,cAAa,IAAM7iD,EAAK0/D,gBAAkB1/D,EAAK0/D,gBAAkB,IACnOzd,GAAsBS,UAAUI,IAAM2V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUI,IAAM2V,EAAY/V,UAAUI,IAAG,IAAM9iD,EAAK8iD,IAAM9iD,EAAK8iD,IAAM,IAC7Kb,GAAsBS,UAAUluD,MAAQikE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUluD,MAAQikE,EAAY/V,UAAUluD,MAAK,IAAMwL,EAAK2/D,UAAY3/D,EAAK2/D,UAAY,IAC/L1d,GAAsBS,UAAUC,YAAc8V,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAY/V,UAAUC,YAAc8V,EAAY/V,UAAUC,YAAcuZ,CAGhL,MACIpiE,QAAQe,IAAI,qBACZijE,EAAe,KAEvB,CAAE,MAAOjkE,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CAnCoF,CAoCxF,IAAC,kBArCqB,OAAAilC,EAAA5kC,MAAA,KAAAC,UAAA,KAsCtBolE,GAEJ,GAAG,KAEHxoE,EAAAA,EAAAA,YAAU,WAEFmlE,IACA8C,EAAc5yD,QAAQpQ,OAAW6hE,EAAY7N,UAAY6N,EAAY7N,UAAY,IAAE,KAAI6N,EAAY3N,SAAW2N,EAAY3N,SAAW,IACrI+O,EAAiB7yD,QAAQpQ,OAAW6hE,EAAY2B,WAAa3B,EAAY2B,WAAa,IAAE,KAAI3B,EAAY4B,QAAU5B,EAAY4B,QAAU,IACxIP,EAAc9yD,QAAQpQ,MAAK,IAAM6hE,EAAYiB,KAAOjB,EAAYiB,KAAO,IACvEK,EAAiB/yD,QAAQpQ,MAAK,IAAM6hE,EAAYpb,QAAUob,EAAYpb,QAAU,IAChF2c,EAAuBhzD,QAAQpQ,MAAK,IAAM6hE,EAAY6B,gBAAkB7B,EAAY6B,gBAAkB,IACtGL,EAAajzD,QAAQpQ,MAAK,IAAM6hE,EAAY/a,IAAM+a,EAAY/a,IAAM,IACpEwc,EAAelzD,QAAQpQ,MAAK,IAAM6hE,EAAY8B,UAAY9B,EAAY8B,UAAY,IAM1F,GAAG,CAACzD,KAIA9jE,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAG0L,UAAW,UAAY/sB,UAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIigB,OAAQ,EAAG9f,MAAO,WAAavB,SAAC,iBAElFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,UACvDJ,EAAAA,GAAAA,KAAC6kE,EAAAA,SAAQ,CACLC,UAAWA,EACX12B,SAAU,SAAAxpC,GACNimD,GAAsBS,UAAUC,YAAc3mD,EAC9C+hE,EAAa/hE,EACjB,EACAN,MAAO,CAAEmd,OAAQ,EAAGvb,YAAa,WACjCd,KAAK,KACLvD,MAAO,CAAEJ,WAAY,KAAMrB,SAC9B,qBAILY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,WAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUnmD,KAAOP,CAC3C,EAAGyc,IAAKumD,EAAezhE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,OACnFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,cAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUE,QAAU5mD,CAC9C,EAAGyc,IAAKwmD,EAAkB1hE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,UACtFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,WAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUoc,KAAO9iE,CAC3C,EAAGyc,IAAKymD,EAAe3hE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,OACnFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,cAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUD,QAAUzmD,CAC9C,EAAGyc,IAAK0mD,EAAkB5hE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,UACtFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,qBAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUG,cAAgB7mD,CACpD,EAAGyc,IAAK2mD,EAAwB7hE,SAAU2+D,EAAW/9B,WAAS,EAACxhC,qBAAqB,UAAUD,YAAY,iBACtGhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,UAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUI,IAAM9mD,CAC1C,EAAGyc,IAAK4mD,EAAc9hE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,MAClFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAE7L9kD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,YAC5DJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAAC/tD,aAAc,SAACF,GACtBimD,GAAsBS,UAAUluD,MAAQwH,CAC5C,EAAGyc,IAAK6mD,EAAgB/hE,SAAU2+D,EAAWv/D,qBAAqB,UAAUD,YAAY,QACpFhB,MAAO,CAAEuC,gBAAiBi+D,EAAY,UAAY,UAAWjoE,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,cAG7L9lD,EAAAA,GAAAA,KAACwmE,GAAgB,CAACC,YAAaA,EAAaC,eAAgBA,MAGxE,EAkqBM8B,GAA6B,WAC/B,IAAMrgE,GAAWK,EAAAA,EAAAA,eACX64D,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IACtD3T,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChEgN,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAG9E3rB,GAAsD9xC,EAAAA,EAAAA,WAAS,GAAM+xC,GAAA7xC,EAAAA,EAAAA,SAAA4xC,EAAA,GAA9D05B,EAAmBz5B,EAAA,GAAE05B,EAAsB15B,EAAA,GAElDC,GAAgDhyC,EAAAA,EAAAA,WAAS,GAAMiyC,GAAA/xC,EAAAA,EAAAA,SAAA8xC,EAAA,GAAxD05B,EAAgBz5B,EAAA,GAAE05B,EAAmB15B,EAAA,GAEtC25B,EAAoBxH,EAAYxV,eAAe3gC,YAC/C49C,EAAoBn9C,WAAWk9C,EAAkBx+D,QAAQ,KAAM,KAE/D0+D,GAAiB74D,EAAAA,EAAAA,QAAO,MAiCxB84D,EAAkB,eAAAC,GAAAjnE,EAAAA,EAAAA,UAAG,YACvB,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCle,GAROie,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEzC6S,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IAEtF,UAEUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,6VAcL4xD,OAAQv5D,EACR6e,UAAWb,EACX8tD,YAAa,eACbve,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,6YAcZC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAGjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,kBAjEuB,OAAA+sE,EAAAnmE,MAAA,KAAAC,UAAA,KAoElBomE,EAAkB,eAAAC,GAAApnE,EAAAA,EAAAA,UAAG,UAAO4pB,GAC9B,IACQ1Q,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCle,GAROie,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEzC6S,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IAEtF,UAEUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,6LAQV6mB,EAAM,gJAMD+qC,OAAQv5D,EACR6e,UAAWb,EACX8tD,YAAa,eACbve,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,6OAQjBlrC,EAAM,gLAMDmrC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAGjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,gBAjEuBigB,GAAA,OAAAitD,EAAAtmE,MAAA,KAAAC,UAAA,KAmElBsmE,EAAc,eAAAC,GAAAtnE,EAAAA,EAAAA,UAAG,UAAO4pB,EAAQ29C,GAClC,IACQruD,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCle,GAROie,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEzC6S,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IAEtF,UAEUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,gUAUV6mB,EAAM,uBACG29C,EAAe,4RASnB5S,OAAQv5D,EACR6e,UAAWb,EACX8tD,YAAa,eACbve,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,gUAUjBlrC,EAAM,uBACG29C,EAAe,4RASnBxS,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAGjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,gBA7EmBsgB,EAAAC,GAAA,OAAA6sD,EAAAxmE,MAAA,KAAAC,UAAA,KA+EdymE,EAAc,eAAAzhC,GAAA/lC,EAAAA,EAAAA,UAAG,YACnB4mE,GAAoB,GAEpB,IAAMa,EAAepI,EAAYxV,eAAe3gC,YAAcm2C,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MAAQq/D,EAAa,GACjK7kD,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAClE6tE,GAAiBtnE,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,WAAY+/B,EAAiBkM,aAAaC,UAExF3+C,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCAExCsuD,EAAc,CAChB,CAAEhlE,MAAOmkE,EAAe/zD,QAAQpQ,MAAO8W,KAAMN,IAG3CyuD,EAAqB,CACvB,CAAEjlE,MAAOmkE,EAAe/zD,QAAQpQ,MAAO8W,KAAMN,EAAe0uD,WAAYpc,EAAiB5C,QAAQ9uB,gBAAiB+tC,YAAarc,EAAiB5C,QAAQztB,UAGtJ2sC,EAAcjB,EAAe/zD,QAAQpQ,MACrCqlE,EAAqBpkB,OAAOmkB,GAC5BE,EAAuBD,EAAmBj+C,iBAC1CrhB,EAAQ,SAAAw/D,GAAE,OAAI,IAAIh4C,SAAQ,SAAA51B,GAAO,OAAI0G,WAAW1G,EAAS4tE,EAAG,GAAE,EAEpE,GAAoB,KAAhBH,GAAsC,MAAhBA,EAK1B,IACI,GAAKA,EAAYvsC,WAAW,KAgDxB/6B,QAAQD,MAAM,8BAhDgB,CAK9B,SAHM4mE,EAAea,EAAsB9uD,SACrCzQ,EAAM,IAERs/D,GAAsBR,EAAc,CAKpC,SAHMT,UACAr+D,EAAM,IAERs/D,EAAqBR,EAAc,CAEnC,IAAMW,EAAcH,EAAqBR,EAErCW,EAAc,UACRjB,EAAmBzO,EAAqB0P,YAAc1P,EAAqB0P,YAAcA,EAAc,UACvGz/D,EAAM,UACNpI,EAAAA,EAAAA,WAAUonE,EAAgB,CAC5BS,aAAaC,EAAAA,EAAAA,WAAUD,KAMnC,OAGM7nE,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpB,sBAAuB,EACvB,uBAAwB,qBAGhC,MAEIniB,QAAQe,IAAI,kCAKVlB,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpBylD,SAAUjkC,EAAAA,WAAUvjC,WAAC,EAAG8mE,WAGtBrnE,EAAAA,EAAAA,WAAUonE,EAAgB,CAC5BY,gBAAiBlkC,EAAAA,WAAUvjC,WAAC,EAAG+mE,IAGvC,CAIJ,CAAE,MAAOpnE,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CAAC,QACGmmE,GAAoB,GACpBzgE,GAASqiE,EAAAA,EAAAA,6BAA2B,GACxC,MA7DI5B,GAAoB,EAiE5B,IAAC,kBAzFmB,OAAA7gC,EAAAjlC,MAAA,KAAAC,UAAA,KA2FpB,SAASo7D,EAAW30C,GAEhB,IAAMihD,EAAoBjhD,EAAWnf,QAAQ,OAAQ,KAC/CqR,EAAO,IAAIg8C,KAAK+S,GAEtB,GAAI5sC,MAAMniB,EAAKkiD,WAGX,OADAl7D,QAAQD,MAAM,gBAAiB+mB,GACxB,eAGX,IACMjO,EAAOG,EAAK+hD,cACZjiD,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExEE,EAAKgiD,YACpB/hD,EAAMD,EAAKiiD,UAAU/gC,WAAW8tC,SAAS,EAAG,KAE9CC,EAAQjvD,EAAKkvD,WAEXC,EAAOF,GAAS,GAAK,KAAO,KAKlC,OAAUpvD,EAAI,IAAIC,EAAK,IAAIG,EAAG,QAF9BgvD,GADAA,GAAgB,KACQ,IAEkB,IAN1BjvD,EAAKovD,aAAaluC,WAAW8tC,SAAS,EAAG,KAMDG,CAC5D,CAEA,IA8DMnB,EAAahc,EAAiB4c,SAC9B5c,EAAiB4c,SAASz+C,QAAO,SAACq4C,EAAK6G,GACrC,IAAMnmE,EAAQihD,OAAOklB,EAAQnmE,OAC7B,OAAOs/D,GAAOrmC,MAAMj5B,GAAS,EAAIA,EACrC,GAAG,GACD,EAGAomE,EADsBnlB,OAAO6jB,GAAc7jB,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,WAAY,IAAIA,QAAQ,YAAa,OAC9Fw7C,OAAO6jB,GAAY19C,iBAAmBq1C,EAAYxV,eAAe3gC,YAE/G,OAEIlqB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,SAAA,EAE5BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE2mE,YAAa,IAAKzpE,SAAU,IAAMpB,SAAC,iBAElDJ,EAAAA,GAAAA,KAACkrE,EAAAA,QAAQ,CAAChrE,EAAE,MAAMirE,OAAQ,EAAGvmE,MAAOihD,OAAO6jB,GAAa0B,IAAKtC,EAAmBuC,aAAc,CAC1FljD,GAAI,eAGRnnB,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,WAAavB,SAAA,CAAC,IAAE4qE,GACjEhrE,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,WAAavB,SAAC,cACnEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,WAAavB,SAAA,IAAMihE,EAAYxV,eAAe3gC,qBAK3GlrB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzhB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,UAE5BJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QA1ce,WAC3B+iE,GAAuB,EAG3B,EAucgBpkE,MAAO,CAAEzH,MAAO,eAAiBuD,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,WAAc2pE,WAAS,EAACC,YAAY,EAAMnrE,SAAC,0BAKxGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzgB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,EAAGN,UAAW,GAAKlf,SAAA,EAE1CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,IAAMpB,SAAC,mBAEjDY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,UAAYC,SAAA,EAEzDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,IAAMpB,SAAC,OAEjDJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK0nD,EACLxjE,qBAAqB,UAAUD,YAAY,eAC3ChB,MAAO,CAAExH,OAAQ,GAAID,MAAO,IAAK4kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,QAC/HhhD,aApdgB,SAACC,GAEjC,IAAMggE,EAAehgE,EAChBsF,QAAQ,YAAa,IACrBA,QAAQ,SAAU,MAClBA,QAAQ,WAAY,IACpBA,QAAQ,YAAa,MAG1B0+D,EAAe/zD,QAAQpQ,MAAQmgE,CACnC,QA+cY/kE,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QA5cmB,WAC/B,IAAMo/D,EAAe1D,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,WAAY,IAAIA,QAAQ,YAAa,MAAQq/D,EACjHX,EAAe/zD,QAAQpQ,MAAQmgE,CACnC,EA0cgBzgE,MAAO,CAAEzH,MAAO,eAAiBuD,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,WAAc2pE,WAAS,EAACC,YAAY,EAAMnrE,SAAC,2BAKxGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzhB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,UACvGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,GACXxhB,SAEAuoE,GASE3oE,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,WAR5B3B,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS,kBAAM6jE,GAAgB,EAACppE,UAEhCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE6oB,UAAW,SAAUxrB,MAAO,SAAUvB,SAAC,mBAUtEJ,EAAAA,GAAAA,MA3JoB,SAAHsoC,GAAoE,IAA9DmgC,EAAmBngC,EAAnBmgC,oBAAqB+C,EAAuBljC,EAAvBkjC,wBAAyBlB,EAAQhiC,EAARgiC,SAEnEmB,GAAiB1+C,EAAAA,EAAAA,SAAIu9C,GAAU15C,MAAK,SAAC2C,EAAGG,GAC1C,IAAMg4C,EAAQn4C,EAAE7X,KAEhB,OADcgY,EAAEhY,KACDgwD,CACnB,IAIA,OACI1rE,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQkoD,EAAqB5nD,QAAS2qD,EAAyBniD,YAAU,EAAAjpB,UAC5EY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAC1c,MAAO,CAAEuC,gBAAiB,QAASH,aAAc,IAAKtG,SAAA,EACjEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAE0C,UAAW,SAAUxF,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASvB,SAAC,qBAG/FJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAEP,KAAM,EAAGyC,kBAAmB,GAAI4qB,UAAW,KAAOhxB,SAE/DqrE,EAAe/nE,OAAS,EACpB+nE,EAAe9vE,KAAI,SAACovE,EAASn9C,GAAK,OAC9B5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAatpD,MAAO,CACrBqC,aAAc,GACdE,gBAAiB,UACjBH,aAAc,GACdo8B,YAAa,OACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,EACXthB,QAAS,GACTzC,kBAAmB,EACnBC,kBAAmB,QACrBhf,SAAA,EAEEY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,YACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASvB,SAC1B+9D,EAAWsN,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOlS,YAItE1a,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,aACxDY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAOkkD,OAAO4lB,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOhpB,OAAOonB,iBAAiByR,WAAW,KAAO,UAAY,WAAYr9B,SAAA,CAAC,IAC5IylD,OAAO4lB,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOhpB,OAAOonB,yBAxBnE4B,EA4BJ,KAEX5tB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ0rB,UAAW,UAAa0H,QAAM,EAAAz0B,SAAC,+BAQlG,GA+F4B,CAChBqoE,oBAAqBA,EACrB+C,wBAjgBoB,WAC5B9C,GAAuB,EAE3B,EA+fY4B,SAAU5c,EAAiB4c,SAAW5c,EAAiB4c,SAAW,OAMlF,EAEMqB,GAAmC,WACrC,IAAMxjE,GAAWK,EAAAA,EAAAA,eACXklD,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChEgN,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IACxE2G,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IACtD52C,GAAcriB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoiB,WAAW,IAC5D0kB,GAAgDlyC,EAAAA,EAAAA,WAAS,GAAMmyC,GAAAjyC,EAAAA,EAAAA,SAAAgyC,EAAA,GAAxDy8B,EAAgBx8B,EAAA,GACvBC,GAD4CD,EAAA,IACInyC,EAAAA,EAAAA,WAAS,IAAMqyC,GAAAnyC,EAAAA,EAAAA,SAAAkyC,EAAA,GAAxDs5B,EAAgBr5B,EAAA,GAAEs5B,EAAmBt5B,EAAA,GAEtCu8B,GAAc37D,EAAAA,EAAAA,QAAO,MACrB47D,GAA0B57D,EAAAA,EAAAA,QAAO,MACjC+8C,EAAY,yBAAWrwB,WAIvBmvC,EAAc,eAAAxjC,GAAAvmC,EAAAA,EAAAA,UAAG,YACnB,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCle,GAROie,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEzC6S,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IAEtF,UAEUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAM,iBACN4xD,OAAQv5D,EACR6e,UAAWb,EACX8tD,YAAa,gBACbve,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAa,iBACbC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAGjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,kBAvCmB,OAAAqsC,EAAAzlC,MAAA,KAAAC,UAAA,KA2CdipE,EAAc,eAAAxjC,GAAAxmC,EAAAA,EAAAA,UAAG,YACnB4mE,GAAoB,GACpB,IACMqD,EADOxhD,EAAY0b,MAAM,KAAK,GACZznB,OAAO,GACzBwc,GAAgB7kB,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,iBAE5D,IAEI,IAAMoN,QAAsB5jB,EAAAA,EAAAA,SAAQ+jB,GAChCgxC,EAAY,EAEhBnxC,EAAcrkB,SAAQ,SAACrU,GACnB,IAAMgrB,EAAUhrB,EAAIvG,GACpB,GAAIuxB,EAAQoQ,WAAWwuC,GAAa,CAChC,IAAMvI,EAAS/oC,SAAStN,EAAQ8+C,UAAU,GAAI,IAC1CzI,EAASwI,IACTA,EAAYxI,EAEpB,CACJ,IAEA,IACMr2C,EAAO,GAAM4+C,GADAC,EAAY,GAEzBrnD,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiBN,GACzD++C,GAAe/pE,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAExEuwE,EA1nBW,SAACzjE,EAAMqkD,GAChC,IAAMqf,GAAOC,EAAAA,EAAAA,YAAW3jE,EAAMqkD,GAC9B,OAAOM,EAAAA,IAAIif,IAAIC,UAAUH,EAC7B,CAunB+BI,CAAqBr/C,EAAS4/B,GAGjD,GAAIS,EAAiB2M,cAAe,CAChC,IAAMsS,GAAetqE,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiB+/B,EAAiB2M,qBAEhFx8C,EAAAA,EAAAA,QAAO8uD,EAAYllE,GAAAA,GAAA,GAClBojD,IAAqB,IACxBuP,aAAa,EACbwS,cAAelS,EAAqB6N,UACpCzN,OAAQpN,EAAiB5xD,GACzBgvD,QAAS4C,EAAiB5C,UAC3B,CAAExkB,OAAO,IAEgC,GAAxConB,EAAiBC,cAAc/oD,cACzBrC,EAAAA,EAAAA,WAAU6pE,EAAc,CAC1B,uBAAwB,yBACxB,sBAAuB,KAK/BL,IACAnD,GAAoB,GACpBzgE,GAASqiE,EAAAA,EAAAA,6BAA2B,GACxC,YAIU3sD,EAAAA,EAAAA,QAAOgH,EAAMpd,GAAAA,GAAA,GACZojD,IAAqB,IACxBuP,aAAa,EACbwS,cAAelS,EAAqB6N,UACpCzN,OAAQpN,EAAiB5xD,GACzB+wE,aAAcR,EACdvhB,QAAS4C,EAAiB5C,iBAGxBvoD,EAAAA,EAAAA,WAAU6pE,EAAc,CAC1BpwD,UAAUqqB,EAAAA,EAAAA,YAAWhZ,GACrBgtC,cAAehtC,EACf,uBAAwB,yBACxB,sBAAuB,IAI3B0+C,IACAnD,GAAoB,GACpBzgE,GAASqiE,EAAAA,EAAAA,6BAA2B,GAM5C,CAAE,MAAO/nE,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,kBAnFmB,OAAA+lC,EAAA1lC,MAAA,KAAAC,UAAA,KAkGpB,OARApD,EAAAA,EAAAA,YAAU,WAAO,IAADmtE,EAAAC,EAEZliB,GAAsBE,IAAMsW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYtW,IAAMsW,EAAYtW,IAAyB,OAAtB+hB,EAAGjB,EAAY72D,cAAO,EAAnB83D,EAAqBloE,MAC3IimD,GAAsBG,gBAAkBqW,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYrW,gBAAkBqW,EAAYrW,gBAAiD,OAAlC+hB,EAAGjB,EAAwB92D,cAAO,EAA/B+3D,EAAiCnoE,KAE/L,GAAG,KAIC5D,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CAAChd,MAAO,CAAEP,KAAM,EAAGqtB,UAAW,KAAOhxB,SAAA,EAE5CY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,UAC9CJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNlwC,aAAc0+C,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYtW,IAAMsW,EAAYtW,IAAM,GACxG1pC,IAAKwqD,EAAatmE,qBAAqB,UAAUD,YAAY,uBAC7DhB,MAAO,CAAExH,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,QACnHhhD,aAAc,SAACF,GAAK,OAAKimD,GAAsBE,IAAMnmD,CAAK,QAGlE5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,wBAC9CJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACNlwC,aAAc0+C,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,GAAK29D,EAAYrW,gBAAkBqW,EAAYrW,gBAAkB,GAChI3pC,IAAKyqD,EAAyBvmE,qBAAqB,UAAUD,YAAY,+BACzEhB,MAAO,CAAExH,OAAQ,GAAID,MAAO,IAAK4kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,QAC/HhhD,aAAc,SAACF,GAAK,OAAKimD,GAAsBG,gBAAkBpmD,CAAK,QAG9E5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,EAAGthB,WAAY,UAAWC,SAAA,EAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAIrhB,SAAC,wBAC7CJ,EAAAA,GAAAA,KAACumE,GAAqB,QAG1BvlE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,mBAC9CJ,EAAAA,GAAAA,KAAComE,GAAiB,QAGtBpmE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzgB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,wBAE9CJ,EAAAA,GAAAA,KAACmlE,GAAqB,QAG1BnlE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzhB,EAAAA,GAAAA,KAAC2nE,GAAc,KAEf3nE,EAAAA,GAAAA,KAACwiE,GAAc,KAEfxiE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,aAEvFntB,EAAAA,GAAAA,KAACohE,GAAe,KAEhBphE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsiB,kBAAmB,EAAGjZ,YAAa,UAAWinB,UAAW,SAAU1L,OAAQ,MAEzGzhB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,UACvGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAGDtpD,MAAO,CACHP,KAAM,EACN8C,gBAAiB+kE,EAAmB,UAAY,UAChDllE,aAAc,EACdkb,QAAS,GACXxhB,SAKAuoE,GAQE3oE,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,WAP5B3B,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMqmE,GAAgB,EAAC5rE,UACvCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE6oB,UAAW,SAAUxrB,MAAO,SAAUvB,SAAC,oBAYlF,EAGM4sE,GAAmB,WAErB,IAAMtf,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAE5DzwB,GAA4C3zC,EAAAA,EAAAA,UAAS,GAAE4zC,GAAA1zC,EAAAA,EAAAA,SAAAyzC,EAAA,GAAhDq8B,EAAcp8B,EAAA,GAAEq8B,EAAiBr8B,EAAA,GACxCG,GAA8D/zC,EAAAA,EAAAA,UAAS,GAAEg0C,GAAA9zC,EAAAA,EAAAA,SAAA6zC,EAAA,GAAlEm8B,EAAuBl8B,EAAA,GAAEm8B,EAA0Bn8B,EAAA,GAC1DG,GAAwCn0C,EAAAA,EAAAA,WAAS,GAAMo0C,GAAAl0C,EAAAA,EAAAA,SAAAi0C,EAAA,GAAhD5gC,EAAY6gC,EAAA,GAAE5gC,EAAe4gC,EAAA,GACpCE,GAAkCt0C,EAAAA,EAAAA,WAAS,GAAMu0C,GAAAr0C,EAAAA,EAAAA,SAAAo0C,EAAA,GAA1C1jB,EAAS2jB,EAAA,GAAE4c,EAAY5c,EAAA,GAC9BE,GAAgEz0C,EAAAA,EAAAA,UAAS,GAAE00C,GAAAx0C,EAAAA,EAAAA,SAAAu0C,EAAA,GAApE27B,EAAwB17B,EAAA,GAAE27B,EAA2B37B,EAAA,GAItD47B,GAAgBr9D,EAAAA,EAAAA,QAAO,MAG7B4hC,GAAkC70C,EAAAA,EAAAA,UAAS,CAAC,GAAE80C,GAAA50C,EAAAA,EAAAA,SAAA20C,EAAA,GAC9CI,GADgBH,EAAA,GAAcA,EAAA,IACQ90C,EAAAA,EAAAA,UAAS,IAAEk1C,GAAAh1C,EAAAA,EAAAA,SAAA+0C,EAAA,GACjDI,GADkBH,EAAA,GAAgBA,EAAA,IACYl1C,EAAAA,EAAAA,UAAS,KAAGs1C,GAAAp1C,EAAAA,EAAAA,SAAAm1C,EAAA,GAAnDk7B,EAAej7B,EAAA,GAAEk7B,EAAkBl7B,EAAA,GAIpC2zB,EAAc,eAAA56B,GAAAtpC,EAAAA,EAAAA,UAAG,YACnB,IAAM0rE,EAAcrM,EAAYjW,UAAU/pB,KACpCssC,EAAmBjgB,EAAiBigB,iBAI1C,GAAID,IAAgBF,GAAoBG,EAmDpCjrE,QAAQe,IAAI,iCAnD0C,CAEtD,IAAMohB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YACrE,IACI,IAAMwzB,QAAgB9nC,EAAAA,EAAAA,QAAOwL,GAE7B,GAAIs8B,EAAQx4C,SAAU,CAAC,IAADilE,EACZhlE,EAAOu4C,EAAQv4C,YACgBq1B,KAAhB,OAAjB2vC,EAAAhlE,EAAK8kE,SAAY,EAAjBE,EAAmBC,YAEc,UAA7BxM,EAAYnW,oBAEN3oD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E6xE,iBAAkB/kE,EAAK8kE,GAAaI,cAKN,YAA7BzM,EAAYnW,oBACX3oD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E6xE,iBAAkB/kE,EAAK8kE,GAAaK,gBAKN,UAA7B1M,EAAYnW,oBACX3oD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E6xE,iBAAkB/kE,EAAK8kE,GAAaM,cAKN,QAA7B3M,EAAYnW,sBACX3oD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E6xE,iBAAkB/kE,EAAK8kE,GAAaG,aAM5CJ,EAAmBC,IAEnBhrE,QAAQe,IAAI,yCAEpB,MACIf,QAAQe,IAAI,oBAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,2BAA4BA,EAC9C,CACJ,CAGJ,IAAC,kBA3DmB,OAAA6oC,EAAAxoC,MAAA,KAAAC,UAAA,KAqGdkrE,EACO,IADPA,EAES,IAFTA,EAGa,KAGbtxC,EAAiBkpB,OAAO6H,EAAiB5C,SAAW4C,EAAiB5C,QAAQnuB,eAAiB+wB,EAAiB5C,QAAQnuB,eAAiB,GACxIuxC,EAA0BroB,OAAOlpB,GAAgB3Q,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAEhKC,EAAaxoB,OAAOooB,GACpBK,EAAsBzoB,OAAOwoB,GAAYriD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAExJG,EAAe1oB,OAAOooB,GACtBO,EAAwB3oB,OAAO0oB,GAAcviD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAE5JK,EAAmB5oB,OAAOooB,GAC1BS,GAA4B7oB,OAAO4oB,GAAkBziD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAEpKO,GAAa9oB,OAAO6H,EAAiB5C,SAAW4C,EAAiB5C,QAAQ7tB,qBAAuBywB,EAAiB5C,QAAQ7tB,qBAAuB,GAAGjR,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,IAE9NQ,GAAoB/oB,OAAO6H,GAAoBA,EAAiBigB,iBAAmBjgB,EAAiBigB,iBAAmB,GACvHkB,GAA6BhpB,OAAO+oB,IAAmB5iD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAEtKU,GAA6BjpB,OAAO+oB,GAAoBD,IACxDI,GAAsClpB,OAAO+oB,GAAoBD,IAAY3iD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAE5LY,GAAyBnpB,OAAOipB,GAA6BphB,EAAiBiX,SAASC,UACvFqK,GAAkCppB,OAAOmpB,IAAwBhjD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAEhLc,GAAqBvyC,EAAiB0xC,EAAaE,EAAeE,EAAmBxB,EAAiB+B,GACtGG,GAA6BtpB,OAAOqpB,IAAmBljD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAEtKgB,GAAwBF,GAAoBxhB,EAAiBiX,SAASlrC,SACtE41C,GAAiCD,GAAsBpjD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAGtK5J,IAAuB9W,EAAiB+W,GAAK/W,EAAiB+W,GAC/D/W,EAAiB5C,SAAW4C,EAAiB5C,QAAQ7tB,qBAClDywB,EAAiB5C,QAAQ7tB,qBAAuB,GACpD4oB,OAAO6H,EAAiBvB,cAGtBmjB,IAAyB5hB,EAAiBnwB,SAAWmwB,EAAiBnwB,UACvEmwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAClDmwB,EAAiB5C,QAAQvtB,SAAW,IACvCmwB,EAAiBj0B,SAAWi0B,EAAiBj0B,SACzCi0B,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SACpDi0B,EAAiBiX,SAASlrC,SAAW,IAAO+qC,GAElD+K,GAAoB3lE,KAAKw6D,MAC3B/C,GAAeA,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,YAClE26B,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,KAAM,KAC5DilE,IAWJ3L,GAAuB,WAAO,IAAD6L,EAEzBC,EAPgB,SAAC7qE,GACvB,IAAM8+D,EAAS7d,OAAOjhD,EAAMyF,QAAQ,KAAM,KAC1C,OAAOwzB,MAAM6lC,GAAU,EAAIA,CAC/B,CAIuBD,CAAuC,OAAtB+L,EAACjC,EAAcv4D,cAAO,EAArBw6D,EAAuB5qE,OAEtD8qE,EAAqB9lE,KAAKw6D,MAAMqL,EAAaL,IACnD9B,EAA4BoC,EAIhC,EA2DA,OAlDA/vE,EAAAA,EAAAA,YAAU,WAEN,GAAI+tD,EAAiB5C,SAAW4C,EAAiB5C,QAAQtgC,sBAAuB,CAE5E,IAOMU,EAPUwiC,EAAiB5C,QAAQtgC,sBAAsB7uB,KAAI,SAACoe,GAChE,IACM2R,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAEtC,OAAO4R,WAAWD,EAAYE,OAAOvhB,QAAQ,IAAK,MAAQ,CAC9D,IAG4BwhB,QAAO,SAACC,EAAaC,GAAY,OAAKD,EAAcC,CAAY,GAAE,GACxFN,EAAuBP,EAAYc,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAExJlB,EAAkBhiD,GAClBkiD,EAA2B3hD,EAQ/B,CAKJ,GAAG,KAEH9rB,EAAAA,EAAAA,YAAU,WACN,IAAMguE,EAAmBjgB,EAAiBigB,iBAEtCn9D,IAAiBm9D,GACjBzH,GAIR,GAAG,CAAC11D,KAEJ7Q,EAAAA,EAAAA,YAAU,WAEN,GAAuB,IAAnBstE,GAA2C,KAAnBA,EAAuB,CAC/C,IAAMyC,EAAqB9lE,KAAKw6D,MAAMmL,GAAoBH,IAC1D9B,EAA4BoC,EAChC,CAGJ,GAAG,CAACzC,KAIAjsE,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACNC,QApJY,WACpB8K,GAAgB,GAChB88D,EAAcv4D,QAAQpQ,MAAQ2qE,GAC9B5L,IAEJ,EAgJYn9B,WAAW,EACXvjB,QAAQ,QACRorC,UA3PI,WAAH,OAASD,GAAa,EAAM,EA4P7BE,WA3PK,WAAH,OAASF,GAAa,EAAO,EA4P/B9pD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgnB,EAAY,UAAY,WAC3CztB,SAAA,EACFJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACxb,KAAM,GAAIzD,MAAO,QAASwD,KAAK,gBACzCnF,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,QAASF,WAAY,QAAUrB,SAAE,0BAGhFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ/P,EACRqQ,QAAS,WAjKjBpQ,GAAgB,EAmKR,EACA+kB,gBAAiB+3C,EACjBnoE,KAAM,KAAKhF,UAEXY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,uBACdY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMvB,KAAI,CAAC3c,MAAO,CAAEya,cAAe,MAAOlY,gBAAiB,WAAazG,SAAA,EAErEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGm2D,iBAAkB,EAAGD,iBAAkB,WAAa75D,SAAA,EAExEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,mBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CACpB7C,WAAY,MAAOD,SAAU,GAC7BG,MAAOkkD,OAAOwnB,EAA2B3f,EAAiBiX,SAASC,UAAY,EAAI,UAAY,WACjGxkE,SAAA,GACMylD,OAAOwnB,EAA2B3f,EAAiBiX,SAASC,UAAU54C,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,UAIjMptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,0BACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CACpB7C,WAAY,MAAOD,SAAU,GAC7BG,MAAOkkD,OAAOwnB,GAA4B,EAAI,UAAY,WAC5DjtE,SAAA,GACMylD,OAAOwnB,GAA0BrhD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,UAI5JptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,0BACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CACpB7C,WAAY,MAAOD,SAAU,GAC7BG,MAAOkkD,OAASwnB,EAA2B3f,EAAiBiX,SAASC,SAAYjoC,EAAkB,MAAQ,KAAO,UAAY,WAChIv8B,SACMylD,OAASwnB,EAA2B3f,EAAiBiX,SAASC,SAAYjoC,EAAkB,KAAK3Q,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,IAAI,UAI5LptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,WAAazG,SAAA,EAChJJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,GAAIhvB,MAAO,SAAWvB,SAAC,yBACvGJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAhIG,SAACC,GAChC,IAAMggE,EAAehgE,EAAKsF,QAAQ,UAAW,IAC7CkjE,EAAcv4D,QAAQpQ,MAAQmgE,EAE9BpB,IACJ,EA4HgChhD,aAAc4sD,GACdluD,IAAKksD,EACLhoE,qBAAqB,UAAUD,YAAY,cAC3ChB,MAAO,CACHuC,gBAAiB,QACjB/J,OAAQ,GACR2kB,OAAQ,EACRG,QAAS,EACTlb,aAAc,EACdT,YAAa,EACbC,YAAa,QACb4/C,aAAc,OACdtkD,SAAU,GACVC,WAAY,gBAQ5BT,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6b,WAAY,GAAIxf,SAAA,EAEpCY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,sBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrE8tE,QAIZltE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,kBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrEkuE,QAIZttE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,oBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrEouE,QAIZxtE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,yBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrEsuE,SAIZ1tE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,0BACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrE+sE,QAIZnsE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,kBACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAA,GACrEuuE,SAIZ3tE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,2BACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,IAAMvwB,SACrEyuE,GAA0B,MAAMF,MAExC3uE,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,GAAIhvB,MAAO,WAAavB,SAAA,GACvF2uE,MAER/uE,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAImvB,WAAY,GAAIhvB,MAAO,WAAavB,SAAA,GACvF6uE,SAIZjuE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqC,aAAc,GAAIV,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAGga,YAAa,EAAGkB,QAAS,EAAG/a,gBAAiB,SAAWzG,SAAA,EAC9IJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ8sD,eAAgB,EAAG/sD,SAAU,GAAImvB,WAAY,IAAMvwB,SAAC,YACvFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAIG,MAAO,WAAavB,SAAA,GACvE+uE,MAERnvE,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,MAAOD,SAAU,GAAIG,MAAO,WAAavB,SAAA,GACvEivE,qBAcxC,EAEMM,GAAiB,WAKnB,IAAMxnE,GAAWK,EAAAA,EAAAA,eACXklD,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChEkiB,GAAwBxnE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMunE,qBAAqB,IAC1EvO,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IAC5D5uB,GAAgDx1C,EAAAA,EAAAA,WAAS,GAAMy1C,GAAAv1C,EAAAA,EAAAA,SAAAs1C,EAAA,GAAxDo9B,EAAgBn9B,EAAA,GAAEo9B,EAAmBp9B,EAAA,GACtC9D,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MACvCkzE,GAAa7/D,EAAAA,EAAAA,QAAO,MAC1B2iC,GAA8C51C,EAAAA,EAAAA,UAAS,IAAG61C,GAAA31C,EAAAA,EAAAA,SAAA01C,EAAA,GAG1DI,GAHsBH,EAAA,GAAoBA,EAAA,IAGM71C,EAAAA,EAAAA,UAAS,KAAGi2C,GAAA/1C,EAAAA,EAAAA,SAAA81C,EAAA,GAArD+8B,EAAgB98B,EAAA,GAAE+8B,EAAmB/8B,EAAA,GAC5CG,GAA8Cp2C,EAAAA,EAAAA,UAASitD,IAAe5W,GAAAn2C,EAAAA,EAAAA,SAAAk2C,EAAA,GAA/D68B,EAAe58B,EAAA,GAAE68B,EAAkB78B,EAAA,GAC1CG,GAAkDx2C,EAAAA,EAAAA,UAAS,GAAEy2C,GAAAv2C,EAAAA,EAAAA,SAAAs2C,EAAA,GAAnC28B,GAAF18B,EAAA,GAAsBA,EAAA,IAC9CG,GAA0C52C,EAAAA,EAAAA,UAAS,GAAE62C,GAAA32C,EAAAA,EAAAA,SAAA02C,EAAA,GAA9Cw8B,EAAav8B,EAAA,GAAEw8B,EAAgBx8B,EAAA,GAWtC,SAASy8B,EAAyBlP,GAC9B,IAAImP,EAAQ,EAGZ,GAAInP,EAAYvW,QAAS,CAEN,CAAC,WAAY,WAAY,eAAgB,UAAW,iBAE5Dp0C,SAAQ,SAAA+5D,GACPpP,EAAYvW,QAAQ2lB,KAEpBD,GAASl0E,OAAO8hD,OAAOijB,EAAYvW,QAAQ2lB,IAAQvzD,QAAO,SAAAtY,GAAK,OAAc,IAAVA,CAAc,IAAElB,OAE3F,GACJ,CAEA,OAAO8sE,CACX,EAEA7wE,EAAAA,EAAAA,YAAU,WAEFiwE,GACAU,EAAiBD,EAAgB,EAEzC,GAAG,CAACT,KAGJjwE,EAAAA,EAAAA,YAAU,WACN,IAAM+wE,EAAiB,eAAA5kC,GAAA9pC,EAAAA,EAAAA,UAAG,YACtB,IACI,GAAI+tE,EAAW/6D,QAAS,CAEpB,IAIMk/C,QAAiByc,EAAAA,GAAAA,YAAWZ,EAAY,CAC1Cz0D,OAAQ,MACRs1D,QAAS,EACTjb,OAAQ,SACR94D,MAPU,KAQVC,OAPW,qBASfmzE,EAAoB,0BAA0B/b,GAC9C,IAAM2c,EAAYN,EAAyBlP,GAC3C+O,EAAqBS,EACzB,CACJ,CAAE,MAAOpuE,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,kBAtBsB,OAAAqpC,EAAAhpC,MAAA,KAAAC,UAAA,KAwBjB+tE,EAAoB,eAAAC,GAAA/uE,EAAAA,EAAAA,UAAG,UAAO40D,GAChC,IACI,IAAMplC,QAAiBO,MAAM6kC,GAC7B,IAAKplC,EAASw/C,GACV,MAAM,IAAI70E,MAAM,uBAAuBq1B,EAASzwB,QAEpD,IAAMkxB,QAAaT,EAASS,OAC5B,OAAO,IAAIE,SAAQ,SAAC51B,EAAS44D,GACzB,IAAMK,EAAS,IAAIC,WACnBD,EAAOyb,UAAY,kBAAM10E,EAAQi5D,EAAOG,OAAQ,EAChDH,EAAOK,QAAUV,EACjBK,EAAOM,cAAc7jC,EACzB,GACJ,CAAE,MAAOxvB,GAEL,OADAC,QAAQD,MAAM,eAAgBA,EAAMe,SAC7B,IACX,CACJ,IAAC,gBAjByBqZ,GAAA,OAAAk0D,EAAAjuE,MAAA,KAAAC,UAAA,KAyB1B,GAPA+tE,EAAqB5mB,IAChB9mD,MAAK,SAAA8tE,GACFf,EAAmBe,EACvB,IAEJR,IAEI9hC,EAAc,IAAK,CACnB,IAAM8hC,EAAiB,eAAAtjC,GAAAprC,EAAAA,EAAAA,UAAG,YACtB,IACI,GAAI+tE,EAAW/6D,QAAS,CAEpB,IAIMk/C,QAAiByc,EAAAA,GAAAA,YAAWZ,EAAY,CAC1Cz0D,OAAQ,MACRs1D,QAAS,EACTjb,OAAQ,SACR94D,MAPU,KAQVC,OAPW,qBASfmzE,EAAoB,0BAA0B/b,GAC9C,IAAM2c,EAAYN,EAAyBlP,GAC3C+O,EAAqBS,EACzB,CACJ,CAAE,MAAOpuE,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,kBAtBsB,OAAA2qC,EAAAtqC,MAAA,KAAAC,UAAA,KAwBjB+tE,EAAoB,eAAAnjC,GAAA3rC,EAAAA,EAAAA,UAAG,UAAO40D,GAChC,IACI,IAAMplC,QAAiBO,MAAM6kC,GAC7B,IAAKplC,EAASw/C,GACV,MAAM,IAAI70E,MAAM,uBAAuBq1B,EAASzwB,QAEpD,IAAMkxB,QAAaT,EAASS,OAC5B,OAAO,IAAIE,SAAQ,SAAC51B,EAAS44D,GACzB,IAAMK,EAAS,IAAIC,WACnBD,EAAOyb,UAAY,kBAAM10E,EAAQi5D,EAAOG,OAAQ,EAChDH,EAAOK,QAAUV,EACjBK,EAAOM,cAAc7jC,EACzB,GACJ,CAAE,MAAOxvB,GAEL,OADAC,QAAQD,MAAM,eAAgBA,EAAMe,SAC7B,IACX,CACJ,IAAC,gBAjByByZ,GAAA,OAAA0wB,EAAA7qC,MAAA,KAAAC,UAAA,KAkB1B+tE,EAAqB5mB,IAChB9mD,MAAK,SAAA8tE,GACFf,EAAmBe,EACvB,IAEJR,GACJ,CAEJ,GAAG,CAACX,EAAW/6D,QAASk7D,IAExB,IAAMiB,EAAY,eAAAvjC,GAAA5rC,EAAAA,EAAAA,UAAG,YACjB,IAaI,MAAM,iCAPiB2uE,EAAAA,GAAAA,YAAWZ,EAAY,CAC1Cz0D,OAAQ,MACRs1D,QAAS,EACTjb,OAAQ,SACR94D,MAPU,KAQVC,OAPW,qBAUnB,CAAE,MAAO2F,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,kBAlBiB,OAAAmrC,EAAA9qC,MAAA,KAAAC,UAAA,KAoBZquE,EAAS,eAAAjjC,GAAAnsC,EAAAA,EAAAA,UAAG,YACd,IAAMkI,EAAU6lE,EAAW/6D,QAC3B,GAAI9K,EAAS,CAET,IAOMmnE,SALeC,KAAYpnE,EAAS,CACtCzJ,MAHU,KAOW8wE,UAAU,aAAc,IAM3CC,EAAM,IAAIC,GAAAA,QAAM,CAClBC,YAAa,WACbC,KAAM,KACNr2D,OAAQ,OASNs2D,EAAWJ,EAAIK,mBAAmBR,GAElCS,EAjBW,IAiBKF,EAAS90E,OAAwB80E,EAAS/0E,MAEhE20E,EAAIO,SAASV,EAAW,OAAQ,EAAG,EAnBlB,IAmBkCS,OAAc7zC,EAAW,OAAQ,EATpE,CACZ+zC,iBAAkB,OAClBC,aAAc,IAUlBvkB,EAAiBC,cAAc/oD,MAAQ,EACnC4sE,EAAIU,KAAK,qBAAqB7Q,EAAYvW,QAAQztB,QAAO,KAAKgkC,EAAYvW,QAAQ9uB,gBAAe,0BACjGw1C,EAAIU,KAAK,eAAe7Q,EAAYvlE,GAAE,uBAC9C,MACI4G,QAAQD,MAAM,wBAEtB,IAAC,kBA1Cc,OAAA0rC,EAAArrC,MAAA,KAAAC,UAAA,KA6CTovE,EAAyB,eAAAz5B,GAAA12C,EAAAA,EAAAA,UAAG,YAC9B,IAAMguE,QAAyBmB,IAC3BnB,UACMoB,EAAUpB,GAExB,IAAC,kBAL8B,OAAAt3B,EAAA51C,MAAA,KAAAC,UAAA,KAS/B,GAAIs+D,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,EAAG,CACpD,IAAM0uE,EAAoB/Q,EAAY7U,iBAAiBE,YACjD2lB,EAAgBhR,EAAY7U,iBAAiBC,QAC7C6lB,EAAoB,IAAI5a,KAAK0a,GAC7BG,EAAgB,IAAI7a,KAAK2a,GAGzBnhD,EAAU,CACZ3V,KAAM,UACNC,MAAO,OACPG,IAAK,WAGT4uC,GAAuB+nB,EAAkBrU,wBAAmBhgC,EAAW/M,GACvEs5B,GAAmB+nB,EAActU,wBAAmBhgC,EAAW/M,EAEnE,CA+DA,OACIlwB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,CAAE,IAAEihE,GAAe/kE,OAAOD,KAAKglE,GAAa39D,OAAS,IAEjD1C,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAAIstD,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAC1CC,QAxS0B,WAClCwC,GAASqqE,EAAAA,EAAAA,2BAAyB,GACtC,EAuSYhsC,WAAW,EACXvjB,QAAQ,QACRorC,UAlTW,WAAH,OAASyhB,GAAoB,EAAM,EAmT3CxhB,WAlTY,WAAH,OAASwhB,GAAoB,EAAO,EAmT7CxrE,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgpE,EAAmB,UAAY,WAClDzvE,SAEDstD,EAAiB2M,eAAiB3M,EAAiBC,cAAc/oD,MAAQ,GACtE5E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKE,MAAO,SAAWvB,SAAA,uBACtBstD,EAAiB2M,iBAG7Cr6D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKE,MAAO,SAAWvB,SAAA,uBAKtDY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAK,CACFjC,OAAQqvD,EACR/uD,QAAS,WA/TrB1Y,GAASqqE,EAAAA,EAAAA,2BAAyB,IAClCvC,EAAoB,GAgUR,EACA7qE,KAAM,OACNikB,YAAU,EAAAjpB,SAAA,EAEVY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EAC9CY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CAACC,QAAS,WAChBqqE,GAAoBE,GAAkBiC,GAC1C,EACI7tE,MAAO,CAAEjD,eAAgB,SAAU0d,cAAe,MAAO6C,QAAS,EAAGlb,aAAc,EAAGG,gBAAiB,WAAazG,SAAA,EACpHJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACvb,KAAM,GAAID,KAAK,WAAWxD,MAAM,WACxD3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,wBAGtCY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACNC,QAAS,WACLqqE,GAAoBE,IApGxB,QAAhBjb,EAAAA,QAASC,GACWviC,OAAOyqC,OACfzmD,SAAS87D,MAAM,87BAuBQzC,EAAgB,g1BAoBnDttE,QAAQe,IAAI,uDAwDI,EACAa,MAAO,CAAE0a,SAAU,WAAYC,KAAM,EAAGoI,OAAQ,IAAKtI,cAAe,MAAO6C,QAAS,EAAGlb,aAAc,EAAGG,gBAAiB,WAAazG,SAAA,EACtIJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC9tB,KAAM,GAAID,KAAK,SAASxD,MAAM,WACtC3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAC,sBAG1CJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,IACjBmtD,IACG5uE,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CACPhd,MAAO,CAAE8sB,UAAWwd,EAAc,IAAM,IAAM,IAAK5rB,SAAU4rB,EAAc,IAAM,IAAM,KAAMxuC,SAAA,EAE7FJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT0a,SAAU,WACVC,IAAK,EACLkI,OAAQ,EACRE,MAAO,EACPD,KAAM,EACNvgB,gBAAiB,QACjBqY,OAAQ,IACRnb,KAAM,EACN5D,WAAY,UACdC,SACG4vE,GAAoBE,GACjBlwE,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CACR7wB,OAAQ,CAAEC,IAAK6rE,GACf1rE,MAAO,CACHgb,UAAW,EACXziB,MAAO+xC,EAAc,IAAM,IAAM,IACjC9xC,OAAQ8xC,EAAc,IAAM,IAAM,IAClCxqC,WAAY,UACZ6B,YAAa,EACbC,YAAa,cAGpBlG,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,UAAW2C,MAAO,CAAE6oB,UAAW,SAAUsD,WAAY,uBAIrE,KAApBy/C,IACGlvE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACvsC,IAAK0uD,EAAYzrE,MAAO,CAAEzH,MAAO,KAAMC,OAAQ,KAAM+J,gBAAiB,QAASqY,OAAQ,GAAI9e,SAAA,EAE7FJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYoI,KAAM,mBAAuBnI,IAAK,oBAAyB7e,UAC5FJ,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CACR7wB,OAAQlF,EAAQ,OAChBsF,MAAO,CACHzH,MAAO,mBACPC,OAAQ,mBACRsH,WAAY,gBAKxBpE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYmO,UAAW,SAAUlO,IAAK,mBAAyB7e,SAEnFstD,EAAiBC,cAAc/oD,MAAQ,GACpC5E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,mBAAwBpB,SAAA,sBAClEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,mBAAwBpB,SAAA,eAI1EJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,mBAAuBpI,IAAK,oBAAyB7e,SAE5FstD,EAAiBC,cAAc/oD,MAAQ,EACpC,MACA5E,EAAAA,GAAAA,KAAC0yE,GAAAA,QAAM,CACH9tE,MAAOy8D,EAAYwL,aACnBznE,KAAM,mBACNzD,MAAM,QACNkF,gBAAgB,aAK5B7G,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,kBAAwBpI,IAAK,oBAAyB7e,SAE7FstD,EAAiBC,cAAc/oD,MAAQ,EACpC,MACA5E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,mBAAqBihE,EAAYvlE,OAI1G4xD,EAAiBC,cAAc/oD,MAAQ,GACpC5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,mBAAuBpI,IAAK,oBAA0B7e,SAAA,EAE9FY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOoO,UAAW,YAAc/sB,SAAA,EAC1DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,oBAClEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,GAAKmqD,SAE3EvpD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOoO,UAAW,YAAc/sB,SAAA,EAC1DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBG,MAAO,WAAavB,SAAA,mBACrFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,GAAKoqD,YAK/ExpD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,kBAAwBpI,IAAK,mBAAwBF,cAAe,OAAQ3e,SAAA,EAEpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,oBAClEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,iBAAwBpB,SAAA,GAAKmqD,SAI/EvpD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACT0a,SAAU,WACVoI,KAAM,mBACNnI,IAAK,kBACL+D,SAAU,mBACZ5iB,SAAA,EAEEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACV2d,kBAAmB,EACnBtiB,MAAO,cACP8J,aAAc,GAChBvG,SAAA,aAGFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBmvB,WAAY,iBAAwBvwB,SAAA,8CACrGJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,6EACpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,uBAEpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,mBACpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBmvB,WAAY,iBAAwBvwB,SAAKihE,EAAYnW,cAAa,KAAKmW,EAAYpW,oBAEpJjrD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,iBACpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBmvB,WAAY,iBAAwBvwB,SAAKihE,EAAYjW,UAAU/pB,KAAI,KAAKggC,EAAYjW,UAAUC,UAC9JgW,EAAYrW,iBAAmD,KAAhCqW,EAAYrW,iBACxChqD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,wBACpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAYrW,qBAExH,KACLqW,EAAYtW,KAA2B,KAApBsW,EAAYtW,KAC5B/pD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,UACpHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAYtW,SAExH,MAEN/pD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOliB,MAAO,mBAA0BuD,SAAA,EAE3EY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EAAGlH,MAAO,iBAClBuD,SAAA,EAEEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,mBACV2d,kBAAmB,EACnBC,kBAAmB,UACnBviB,MAAO,cACP8J,aAAc,EACdhF,MAAO,UACP2d,UAAW,mBAEblf,SAAA,uBAGFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY/V,UAAUnmD,QAChInF,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY/V,UAAUE,WAC/IxrD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY/V,UAAUluD,SAC/I4C,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY/V,UAAUG,iBAC/IzrD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,SAAuC,IAA7BihE,EAAY/V,UAAUI,IAAY,MAAQ2V,EAAY/V,UAAUI,WAIlM1qD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGwb,YAAa,mBAAuB1iB,MAAO,iBAA0BuD,SAAA,EAEzFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,mBACV2d,kBAAmB,EACnBC,kBAAmB,UACnBviB,MAAO,cACP8J,aAAc,EACdhF,MAAO,UACP2d,UAAW,mBACblf,SAAA,iBAG0C,GAA3CihE,EAAY1V,YAAYC,iBACrB5rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,mBAAyBpB,SAAA,+BAClEY,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACGJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY1V,YAAYxmD,QAClInF,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY1V,YAAYH,WACjJxrD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY1V,YAAYvuD,SACjJ4C,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY1V,YAAYF,iBACjJzrD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuB8d,UAAW,GAAIqR,WAAY,iBAAwBvwB,SAAA,SAAyC,IAA/BihE,EAAY1V,YAAYD,IAAY,MAAQ2V,EAAY1V,YAAYD,mBAQrNgC,EAAiBC,cAAc/oD,MAAQ,GAEpC5E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,mBAAuBpI,IAAK,kBAAyBhZ,YAAa,EAAGpJ,MAAO,mBAAwBqJ,YAAa,UAAWpJ,OAAQ,mBAA2BsD,UACvMY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,SAAUkB,eAAgB,SAAU0d,cAAe,OAAS3e,SAAA,EAC5FJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC9tB,KAAM,kBAAuBD,KAAK,UAAUxD,MAAO,aAC3D3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBG,MAAO,UAAWie,WAAY,oBAAyBxf,SAAA,oEAIhIY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,mBAAuBpI,IAAK,kBAAyBhZ,YAAa,EAAGpJ,MAAO,mBAAwBqJ,YAAa,WAAa9F,SAAA,EAEtKJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,UAAYC,UAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,gBAAuBG,MAAO,WAAavB,SAAA,wBAGzFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOg0C,iBAAkB,mBAAsBpsD,aAAc,mBAAyBvG,SAAA,EACzHY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG2c,YAAa,mBAAyBtgB,SAAA,EAC1DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,gBACV2d,kBAAmB,EACnBtiB,MAAO,cACP8J,aAAc,GAChBvG,SAAA,kBAIFY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,gBACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYoU,eAGvJ//D,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,kBACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYqU,iBAGvJhgE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,gBACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYsU,gBAGvJjgE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,cACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYnB,cAGvJxqD,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,6BACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYuU,oBAGvJlgE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,gBAAuBrR,UAAW,mBAAyBlf,SAAA,qBACpIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBG,YAAYwU,4BAI3JngE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,SAAA,EAErBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,gBACV2d,kBAAmB,EACnBtiB,MAAO,cACP8J,aAAc,GAChBvG,SAAA,mBAIFY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,YACjGJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBmvB,WAAY,iBAAwBvwB,SAAA,GAAKihE,EAAY7U,iBAAiBI,mBAG3I5rD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEmsB,WAAY,mBAA0BrwB,SAAA,EAEjDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,gBACV2d,kBAAmB,EACnBtiB,MAAO,cACP8J,aAAc,EACdhF,MAAO,UACPyd,kBAAmB,WACrBhf,SAAA,iBAIFY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBG,MAAO,UAAWgvB,WAAY,iBAAwBvwB,SAAA,eACnHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,kBAAuBG,MAAO,QAASgvB,WAAY,iBAAwBvwB,SAAA,GAAKoqD,qBAiKlJxpD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACT0a,SAAU,WACVoI,KAAM,mBACNnI,IAAMoiD,EAAYrW,iBAAmBqW,EAAYtW,KAAyC,KAAhCsW,EAAYrW,iBAA8C,KAApBqW,EAAYtW,IAAc,mBAA0B,iBACpJluD,MAAO,mBACPoJ,YAAa,kBACbC,YAAa,UACbinB,UAAW,UACb/sB,SAAA,EACEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAYjB,UAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,OACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXxrB,MAAO,WACTvB,SAAA,mBAMVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAYjB,UAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,OACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXxrB,MAAO,WACTvB,SAAA,aAKVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAYjB,UAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,OACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXxrB,MAAO,WACTvB,SAAA,gBAKVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAYjB,UAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,OACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXxrB,MAAO,WACTvB,SAAA,iBAOdY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SAAA,WAMVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SAAA,IACGwJ,KAAKw6D,MAAMve,OAAOwb,EAAYxV,eAAetuB,WAAWvR,eAAe,QAAS,CAAE2mD,aAAa,YAMhH3xE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SAAA,eAKVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SAAA,IACGwJ,KAAKw6D,MAAMve,OAAOwb,EAAYxV,eAAeM,eAAengC,eAAe,QAAS,CAAE2mD,aAAa,YAMpH3xE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACNgb,cAAe,OACjB3e,SAAA,CACGihE,EAAYxV,eAAeE,sBAAgE,OAAxCsV,EAAYxV,eAAeC,WAA8D,OAAxCuV,EAAYxV,eAAeC,aAAuB9rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACxJ+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SACDihE,EAAYxV,eAAeE,oBAAmB,eAAkBsV,EAAYxV,eAAeG,eAAc,IAAM,MAGnHqV,EAAYxV,eAAeE,qBAA+D,OAAxCsV,EAAYxV,eAAeC,YAC1E9qD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SACDihE,EAAYxV,eAAeE,oBAAmB,eAAkBsV,EAAYxV,eAAeG,eAAc,IAAM,OAEpHhsD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SACuC,OAAxCihE,EAAYxV,eAAeC,UAAkB,eAAoB,UAK5EuV,EAAYxV,eAAeE,qBAA+D,OAAxCsV,EAAYxV,eAAeC,YAC3E9rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SACuC,OAAxCihE,EAAYxV,eAAeC,UAAkB,YAAiB,OAIrEuV,EAAYxV,eAAeE,sBAAgE,OAAxCsV,EAAYxV,eAAeC,WAA8D,OAAxCuV,EAAYxV,eAAeC,aAC7H9rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,mBAChBvG,SACD,UAQbY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,SAAA,CAEGihE,EAAYxV,eAAeE,sBAAgE,OAAxCsV,EAAYxV,eAAeC,WAA8D,OAAxCuV,EAAYxV,eAAeC,aAAuB9rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACxJ+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACDihE,EAAYxV,eAAeE,oBAAmB,IAAOlG,OAAOwb,EAAYxV,eAAeQ,iBAAiBrgC,eAAe,QAAS,CAAE2mD,aAAa,IAAQxsC,MAAM,KAAK,GAAO,MAG7Kk7B,EAAYxV,eAAeE,qBAA+D,OAAxCsV,EAAYxV,eAAeC,YAC1E9qD,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SAAA,CACDihE,EAAYxV,eAAeE,oBAAmB,IAAOlG,OAAOwb,EAAYxV,eAAeQ,iBAAiBrgC,eAAe,QAAS,CAAE2mD,aAAa,IAAQxsC,MAAM,KAAK,GAAO,KAC1KnmC,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,mBAChBvG,SACwC,QAAzCihE,EAAYxV,eAAeC,UAAmB,OAAUjG,OAAOwb,EAAYxV,eAAeO,gBAAgBpgC,eAAe,QAAS,CAAE2mD,aAAa,IAAQxsC,MAAM,KAAK,GAAO,UAMtLk7B,EAAYxV,eAAeE,qBAA+D,OAAxCsV,EAAYxV,eAAeC,YAC3E9rD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UAEb/sB,SACuC,OAAxCihE,EAAYxV,eAAeC,UAAkB,IAAOjG,OAAOwb,EAAYxV,eAAeO,gBAAgBpgC,eAAe,QAAS,CAAE2mD,aAAa,IAAQxsC,MAAM,KAAK,GAAO,aASxLnlC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACNgb,cAAe,OACjB3e,SACGihE,EAAYxV,eAAeS,gBAAmB+U,EAAYxV,eAAeS,eAAgB5oD,OAAS,IAAK1D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACzG+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdiZ,WAAY,mBACdxf,SACDihE,EAAYxV,eAAeS,gBAAmB+U,EAAYxV,eAAeS,eAAgB5oD,OAAS,EAAC,GAAM29D,EAAYxV,eAAeS,eAAenG,KAAK,OAAW,SAM5KnmD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACD+C,MAAO,CACH7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACDihE,EAAYxV,eAAeU,iBAAmB8U,EAAYxV,eAAeU,gBAAgB7oD,OAAS,EAC7F29D,EAAYxV,eAAeU,gBAAgB5wD,KAAI,SAAAi3E,GAAK,UAC9CjnD,WAAWinD,GAAO5mD,eAAe,QAAS,CAC1C1nB,MAAO,WACPqgE,SAAU,MACVwJ,sBAAuB,EACvBC,sBAAuB,IACxB1vD,MAAM,EAAE,IACbynC,KAAK,OACL,YAMlBnlD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAE5CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACNgb,cAAe,MACfjY,gBAAiB,mBAEnB1G,SACGihE,EAAYvW,SAAWuW,EAAYvW,QAAQztB,SACxCr8B,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXvN,WAAY,mBACdxf,SAAA,CACG,kBACDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYvW,QAAQztB,QAAO,QAEnCr9B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYvW,QAAQ7uB,cAAa,QAEzCj8B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYvW,QAAQtuB,cAAa,QAEzCx8B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMylD,OAAOwb,EAAYvW,QAAQ1uB,oBAAoBpQ,eAAe,SAAQ,WAE9EhsB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMylD,OAAOwb,EAAYvW,QAAQxuB,SAAStQ,eAAe,SAAQ,WAEnEhsB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYvW,QAAQjuB,KAAI,QAEhC78B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYvW,QAAQvuB,aAAY,WAK5Cv8B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAE,SAMfJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACNgb,cAAe,MACf1d,eAAgB,UAClBjB,SACGihE,EAAYxV,gBAAkBwV,EAAYxV,eAAeC,WAAauV,EAAYjW,UAAU/pB,MAAQggC,EAAYjW,WAC7GprD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACMihE,EAAYxV,eAAeC,UAAS,IAAIuV,EAAYjW,UAAU/pB,QAGtErhC,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAE,SAIfJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACNgb,cAAe,MACf1d,eAAgB,UAClBjB,SACGihE,EAAYvW,SAAWuW,EAAYvW,QAAQztB,SACxCr9B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,UACb/sB,SACG,OAGLJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAE,SAMfJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTye,eAAgB,kBAChB7c,YAAa,UACbnC,KAAM,EACN1C,eAAgB,SAChB0d,cAAe,OACjB3e,SACGihE,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,aACtDlrB,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdhF,MAAO,UACP+e,YAAa,mBACbzB,IAAK,kBACLmI,KAAM,kBACNpI,SAAU,YACZ5e,SAAA,CACG,SACDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,gBACZhqB,aAAc,kBACdwmB,UAAW,SACXxrB,MAAO,UACPie,WAAY,oBACdxf,SAAA,IACOihE,EAAYxV,eAAe3gC,oBAM5ClrB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAE,eAQvBY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYoI,KAAM,mBAAuBnI,IAAK,kBAAyBpiB,MAAO,oBAA0BuD,SAAA,EAC7HJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,0BAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,4GAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,kBACZhqB,aAAc,mBAChBvG,SACG,uDAGLJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,wCAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,+GAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,kBACZhqB,aAAc,mBAEhBvG,SACG,uGAGLJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,uCAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,uEAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBAEdvwB,SACG,0BAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBACdvwB,SACG,8BAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBAEdvwB,SACG,wBAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,mBAEdvwB,SACG,wBAELJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,IACZD,SAAU,kBACVmvB,WAAY,kBACZhqB,aAAc,mBAEhBvG,SACG,8BAIRstD,EAAiBC,cAAc/oD,MAAQ,EAAI,MACxC5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE0a,SAAU,WAAYqI,MAAO,mBAAuBpI,IAAK,kBAAyBpiB,MAAO,mBAA0BuD,SAAA,EAC9HY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTzH,MAAO,kBACPsD,WAAY,SACZ0hB,cAAe,mBACjBzhB,SAAA,EACEJ,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CACR7wB,OAAQlF,EAAQ,OAChBsF,MAAO,CACHzH,MAAO,kBACPC,OAAQ,mBACRsH,WAAY,UACZ+oB,UAAW,SACXxmB,aAAc,MAGtB3G,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6a,kBAAmB,kBACnBjZ,YAAa,QACbrJ,MAAO,WAEXmD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACszB,QAAM,EAACvwB,MAAO,CAChB7C,WAAY,IACZD,SAAU,mBACZpB,SACG,yBAITY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTzH,MAAO,kBACPsD,WAAY,SACZ0hB,cAAe,mBACjBzhB,SAAA,EAEEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6a,kBAAmB,kBACnBjZ,YAAa,QACbrJ,MAAO,WAEXmD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACszB,QAAM,EAACvwB,MAAO,CAChB7C,WAAY,IACZD,SAAU,mBACZpB,SACG,uCAmBrD,EAEMyyE,GAAoB,WACtB,IAAMnlB,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChEgN,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAC9EzmB,GAAkCh3C,EAAAA,EAAAA,WAAS,GAAMi3C,GAAA/2C,EAAAA,EAAAA,SAAA82C,EAAA,GAA1CpmB,EAASqmB,EAAA,GAAEka,EAAYla,EAAA,GAE9BG,GAA4Cp3C,EAAAA,EAAAA,WAAS,GAAMq3C,GAAAn3C,EAAAA,EAAAA,SAAAk3C,EAAA,GAApDy+B,EAAcx+B,EAAA,GAAEy+B,EAAiBz+B,EAAA,GACxCG,GAAwCx3C,EAAAA,EAAAA,WAAS,GAAMy3C,GAAAv3C,EAAAA,EAAAA,SAAAs3C,EAAA,GAAhDu+B,EAAYt+B,EAAA,GAAEu+B,EAAev+B,EAAA,GACpCG,GAAsC53C,EAAAA,EAAAA,WAAS,GAAM63C,GAAA33C,EAAAA,EAAAA,SAAA03C,EAAA,GAA9Cq+B,EAAWp+B,EAAA,GAAEq+B,EAAcr+B,EAAA,GAClCE,GAAwC/3C,EAAAA,EAAAA,WAAS,GAAMg4C,GAAA93C,EAAAA,EAAAA,SAAA63C,EAAA,GAAhDviC,EAAYwiC,EAAA,GAAEviC,EAAeuiC,EAAA,GAiB9Bm+B,EAAmB,WACrBL,GAAkB,EAEtB,EAGMM,EAAwB,eAAAC,GAAAtxE,EAAAA,EAAAA,UAAG,YAC7B,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCAExCle,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAEtF,UAGUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,mDACL4xD,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,mDACZC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAEjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,kBA/B6B,OAAAo3E,EAAAxwE,MAAA,KAAAC,UAAA,KAiCxBwwE,EAAuB,eAAAh5B,GAAAv4C,EAAAA,EAAAA,UAAG,YAC5B,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SAIF2J,GAHgBxJ,IAAOH,GAAUI,OAAO,gCACnBD,IAAOH,GAAUI,OAAO,iBAEpCjZ,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiB+/B,EAAiB2M,gBAC1E+R,GAAe/pE,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IACxEy/D,GAAgBl5D,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB+/B,EAAiB5C,QAAQnpB,SAEjGjvB,GAAgB,GAChB,UACUnQ,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpB,aAAe,IAEnB,UACUtiB,EAAAA,EAAAA,WAAU6pE,EAAc,CAC1B,aAAe,IAGnB,UACU7pE,EAAAA,EAAAA,WAAUg5D,EAAe,CAC3B,YAAe,WACf,WAAcb,EAAqB6N,WAE3C,CAAE,MAAO9lE,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,OACM4wE,IAEN3gE,GAAgB,GAChBhQ,QAAQe,IAAI,gCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACAC,QAAQe,IAAI,gCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CAGJ,IAAC,kBAzC4B,OAAA83C,EAAAz3C,MAAA,KAAAC,UAAA,KA2C7B,OACI/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QA5FY,WACpBotE,GAAkB,EAEtB,EA0FY1kB,UAvGI,WAAH,OAASD,GAAa,EAAM,EAwG7BE,WAvGK,WAAH,OAASF,GAAa,EAAO,EAwG/B9pD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgnB,EAAY,UAAY,UACzCjM,QAAS,IACXxhB,SAAA,EAEFJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,GAAIzD,MAAO,WACxD3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,IAAKme,WAAY,GAAKxf,SAAA,2BAGrEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQuyD,EACRjyD,QAAS,WACLuyD,GACJ,EAAEhzE,UAGFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,wBACdJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAC,4CAGZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,iBAAmBjB,SAAA,EAC7EJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAASytE,EACT/kB,UApIV,WAAH,OAAS8kB,GAAe,EAAM,EAqIjB7kB,WApIT,WAAH,OAAS6kB,GAAe,EAAO,EAqInB7uE,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBqsE,EAAc,UAAY,UAC3CnvE,KAAM,GACR3D,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,UAGvDJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,MAErB/D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS4tE,EACT/sC,WAAW,EACXvjB,QAAQ,QACRorC,UA5JT,WAAH,OAAS4kB,GAAgB,EAAM,EA6JnB3kB,WA5JR,WAAH,OAAS2kB,GAAgB,EAAO,EA6JrB9sE,SAAUsM,EACVnO,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBmsE,EAAe,UAAY,UAC5CjvE,KAAM,GACR3D,SAEAqS,GAA+EzS,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,WAA5F3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,sBAUpG,EAIMozE,GAAoB,WACtB,IAAM9lB,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChEgN,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAC9EtlB,GAAkCn4C,EAAAA,EAAAA,WAAS,GAAMo4C,GAAAl4C,EAAAA,EAAAA,SAAAi4C,EAAA,GAA1CvnB,EAASwnB,EAAA,GAAE+Y,EAAY/Y,EAAA,GAE9BG,GAA4Cv4C,EAAAA,EAAAA,WAAS,GAAMw4C,GAAAt4C,EAAAA,EAAAA,SAAAq4C,EAAA,GAApDs9B,EAAcr9B,EAAA,GAAEs9B,EAAiBt9B,EAAA,GACxCG,GAAwC34C,EAAAA,EAAAA,WAAS,GAAM44C,GAAA14C,EAAAA,EAAAA,SAAAy4C,EAAA,GAAhDo9B,EAAYn9B,EAAA,GAAEo9B,EAAep9B,EAAA,GACpCG,GAAsC/4C,EAAAA,EAAAA,WAAS,GAAMg5C,GAAA94C,EAAAA,EAAAA,SAAA64C,EAAA,GAA9Ck9B,EAAWj9B,EAAA,GAAEk9B,EAAcl9B,EAAA,GAClCG,GAAwCn5C,EAAAA,EAAAA,WAAS,GAAMo5C,GAAAl5C,EAAAA,EAAAA,SAAAi5C,EAAA,GAAhD3jC,EAAY4jC,EAAA,GAAE3jC,EAAe2jC,EAAA,GAiB9B+8B,EAAmB,WACrBL,GAAkB,EAEtB,EAGMU,EAAS,eAAAC,GAAA1xE,EAAAA,EAAAA,UAAG,UAAOoI,EAAIupE,EAASC,GAClC,WAC2B7hD,MAAM,qDAAsD,CAC/E8hD,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKvH,UAAU,CACjBriE,GAAAA,EACAupE,QAAAA,EACAC,YAAAA,OAIK5C,GACTtuE,QAAQe,IAAI,2BAEZf,QAAQD,MAAM,uBAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,CACJ,IAAC,gBAtBc0b,EAAA8kC,EAAAgxB,GAAA,OAAAP,EAAA5wE,MAAA,KAAAC,UAAA,KAwBT6wE,EAAW,kyCA2C8IlmB,EAAiB2M,cAAa,6iBAevL6Z,EAAwB,eAAAC,GAAAnyE,EAAAA,EAAAA,UAAG,YAC7B,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCAExCle,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAEtF,UAGUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,sCACL4xD,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,sCACZC,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAEjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,kBA/B6B,OAAAi4E,EAAArxE,MAAA,KAAAC,UAAA,KAiCxBqxE,EAAuB,eAAAC,GAAAryE,EAAAA,EAAAA,UAAG,YAC5B,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SAEFo5D,GADgBj5D,IAAOH,GAAUI,OAAO,gCACnBD,IAAOH,GAAUI,OAAO,iBAE7CuJ,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiB+/B,EAAiB2M,eAC1E+R,GAAe/pE,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IACxEy/D,GAAgBl5D,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB+/B,EAAiB5C,QAAQnpB,SAEjGjvB,GAAgB,GAChB,UACUnQ,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpB,aAAe,IAEnB,UACUtiB,EAAAA,EAAAA,WAAU6pE,EAAc,CAC1B,aAAe,UAEbqH,EAAU/Y,EAAqB6N,UAAU,0DAA2D7a,EAAiB2M,cAAa,MAAMia,EAAkB,IAAKV,GAErK,UACUrxE,EAAAA,EAAAA,WAAUg5D,EAAe,CAC3B,YAAe,UACf,WAAc,IAEtB,CAAE,MAAO94D,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,OACMyxE,IAENxhE,GAAgB,GAChBhQ,QAAQe,IAAI,gCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACAC,QAAQe,IAAI,gCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CAGJ,IAAC,kBA1C4B,OAAA4xE,EAAAvxE,MAAA,KAAAC,UAAA,KA4C7B,OACI/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAEIY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAhLY,WACpBotE,GAAkB,EAEtB,EA8KY1kB,UA3LI,WAAH,OAASD,GAAa,EAAM,EA4L7BE,WA3LK,WAAH,OAASF,GAAa,EAAO,EA4L/B9pD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgnB,EAAY,UAAY,WAC3CztB,SAAA,EAEFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASC,KAAM,GAAIzD,MAAO,aAC9C3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAW2C,MAAO,CAAE7C,WAAY,IAAKme,WAAY,GAAKxf,SAAA,2BAIvEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQuyD,EACRjyD,QAAS,WACLuyD,GACJ,EAAEhzE,UAGFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,wBACdJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAC,2CAGZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,iBAAmBjB,SAAA,EAC7EJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAASytE,EACT/kB,UAxNV,WAAH,OAAS8kB,GAAe,EAAM,EAyNjB7kB,WAxNT,WAAH,OAAS6kB,GAAe,EAAO,EAyNnB7uE,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBqsE,EAAc,UAAY,UAC3CnvE,KAAM,GACR3D,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,UAGvDJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,MAErB/D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAASyuE,EACT5tC,WAAW,EACXvjB,QAAQ,QACRorC,UAhPT,WAAH,OAAS4kB,GAAgB,EAAM,EAiPnB3kB,WAhPR,WAAH,OAAS2kB,GAAgB,EAAO,EAiPrB9sE,SAAUsM,EACVnO,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBmsE,EAAe,UAAY,UAC5CjvE,KAAM,GACR3D,SAEAqS,GAA+EzS,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,WAA5F3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,sBAWpG,EAEMm0E,GAAsB,WACxB,IAAA/9B,GAAkCv5C,EAAAA,EAAAA,WAAS,GAAMw5C,GAAAt5C,EAAAA,EAAAA,SAAAq5C,EAAA,GAA1C3oB,EAAS4oB,EAAA,GAAE2X,EAAY3X,EAAA,GAC9BG,GAAgD35C,EAAAA,EAAAA,WAAS,GAAM45C,GAAA15C,EAAAA,EAAAA,SAAAy5C,EAAA,GAAxDg1B,EAAgB/0B,EAAA,GAAE29B,EAAmB39B,EAAA,GAC5CG,GAA8C/5C,EAAAA,EAAAA,WAAS,GAAMg6C,GAAA95C,EAAAA,EAAAA,SAAA65C,EAAA,GAAtDwa,EAAeva,EAAA,GAAEwa,EAAkBxa,EAAA,GAC1CG,GAA8Cn6C,EAAAA,EAAAA,UAAS,IAAGo6C,GAAAl6C,EAAAA,EAAAA,SAAAi6C,EAAA,GAAnDkqB,EAAejqB,EAAA,GAAEkqB,EAAkBlqB,EAAA,GAC1CG,GAAgDv6C,EAAAA,EAAAA,WAAS,GAAMw6C,GAAAt6C,EAAAA,EAAAA,SAAAq6C,EAAA,GAAxDmxB,EAAgBlxB,EAAA,GAAEmxB,EAAmBnxB,EAAA,GAItChtB,GAAcriB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoiB,WAAW,IACtDijC,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAatEtI,GAAwCnoD,EAAAA,EAAAA,WAAS,GAAMooD,GAAAloD,EAAAA,EAAAA,SAAAioD,EAAA,GAAhD50C,EAAY60C,EAAA,GAAE50C,EAAe40C,EAAA,GAQ9B+tB,IAPchrE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,KAC3C74D,EAAAA,EAAAA,eAMQ,WACrBiI,GAAgB,EACpB,GAEMgkE,EAAa,eAAAC,GAAA1yE,EAAAA,EAAAA,UAAG,YAElB,UACU2yE,IACNvB,GACJ,CAAE,MAAO3wE,GAET,CAEJ,IAAC,kBATkB,OAAAiyE,EAAA5xE,MAAA,KAAAC,UAAA,KAYb6xE,EAAoB,eAAA5xB,GAAAhhD,EAAAA,EAAAA,UAAG,YACzB,IACQkZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,gCASxCle,GAROie,IAAOH,GAAUI,OAAO,QACvBD,IAAOH,GAAUI,OAAO,MACjBD,IAAOH,GAAUI,OAAO,SAChCD,IAAOH,GAAUI,OAAO,cACzBD,IAAOH,GAAUI,OAAO,MACvBD,IAAOH,GAAUI,OAAO,SACND,IAAOH,GAAUI,OAAO,YAEzC6S,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,IAEtF,UAGUyd,EAAAA,EAAAA,SAAOxE,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,YAAa,CAC1FiJ,KAAK,qCAAqCu8D,EACpC,IAAI5J,KAAK4J,GAAiBrD,wBAAmBhgC,EAAW,CACtD1iB,KAAM,UACNC,MAAO,OACPG,IAAK,YAEP,gBAENg7C,OAAQv5D,EACR6e,UAAWb,EACXuvC,GAAIA,GACJC,UAAWA,WAKTroD,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,IAAK,CAC1E+6D,kBAAmBz5D,EACnB05D,YAAY,qCAAqCwK,EAC3C,IAAI5J,KAAK4J,GAAiBrD,wBAAmBhgC,EAAW,CACtD1iB,KAAM,UACNC,MAAO,OACPG,IAAK,YAEP,gBAENo7C,gBAAiB37C,EACjB47C,cAAc,EACdC,MAAM,EACNC,OAAQ,CAAC95D,IAGjB,CAAE,MAAOlB,GACLwG,QAAQD,MAAM,0BAA2BvG,EAC7C,CACJ,IAAC,kBArDyB,OAAA8mD,EAAAlgD,MAAA,KAAAC,UAAA,KAuDpB4xE,EAAoB,eAAA1rB,GAAAjnD,EAAAA,EAAAA,UAAG,YACzB,IAAM6iB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,gBAAiB+/B,EAAiB2M,eAChFuO,GAAoB,GACpB,UACUrmE,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpB,2BAA4By8C,UAE1BsT,IACNhM,GAAoB,GACpBlmE,QAAQe,IAAI,gCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CACJ,IAAC,kBAbyB,OAAAwmD,EAAAnmD,MAAA,KAAAC,UAAA,KA4F1B,OAvBApD,EAAAA,EAAAA,YAAU,WAEN,GAAI8qB,EAAa,CACb,IAAM/O,EAAO,IAAIg8C,KAAKjtC,GAGhBq3C,EAAYpmD,EAAKqiD,SAEL,IAAd+D,EACApmD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GACT,IAAdmE,EACPpmD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GAE9BjiD,EAAKoiD,QAAQpiD,EAAKiiD,UAAY,GAIlC,IAAMoE,EAAermD,EAAKsmD,cAAc77B,MAAM,KAAK,GACnDo7B,EAAmBQ,EACvB,CAEJ,GAAG,KAGC/gE,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QA5KY,WACpB8K,GAAgB,EACpB,EA2KY49C,UA3LI,WAAH,OAASD,GAAa,EAAM,EA4L7BE,WA3LK,WAAH,OAASF,GAAa,EAAO,EA4L/B9pD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgnB,EAAY,UAAY,WAC3CztB,SAAA,EAEFJ,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,kBAAkBC,KAAM,GAAIzD,MAAO,WACrD3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,IAAKme,WAAY,GAAKxf,SAAA,wBAGrEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ/P,EACRqQ,QAASuyD,EACT/pD,YAAU,EAAAjpB,UAEVY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAE,qBACfY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO0C,OAAQ,GAAKrhB,SAAA,EACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO4E,WAAY,IAAKggB,OAAQ,GAAKrhB,SAAC,eAC5DJ,EAAAA,GAAAA,MA7GE,SAAHwpD,GAAwD,IAAlD3gC,EAAY2gC,EAAZ3gC,aAAcC,EAAe0gC,EAAf1gC,gBAEnCogC,GAF+DM,EAAX/+B,aAEIxtB,EAAAA,EAAAA,WAAS,IAAMksD,GAAAhsD,EAAAA,EAAAA,SAAA+rD,EAAA,GAAhEngC,EAAoBogC,EAAA,GAAEngC,EAAuBmgC,EAAA,GAM9CjgC,EAA2B,WAC7BF,GAAwB,EAC5B,EAGA,OAEIhoB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACpB,MAAO,CAAEzH,MAAO,MAAOC,OAAQ,GAAI2kB,OAAQ,EAAGG,QAAS,EAAGlb,aAAc,EAAGT,YAAa,EAAGC,YAAa,UAAW4/C,aAAc,QACxIngD,QAboB,WAC5BqjB,GAAwB,EAC5B,EAW6C5oB,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,GAAK3D,SAAGyoB,OAGjC7nB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAK,CAACjC,OAAQwI,EAAsBlI,QAASqI,EAA0BG,YAAU,EAAAjpB,SAAA,EAC9EJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAAA5gB,UACVJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,OAAQiH,KAAM,GAAI3D,UACrCJ,EAAAA,GAAAA,KAACspB,EAAAA,SAAQ,CACLC,YAAYjR,EAAAA,EAAAA,cAAY,SAAAqD,GACpBmN,EAAgBnN,EAAI6N,YACK7N,EAAI6N,WAC7BqhC,GAAsB2B,iBAAiBC,QAAU9wC,EAAI6N,WACrDN,GACJ,GAAG,IACHO,aAAWjnB,EAAAA,EAAAA,SAAA,GACNqmB,EAAe,CAAEa,UAAU,EAAMC,mBAAmB,EAAMC,iBAAkB,YAEjFC,YAAa,SAACxJ,GAAS,MACL,SAAdA,GAAuBrgB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,iBAAiBxD,MAAM,aAAe3B,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,WAAY,EAE/ImoB,mBAAmB,EACnBC,YAAalB,EAEbmB,cAAY,aAWxC,GAyDkC,CAACS,YAAaA,EAAa5B,aAAcy4C,EAAiBx4C,gBAAiBy4C,QAE7FvhE,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAO1d,eAAgB,iBAAmBjB,SAAA,EAC7EJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAASytE,EACT/kB,UAtNN,WAAH,OAASoD,GAAmB,EAAM,EAuNzBnD,WAtNL,WAAH,OAASmD,GAAmB,EAAO,EAuN3BntD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiB2qD,EAAkB,UAAY,UAC/CztD,KAAM,GACR3D,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,cAGvDJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,MAErB/D,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAAS8uE,EACTjuC,WAAW,EACXvjB,QAAQ,QACRorC,UA9OL,WAAH,OAASmmB,GAAoB,EAAM,EA+O3BlmB,WA9OJ,WAAH,OAASkmB,GAAoB,EAAO,EA+O7BruE,SAAUwiE,EACVrkE,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjB3G,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiB+kE,EAAmB,UAAY,UAChD7nE,KAAM,GACR3D,SAEAuoE,GAAuF3oE,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,KAAMzD,MAAO,WAAhG3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,0BAaxG,EAEMy0E,GAAmB,WACrB,IAAMC,GAA0B1sE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMysE,uBAAuB,IAC9E3sE,GAAWK,EAAAA,EAAAA,eAMjB,OAEIxI,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQu0D,EACRj0D,QAAS,WANb1Y,GAASqiE,EAAAA,EAAAA,6BAA2B,GAQhC,EACAplE,KAAM,KACNikB,YAAU,EAAAjpB,SAET00E,IACG9zE,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAElBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAE6a,kBAAmB,EAAGjZ,YAAa,WAAa9F,SAAGqqD,KAEzC,GAAhCC,IAAqE,GAAhCA,KAClC1qD,EAAAA,GAAAA,KAAC2rE,GAAgC,IAGJ,GAAhCjhB,KACG1qD,EAAAA,GAAAA,KAACwoE,GAA0B,QAMnD,EAEMuM,GAAoB,SAAHxvB,GAA+E,IAAzE/3B,EAAK+3B,EAAL/3B,MAAOwnD,EAAWzvB,EAAXyvB,YAAaC,EAAgB1vB,EAAhB0vB,iBAAkBC,EAAY3vB,EAAZ2vB,aAAcC,EAAa5vB,EAAb4vB,cAE7E/sB,GAAkCnrD,EAAAA,EAAAA,WAAS,GAAMorD,GAAAlrD,EAAAA,EAAAA,SAAAirD,EAAA,GAA1Cv6B,EAASw6B,EAAA,GAAE+F,EAAY/F,EAAA,GAMxBlgD,IADcC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,KAC3C74D,EAAAA,EAAAA,gBAUjB,OACIxI,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACN8gC,WAAW,EACXvjB,QAAQ,QACRtd,QAZuB,WAC/BwC,GAASqiE,EAAAA,EAAAA,6BAA2B,IACpC/f,GAAwBj9B,EACxBk9B,GAA+BuqB,CACnC,EASY5mB,UAnBI,WAAH,OAASD,GAAa,EAAM,EAoB7BE,WAnBK,WAAH,OAASF,GAAa,EAAO,EAoB/B9pD,MAAO,CACHgb,UAAW,EACXxY,gBAAiB,EACjBN,kBAAmB,EACnBuY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,SAChBqF,aAAc,EACdG,gBAAiBgnB,EAAYqnD,EAAeC,GAC9C/0E,SAAA,EAEFJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAKnF,EAAAA,MAAAA,CAAQ,eAAoCg2E,EAAW,WAC5Dv1D,SAAUD,EAAAA,QAAUC,SAASsT,QAEjCzuB,MAAO,CACHwpD,UAAW,yBACXjxD,MAAO,GACPC,OAAQ,GACRqwB,UAAW,UAEf/oB,WAAYob,EAAAA,QAAUpb,WAAWub,WAErC3f,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAAS2C,MAAO,CAAE7C,WAAY,IAAKme,WAAY,GAAKxf,SAAEotB,QAMnF,EAGM4nD,GAAkB,SAAHC,GAA0E,IAApEC,EAAqBD,EAArBC,sBAAuB7Y,EAAe4Y,EAAf5Y,gBAAiB/B,EAAoB2a,EAApB3a,qBAE/D,OACIjqB,MAAM8kC,QAAQ7a,EAAqB8a,eAAiB9a,EAAqB8a,aAAa9xE,OAAS,EAC3F4xE,EAAsB35E,KAAI,SAAC85E,EAAa7nD,GACpC,IAAA46B,GAAkCvrD,EAAAA,EAAAA,WAAS,GAAMwrD,GAAAtrD,EAAAA,EAAAA,SAAAqrD,EAAA,GAA1C36B,EAAS46B,EAAA,GAAE2F,EAAY3F,EAAA,GAE9B,OACIznD,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CAENC,QAAS,kBAAM82D,EAAgB,QAAQgZ,EAAYC,QAAO,IAAIhb,EAAqB6N,UAAY,EAC/FoN,aAAc,kBAAMvnB,GAAa,EAAK,EACtCwnB,aAAc,kBAAMxnB,GAAa,EAAM,EACvC9pD,MAAO,CACHqC,aAAc,GACdE,gBAAiBgnB,EAAY,UAAY,UACzCnnB,aAAc,GACdo8B,YAAa,OACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,EACXthB,QAAS,EACTzC,kBAAmB,EACnBC,kBAAmB,OACnBL,cAAe,MACf5e,WAAY,UACdC,SAAA,EAEFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,UACDJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAKsxE,EAAYpe,SAAU53C,SAAUD,EAAAA,QAAUC,SAASsT,QAClEzuB,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdymB,UAAW,SACX1L,OAAQ,IAEZrd,WAAYob,EAAAA,QAAUpb,WAAWub,aAGzC3e,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EACDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,UAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,WAAa4pE,YAAY,EAAMnrE,SAChDq1E,EAAYp4C,aAGrBr9B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,UAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAAU4pE,YAAY,EAAMnrE,SAAEq1E,EAAYz5C,yBAxCnEpO,EA6CjB,KAEA5tB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ0rB,UAAW,UAAY0H,QAAM,EAAAz0B,SAAC,sBAG7E,EAEMy1E,GAA0B,WAE5B,IAAAltB,GAAkE1rD,EAAAA,EAAAA,WAAS,GAAM2rD,GAAAzrD,EAAAA,EAAAA,SAAAwrD,EAAA,GAA1EmtB,EAAyBltB,EAAA,GAAEmtB,EAA4BntB,EAAA,GACxD8R,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAG9EjR,IADiB/pD,EAAAA,GAAAA,gBACyCzC,EAAAA,EAAAA,UAASy9D,EAAqB8a,aAAe9a,EAAqB8a,aAAa92D,MAAM,EAAG,GAAK,OAAKgrC,GAAAvsD,EAAAA,EAAAA,SAAAssD,EAAA,GAArJ6rB,EAAqB5rB,EAAA,GAAEssB,EAAwBtsB,EAAA,GACtDlE,GAAsCvoD,EAAAA,EAAAA,WAAS,GAAMwoD,GAAAtoD,EAAAA,EAAAA,SAAAqoD,EAAA,GAA9CywB,EAAWxwB,EAAA,GAAEywB,EAAczwB,EAAA,GAClC0wB,GAAkCl5E,EAAAA,EAAAA,WAAS,GAAMm5E,GAAAj5E,EAAAA,EAAAA,SAAAg5E,EAAA,GAAjCC,EAAA,GAAcA,EAAA,GA+C9B,OAEIp1E,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAGIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QA9BuB,WACtCqwE,EAAyBtb,EAAqB8a,aAAe9a,EAAqB8a,aAAa92D,MAAM,EAAG,GAAK,MAC7Gq3D,GAA6B,EAEjC,EA0B8D31E,UAClDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAaskE,WAAS,EAAAlrE,SAAA,yBAKpFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQu1D,EAA2Bj1D,QA9BP,WACvCk1D,GAA6B,EACjC,EA4B+F1sD,YAAU,EAAAjpB,UAC7FY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAC1c,MAAO,CAAEuC,gBAAiB,QAASH,aAAc,IAAKtG,SAAA,EACjEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAEuC,gBAAiB,QAASG,UAAW,SAAUxF,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASvB,SAAC,0BAGzHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPY,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CACPhd,MAAO,CAAEP,KAAM,EAAGyC,kBAAmB,GAAI4qB,UAAW,KACpDilD,SAAU,SAAAC,IAnCV,SAAHC,GAA2D,IAArDC,EAAiBD,EAAjBC,kBAAmBC,EAAaF,EAAbE,cAAeC,EAAWH,EAAXG,YACzD,OAAOF,EAAkB15E,OAAS25E,EAAcx6B,GAAKy6B,EAAY55E,OAAS,EAC9E,EAkCgC65E,CADgBL,EAAXte,cA5DZ,WACrB,IAAIie,EAAJ,CAEAC,GAAe,GACf,IAAMU,EAAYlc,EAAqB8a,aAAa92D,MAChD42D,EAAsB5xE,OACtB4xE,EAAsB5xE,OAAS,GAGnCT,YAAW,WACP+yE,EAAyB,GAADlpD,QAAAC,EAAAA,EAAAA,SAAKuoD,IAAqBvoD,EAAAA,EAAAA,SAAK6pD,KACvDV,GAAe,EACnB,GAAG,IAXoB,CAY3B,CAiDgCW,EAER,EACAC,oBAAqB,IAAI12E,SAAA,EAGzBJ,EAAAA,GAAAA,KAACo1E,GAAe,CACZE,sBAAuBA,EACvB7Y,gBAzCJ,SAAC3B,GACrB,IAAM6B,EAAkB3P,GAAY8N,GAG9B7wD,EAAI,sBAFY4yD,mBAAmBF,GAKnCK,EADUrqC,OAAOsqC,SAASC,OAASvqC,OAAOsqC,SAASE,SAC9B,IAAIlzD,EAC/B0oB,OAAOyqC,KAAKJ,EAAU,SAC1B,EAiC4BtC,qBAAsBA,KAG1B16D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,IAAMsD,SACxB61E,IAAej2E,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,0BAazE,EAIMo1E,GAAsB,WAExB,IAAAC,GAA0D/5E,EAAAA,EAAAA,WAAS,GAAMg6E,GAAA95E,EAAAA,EAAAA,SAAA65E,EAAA,GAAlEE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GAChDvc,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAExE+Q,EAAiB/Q,EAAqB6P,iBACtCx9C,EAAAA,EAAAA,SAAI2tC,EAAqB6P,iBAAiB35C,MAAK,SAAC2C,EAAGG,GACjD,IAAMg4C,EAAQ,IAAIhU,KAAKnkC,EAAE7X,MAEzB,OADc,IAAIg8C,KAAKhkC,EAAEhY,MACVgwD,CACnB,IACE,GAEN0L,GAAkDn6E,EAAAA,EAAAA,UAASwuE,EAAe/sD,MAAM,EAAG,IAAG24D,GAAAl6E,EAAAA,EAAAA,SAAAi6E,EAAA,GAA/EE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAAsCv6E,EAAAA,EAAAA,WAAS,GAAMw6E,GAAAt6E,EAAAA,EAAAA,SAAAq6E,EAAA,GAA9CvB,EAAWwB,EAAA,GAAEvB,EAAcuB,EAAA,GAgClC,SAAStZ,EAAW30C,GAEhB,IAAMihD,EAAoBjhD,EAAWnf,QAAQ,OAAQ,KAC/CqR,EAAO,IAAIg8C,KAAK+S,GAEtB,GAAI5sC,MAAMniB,EAAKkiD,WAGX,OADAl7D,QAAQD,MAAM,gBAAiB+mB,GACxB,eAGX,IACMjO,EAAOG,EAAK+hD,cACZjiD,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExEE,EAAKgiD,YACpB/hD,EAAMD,EAAKiiD,UAAU/gC,WAAW8tC,SAAS,EAAG,KAE9CC,EAAQjvD,EAAKkvD,WAEXC,EAAOF,GAAS,GAAK,KAAO,KAKlC,OAAUpvD,EAAI,IAAIC,EAAK,IAAIG,EAAG,QAF9BgvD,GADAA,GAAgB,KACQ,IAEkB,IAN1BjvD,EAAKovD,aAAaluC,WAAW8tC,SAAS,EAAG,KAMDG,CAC5D,CAMA,OAEI7pE,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAhDmB,WAClC4xE,EAAqB9L,EAAe/sD,MAAM,EAAG,IAC7Cy4D,GAAyB,EAE7B,EA4C0D/2E,UAC9CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAaskE,WAAS,EAAAlrE,SAAA,6BAKpFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ22D,EAAuBr2D,QAhDP,WACnCs2D,GAAyB,EAC7B,EA8CuF9tD,YAAU,EAAAjpB,UACrFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAC1c,MAAO,CAAEuC,gBAAiB,QAASH,aAAc,IAAKtG,SAAA,EACjEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAEuC,gBAAiB,QAASG,UAAW,SAAUxF,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASvB,SAAC,qBAGzHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPY,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CACPhd,MAAO,CAAEP,KAAM,EAAGyC,kBAAmB,GAAI4qB,UAAW,KACpDilD,SAAU,SAAAqB,IAtBV,SAAHC,GAA2D,IAArDnB,EAAiBmB,EAAjBnB,kBAAmBC,EAAakB,EAAblB,cAAeC,EAAWiB,EAAXjB,YACzD,OAAOF,EAAkB15E,OAAS25E,EAAcx6B,GAAKy6B,EAAY55E,OAAS,EAC9E,EAqBgC65E,CADgBe,EAAX1f,cA9EZ,WACrB,IAAIie,EAAJ,CAEAC,GAAe,GACf,IAAMU,EAAYnL,EAAe/sD,MAC7B44D,EAAkB5zE,OAClB4zE,EAAkB5zE,OAAS,GAG/BT,YAAW,WACPs0E,EAAqB,GAADzqD,QAAAC,EAAAA,EAAAA,SAAKuqD,IAAiBvqD,EAAAA,EAAAA,SAAK6pD,KAC/CV,GAAe,EACnB,GAAG,IAXoB,CAY3B,CAmEgCW,EAER,EACAC,oBAAqB,IAAI12E,SAAA,CAGrBqwC,MAAM8kC,QAAQ9J,IAAmBA,EAAe/nE,OAAS,EACrD4zE,EAAkB37E,KAAI,SAACovE,EAASn9C,GAAK,OACjC5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAatpD,MAAO,CACrBqC,aAAc,GACdE,gBAAiB,UACjBH,aAAc,GACdo8B,YAAa,OACbC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAClCkmC,cAAe,GACfC,aAAc,EACdC,UAAW,EACXthB,QAAS,GACTzC,kBAAmB,EACnBC,kBAAmB,QACrBhf,SAAA,EAEEY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,YACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASvB,SAC1B+9D,EAAWsN,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOlS,YAItE1a,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,aACxDY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAOkkD,OAAO4lB,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOhpB,OAAOonB,iBAAiByR,WAAW,KAAO,UAAY,WAAYr9B,SAAA,CAAC,IAC5IylD,OAAO4lB,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOhpB,OAAOonB,wBAI1EhrB,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,oBACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASvB,SAAEqrE,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOm8C,kBAGvF/oE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIC,WAAY,OAAQE,MAAO,QAASgF,aAAc,GAAIvG,SAAA,EAC/EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQE,MAAO,WAAavB,SAAC,wBACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASvB,SAAEqrE,EAAeA,EAAe/nE,OAAS,EAAIkqB,GAAOk8C,kBAnChFl8C,EAsCJ,KAGX5tB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQ0rB,UAAW,UAAa0H,QAAM,EAAAz0B,SAAC,wBAE1EJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,IAAMsD,SACxB61E,IAAej2E,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,0BAazE,EAEMi2E,GAAuB,WACzB,IAAAC,GAAwD56E,EAAAA,EAAAA,WAAS,GAAM66E,GAAA36E,EAAAA,EAAAA,SAAA06E,EAAA,GAAhEE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAC9Cpd,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IAWxEud,EAAoBvd,EAAqB6P,gBACzC7P,EAAqB6P,gBAAgB1+C,QAAO,SAACq4C,EAAK6G,GAChD,IAAMnmE,EAAQihD,OAAOklB,EAAQnmE,OAC7B,OAAOs/D,GAAOrmC,MAAMj5B,GAAS,EAAIA,EACrC,GAAG,GACD,EAGN,OACI5D,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNC,QAnBY,WACpBqyE,GAAwB,EAC5B,EAkBY1zE,MAAO,CAAEzH,MAAO,eAAiBuD,UAEjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAQ6pE,WAAS,EAAAlrE,SAAK+pD,GAAuB,IAAIC,QAGhFpqD,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQw3D,EACRl3D,QAvBa,WACrBm3D,GAAwB,EAC5B,EAsBY5yE,KAAM,KAAKhF,UAGXJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAACk3D,WAAY,QAAQ93E,UAE/BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAA,EAEPJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHP,KAAM,EACN5D,WAAY,UACdC,UAEFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACToC,aAAc,GACdG,gBAAiB,UACjBhK,MAAO,IACPsD,WAAY,SACZ0hB,cAAe,IAEjBzhB,SAAA,EAEEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,WAAc4pE,YAAU,EAAAnrE,SACxE+pD,GAAuB,IAAIC,MAGnCpqD,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,UAAW9E,MAAO,MAAOmK,UAAW,UAAaukE,YAAU,EAAAnrE,SACvFs6D,EAAqB2N,QAAO,KAAK3N,EAAqB0N,WAAU,KAAK1N,EAAqBgN,KAAI,KAAKhN,EAAqBrP,WAGhIrqD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHP,KAAM,EACNgb,cAAe,MACf0R,WAAY,GACZpvB,eAAgB,UAClBjB,SAAA,EAGFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAYukE,YAAU,EAAAnrE,SAAA,GACxEs6D,EAAqB4N,mBAK7BtoE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTxH,OAAQ,OACRD,MAAO,EACPgK,gBAAiB,UACjBksD,iBAAkB,OAGtB/yD,EAAAA,GAAAA,KAACm4E,EAAAA,QAAS,CACNC,aAAa,EACbC,UAAW,CAAE12E,MAAO,UAAWH,SAAU,IAAKpB,UAG9CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,UAAYukE,YAAU,EAAAnrE,SAC3Cs6D,EAAqB6N,uBAW1CvnE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHzH,MAAO,IACPwE,eAAgB,SAChBlB,WAAY,SACZmf,UAAW,GACXP,cAAe,MACfoO,UAAW,UACb/sB,SAAA,EAEFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,UAAYC,SAAA,EAE5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAaukE,YAAU,EAAAnrE,SAAA,IAC3F63E,EAAmBjsD,eAAe,YAG5ChsB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAY5G,SAAA,mBAI1FJ,EAAAA,GAAAA,KAAC+2E,GAAmB,QAKxB/1E,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,UAAYC,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAaukE,YAAU,EAAAnrE,SAAA,KAC5Fs6D,EAAqB0P,YAAcvkB,OAAO6U,EAAqB0P,aAAap+C,eAAe,SAAW,MAE/GhsB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAY5G,SAAA,iBAI1FJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,cAAeqF,UAAW,UAAaskE,WAAS,EAACC,YAAY,EAAMnrE,SAAA,cAO3GY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,UAAYC,SAAA,EAC5CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAaukE,YAAU,EAAAnrE,SAAA,IAC7Fs6D,EAAqB8a,aAAgB9a,EAAqB8a,aAAc9xE,OAAS,MAEzF1D,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,OAAQD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,UAAY5G,SAAA,kBAI1FJ,EAAAA,GAAAA,KAAC61E,GAAuB,mBAkBxD,EAEMyC,GAAoB,WAEtB,IAAMC,GAAmBnwE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkwE,gBAAgB,IAChEC,GAAsBpwE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmwE,mBAAmB,IACtE9d,GAAuBtyD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqyD,oBAAoB,IACxEjH,GAAerrD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMorD,YAAY,IAExD/F,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE2T,GAAcj5D,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg5D,WAAW,IACtDoX,GAAcrwE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMowE,WAAW,IACtDtwE,GAAWK,EAAAA,EAAAA,eACjBkwE,GAAsCz7E,EAAAA,EAAAA,UAAS,GAAE07E,GAAAx7E,EAAAA,EAAAA,SAAAu7E,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAG5BnU,GAFsB9W,EAAiBnwB,UAAYmwB,EAAiBj0B,UAAYi0B,EAAiB+W,IAAM/W,EAAiBvB,cAEjGuB,EAAiB+W,GAAK/W,EAAiB+W,GAC/D/W,EAAiB5C,SAAW4C,EAAiB5C,QAAQ7tB,qBAClDywB,EAAiB5C,QAAQ7tB,qBAAuB,GACpD4oB,OAAO6H,EAAiBvB,eAEtBmjB,GAAyB5hB,EAAiBnwB,SAAWmwB,EAAiBnwB,UACvEmwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAClDmwB,EAAiB5C,QAAQvtB,SAAW,IACvCmwB,EAAiBj0B,SAAWi0B,EAAiBj0B,SACzCi0B,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SACpDi0B,EAAiBiX,SAASlrC,SAAW,IAAO+qC,EAElDE,EAAmBhX,EAAiBnwB,SAAWmwB,EAAiBnwB,UACjEmwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAClDmwB,EAAiB5C,QAAQvtB,SAAW,IACvCmwB,EAAiBj0B,SAAWi0B,EAAiBj0B,SACzCi0B,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SACpDi0B,EAAiBiX,SAASlrC,SAAW,GAE3C4D,EAAUqwB,EAAiB5C,SAAW4C,EAAiB5C,QAAQztB,QAAUqwB,EAAiB5C,QAAQztB,QAAWqwB,EAAiB2L,SAAW3L,EAAiB2L,QAAQh8B,QAAUqwB,EAAiB2L,QAAQh8B,QAAU,GAE/My7C,EAAkBtU,EAAqB9W,EAAiBiX,SAASlrC,SAUvE,OAPA95B,EAAAA,EAAAA,YAAU,WAENk5E,EAAeD,EAAc,GAC7BzwE,GAASwzD,EAAAA,EAAAA,2BAAyB,GAEtC,GAAG,CAAClI,KAIAzyD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EACNopB,UAAW,aACXpO,cAAe,OACjB3e,SAAA,CAGGq4E,GACGz4E,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAKs0E,EAAah5D,SAAUD,EAAAA,QAAUC,SAASsT,QACzDzuB,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdymB,UAAW,SACX1L,OAAQ,IAEZrd,WAAYob,EAAAA,QAAUpb,WAAWub,WAGrC3f,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACHzH,MAAO,GACPC,OAAQ,GACR4J,aAAc,GACdymB,UAAW,SACXtmB,gBAAiB,UACjB6Z,YAAa,OAKzB1f,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6oB,UAAW,SAAU4rD,aAAc,IAAM34E,SAAA,EACpDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKE,MAAO,WAAavB,SAAEi9B,KAEtDr9B,EAAAA,GAAAA,KAAC43E,GAAoB,KAErB53E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,EAAGje,MAAO,WAAavB,SACtGstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQ9uB,gBAAkB0xB,EAAiB5C,QAAQ9uB,gBAAkB,mBAK3Hh8B,EAAAA,GAAAA,KAACytD,GAAc,CAAC7kD,KAAMmlD,SAM1B/sD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6oB,UAAW,SAAU9rB,eAAgB,SAAUke,YAAa,IAAMnf,SAAA,EAE7EJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,GAAKxf,SACpFstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQ7uB,cAAgByxB,EAAiB5C,QAAQ7uB,cAAgB,mBAIvHj8B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,GAAKxf,SACpFstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQ5uB,UAAYwxB,EAAiB5C,QAAQ5uB,UAAY,sBAI/Gl8B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,GAAKxf,SAAA,CACpFstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQxuB,QAChDupB,OAAO6H,EAAiB5C,QAAQxuB,SAAStQ,eAAe,SACxD,cAAc,YAI5BhsB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,GAAKxf,SACpFstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQjuB,KAAO6wB,EAAiB5C,QAAQjuB,KAAO,gBAIrG78B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIivB,WAAY,EAAG7Q,WAAY,GAAKxf,SACpFstD,EAAiB5C,SAAW4C,EAAiB5C,QAAQvuB,aAAemxB,EAAiB5C,QAAQvuB,aAAe,2BAMzHv7B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6oB,UAAW,SAAU9rB,eAAgB,SAAUke,YAAa,IAAMnf,SAAA,EAE7EY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,SAAA,EACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,IAAOohB,MAAI,EAAAxiB,SAAC,mBACrCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE9C,SAAU,GAAIG,MAAO,UAAWqF,UAAW,SAAY4b,MAAI,EAAAxiB,SAAA,IAC5EylD,OAAOypB,GAAuBtjD,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,OAElHptE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAW8uB,WAAY,EAAG7Q,WAAY,GAAKxf,SAAA,CAAC,IACvG,OAAKylD,OACFypB,GACE5hB,GAAoBA,EAAiBj0B,SAAYosB,OAAO6H,EAAiBj0B,UACtEi0B,GAAoBA,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SAAYi0B,EAAiBiX,SAASlrC,SAC9G,IACVzN,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,IAAO,WAI5FptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,SAAA,EACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,iBACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKE,MAAO,UAAWqF,UAAW,SAAW5G,SAAA,GAC3EylD,OAAO6e,GAAiB14C,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,OAE/IptE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAW8uB,WAAY,EAAG7Q,WAAY,GAAKxf,SAAA,CAAC,IACvG,IAAKstD,EAAiBnwB,SAAWmwB,EAAiBnwB,SAAWsoB,OAAO6H,EAAiB5C,SAAW4C,EAAiB5C,QAAQvtB,SAAWmwB,EAAiB5C,QAAQvtB,SAAW,IAAIvR,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAAO,WAI3SptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,SAAA,EACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,KAAOrB,SAAC,qBACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKE,MAAO,UAAWqF,UAAW,SAAW5G,SAAA,GAC3EylD,OAAO2e,GAAoBx4C,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,OAElJptE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAW8uB,WAAY,EAAG7Q,WAAY,GAAKxf,SAAA,CAAC,IACvG,IAAKstD,EAAiBvB,aAAe2sB,EAAkBjzB,OAAO6H,EAAiB5C,SAAW4C,EAAiB5C,QAAQqB,aAAe2sB,EAAkB,IAAI9sD,eAAe,QAAS,CAAE1nB,MAAO,WAAYqgE,SAAU,MAAOwJ,sBAAuB,EAAGC,sBAAuB,IAAO,WAIvRpuE,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKuF,UAAW,SAAW5G,SACzDstD,EAAiBrC,SAAWqC,EAAiBrsB,KAAUqsB,EAAiBrC,QAAO,MAAMqC,EAAiBrsB,KAAS,WAI3HrhC,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,UACnCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKE,MAAO,WAAavB,SAAA,CAAEstD,EAAiBqV,UAAY,MAAQ,MACtFrV,EAAiBwV,WAAU,gBAAmBxV,EAAiB1B,eAAc,IAAM,WAI9FusB,EAAiB70E,OAAS,GAAwC,YAAnC80E,EAAoB98C,aACjD88C,EAAoBQ,aAAete,EAAqB6N,UACxD,MACCvnE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEib,YAAa,GAAIw5D,aAAc,GAAItoD,WAAY,GAAKrwB,SAAA,EACtB,GAAxCstD,EAAiBC,cAAc/oD,OAAsD,GAAxC8oD,EAAiBC,cAAc/oD,SAC1E5D,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACgtE,GAAgB,KAEjBhtE,EAAAA,GAAAA,KAAC+0E,GAAiB,CAEdvnD,MAA+C,GAAxCkgC,EAAiBC,cAAc/oD,MAAa,yBAAmE,GAAxC8oD,EAAiBC,cAAc/oD,MAAa,iBAAmB,GAC7IswE,aAAc,UACdC,cAAe,UACfF,iBAAkB,EAClBD,YAAa,EACbvmB,YAAYzuD,EAAAA,GAAAA,KAACi5E,EAAAA,QAAY,CAAC9zE,KAAK,sBAAsBxD,MAAM,UAAUyD,KAAM,MANtE,2BAQTpF,EAAAA,GAAAA,KAAC2vE,GAAc,KAEf3uE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,IAAKpB,SAAC,mBAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,SAAU5G,SAAA,KACtFihE,GAAeA,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,YAAc26B,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,KAAM,KAAO,GAAG2hB,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,OAEjPptE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAW8uB,WAAY,EAAG7Q,WAAY,GAAIxf,SAAA,CAAC,IACtG,QAAMihE,GAAeA,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,aAAewiC,GAAoBA,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SAAYosB,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,KAAM,KAAOw7C,OAAO6H,EAAiBiX,SAASlrC,UAAa,GAAGzN,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,IAAO,aAMjW,GAAxC1gB,EAAiBC,cAAc/oD,QAIzB5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOg6D,aAAc,GAAItoD,WAAY,GAAKrwB,SAAA,CAEhC,GAAhCstD,EAAiB0M,cACbp6D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOg6D,aAAc,IAAM34E,UACrDJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEib,YAAa,IAAMnf,UAC9BJ,EAAAA,GAAAA,KAAC6yE,GAAiB,SAKlC7xE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEib,YAAa,IAAMnf,SAAA,EAC5BstD,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAACgtE,GAAgB,KAEjDtf,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAAC+0E,GAAiB,CAEhDvnD,MAAO,gBACP2nD,cAAe,UACfD,aAAc,UACdD,iBAAkB,EAClBD,YAAa,EACbvmB,YAAYzuD,EAAAA,GAAAA,KAACi5E,EAAAA,QAAY,CAAC9zE,KAAK,sBAAsBxD,MAAM,UAAUyD,KAAM,MANtE,kBAQTpF,EAAAA,GAAAA,KAAC2vE,GAAc,KAEbjiB,EAAiB0M,cAAep5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,IAAKpB,SAAC,mBAChDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAWqF,UAAW,SAAU5G,SAAA,KACtFihE,GAAeA,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,YAAc26B,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,KAAM,KAAO,GAAG2hB,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,OAEjPptE,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIG,MAAO,UAAW8uB,WAAY,EAAG7Q,WAAY,GAAIxf,SAAA,CAAC,IACtG,QAAMihE,GAAeA,EAAYxV,gBAAkBwV,EAAYxV,eAAe3gC,aAAewiC,GAAoBA,EAAiBiX,UAAYjX,EAAiBiX,SAASlrC,SAAYosB,OAAOwb,EAAYxV,eAAe3gC,YAAY7gB,QAAQ,KAAM,KAAOw7C,OAAO6H,EAAiBiX,SAASlrC,UAAa,GAAGzN,eAAe,QAAS,CAAEmiD,sBAAuB,EAAGC,sBAAuB,IAAO,cAKvYptE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEib,YAAa,IAAMnf,SAAA,EAE5BstD,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAAC+0E,GAAiB,CAEhDvnD,MAA+C,GAAxCkgC,EAAiBC,cAAc/oD,MAAa,yBAA2B,iBAC9EswE,aAAc,UACdC,cAAe,UACfF,iBAAkB,EAClBD,YAAa,EACbvmB,YAAYzuD,EAAAA,GAAAA,KAACi5E,EAAAA,QAAY,CAAC9zE,KAAK,sBAAsBxD,MAAM,UAAUyD,KAAM,MANtE,2BAQPsoD,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAACu0E,GAAmB,KAEpD7mB,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAACwzE,GAAiB,KAElD9lB,EAAiB0M,cAAep6D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAS3e,SACpEihE,GAAeA,EAAY7U,kBAAoB6U,EAAY7U,iBAAiBC,UACzEzrD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE7C,WAAY,IAAKD,SAAU,IAAMpB,SAAC,gBACjDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAE7C,WAAY,IAAKD,SAAU,GAAIwF,UAAW,QAASrF,MAAO,WAAavB,SAEzFihE,EAAY7U,iBAAiBC,QACvB,IAAIiL,KAAK2J,EAAY7U,iBAAiBC,SAASwR,wBAAmBhgC,EAAW,CAC3E1iB,KAAM,UACNC,MAAO,OACPG,IAAK,YAEP,gCAclD3b,EAAAA,GAAAA,KAAC60E,GAAgB,MAI7B,EAGMqE,GAAkB,SAAHC,GAAeA,EAATC,UAA6C,IAAlCC,EAA0BF,EAA1BE,2BAE5BC,GAAyBlxE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMixE,sBAAsB,IAC5E5rB,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAGhEtwD,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAEtF,OAEI4C,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ+4D,EACRz4D,QAAS,kBAAMw4D,GAA4B,EAC3ChwD,YAAU,EACVjkB,KAAM,KAAKhF,UAEXY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACta,aAAc,EAAGpC,MAAO,CAAEsd,QAAS,GAAI/a,gBAAiB,UAAWi8B,YAAa,OAAQC,aAAc,CAAElmC,MAAO,EAAGC,OAAQ,GAAKkmC,cAAe,IAAMC,aAAc,KAAMC,UAAW,GAAI9iC,SAAA,EAClMJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAElBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAE9C,SAAU,GAAIC,WAAY,MAAOuF,UAAW,SAAUrF,MAAO,QAAUvB,SAAC,eAE/FJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAEHstD,EAAiBwJ,OAAOxzD,OAAS,GAC7B1D,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAE8sB,UAAW,IAAK1qB,aAAc,IAAKtG,UAGhD2sB,EAAAA,EAAAA,SAAI2gC,EAAiBwJ,QAChBtmC,MAAK,SAAC2C,EAAGG,GAAC,OAAKH,IAAMn2B,GAAS,EAAIs2B,IAAMt2B,EAAQ,EAAI,CAAC,IACrDzB,KAAI,SAAAoe,GAAI,OACL/Y,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAYtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUouD,eAAgB,EAAGpvC,kBAAmB,GAAKjZ,YAAa,OAAQ2b,cAAe,GAAIzhB,SAAA,CAC3I,YAAT2Z,GACG/Z,EAAAA,GAAAA,KAACi5E,EAAAA,QAAY,CAAC9zE,KAAK,QAAQC,KAAM,GAAIzD,MAAM,UAAU2C,MAAO,CAAEoc,YAAa,OAC3E1gB,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,cAAcC,KAAM,GAAIzD,MAAM,UAAU2C,MAAO,CAAEoc,YAAa,OACpF1gB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGpC,MAAO,QAASvB,SAAEhD,IAAU2c,EAAO,MAAQA,MAJ5DA,EAKJ,OAKvB/Z,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,OAAQH,SAAU,IAAKpB,SAAC,4CAQ/F,EAEMm5E,GAAoB,SAAHC,GAA0C,IAApCC,EAASD,EAATC,UAAW54D,EAAO24D,EAAP34D,QAASw2C,EAAQmiB,EAARniB,SAC7C,OACIr3D,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQk5D,EAAW54D,QAASA,EAASzb,KAAK,OAAOikB,YAAU,EAAAjpB,UAC9DY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CACV1c,MAAO,CACHuC,gBAAiB,qBACjBhK,MAAO,MACPC,OAAQ,MACRqwB,UAAW,SACX9rB,eAAgB,UAClBjB,SAAA,EACFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAKkzD,EAAU53C,SAAUD,EAAAA,QAAUC,SAASsT,QACtDzuB,MAAO,CAAEzH,MAAO,OAAQC,OAAQ,OAAQ4J,aAAc,IACtDtC,WAAYob,EAAAA,QAAUpb,WAAW4uB,cAKrD,EAGM0mD,GAAqB,SAAHC,GAAiC,IAA3B/iB,EAAG+iB,EAAH/iB,IAC1BgjB,GAD6CD,EAAdE,gBACmB58E,EAAAA,EAAAA,WAAS,IAAM68E,GAAA38E,EAAAA,EAAAA,SAAAy8E,EAAA,GAA1DG,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAA4Ch9E,EAAAA,EAAAA,WAAS,GAAMi9E,GAAA/8E,EAAAA,EAAAA,SAAA88E,EAAA,GAAtCC,EAAA,GAAmBA,EAAA,GAgBxC,OACIl6E,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIJ,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,WAAWi4C,UAAW,IAAK12D,QAAS,QAAS/B,MAAO,CAAEF,MAAO,WAAavB,UACrFJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACNpB,MAAO,CACHoc,YAAa,EACbha,aAAc,GACd7J,MAAO,GACPC,OAAQ,GACRuE,eAAgB,SAChBlB,WAAY,SACZ0G,gBAAiBkzE,EAAoB,UAAY,eAErDp0E,SAAO3D,EAAAA,EAAAA,UAAE,kBACCm4E,EAAAA,QAAQC,QAAQxjB,EAC1B,IACA+e,aAAc,kBAAMqE,GAAqB,EAAK,EAC9CpE,aAAc,kBAAMoE,GAAqB,EAAM,EAAC55E,UAEhDJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,WAAWC,KAAM,GAAIzD,MAAO,iBAwB7E,EAEM04E,GAAuB,WAEzB,IAAMlyE,GAAWK,EAAAA,EAAAA,eACX8xE,GAAkBlyE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMiyE,eAAe,IAC9DC,GAAwBnyE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkyE,qBAAqB,IAEhFC,GAAkCv9E,EAAAA,EAAAA,UAAS,GAAEw9E,GAAAt9E,EAAAA,EAAAA,SAAAq9E,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAK9BG,GAAgC39E,EAAAA,EAAAA,WAAS,GAAK49E,GAAA19E,EAAAA,EAAAA,SAAAy9E,EAAA,GAAvCz7E,EAAS07E,EAAA,GAAEC,EAAUD,EAAA,GAKtBE,EAAmB,WACrBD,GAAW,EACf,EA2CA,OAvBAn7E,EAAAA,EAAAA,YAAU,WAEN,IAAMq7E,EAAU/3E,YAAW,WAEnB9D,IACAuD,QAAQe,IAAI,4DACZf,QAAQe,IAAI,eAAgB62E,GAC5B53E,QAAQe,IAAI,sBAAuBqpD,KAEnC1tD,EAAAA,EAAAA,eAAa,GACbu7E,GAAa,SAAA/tC,GAAO,OAAIA,EAAU,CAAC,IACnCzkC,GAAS8yE,EAAAA,EAAAA,oBAAmBnuB,KAIpC,GAAG,KAEH,OAAO,kBAAMouB,aAAaF,EAAS,CAEvC,GAAG,CAAC77E,KAKAa,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQg6D,EACX15D,QAAS,WAzCb1Y,GAASgzE,EAAAA,EAAAA,2BAAyB,IAClChzE,GAAS8yE,EAAAA,EAAAA,oBAAmB,KAC5BH,GAAW,GACX/tB,GAAyB,GACzBD,GAAuB,EAuCnB,EACE1nD,KAAK,KAAIhF,UACXJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAAA5gB,SACkB,QAA3B2sD,IAEI/rD,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,CACIjB,IACGa,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT2a,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPrI,SAAU,WACV3d,eAAgB,SAChBlB,WAAY,SACZrD,OAAQ,SACVsD,UACEJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACJ4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,cAIE,KAApB24E,IACGt5E,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACMjB,IACEa,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOliB,MAAO,OAAQC,OAAQ,GAAI4J,aAAc,EAAGG,gBAAiB,UAAWxF,eAAgB,WAAYlB,WAAY,UAAYC,UAC7JJ,EAAAA,GAAAA,KAAC05E,GAAkB,CAAC9iB,IAAK9J,GAAsB+sB,eAhE/D,WAGhB,IAAMuB,EAAczoD,OAAOyqC,KAAK,sCAAsCP,mBAAmByd,GAAgB,iBAAkB,UAC3Hc,EAAYxlB,QACZwlB,EAAYC,OAEhB,OA6D4Br7E,EAAAA,GAAAA,KAAA,UAEI46C,IAAG,sCAAwCiiB,mBAAmByd,GAAgB,iBAC9Ex+E,GAAG,iBACHwI,MAAO,CAAEzH,MAAO,OAAQC,OAAQ,SAChC0wB,MAAM,kBACN8tD,OAAQ,WACJP,GACJ,GAPKL,UAejB15E,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,CACKjB,IACGa,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT2a,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPrI,SAAU,WACV3d,eAAgB,SAChBlB,WAAY,SACZrD,OAAQ,SACVsD,UACEJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACJ4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,cAIE,KAApB24E,IAA0Bt6E,EAAAA,GAAAA,KAAA,UACvB46C,IAAK0/B,EACLh2E,MAAO,CAAEzH,MAAO,OAAQC,OAAQ,SAChC0wB,MAAM,aACN8tD,OAAQP,UAYxC,EAEMQ,GAAiB,SAAHC,GAA0C,IAApC/gB,EAAiB+gB,EAAjB/gB,kBAAmB2e,EAASoC,EAATpC,UAEnCb,IADenwE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqwD,YAAY,KACrCtwD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkwE,gBAAgB,KAChE7qB,GAAmBtlD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqlD,gBAAgB,IAChE+F,GAAerrD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMorD,YAAY,IACxDgoB,GAA0BrzE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMozE,uBAAuB,IAC9EC,GAAqBtzE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqzE,kBAAkB,IAC1EC,GAAwC1+E,EAAAA,EAAAA,WAAS,GAAM2+E,GAAAz+E,EAAAA,EAAAA,SAAAw+E,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAc7rE,EAAAA,EAAAA,UACpB8rE,GAAkD/+E,EAAAA,EAAAA,UAAS,MAAKg/E,GAAA9+E,EAAAA,EAAAA,SAAA6+E,EAAA,GAAzDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAE9CG,GAAoDn/E,EAAAA,EAAAA,UAAS,MAAKo/E,GAAAl/E,EAAAA,EAAAA,SAAAi/E,EAAA,GAA3DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAAgDv/E,EAAAA,EAAAA,WAAS,GAAMw/E,GAAAt/E,EAAAA,EAAAA,SAAAq/E,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAmBtCG,GAjBcjgF,EAAAA,QAAWC,IAAI,UAAUC,MACxBF,EAAAA,QAAWC,IAAI,UAAUE,OAgBT,WACjCq/E,EAAqB,KACzB,GAEMh0E,GAAWK,EAAAA,EAAAA,eAEjBq0E,GAAwB5/E,EAAAA,EAAAA,UAASywD,EAAiBuJ,MAAK6lB,GAAA3/E,EAAAA,EAAAA,SAAA0/E,EAAA,GAEjDE,GAFKD,EAAA,GAASA,EAAA,GAEc,WAC9B30E,GAAS60E,EAAAA,EAAAA,4BAA0B,GACvC,GAMMC,IAAgB/sE,EAAAA,EAAAA,QAAO,IAAIgtE,EAAAA,QAASC,MAAM,IAAInoE,SAEpDrV,EAAAA,EAAAA,YAAU,WACNu9E,EAAAA,QAASE,KACLF,EAAAA,QAASG,SAAS,CACdH,EAAAA,QAASI,OAAOL,GAAe,CAC3BM,QAAS,EACT38E,SAAU,IACV48E,iBAAiB,IAErBN,EAAAA,QAASI,OAAOL,GAAe,CAC3BM,QAAS,EACT38E,SAAU,IACV48E,iBAAiB,OAG3BC,OACN,GAAG,CAAC/vB,EAAkB6qB,EAAkB0E,KAExC,IAAM/2E,GAAc+2E,GAAcS,YAAY,CAC1CC,WAAY,CAAC,EAAG,IAAM,GAAK,IAAM,GACjCC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,wBAuBFC,GAAsB,eAAAC,GAAA97E,EAAAA,EAAAA,UAAG,YAI3B,IAAI28D,EACJ,GAJAx2D,GAAS41E,EAAAA,EAAAA,6BAA2B,IACpC51E,GAAS61E,EAAAA,EAAAA,wBAAsB,IAG1Bj0B,GAMA,CACD5hD,GAAS41E,EAAAA,EAAAA,6BAA2B,IACpC51E,GAAS61E,EAAAA,EAAAA,wBAAsB,IAE/Brf,GAAYvoD,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS+/B,EAAiB5xD,GAAI,aACpEwa,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW6yC,KACXxzC,EAAAA,EAAAA,OAAM,KAEV,IAgCI,OA/BoBrN,EAAAA,EAAAA,YAAWy1D,GAAW,SAACj2D,GACvC,GAAIA,EAASqP,MAQT,OANArV,QAAQe,IAAI,6BACZR,YAAW,WACPkF,GAAS41E,EAAAA,EAAAA,6BAA2B,IACpC51E,GAAS61E,EAAAA,EAAAA,wBAAsB,IAC/Bj0B,GAA4B,IAChC,GAAG,GAIP,IAAM+U,EAAY,GAClBp2D,EAASgO,SAAQ,SAACrU,GACdy8D,EAAUloD,KAAInP,GAAC,CACX3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEf,IAKA3F,YAAW,WACPkF,GAASqxD,EAAAA,EAAAA,qBAAoB,GAAD1sC,QAAAC,EAAAA,EAAAA,SAAKwrD,GAAqBzZ,KACtD32D,GAAS41E,EAAAA,EAAAA,6BAA2B,IACpCh0B,GAA4BrhD,EAASoO,KAAKpO,EAASoO,KAAKpT,OAAS,EACrE,GAAG,EAEP,GAGJ,CAAE,MAAOjB,GACLC,QAAQD,MAAM,qCAAsCA,GACpDQ,YAAW,kBAAMkF,GAAS41E,EAAAA,EAAAA,6BAA2B,GAAO,GAAE,EAClE,CAEJ,MApDI51E,GAAS41E,EAAAA,EAAAA,6BAA2B,IACpC51E,GAAS61E,EAAAA,EAAAA,wBAAsB,GAqDvC,IAAC,kBA7D2B,OAAAF,EAAAh7E,MAAA,KAAAC,UAAA,KA+DtBi4D,GAAgB,eAAAijB,GAAAj8E,EAAAA,EAAAA,UAAG,YACrB,IAAM5E,EAAQ+wB,EAAAA,mBAAmBrmB,YAAcqmB,EAAAA,mBAAmBrmB,YAAY1K,MAAQ,GAChFynB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,QAAS8lC,GACvD,GAAc,KAAVr2D,EACA,UAEUmF,EAAAA,EAAAA,WAAUsiB,EAAQ,CACpBoyC,MAAM,EACNC,QAAQ7wB,EAAAA,EAAAA,YAAWjpC,IAE3B,CAAE,MAAOqF,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,CAGR,IAAC,kBAfqB,OAAAw7E,EAAAn7E,MAAA,KAAAC,UAAA,MAiBtBpD,EAAAA,EAAAA,YAAU,WACF8zD,GAAgB/F,EAAiB5xD,KAC7B4xD,EAAiBC,cAAc/oD,QAAU61D,GAA2C,IAAtBA,GAC9DtyD,GAASqxD,EAAAA,EAAAA,qBAAoB,KAC7BrxD,GAASoxD,EAAAA,EAAAA,iBAAgB,MAGzByB,KAMZ,GAAG,CAACtN,IAEJ,IAAMwwB,GAAgC,WAClC/1E,GAASqqE,EAAAA,EAAAA,2BAAyB,GACtC,EAEMrU,GAAa,SAACliD,GAGhB,IAAMk/C,EAAQl/C,EAAUkiE,MAAM,wDAC9B,IAAKhjB,EAAO,OAAOl/C,EAGnB,IAAMP,EAAO,IAAIg8C,KAAKyD,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAM5EwP,EAAQjvD,EAAKkvD,WAEbwT,EAAiBzT,EAAQ,IAAM,GAC/B0T,EAFO1T,GAAS,GAEF,KAAO,KAG3B,OAAUjvD,EAAK+hD,cAAc7gC,WAAW0hD,QAAQ,GAAE,IATnC,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAShC5iE,EAAKgiD,YAAW,IAAIhiD,EAAKiiD,UAAS,KAAKygB,EAAc,IAAI1iE,EAAKovD,aAAaluC,WAAW8tC,SAAS,EAAG,KAAI,IAAI2T,CAC3K,EAEME,GAA2B,SAACnhF,GAC9B,IAAAohF,EAAmBphF,EAAM+oC,MAAM,KAC/B,OADmChpC,EAAAA,EAAAA,SAAAqhF,EAAA,GAApB,EAEnB,EA0CMC,GAAiB,SAACC,EAAwB35E,GAC5C,IAAM45E,EAAa,IAAIC,OAAO,yBAA0B,KACpDC,EAAW95E,EAAKohC,MAAMw4C,GAY1B,OAAOE,EAASljF,KAAI,SAACmjF,EAASlxD,GAC1B,IAAMmxD,EAAoBD,EAAQp7E,OAAS,KAAOo7E,EAAQ3hE,SAAS,KAXlD,SAAC6hE,EAAKC,GAGvB,IADA,IAAItpB,EAAS,GACNqpB,EAAIt7E,OAAS,GAChBiyD,GAAUqpB,EAAI7S,UAAU,EAAG8S,GAAK,SAChCD,EAAMA,EAAI7S,UAAU8S,GAExB,OAAOtpB,CACX,CAG8EupB,CAAaJ,EAAS,IAAMA,EAEtG,OAAIK,GAAaL,IAGT9+E,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAAaC,QAAS,kBApCvBixD,EAoC6CkoB,OAnClE3E,EAAAA,QAAQiF,WAAWxoB,GAAKxzD,MAAK,SAAAi8E,GACrBA,EACAlF,EAAAA,QAAQC,QAAQxjB,GAEhBl0D,QAAQe,IAAI,+BAAiCmzD,EAErD,IAPoB,IAACA,CAoCqD,EAACx2D,UAC3DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACDgqE,YAAU,EACVjnE,MAAO,CACH7C,WAAY,MACZE,MAAgC,UAChCH,SAAU,GACVL,WAAY,EACZ8xD,mBAAoB,YACpBqsB,SAAU,QACZl/E,SAED2+E,KAZOnxD,IAkBhB5tB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CACDgqE,YAAU,EAEVjnE,MAAO,CACH7C,WAAY,MACZE,MAAgC,UAChCH,SAAU,GACVL,WAAY,EACZm+E,SAAU,QACZl/E,SAED2+E,GATInxD,EAarB,GACJ,EAIM2xD,GAAc,SAAC7kD,GACjB,IAAM8kD,EAAW,GACXC,EAAgB/kD,EAASnjB,cAE/B,OAAIkoE,EAAcC,SAAS,SAChB1/E,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAM,iBAAkBC,KAAMo6E,EAAU79E,MAAM,YAIpE89E,EAAcC,SAAS,UAAYD,EAAcC,SAAS,SACnD1/E,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAM,iBAAkBC,KAAMo6E,EAAU79E,MAAM,YAE7E89E,EAAcC,SAAS,UAAYD,EAAcC,SAAS,SAAWD,EAAcC,SAAS,SACrF1/E,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAM,kBAAmBC,KAAMo6E,EAAU79E,MAAM,YAG9E89E,EAAcC,SAAS,SAAWD,EAAcC,SAAS,SAClD1/E,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACbtb,OAAQ,CAAEC,IAAKnF,EAAQ,OAA8BygB,SAAUD,EAAAA,QAAUC,SAASC,MAClFpb,MAAO,CACHzH,MAAO2iF,EACP1iF,OAAQ0iF,GAEZp7E,WAAYob,EAAAA,QAAUpb,WAAWmvD,SAIlCvzD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBC,KAAMo6E,EAAU79E,MAAM,WACzE,EAEMw9E,GAAe,SAACp6E,GAElB,OADmB,IAAI65E,OAAO,sHACZhlE,KAAK7U,EAC3B,EA0hBA,OACIwzE,EAAiB70E,OAAS,GACtB1C,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,GAAAA,KAACkzD,EAAAA,QAAQ,CACL5uD,MAAO,CAAExH,OAAQ,KACjBukB,IAAK06D,EACLnzE,KAAM2vE,EACNzlD,WA/hBG,SAAH6sD,GAAyB,IAAnB5lE,EAAI4lE,EAAJ5lE,KAAM6T,EAAK+xD,EAAL/xD,MAClB8wD,EAAyB3kE,EAAK48C,SAAW1M,GACzC21B,EAA0B,IAAVhyD,EAChBC,EAAYquD,IAAsBtuD,EAGxC,OACI5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTya,cAAe2/D,EAAyB,MAAQ,cAChD7hF,MAAO,OACPswB,UAAWuxD,EAAyB,aAAe,WACnDnwB,eAAgB,EAChBvrC,SAAU,OAGZ5iB,SAAA,CACuB,iBAApB2Z,EAAKmvD,cACFloE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU5e,WAAY,WAAY4D,KAAM,GAAI3D,SAAA,EACtEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe2/D,EAAyB,MAAQ,cAAe36E,KAAM,GAAK3D,SAAA,EACrFJ,EAAAA,GAAAA,KAACk9E,EAAAA,QAAStvB,KAAI,CAACtpD,MAAO,CAClBsd,QAAS,EACT7d,KAAM,EACN2C,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtDh+D,YAAag+D,EAAyB,EAAI,GAC1Cz4E,YAAa,EACbC,YAAaA,IACf9F,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAASu4E,GAA8B99E,UAC9CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+pE,WAAS,EAACC,YAAU,EAACjnE,MAAO,CAC9B7C,WAAY,IACZE,MAAgC,UAChCH,SAAU,IACZpB,SACG2Z,EAAKhV,KAAK5B,aAItBy8E,GAAiBlyB,EAAiBsJ,eAAiB0nB,IAChD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,YAAYC,KAAM,GAAIzD,MAAO,gBAKvDi+E,IAAkBlyB,EAAiBsJ,eAAiB0nB,IACjD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,OAAOC,KAAM,GAAIzD,MAAO,gBAIlDi+E,GAAiBlyB,EAAiBwJ,OAAOxzD,OAAS,IAC/C1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAAW,kBAAMytB,GAAgB,EAAK,EACtCxtB,WAAY,kBAAMwtB,GAAgB,EAAM,EACxCn2E,QAASo3E,EAA0B38E,UAGnCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,MAAMC,KAAM,GAAIzD,MAAOk6E,EAAe,UAAY,oBAO/E77E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,MACZE,MAAO,OACPH,SAAU,GACV8d,UAAW,EACX3Y,aAAc,EACdiZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,IAE1CnT,YAAU,EAAAnrE,SACRs+E,EAEQvgB,GAAWpkD,EAAKkC,YAAalC,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,IAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,IAAO,IAD1GuT,GAAWpkD,EAAKkC,WAAU,MAAMsiE,GAAyBxkE,EAAK48C,SAAU58C,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,GAAO,KAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,SAQlJ,gBAApB7wC,EAAKmvD,cACFloE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU5e,WAAY,WAAY4D,KAAM,GAAI3D,SAAA,EACtEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe2/D,EAAyB,MAAQ,cAAe36E,KAAM,GAAK3D,SAAA,EACrFJ,EAAAA,GAAAA,KAACk9E,EAAAA,QAAStvB,KAAI,CAACtpD,MAAO,CAClBsd,QAAS,EACT7d,KAAM,EACN2C,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtDh+D,YAAag+D,EAAyB,EAAI,GAC1Cz4E,YAAa,EACbC,YAAaA,IACf9F,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CACpB7C,WAAY,IACZE,MAAgC,UAChCH,SAAU,IACZpB,SACG2Z,EAAKhV,KAAK5B,WAGlBy8E,GAAiBlyB,EAAiBsJ,eAAiB0nB,IAChD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,YAAYC,KAAM,GAAIzD,MAAO,gBAKvDi+E,IAAkBlyB,EAAiBsJ,eAAiB0nB,IACjD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,OAAOC,KAAM,GAAIzD,MAAO,gBAIlDi+E,GAAiBlyB,EAAiBwJ,OAAOxzD,OAAS,IAC/C1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAAW,kBAAMytB,GAAgB,EAAK,EACtCxtB,WAAY,kBAAMwtB,GAAgB,EAAM,EACxCn2E,QAASo3E,EAA0B38E,UAGnCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,MAAMC,KAAM,GAAIzD,MAAOk6E,EAAe,UAAY,oBAO/E77E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,MACZE,MAAO,OACPH,SAAU,GACV8d,UAAW,EACX3Y,aAAc,EACdiZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,IAE1CnT,YAAU,EAAAnrE,SACRs+E,EAEQvgB,GAAWpkD,EAAKkC,YAAalC,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,IAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,IAAO,IAD1GuT,GAAWpkD,EAAKkC,WAAU,MAAMsiE,GAAyBxkE,EAAK48C,SAAU58C,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,GAAO,KAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,UAQrK7wC,EAAKmvD,aAAenvD,EAAKs5C,MAA0B,cAAlBt5C,EAAKs5C,KAAK7tD,OACzCxE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU5e,WAAYu+E,EAAyB,aAAe,WAAY36E,KAAM,GAAI3D,SAAA,CAC7G2Z,EAAKhV,MAAsB,KAAdgV,EAAKhV,OACf/E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTqC,aAAc,EACdib,QAAS,GACTlb,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtD9+D,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,GAC1Cv9E,WAAY,GACdf,SACGq+E,GAAeC,EAAwB3kE,EAAKhV,KAAK5B,WAG1DnC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe2/D,EAAyB,MAAQ,cAAe36E,KAAM,GAAK3D,SAAA,EAErFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTya,cAAe2/D,EAAyB,MAAQ,cAChD36E,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTqC,aAAc,EACdib,QAAS,GACTlb,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtD9+D,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,GAC1Cv9E,WAAY,GACdf,UACEY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACNC,QAAS,WACDoU,EAAKs5C,KAAKluD,KAAKu6E,SAAS,SACxB3yB,GAAyB,MACzB5kD,GAASgzE,EAAAA,EAAAA,2BAAyB,IAClChzE,GAAS8yE,EAAAA,EAAAA,oBAAmBlhE,EAAKs5C,KAAKuD,MACtC9J,GAAuB/yC,EAAKs5C,KAAKuD,MAIjC7J,GAAyB,UACzB5kD,GAASgzE,EAAAA,EAAAA,2BAAyB,IAClChzE,GAAS8yE,EAAAA,EAAAA,oBAAmBlhE,EAAKs5C,KAAKuD,MACtC9J,GAAuB/yC,EAAKs5C,KAAKuD,IASzC,EACAtyD,MAAO,CAAEya,cAAe,OAAS3e,SAAA,EAEjCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEoc,YAAa,GAAKtgB,SAC5Bm/E,GAAYxlE,EAAKs5C,KAAKluD,SAG3BnF,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+pE,WAAS,EAACC,YAAU,EAACjnE,MAAO,CAC9B7C,WAAY,IACZE,MAAgC,UAChCH,SAAU,IACZpB,SACG2Z,EAAKs5C,KAAKluD,KAAKhC,gBAO/By8E,GAAiBlyB,EAAiBsJ,eAAiB0nB,IAChD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,YAAYC,KAAM,GAAIzD,MAAO,gBAKvDi+E,IAAkBlyB,EAAiBsJ,eAAiB0nB,IACjD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,OAAOC,KAAM,GAAIzD,MAAO,gBAIlDi+E,GAAiBlyB,EAAiBwJ,OAAOxzD,OAAS,IAC/C1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAAW,kBAAMytB,GAAgB,EAAK,EACtCxtB,WAAY,kBAAMwtB,GAAgB,EAAM,EACxCn2E,QAASo3E,EAA0B38E,UAGnCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,MAAMC,KAAM,GAAIzD,MAAOk6E,EAAe,UAAY,oBAO/E77E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,MACZE,MAAO,OACPH,SAAU,GACV8d,UAAW,EACX3Y,aAAc,EACdiZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,IAE1CnT,YAAU,EAAAnrE,SACRs+E,EAEQvgB,GAAWpkD,EAAKkC,YAAalC,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,IAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,IAAO,IAD1GuT,GAAWpkD,EAAKkC,WAAU,MAAMsiE,GAAyBxkE,EAAK48C,SAAU58C,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,GAAO,KAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,UAQrK7wC,EAAKmvD,aAAenvD,EAAKs5C,MAA0B,SAAlBt5C,EAAKs5C,KAAK7tD,OACzCxE,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU5e,WAAYu+E,EAAyB,aAAe,WAAY36E,KAAM,GAAI3D,SAAA,CAC7G2Z,EAAKhV,MAAsB,KAAdgV,EAAKhV,OACf/E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTqC,aAAc,EACdib,QAAS,GACTlb,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtD9+D,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,GAC1Cv9E,WAAY,GACdf,SACGq+E,GAAeC,EAAwB3kE,EAAKhV,KAAK5B,WAG1DnC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe2/D,EAAyB,MAAQ,cAAe36E,KAAM,GAAK3D,SAAA,EACrFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTya,cAAe2/D,EAAyB,MAAQ,cAChD36E,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTsd,QAAS,EACTlb,aAAc,GACdkZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,GAC1Cv9E,WAAY,GACdf,UACEY,EAAAA,GAAAA,MAAC0E,EAAAA,QAAS,CACNiwE,aAAc,kBAxqBb,SAAC/nD,GAClCuuD,EAAqBvuD,EACzB,CAsqBwDiyD,CAA6BjyD,EAAM,EACvDgoD,aAAcgH,EACdj3E,QAAS,kBAprBzB,SAACioB,GACjB2uD,EAAsB3uD,GACtB+uD,GAAoB,EACxB,CAirBmDmD,CAAYlyD,EAAM,EACjCtpB,MAAO,CACH0a,SAAU,WACVniB,MAAO,IACPC,OAAQ,IACRqwB,UAAW,UACb/sB,SAAA,EAEFJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CAAEC,IAAK4V,EAAKs5C,KAAKuD,IAAKn3C,SAAUD,EAAAA,QAAUC,SAASsT,QAC3DzuB,MAAO,CACHzH,MAAO,OACPC,OAAQ,OACR4J,aAAc,GACdT,YAAa,EACbC,YAAa,WAEjB9B,WAAYob,EAAAA,QAAUpb,WAAW4uB,UAEpCnF,IACG7tB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAKmD,GAAAA,GAAA,GACJpB,EAAAA,QAAW05E,oBAAkB,IAChCl5E,gBAAiB,qBACjBH,aAAc,cAQjCk5E,GAAiBlyB,EAAiBsJ,eAAiB0nB,IAChD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,YAAYC,KAAM,GAAIzD,MAAO,gBAKvDi+E,IAAkBlyB,EAAiBsJ,eAAiB0nB,IACjD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,OAAOC,KAAM,GAAIzD,MAAO,gBAIlDi+E,GAAiBlyB,EAAiBwJ,OAAOxzD,OAAS,IAC/C1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAAW,kBAAMytB,GAAgB,EAAK,EACtCxtB,WAAY,kBAAMwtB,GAAgB,EAAM,EACxCn2E,QAASo3E,EAA0B38E,UAEnCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,MAAMC,KAAM,GAAIzD,MAAOk6E,EAAe,UAAY,oBAO/E77E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,MACZE,MAAO,OACPH,SAAU,GACV8d,UAAW,EACX3Y,aAAc,EACdiZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,IAE1CnT,YAAU,EAAAnrE,SACRs+E,EAEQvgB,GAAWpkD,EAAKkC,YAAalC,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,IAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,IAAO,IAD1GuT,GAAWpkD,EAAKkC,WAAU,MAAMsiE,GAAyBxkE,EAAK48C,SAAU58C,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,GAAO,KAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,UAOrK7wC,EAAKmvD,cAAgBnvD,EAAKs5C,OACxBryD,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU5e,WAAYu+E,EAAyB,aAAe,WAAY36E,KAAM,GAAI3D,SAAA,EAC9GY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe2/D,EAAyB,MAAQ,cAAe36E,KAAM,GAAK3D,SAAA,EACrFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTya,cAAe2/D,EAAyB,MAAQ,cAChD36E,KAAM,GACR3D,UACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTsd,QAAS,GACTlb,aAAc,EACdG,gBAAiB63E,EAAyB,UAAY,UACtD9+D,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,GAC1Cv9E,WAAY,GACdf,SACGq+E,GAAeC,EAAwB3kE,EAAKhV,KAAK5B,YAKzDy8E,GAAiBlyB,EAAiBsJ,eAAiB0nB,IAChD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,YAAYC,KAAM,GAAIzD,MAAO,gBAKvDi+E,IAAkBlyB,EAAiBsJ,eAAiB0nB,IACjD1+E,EAAAA,GAAAA,KAAC6tD,EAAAA,QAAO,CAACxrC,MAAM,+BAA+Bi4C,UAAW,IAAK12D,QAAS,UAAW/B,MAAO,CAAEF,MAAO,WAAavB,UAC3GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,OAAOC,KAAM,GAAIzD,MAAO,gBAIlDi+E,GAAiBlyB,EAAiBwJ,OAAOxzD,OAAS,IAC/C1D,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6oB,UAAW,WACXvN,WAAY8+D,EAAyB,EAAI,EACzCh+D,YAAag+D,EAAyB,EAAI,EAC1CvxD,UAAW,UACb/sB,UACEJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CACN8gC,WAAW,EACX6nB,UAAW,kBAAMytB,GAAgB,EAAK,EACtCxtB,WAAY,kBAAMwtB,GAAgB,EAAM,EACxCn2E,QAASo3E,EAA0B38E,UAEnCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,MAAMC,KAAM,GAAIzD,MAAOk6E,EAAe,UAAY,oBAO/E77E,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT7C,WAAY,MACZE,MAAO,UACPH,SAAU,GACV8d,UAAW,EACX3Y,aAAc,EACdiZ,WAAY8+D,EAAyB,GAAK,EAC1Ch+D,YAAag+D,EAAyB,EAAI,IAE1CnT,YAAU,EAAAnrE,SACRs+E,EAEQvgB,GAAWpkD,EAAKkC,YAAalC,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,IAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,IAAO,IAD1GuT,GAAWpkD,EAAKkC,WAAU,MAAMsiE,GAAyBxkE,EAAK48C,SAAU58C,EAAK4wC,GAAE,MAAS5wC,EAAK4wC,GAAO,KAAK5wC,EAAK6wC,UAAS,MAAS7wC,EAAK6wC,UAAc,WASnL,EAWgBj2B,aAAc,SAAA5a,GAAI,OAAIA,EAAKje,EAAE,EAC7BsiE,mBAAoB,GACpBC,oBAAqB,GACrBC,WAAY,IACZC,sBAAuB,IACvBE,oBA3zBK,WACjB,OACIz+D,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACMs7E,IACE17E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEwC,gBAAiB,GAAIhK,OAAQ,IAAMsD,SAC7Cq7E,IACGz7E,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACJ4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,eAQnC,EA2yBgB+8D,aAAcmf,GACdmC,UAAQ,IAEY,OAAvB1D,IACGt8E,EAAAA,GAAAA,KAACu5E,GAAiB,CACdE,UAAWiD,EACX77D,QAz3BC,WACjB87D,GAAoB,GACpBJ,EAAsB,KAC1B,EAu3BoBllB,SAAUkhB,EAAiB+D,GAAoBjpB,KAAKuD,OAG5D52D,EAAAA,GAAAA,KAACk5E,GAAe,CAACE,UAAWA,EAAWC,2BAx2BhB,WAC/BlxE,GAAS60E,EAAAA,EAAAA,4BAA0B,GACvC,OAw2BQ,IAEZ,EAGMiD,GAA8B,WAEhC,OACIjgF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT4a,OAAQ,IACRnb,KAAM,EACNib,SAAU,WACVC,IAAK,EACLmI,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,UACjB+a,QAAS,GACTlb,aAAc,EACdlG,QAAS,IACXJ,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,UAAWH,SAAU,GAAIC,WAAY,OAAQuF,UAAW,UAAaukE,YAAY,EAAMnrE,SAAC,2CAG1H,EAEM8/E,GAAyB,WAE3B,OACIlgF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT4a,OAAQ,IACRnb,KAAM,EACNib,SAAU,WACVC,IAAK,EACLmI,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,MACjB+a,QAAS,GACTlb,aAAc,EACdlG,QAAS,IACXJ,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASH,SAAU,GAAIC,WAAY,OAAQuF,UAAW,UAAaukE,YAAY,EAAMnrE,SAAC,2BAGxH,EAEe,SAASkK,KACpB,IAAM7K,GAAWC,EAAAA,GAAAA,eACXguD,GAAmBtlD,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAMqlD,gBAAgB,IAC9D8qB,GAAsBpwE,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAMmwE,mBAAmB,IACpE9d,GAAuBtyD,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAMqyD,oBAAoB,IAC5EylB,GAA0BljF,EAAAA,EAAAA,UAAS,IAAGmjF,GAAAjjF,EAAAA,EAAAA,SAAAgjF,EAAA,GAA/B/iF,EAAKgjF,EAAA,GAAE/iF,EAAQ+iF,EAAA,GAGhBC,IAFej4E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqwD,YAAY,KACzCtwD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMorD,YAAY,KAChCrrD,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMg4E,qBAAqB,KAC1EC,GAAqBl4E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMi4E,kBAAkB,IACpE/H,GAAmBnwE,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMkwE,gBAAgB,IAChE7tE,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IAExD61E,GAAwBtjF,EAAAA,EAAAA,UAASyN,GAAU81E,GAAArjF,EAAAA,EAAAA,SAAAojF,EAAA,GAA9B30E,GAAF40E,EAAA,GAASA,EAAA,IAEd5xC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAE7C4jF,GAAwCxjF,EAAAA,EAAAA,UAAS,gBAAeyjF,GAAAvjF,EAAAA,EAAAA,SAAAsjF,EAAA,GAAzDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkD5jF,EAAAA,EAAAA,UAAS,GAAE6jF,GAAA3jF,EAAAA,EAAAA,SAAA0jF,EAAA,GAAtDpmB,EAAiBqmB,EAAA,GAAEC,EAAoBD,EAAA,GAE9CE,GAAoD/jF,EAAAA,EAAAA,UAAS,IAAGgkF,GAAA9jF,EAAAA,EAAAA,SAAA6jF,EAAA,GAAzDE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAAkDnkF,EAAAA,EAAAA,WAAS,GAAMokF,IAAAlkF,EAAAA,EAAAA,SAAAikF,EAAA,GAA1D5mB,GAAiB6mB,GAAA,GAAEC,GAAoBD,GAAA,GAC9CE,IAA8CtkF,EAAAA,EAAAA,WAAS,GAAMukF,IAAArkF,EAAAA,EAAAA,SAAAokF,GAAA,GAAtDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,IAAsC1kF,EAAAA,EAAAA,UAAS,MAAK2kF,IAAAzkF,EAAAA,EAAAA,SAAAwkF,GAAA,GAA7CrsE,GAAWssE,GAAA,GAAErsE,GAAcqsE,GAAA,GAClCC,IAAsC5kF,EAAAA,EAAAA,UAAS,GAAE6kF,IAAA3kF,EAAAA,EAAAA,SAAA0kF,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAC5B35E,IAAWK,EAAAA,EAAAA,gBAGjB7I,EAAAA,EAAAA,YAAU,WAIN,IAAMsiF,EAAiB,eAAAC,GAAAlgF,EAAAA,EAAAA,UAAG,YACtB,IAGI,IACMmgF,SADmBhnE,EAAAA,QAAMve,IAAI,sCACNgM,KAAK+hD,GAIlC,GAHAA,GAAKw3B,EAGDA,EAAW,CACX,IACMC,SADwBjnE,EAAAA,QAAMve,IAAI,oBAAoBulF,EAAS,WAC5Bv5E,KAAKy5E,aAC9Cz3B,GAAYw3B,CAEhB,CAEJ,CAAE,MAAO3/E,GACLC,QAAQD,MAAM,0BAA2BA,EAC7C,CACJ,IAAC,kBAnBsB,OAAAy/E,EAAAp/E,MAAA,KAAAC,UAAA,KAoBjBm4B,GAAgB7kB,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SACtD20D,GAAiBlsE,EAAAA,EAAAA,OACnB8kB,GACA5jB,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IACpBf,EAAAA,EAAAA,OAAM,KAGJxN,GAAcG,EAAAA,EAAAA,YAAWo5E,GAAgB,SAACvnD,GAC5CinD,GAAejnD,EAAc31B,MAC7B68E,GAEJ,IAAG,SAACx/E,GACAC,QAAQD,MAAM,6BAA8BA,EAChD,IAKA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,IAEH,IAAMw5E,GAAc,SAACC,EAAaC,GAC1B9B,GAAgB6B,IAGhB5B,EAAgB4B,GAChBzB,EAAqB0B,GACrBtB,EAAsB,IACtBG,IAAqB,GAErBn5E,IAASoxD,EAAAA,EAAAA,iBAAgB,KAEzBpxD,IAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,IAAS02D,EAAAA,EAAAA,gBAAc,IAE/B,GAoBAl/D,EAAAA,EAAAA,YAAU,WACN,IAAI+iF,EAEJv6E,IAASqxD,EAAAA,EAAAA,qBAAoB,KAC7BrxD,IAASwzD,EAAAA,EAAAA,2BAAyB,IAClCxzD,IAASoxD,EAAAA,EAAAA,iBAAgB,KA0CzBmpB,EAvCmB,WACf,IAAMpjB,EAAcghB,EAAmBryC,cAEvC,OAAIusB,GAC0B,IAAtBC,EACuB,KAAhB6E,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAQhB,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MAC5HH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAQA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,KAE3J,KAAhB+oD,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAQA,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MACnLH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnjD,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAQA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,KAGxOkrE,GACqB,IAAtBhnB,EACuB,KAAhB6E,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAOhB,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MAC3HH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAOA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,KAE1J,KAAhB+oD,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAOA,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MAClLH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnjD,EAAAA,EAAAA,OAAM,OAAQ,MAAM,IAAOA,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,KAIlN,IAAtBkkD,EACuB,KAAhB6E,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrX,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MAChGH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,KAE/H,KAAhB+oD,GACHlpD,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnkD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,MACvJH,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAUrW,EAAAA,EAAAA,OAAM,sBAAuB,KAAMmjD,IAAoBnjD,EAAAA,EAAAA,OAAM,WAAY,iBAAkBgoD,IAAchpD,EAAAA,EAAAA,SAAQ,kBAAmB,SAASC,EAAAA,EAAAA,OAAM,IAGzN,CAGWosE,GAEX,IAAM55E,GAAcG,EAAAA,EAAAA,YAAWw5E,GAAU,SAACh6E,GACtC,IAAMo2D,EAAY,GAClBp2D,EAASgO,SAAQ,SAACrU,GACdy8D,EAAUloD,KAAInP,GAAC,CACX3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEf,IAEAT,IAAS42D,EAAAA,EAAAA,iBAAgBD,IACzBhV,GAAoBphD,EAASoO,KAAKpO,EAASoO,KAAKpT,OAAS,GACzDyE,IAAS02D,EAAAA,EAAAA,gBAAc,IACvB12D,IAASy2D,EAAAA,EAAAA,qBAAmB,IAC5Bz2D,IAASkP,EAAAA,EAAAA,yBAAuB,GAEpC,IAAG,SAAC5U,GACAC,QAAQD,MAAM,qCAAsCA,EACxD,IAGA,OAAO,WACCsG,GACAA,GAER,CACJ,GAAG,CAACyxD,GAAmBinB,GAAiBhnB,EAAmB6lB,KAG3D3gF,EAAAA,EAAAA,YAAU,WAQN,OAPoBwuB,EAAAA,mBAAmBtuB,oBAAmB,SAAAC,GACjDA,GACDL,EAAS,SAGjB,GAGJ,GAAG,IAGH,IAAMgJ,GAAuB,SAACC,GACtBA,EAASC,SACID,EAASE,OACAC,SAGlBC,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACH/qB,MAAK,WACF3D,EAAS,SACb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,KAGRqG,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACH/qB,MAAK,WACF3D,EAAS,SACb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,GAEZ,GAgBA9C,EAAAA,EAAAA,YAAU,WACN,IAAMoJ,EAfqB,WAAO,IAAD65E,EAC3B35E,EAAuC,OAAjC25E,EAAGz0D,EAAAA,mBAAmBrmB,kBAAW,EAA9B86E,EAAgCxlF,MAC/C,GAAI6L,EAAQ,CACR,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,GAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,GAE5C,CAEI,OAAO,WACHhJ,EAAS,SACb,CAER,CAGwB0J,GAEpB,OAAO,WAEHJ,GACJ,CACJ,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WAEN,IAAMyJ,EAAmBvB,KACrBuB,IACAC,GAAqBD,GACrB/L,EAAS+L,GAET0P,GADmB1P,GAG3B,GAAG,IAGH,IAAM0P,GAAsB,SAAC7W,GAK7B,EAEMoH,GAAoB,eAAAw5E,GAAA7gF,EAAAA,EAAAA,UAAG,UAAO5E,GAChC,IACI,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,GAAW,WAAYvK,SAChBic,EAAAA,EAAAA,QAAO9P,IAExCL,EAAAA,EAAAA,YAAWK,GAAe,SAACC,GACvB,GAAIA,EAAYb,SAAU,CACtB,IAAMC,EAAOY,EAAYZ,OAEnB1G,GADY0G,EAAKpD,KACLoD,EAAKzD,MACvBgD,IAASwB,EAAAA,EAAAA,cAAazH,GAE1B,CAGJ,GACJ,CAAE,MAAOO,GACLC,QAAQD,MAAM,8BAA+BA,EACjD,CACJ,IAAC,gBAnByBqgF,GAAA,OAAAD,EAAA//E,MAAA,KAAAC,UAAA,KA8FpB8b,GAASxY,EAAAA,QAAWC,OAAO,CAC7BC,UAAW,CACPxC,KAAM,GAEV+a,MAAO,CACH/a,KAAM,KAId,OACI/D,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACIY,EAAAA,GAAAA,MAAC2C,EAAAA,mBAAkB,CAAAvD,SAAA,EACfY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW/J,OAAQ,OAAQD,MAAO,OAAQkiB,cAAe,UAAanb,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE7JY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CACA+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAG9BJ,EAAAA,GAAAA,KAACqf,EAAAA,QAAU,CACPlU,eAAgBA,MAEpBnL,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,EAAI,IAAK/qC,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAEzGJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAOtB9e,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,IAAM,EAAG/qC,EAAG+qC,GAAe,IAAM,EAAI,GAAIjoC,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAE/HJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAEtB9e,EAAAA,GAAAA,MA1FA,SAAH+iF,GAAiC,IAA3B59E,EAAI49E,EAAJ59E,KAAM2a,EAAaijE,EAAbjjE,cACzBkjE,GAA8C/lF,EAAAA,EAAAA,WAAS,GAAMgmF,GAAA9lF,EAAAA,EAAAA,SAAA6lF,EAAA,GAAtD/iE,EAAegjE,EAAA,GAAE/iE,EAAkB+iE,EAAA,GAEpC9iE,EAAc,WAChBD,GAAoBD,EACxB,EAEA,OACIjgB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UAC/CJ,EAAAA,GAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UACzBJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQN,EACRO,QAAS,SAACC,GAAY,OAClBzf,EAAAA,GAAAA,MAACO,EAAAA,QAAIkG,GAAAA,GAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC7HJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC5H,EAEXkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAExCJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACrCJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASrM,GAyDgC,CAAC+E,KAAMuF,EAAWoV,cA/H5B,WAEdqO,EAAAA,mBAAmBrmB,aACnBgB,EAAAA,EAAAA,SAAQqlB,EAAAA,oBAAoB/qB,MAAK,WAC7B3D,EAAS,UACTpC,EAAS,IACTuO,EAAQ,GACZ,IAAGtI,OAAM,WAET,KAGAZ,QAAQe,IAAI,iCAEZhE,EAAS,UAEjB,QAqHgBO,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAShb,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAW1EJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW/J,OAAQ,QAASsD,UACjEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG0d,OAAQ,GAAKrhB,SAAA,EAEjCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACT6a,kBAAmB,EACnBjZ,YAAa,UACbrJ,MAAO,OACPgK,gBAAiB,QACjB/J,OAAQ,GACRomF,oBAAqB,EACrBC,qBAAsB,GACxB/iF,UAEEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EACNgb,cAAe,OACjB3e,UACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EACNgb,cAAe,OACjB3e,UACEY,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CAAC+N,eAAa,EAAC+zD,YAAU,EAAAhjF,SAAA,EAGhCJ,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,eACP7nB,QAAS,kBAAM48E,GAAY,eAAgB,EAAE,EAC7Ct0B,SAA2B,iBAAjB0yB,EACVzyB,YACI6zB,GAAc,GACT/hF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACVuC,gBAAiB,UACjBH,aAAc,IACd7J,MAAO,GACPC,OAAQ,GACR8iB,WAAY,GACZve,eAAgB,SAChBlB,WAAY,UACdC,UACEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CACT3C,MAAO,QACPF,WAAY,IACZD,SAAU,IACZpB,SAAE2hF,GAAc,EAAC,KAAUA,QACrB/hF,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,KApBf,iBAwBTnpB,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,cACP7nB,QAAS,kBAAM48E,GAAY,cAAe,EAAE,EAC5Ct0B,SAA2B,gBAAjB0yB,GAHL,gBAMT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,0BACP7nB,QAAS,kBAAM48E,GAAY,0BAA2B,EAAE,EACxDt0B,SAA2B,4BAAjB0yB,GAHL,4BAMT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,aACP7nB,QAAS,kBAAM48E,GAAY,aAAc,EAAE,EAC3Ct0B,SAA2B,eAAjB0yB,GAHL,eAMT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,oBACP7nB,QAAS,kBAAM48E,GAAY,oBAAqB,EAAE,EAClDt0B,SAA2B,sBAAjB0yB,GAHL,sBAOT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,oBACP7nB,QAAS,kBAAM48E,GAAY,oBAAqB,EAAE,EAClDt0B,SAA2B,sBAAjB0yB,GAHL,sBAOT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,YACP7nB,QAAS,kBAAM48E,GAAY,YAAa,EAAE,EAC1Ct0B,SAA2B,cAAjB0yB,GAHL,cAMT3gF,EAAAA,GAAAA,KAACguD,GAAY,CAETxgC,MAAO,mBACP7nB,QAAS,kBAAM48E,GAAY,mBAAoB,EAAE,EACjDt0B,SAA2B,qBAAjB0yB,GAHL,8BAWzB3/E,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAG5CY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EAEDJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGif,SAAU,IAAKqgE,SAAU,IAAKnpB,iBAAkB,EAAGh0D,YAAa,UAAWkrB,UAAW,IAAKhQ,UAAW,IAAKva,gBAAiB,SAAWzG,UAE3JY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGyC,kBAAmB,IAAKpG,SAAA,EAC5CJ,EAAAA,GAAAA,KAACg/D,GAAU,CAAC1pD,YAAaA,GAAaC,eAAgBA,GAAgBilD,kBAAmBA,GAAmBC,kBAAmBA,KAgB/Hz5D,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAS3e,SAAA,EAC5CJ,EAAAA,GAAAA,KAACwuD,GAAY,CAEThhC,MAAO,UACP7nB,QAAS,kBAxdlC68E,EAwd0D,SAtdjFrB,GAAsB,SAAAmC,GAAS,OAAIA,IAAcd,EAAc,GAAKA,CAAW,IAC/ElB,IAAqB,SAAAgC,GAAS,OAAKA,CAAS,SAC5C5B,IAAmB,GAJG,IAACc,CAwdmE,EAC1Cv0B,SAAiC,WAAvBizB,EACVzyB,YAAYzuD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,UAAUyD,KAAM,KAC1EspD,eAAe1uD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,UAAUyD,KAAM,MALxE,WAQTpF,EAAAA,GAAAA,KAACwuD,GAAY,CAEThhC,MAAO,QACP7nB,QAAS,kBA1dpC68E,EA0d0D,OAxd/ErB,GAAsB,SAAAmC,GAAS,OAAIA,IAAcd,EAAc,GAAKA,CAAW,IAC/Ed,IAAmB,SAAA4B,GAAS,OAAKA,CAAS,SAC1ChC,IAAqB,GAJD,IAACkB,CA0diE,EACtCv0B,SAAiC,SAAvBizB,EACVzyB,YAAYzuD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,kBAAkBxD,MAAM,UAAUyD,KAAM,KACxEspD,eAAe1uD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,kBAAkBxD,MAAM,UAAUyD,KAAM,MALtE,iBAarBpF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGif,SAAU,IAAKqgE,SAAU,IAAKnpB,iBAAkB,EAAGh0D,YAAa,UAAWW,gBAAiB,QAASssD,uBAAwB,GAAK/yD,UAEtJJ,EAAAA,GAAAA,KAACu6D,GAAQ,CAACC,kBAAmBA,GAAmBC,kBAAmBA,SAK1E4lB,GACGrgF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,QAASxF,eAAgB,SAAUlB,WAAY,UAAYC,UAChGJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CACJ4sD,WAAS,EACT5tD,KAAK,KACLzD,MAAO,eAGfX,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGqd,UAAW,GAAIgQ,UAAWwd,EAAc,KAAO,IAAM,IAAKzvB,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,QAASxF,eAAgB,UAAYjB,UAElLJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAC+N,eAAa,EAAC+zD,YAAU,EAAAhjF,SAC/Bm4E,EAAiB70E,OAAS,EAAI,MAAQ1D,EAAAA,GAAAA,KAACs4E,GAAiB,SAKjEt3E,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGmC,YAAa,UAAWW,gBAAiB0xE,EAAiB70E,OAAS,EAAI,QAAU,UAAW6/E,wBAAyB,EAAG1hE,cAAe,GAAKzhB,SAAA,EAEhKY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,CAEpBm4E,EAAiB70E,OAAS,GAAwC,YAAnC80E,EAAoB98C,aACjD88C,EAAoBQ,aAAete,EAAqB6N,WACtDvoE,EAAAA,GAAAA,KAACigF,GAA2B,IAC7BvyB,EAAiB0M,aAAeme,EAAiB70E,OAAS,IAAK1D,EAAAA,GAAAA,KAACkgF,GAAsB,KAM3FlgF,EAAAA,GAAAA,KAACu7E,GAAc,CAAC9gB,kBAAmBA,EAAmB2e,UAAWh8E,KACjE4C,EAAAA,GAAAA,KAACq6E,GAAoB,QAGzBr6E,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE8sB,UAAW,IAAK/vB,eAAgB,WAAYlB,WAAY,UAAWC,SAE7Em4E,EAAiB70E,OAAS,EAAI,MAAQ1D,EAAAA,GAAAA,KAACwzD,GAAa,0BA0BzFxzD,EAAAA,GAAAA,KAACinB,GAAY,QAM7B,C,qyCCphVA,IAAAvqB,GAAkBC,EAAAA,QAAWC,IAAI,UAC7BuO,IADSzO,GAALG,MACa,WAEjBwoC,GAAe,CACftgC,KAAM,IAGNy+E,GAAwB,YAExB5d,GAAe,GACfD,GAAkB,GAClB8d,GAAyB,GAEvB97E,IAAYC,EAAAA,EAAAA,gBAEZC,GAAwB,WAC1B,IAAM/H,EAAOquB,EAAAA,mBAAmBrmB,YAChC,OAAIhI,EACcA,EAAK1C,MAIZ,IAEf,EAEMsmF,GAAyB,SAAH3hF,GAA0B,IAApBoiC,EAAYpiC,EAAZoiC,aAE9BnnC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BoZ,EAAKlZ,EAAA,GAAEymF,EAAQzmF,EAAA,GACtBI,GAAkDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA1DsmF,EAAiBrmF,EAAA,GAAEsmF,EAAoBtmF,EAAA,GAC9CC,GAAwBP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAA7BoL,EAAInL,EAAA,GAAEoW,EAAOpW,EAAA,GACdqmF,GAAY5zE,EAAAA,EAAAA,QAAO,OAEzBvQ,EAAAA,EAAAA,YAAU,WAEN,IAAMklB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAG/D5kB,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACs8B,GACpC,GAAIA,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACfm7E,EAAgBznF,OAAOD,KAAKuM,GAC7BjN,KAAI,SAACs8D,GAAG,OAAAxwD,GAAA,CACLu8E,MAAO/rB,EAAI5tD,QAAQ,KAAM,MACtBzB,EAAKqvD,GAAI,IAEfrnC,MAAK,SAAC2C,EAAGG,GAAC,OAAKH,EAAE0yC,UAAYvyC,EAAEuyC,SAAS,IAC7CpyD,EAAQkwE,EACZ,MACIrhF,QAAQe,IAAI,oBAEpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,6BAA8BA,EAChD,IAGA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,IAEH,IAAMqL,EAAexL,EAAKsU,QAAO,SAACnD,GAAI,OAClCA,EAAKiqE,MAAMzsE,cAAc4F,SAAS/G,EAAMmB,cAAcpU,SACtD4W,EAAKsxC,QAAQ9zC,cAAc4F,SAAS/G,EAAMmB,cAAcpU,OAAO,IAsCnE,OAdAxD,EAAAA,EAAAA,YAAU,WAENmkF,EAAU9uE,QAAQ4gD,OAEtB,GAAG,CAACguB,KAEJjkF,EAAAA,EAAAA,YAAU,WAENmkF,EAAU9uE,QAAQ4gD,QAClBiuB,GAAqB,GACrBJ,GAAyB,EAE7B,GAAG,CAACt/C,KAGAnjC,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGlH,MAAO,QAASuD,SAAA,EACpCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACH2nB,MAAM,gBACN7nB,QAAS,WACLk+E,GAAsBD,EAE1B,EACAhgF,QAAS,UACTU,MAAO,CAAE2B,YAAa,GACtBlC,KAAM,EAAE3D,UAERY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EACNgb,cAAe,MACf1d,eAAgB,iBAClBjB,SAAA,EACEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASoC,KAAM,EAAGopB,UAAW,cAAe/sB,SAAEqjF,GAAyBA,GAAuBO,MAAQ,iBAC5HhkF,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACZ,MAAO,CAAE6oB,UAAW,YAAchoB,KAAMy+E,EAAoB,oBAAsB,sBAAuBjiF,MAAM,QAAQyD,KAAM,WAGpJpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEqd,QAASiiE,EAAoB,OAAS,QAASxjF,SAAA,EAC1DJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKyiE,EACLx/E,MAAO,CACHwhD,aAAc,OACdlkC,QAAS,GACT3b,YAAa,EACbC,YAAa,UACbnC,KAAM,GAEVuB,YAAY,YACZV,MAAOwR,EACPtR,aAAc,SAACC,GAAI,OAAK4+E,EAAS5+E,EAAK,KAE1C/E,EAAAA,EAAAA,KAACkzD,EAAAA,QAAQ,CACL5uD,MAAO,CAAExH,OAAQ,IAAKD,MAAO,OAAQoJ,YAAa,EAAGC,YAAa,UAAWQ,aAAc,GAC3FkC,KAAMwL,EACN0e,WAzEG,SAAHxpB,GAAA,IAAMyQ,EAAIzQ,EAAJyQ,KAAI,OACtB/Z,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACbjiC,MAAO,CACHsd,QAAS,GACTzC,kBAAmB,EACnBC,kBAAmB,OACnBviB,MAAO,OACPgK,gBAAiB,WAErBlB,QAAS,WAEL89E,GAAyB1pE,EACzB4pE,EAAS,IACTE,GAAqB,EAEzB,EAAEzjF,UAEFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAWvB,SAAE2Z,EAAKiqE,SACzB,EAwDPrvD,aAAc,SAAC5a,GAAI,OAAKA,EAAKiqE,MAAMpnD,UAAU,SAMjE,EAIM3V,GAAe,WACjB,IAAMC,GAAsB9e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6e,mBAAmB,IAG5E,OACIlnB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACH0a,SAAU,WACVC,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,qBACjB9C,KAAM,EACN4d,QAASuF,EAAsB,OAAS,OACxC7lB,eAAgB,SAChBlB,WAAY,UACdC,UAGFY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,SAAA,EACrEJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,WACzB3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,8BAMjD,EA0IMsa,GAAkB,eAAA7C,GAAA7V,EAAAA,EAAAA,UAAG,UAAO4G,GAC9B,IACI,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,GAEhClG,QAAQe,IAAI,+BAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,gBAXuBE,GAAA,OAAAkV,EAAA/U,MAAA,KAAAC,UAAA,KAclB0/B,GAAkB,SAAHxqB,GAAqK,IAA/J0O,EAAU1O,EAAV0O,WAAY/d,EAAIqP,EAAJrP,KAAM4kB,EAAKvV,EAALuV,MAAOC,EAAQxV,EAARwV,SAAUC,EAAYzV,EAAZyV,aAAcH,EAAWtV,EAAXsV,YAAaD,EAAmBrV,EAAnBqV,oBAAqBD,EAAOpV,EAAPoV,QAAS42D,EAAchsE,EAAdgsE,eACnHhlF,GADwJgZ,EAArBgV,sBAA2ChV,EAApBiV,sBAChHjwB,EAAAA,EAAAA,WAAS,IAAMiC,GAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GAAlDglC,EAAa/kC,EAAA,GAAEglC,EAAgBhlC,EAAA,GACtCG,GAAwCpC,EAAAA,EAAAA,WAAS,GAAMqC,GAAAnC,EAAAA,EAAAA,SAAAkC,EAAA,GAAhD8kC,EAAY7kC,EAAA,GAAE8kC,EAAe9kC,EAAA,GACpCkM,GAA8CvO,EAAAA,EAAAA,WAAS,GAAMwO,GAAAtO,EAAAA,EAAAA,SAAAqO,EAAA,GAAtD64B,EAAe54B,EAAA,GAAE64B,EAAkB74B,EAAA,GAC1CC,GAAkCzO,EAAAA,EAAAA,WAAS,GAAM0O,GAAAxO,EAAAA,EAAAA,SAAAuO,EAAA,GAA1C64B,EAAS54B,EAAA,GAAE64B,EAAY74B,EAAA,GAC9BE,GAAgD5O,EAAAA,EAAAA,WAAS,GAAM6O,GAAA3O,EAAAA,EAAAA,SAAA0O,EAAA,GAAxD44B,EAAgB34B,EAAA,GAAE44B,EAAmB54B,EAAA,GAC5CC,IAAkC9O,EAAAA,EAAAA,UAAS2L,GAAKoD,IAAA7O,EAAAA,EAAAA,SAAA4O,GAAA,GAAzC44B,GAAS34B,GAAA,GAAE44B,GAAY54B,GAAA,GAC9BC,IAA4ChP,EAAAA,EAAAA,WAAS,GAAMiP,IAAA/O,EAAAA,EAAAA,SAAA8O,GAAA,GAApD44B,GAAc34B,GAAA,GAAE44B,GAAiB54B,GAAA,GAElC64B,IAAwBzsB,EAAAA,EAAAA,cAC1B,SAACyB,GACG6qB,IAAa,SAACI,GAEV,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAEjE,GACJ,GACA,IAWEpB,IAAYL,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC1B,IAE2BkjC,EAFrBC,GAAc9iC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcu2D,GAAiB52D,GAC5D+X,QAAqB/rB,EAAAA,EAAAA,QAAO8rB,GAC9BC,EAAaz8B,UAEbi8B,IAAgC,OAAnBM,EAAAE,EAAax8B,aAAM,EAAnBs8B,EAAsBzX,KAAa,GAExD,IAAG,CAACC,EAAciX,KAUZvnB,IAAa9E,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC3B0iC,GAAoB,GAEpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,UACU/Y,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcu2D,GAAiB52D,IAAQ7qB,EAAAA,EAAAA,SAAA,GAAKirB,EAAWkX,KACtFD,GAAoB,GACpBR,GAAiB,GACjBM,GAAa,GAGb,IAAMzoB,EAAU,CACZvY,QAAQ,IAAKgqB,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,IACrEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,IAAIiW,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,KAAIjW,eAC7DiW,EAAK,YAAWjW,eACnB,IAAIiW,EAAK,aAAYjW,cACrB,UAAUA,cACViW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAI/BmD,GAAmBqB,EAEvB,CAAE,MAAOtZ,GACLiiC,GAAoB,GACpBY,KACA5iC,QAAQD,MAAMA,EAClB,CAGJ,IAAG,CAACirB,EAAciX,GAAWlX,EAAUJ,IAGjCkY,IAAsBjtB,EAAAA,EAAAA,cAAY,WACpCwsB,IAAkB,GAClBnsB,KACAurB,GAAiB,EAErB,GAAG,CAACD,EAAeY,KAEbW,IAAuBltB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YACrCkiC,GAAiB,GACjBY,IAAkB,EAEtB,IAAG,CAACb,EAAeY,KAQbY,IAAqBntB,EAAAA,EAAAA,cAAY,WACnC8rB,GAAgB,GAChBoB,KACAV,IAAkB,EAGtB,GAAG,IAEGY,IAAsBptB,EAAAA,EAAAA,cAAY,WAAO,IAADqtB,EAC1CvB,GAAgB,GAChBmB,KACmB,OAAnBI,EAAApY,EAAYvY,UAAZ2wB,EAAqBpa,OACzB,GAAG,CAAC4Y,IAEEyB,IAA6BttB,EAAAA,EAAAA,cAAY,WAC3CgsB,GAAmB,GAEnBiB,IACJ,GAAG,CAAClB,IAEEwB,IAA4BvtB,EAAAA,EAAAA,cAAY,WAC1CgsB,GAAmB,GACnBkB,KACApB,GAAgB,GAChBU,IAAkB,EAGtB,GAAG,CAACT,EAAiBF,EAAcU,KAE7BiB,IAAsBxtB,EAAAA,EAAAA,cAAY,WACpCksB,GAAa,GACbN,GAAiB,GACjBY,IAAkB,EACtB,GAAG,CAACP,EAAWN,EAAeY,KAExBS,IAAuBhtB,EAAAA,EAAAA,cAAY,WACrCksB,GAAa,GACbN,GAAiB,EACrB,GAAG,CAACK,EAAWN,IAET8B,GAAe,eAAA9sB,GAAAjX,EAAAA,EAAAA,UAAG,YAAa,IAADikC,EAE1Br9B,EAA0B,OAAtBq9B,EAAG1Y,EAAYvY,cAAO,EAAnBixB,EAAqBrhC,MAC5BshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAGpD+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEvD,GAAa,KAAT1S,EAAa,CAEb87B,GAAoB,GAEpB,IACI,IAAM0B,GAAqB/vB,EAAAA,EAAAA,YAAWqX,EAAcu2D,GAC9C9+C,GAAc9iC,EAAAA,EAAAA,KAAI+jC,EAAoB/Y,SACtCxP,EAAAA,EAAAA,QAAOsnB,GAAW3iC,EAAAA,EAAAA,SAAA,GAAKirB,EAAW4Y,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAImZ,KAAc,CAAEI,OAAO,IAE7E,IAAMvqB,EAAU,CACZvY,QAAQ,IAAKgqB,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,QACjEvR,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,IAAIiW,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,SAAQjW,eAC7DiW,EAAK,UAASjW,eACjB,IAAIiW,EAAK,WAAUjW,cACnB,QAAQA,cACRiW,EAAMjW,cACN8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG/BmD,GAAmBqB,GACnB2oB,GAAoB,GAEpBmB,KAIAnjC,QAAQe,IAAI,0BAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,kCAAmCA,GACjDiiC,GAAoB,EACxB,CACJ,CAMJ,IAAC,kBAhEoB,OAAAzrB,EAAAnW,MAAA,KAAAC,UAAA,KAkErB,OACI/B,EAAAA,EAAAA,MAAAmoB,EAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACoB,eAAe,SAASlB,WAAY,aAAcugB,YAAa,EAAEtgB,SAEhEykC,IAKE7kC,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,MAJ7BpF,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS4/B,GAAoBnlC,UAC3CJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAoBC,KAAM,EAAGzD,MAAM,eAStF3B,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ0jB,EACRpjB,QAAS2kB,GAAqBplC,UAC9BY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UAC/BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAEumB,OAElC3mB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAChEY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,OAAQ2lB,QAAS,SAASzlB,SAAA,EAC9BJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACE,WAAY,WAAWC,UACxBJ,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS8/B,GAAmBrlC,UAAEJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAG1G3B,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,EAAEtG,UAElEJ,EAAAA,EAAAA,KAACymC,EAAAA,QAAiB,CACdniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAM+7B,GACNhQ,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAAtZ,GAAA,IAAGO,EAAIP,EAAJO,KAAM4sB,EAAIntB,EAAJmtB,KAAI,OAErB3lC,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGH,QAAS,sBAAuBub,kBAAmB,EAAGC,kBAAmB,eAAgByG,QAAS,MAAOxkB,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EAClKJ,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMo/B,GAAsBhrB,EAAK,EAAC3Z,UAACJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eAElH3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,KACrD/Z,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CAACkhC,UAAWD,EAAKvmC,UAACJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBAC3E,EAGV6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAqC,GAAA,IAAG/R,EAAI+R,EAAJ/R,KAAI,OAAOg8B,GAAah8B,EAAK,GAAE,cAOzE5I,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC5BY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS6/B,GAAsBtpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WACnGJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASmgC,GAAqB/hC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,oBAO5FJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQgkB,EACR1jB,QAASykB,GAAqBllC,UAC9BY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UAC/BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAEjCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAEhEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC5BY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2/B,GAAsBppB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACnGJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASyX,GAAYrZ,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWslC,EAAgCrkC,SAAC,mBAO/HJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ4jB,EACRtjB,QAAS6kB,GACTlQ,gBAAiBjI,EAAYntB,UAC7BY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UAC/BY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,OAAKotB,QAEtCxtB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAEhEJ,EAAAA,EAAAA,KAAC8mC,EAAAA,QAAQ,CACL9/B,UAAW,SACX9G,EAAG,OACHmhB,IAAKkM,EACLwZ,WAAS,EACTjiC,aAAcwoB,EACd0Z,WAAY,EACZ1hC,YAAY,+CAGpBtF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC5BY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+/B,GAAqBxpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WAClGJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASogC,GAAiB5mC,YAAWslC,EAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,mBAOpIJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8jB,EAAiBxjB,QAAS+kB,GAA2BxlC,UAChEY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAChCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACrDJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAItDJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACP5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACTJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,yBAG/BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,8BAKlCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UAClDJ,EAAAA,EAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASigC,GAA4B/jC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAarI,EAIM8jF,GAAoB,WAEtB,IAAMt1C,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAEvCsL,GAAWK,EAAAA,EAAAA,eACjB4D,GAAsDnP,EAAAA,EAAAA,UAASumF,IAAsBn3E,GAAAlP,EAAAA,EAAAA,SAAAiP,EAAA,GAA9E+3E,EAAmB93E,EAAA,GAAE+3E,EAAsB/3E,EAAA,GAG5Ck2E,EAAc,SAAC8B,GACbA,IAAWF,GACXh8E,GAASkP,EAAAA,EAAAA,yBAAuB,IAEpClP,GAASm8E,EAAAA,EAAAA,mBAAkBD,IAC3BD,EAAuBC,EAC3B,EAEA,OACIrjF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUtD,MAAO+xC,GAAe,IAAM,MAAQ,OAAQxuC,SAAA,EAE7HY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS,kBAAM48E,EAAY,YAAY,EACvCj+E,MAAO,CACHoC,aAAc,EACd3C,KAAM,EACN6d,QAAS,GACTH,OAAQ,GACRxb,YAAa,EACbC,YAAa,QACbW,gBAAyC,cAAxBs9E,EAAsC,UAAY,cACnEplE,cAAe,OACjB3e,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,OACLC,KAAM,GACNzD,MAA+B,cAAxBwiF,EAAsC,QAAU,WAE3DnkF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAA+B,cAAxBwiF,EAAsC,QAAU,QAAS1iF,WAAY,OAAQme,WAAY,GAAKxf,SAAC,kBAEzHY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS,kBAAM48E,EAAY,QAAQ,EACnCj+E,MAAO,CACHoC,aAAc,EACd3C,KAAM,EACN6d,QAAS,GACTH,OAAQ,GACRxb,YAAa,EACbC,YAAa,QACbW,gBAAyC,UAAxBs9E,EAAkC,UAAY,cAC/DplE,cAAe,OACjB3e,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,kBACLC,KAAM,GACNzD,MAA+B,UAAxBwiF,EAAkC,QAAU,WAEvDnkF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAA+B,UAAxBwiF,EAAkC,QAAU,QAAS1iF,WAAY,OAAQme,WAAY,GAAKxf,SAAC,eAKjI,EAEMmkF,GAAe,SAAHvpE,GAAkBA,EAAZ2H,aAAiD,IAAnC6hE,EAAQxpE,EAARwpE,SAAUpxE,EAAI4H,EAAJ5H,KAAMY,EAAWgH,EAAXhH,YAClDzH,GAA4CtP,EAAAA,EAAAA,UAAS,IAAGuP,GAAArP,EAAAA,EAAAA,SAAAoP,EAAA,GAAjDk4E,EAAcj4E,EAAA,GAAEk4E,EAAiBl4E,EAAA,GAClCm4E,GAAav8E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMs8E,UAAU,IAEpDx8E,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACV94D,EAAe,GAKb+4D,EAAgB,eAAAzoE,GAAAra,EAAAA,EAAAA,UAAG,UAAOwiF,EAAUriF,GAEtC,IAAMgX,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAC1ExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAErC,GAAiB,KAAbnZ,GAAgC,8BAAbA,EAA0C,CAG7D,IAGM4iF,EAHuBP,EAASn6E,QAAQ,MAAO,KAGV,UAE3C,IACI,GAAI0hB,GAAgB04D,EAEhBt8E,GAASkP,EAAAA,EAAAA,yBAAuB,QAG/B,OAEK9U,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBuiF,EAAc5iF,IAGnBgG,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAAM0E,EAAU,CACZvY,QAAQ,oBAAqB6hC,GAAatgC,KAAI,cAAcy/E,EAAQ,gBAAgBriF,EAAQ,IAC5F8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,oBAAoB8tB,GAAatgC,KAAI,cAAcy/E,EAAQ,oBAAoBriF,EAAQ,KAAIoV,cAC3F,SAASA,cACT,iBAAiBA,cACjB,UAAUA,cACVitE,EAASjtE,cACTpV,EAASoV,cACT8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,iCAEzC,IAEJsC,QAAQe,IAAI,8BAChB,CAGJ,CAAE,MAAOhB,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBA7EqBzU,EAAAC,GAAA,OAAAwZ,EAAAvZ,MAAA,KAAAC,UAAA,KAmHtB,OAlCApD,EAAAA,EAAAA,YAAU,WAEN,IAAMslF,EAAoBT,EAASn6E,QAAQ,MAAO,KAE5Cwa,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAG/D5kB,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACzL,GACpC,GAAIA,EAAiBzQ,SAAU,CAE3B,IAAMswB,EAAW7f,EAAiBxQ,OAAOq8E,GAEzC,GAAIhsD,GAAYA,EAAS46C,OAAQ,CAC7B,IAAMA,EAAS56C,EAAS46C,OACxB6Q,EAAkB7Q,GAClB9nD,EAAe8nD,CACnB,MAEI6Q,EAAkB,4BAE1B,MAEIhiF,QAAQe,IAAI,oBAEpB,IACI,SAAChB,GAEGC,QAAQD,MAAM,2BAA4BA,EAC9C,IAGJ,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,CAACqK,EAAMY,KAGNhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOliB,MAAO,QAAUuD,SAAA,EAGlDJ,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAe28D,EACf18D,cAAe,SAACnjB,GACZ8/E,EAAkB9/E,EACtB,EACAhB,QAAS,QACTG,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,EAAAA,KAACqoB,EAAAA,UAAS,KACrBjoB,SAEDukF,EAAWhpF,KAAI,SAACoe,GAAI,OACjB/Z,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,OAG5D/Z,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMm/E,EAAiBN,EAAUC,EAAe,EACzDU,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,SAIjE,EAEMggF,GAA6B,SAAHzoE,GAAiE,IAA3D9f,EAAK8f,EAAL9f,MAAqBwoF,GAAF1oE,EAAZgG,aAAyBhG,EAAX0oE,aAAajyE,EAAIuJ,EAAJvJ,KAAMY,EAAW2I,EAAX3I,YAC1EtH,GAAwEzP,EAAAA,EAAAA,UAAS,IAAG0P,GAAAxP,EAAAA,EAAAA,SAAAuP,EAAA,GAA7E44E,EAA4B34E,EAAA,GAAE44E,EAA+B54E,EAAA,GAC9D64E,GAA2Bp9E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMm9E,wBAAwB,IAEhFr9E,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACV94D,EAAe,GAKb05D,EAAuB,eAAA1oE,GAAA/a,EAAAA,EAAAA,UAAG,UAAOqjF,EAAaljF,GAEhD,IAAMgX,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAC1ExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SACrC,GAAiB,KAAbnZ,EAAiB,CAGjB,IAGMujF,EAHuBL,EAAYh7E,QAAQ,MAAO,KAGC,wBAEzD,IACI,GAAI0hB,GAAgBu5D,EAEhBn9E,GAASkP,EAAAA,EAAAA,yBAAuB,QAG/B,OAEK9U,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBkjF,EAA4BvjF,IAGjCgG,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAAM0E,EAAU,CACZvY,QAAQ,wBAAyB6hC,GAAatgC,KAAI,cAAcsgF,EAAW,oBAAoBljF,EAAQ,IACvG8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,wBAAwB8tB,GAAatgC,KAAI,cAAcsgF,EAAW,oBAAoBljF,EAAQ,KAAIoV,cAClG,aAAaA,cACb,qBAAqBA,cACrB,UAAUA,cACV8tE,EAAY9tE,cACZpV,EAASoV,cACT8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,qCAEzC,IAEJsC,QAAQe,IAAI,kCAChB,CAGJ,CAAE,MAAOhB,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBA5E4BkC,EAAAG,GAAA,OAAAqD,EAAAja,MAAA,KAAAC,UAAA,KAiH7B,OAjCApD,EAAAA,EAAAA,YAAU,WAEN,IAAMgmF,EAAuBN,EAAYh7E,QAAQ,MAAO,KAElDwa,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAG/D5kB,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACzL,GACpC,GAAIA,EAAiBzQ,SAAU,CAE3B,IAAMi9E,EAAcxsE,EAAiBxQ,OAAO+8E,GAE5C,GAAIC,GAAeA,EAAYC,qBAAsB,CACjD,IAAMA,EAAuBD,EAAYC,qBACzCN,EAAgCM,GAChC95D,EAAe85D,CAGnB,CACJ,MAEInjF,QAAQe,IAAI,oBAEpB,IACI,SAAChB,GAEGC,QAAQD,MAAM,2BAA4BA,EAC9C,IAGJ,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,CAACqK,EAAMY,KAGNhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOliB,MAAOA,GAASuD,SAAA,EAGjDJ,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAew9D,EACfv9D,cAAe,SAACnjB,GACZ2gF,EAAgC3gF,EACpC,EACAhB,QAAS,QACTG,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,EAAAA,KAACqoB,EAAAA,UAAS,KACrBjoB,SAEDolF,EAAyB7pF,KAAI,SAACoe,GAAI,OAC/B/Z,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,OAG5D/Z,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAM8/E,EAAwBJ,EAAaC,EAA6B,EACjFH,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,SAIjE,EAEM0gF,GAAuB,SAAHzoE,GAAiE,IAA3DxgB,EAAKwgB,EAALxgB,MAAqBwoF,GAAFhoE,EAAZsF,aAAyBtF,EAAXgoE,aAAajyE,EAAIiK,EAAJjK,KAAMY,EAAWqJ,EAAXrJ,YACpEpH,GAA4D3P,EAAAA,EAAAA,UAAS,IAAG4P,GAAA1P,EAAAA,EAAAA,SAAAyP,EAAA,GAAjEm5E,EAAsBl5E,EAAA,GAAEm5E,EAAyBn5E,EAAA,GAClDo5E,GAAqB79E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM49E,kBAAkB,IACpE99E,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACV94D,EAAe,GAKbm6D,EAA2B,eAAA9nE,GAAApc,EAAAA,EAAAA,UAAG,UAAOqjF,EAAaljF,GAEpD,IAAMgX,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAC1ExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SACrC,GAAiB,KAAbnZ,EAAiB,CAGjB,IAGMgkF,EAHuBd,EAAYh7E,QAAQ,MAAO,KAGL,kBAEnD,IACI,GAAI0hB,GAAgBg6D,EAEhB59E,GAASkP,EAAAA,EAAAA,yBAAuB,QAG/B,OAEK9U,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtB2jF,EAAsBhkF,IAG3BgG,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAAM0E,EAAU,CACZvY,QAAQ,6BAA8B6hC,GAAatgC,KAAI,cAAcsgF,EAAW,yBAAyBljF,EAAQ,IACjH8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,6BAA6B8tB,GAAatgC,KAAI,cAAcsgF,EAAW,yBAAyBljF,EAAQ,KAAIoV,cAC5G,kBAAkBA,cAClB,aAAaA,cACb,0BAA0BA,cAC1B,OAAOA,cACP,UAAUA,cACVpV,EAASoV,cACT8tE,EAAY9tE,cACZ8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,0CAEzC,IAEJsC,QAAQe,IAAI,uCAChB,CAGJ,CAAE,MAAOhB,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBA9EgCyD,EAAAqB,GAAA,OAAAiC,EAAAtb,MAAA,KAAAC,UAAA,KAsHjC,OAtCApD,EAAAA,EAAAA,YAAU,WAEN,IAAMgmF,EAAuBN,EAAYh7E,QAAQ,MAAO,KAGlDwa,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAG/D5kB,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACzL,GACpC,GAAIA,EAAiBzQ,SAAU,CAE3B,IAAMi9E,EAAcxsE,EAAiBxQ,OAAO+8E,GAE5C,GAAIC,GAAeA,EAAY55B,eAAgB,CAC3C,IAAMA,EAAiB45B,EAAY55B,eACnCg6B,EAA0Bh6B,GAC1BjgC,EAAeigC,CAEnB,MAEIg6B,EAA0B,6BAC1Bj6D,EAAe,2BAEvB,MAGIrpB,QAAQe,IAAI,oBAEpB,IACI,SAAChB,GAEGC,QAAQD,MAAM,2BAA4BA,EAC9C,IAGJ,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,CAACqK,EAAMY,KAGNhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOliB,MAAOA,GAASuD,SAAA,EACjDJ,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAM,CACHC,cAAei+D,EACfh+D,cAAe,SAACnjB,GACZohF,EAA0BphF,EAC9B,EACAhB,QAAS,QACTG,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACXC,GAAI,WACJC,SAASpoB,EAAAA,EAAAA,KAACqoB,EAAAA,UAAS,KACrBjoB,SAED6lF,EAAmBtqF,KAAI,SAACoe,GAAI,OACzB/Z,EAAAA,EAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,OAG5D/Z,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMugF,EAA4Bb,EAAaU,EAAuB,EAC/EZ,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,SAIjE,EAwOMghF,GAAO,eAAAvmE,GAAA7d,EAAAA,EAAAA,UAAG,UAAOgkE,EAAU3a,EAAS4a,GACtC,IAAMphD,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAG/D04D,GAAc7jF,EAAAA,EAAAA,SAAA,GACfwjE,EAAW,CACR3a,QAASA,EACT4a,UAAWA,EACX4N,OAAQ,KAKhB,UACUh2D,EAAAA,EAAAA,QAAOgH,EAAQwhE,EAAgB,CAAE//C,OAAO,IAC9C5jC,QAAQe,IAAI,sCAEhB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,kCAAmCA,EACrD,CACJ,IAAC,gBApBY+Z,EAAAC,EAAAI,GAAA,OAAAgD,EAAA/c,MAAA,KAAAC,UAAA,KAuBPujF,GAAU,eAAArsD,GAAAj4B,EAAAA,EAAAA,UAAG,UAAOukF,EAAaV,EAAsB75B,EAAgBia,GACzE,IAAMphD,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAG/D04D,GAAc7jF,EAAAA,EAAAA,SAAA,GACf+jF,EAAc,CACXV,qBAAsBA,EACtB75B,eAAgBA,EAChBia,UAAWA,IAKnB,UACUpoD,EAAAA,EAAAA,QAAOgH,EAAQwhE,EAAgB,CAAE//C,OAAO,IAC9C5jC,QAAQe,IAAI,sCAEhB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,kCAAmCA,EACrD,CACJ,IAAC,gBApBewa,EAAAkB,EAAA8kC,EAAAgxB,GAAA,OAAAh6C,EAAAn3B,MAAA,KAAAC,UAAA,KAsBVyjF,GAAkB,SAAHjsD,GAAwC,IAAlCksD,EAA0BlsD,EAA1BksD,2BAEjBC,GAAyBt+E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMq+E,sBAAsB,IAG5EC,IAF2Bv+E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMm9E,wBAAwB,KAC3Dp9E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM49E,kBAAkB,KACjD/1E,EAAAA,EAAAA,QAAO,OAG1B/H,IAFkC+H,EAAAA,EAAAA,QAAO,OACbA,EAAAA,EAAAA,QAAO,OACxB1H,EAAAA,EAAAA,gBACXo8E,GAAQC,EAAAA,EAAAA,YACd/3E,GAAgD7P,EAAAA,EAAAA,WAAS,GAAM8P,GAAA5P,EAAAA,EAAAA,SAAA2P,EAAA,GAAxD85E,EAAgB75E,EAAA,GAAE85E,EAAmB95E,EAAA,GAwBtC+5E,EAAe,eAAAxuB,GAAAt2D,EAAAA,EAAAA,UAAG,YAAa,IAAD+kF,EAAAC,EAChCH,GAAoB,GACpB,IAAMxB,EAAsC,OAA3B0B,EAAGJ,EAAiB3xE,cAAO,EAAxB+xE,EAA0BniF,MACxC+gF,EAAuBN,EAAYh7E,QAAQ,MAAO,KAEhD6Q,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAErC,GAAwC,MAAZ,OAAxB0rE,EAAAL,EAAiB3xE,cAAO,EAAxBgyE,EAA0BpiF,OAC1B,UACU0hF,GAAWX,EAAsB,eAAgB,GAAI,KAC3D,IAAM5pE,EAAU,CACZvY,QAAQ,mBAAoB6hC,GAAatgC,KAAI,oBAAoBsgF,EAAW,iBAC5EppE,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,mBAAmB8tB,GAAatgC,KAAI,oBAAoBsgF,EAAW,kBAAiB9tE,cACpF,UAAUA,cACV,gBAAgBA,cAChB,QAAQA,cACR,UAAUA,cACV8tE,EAAY9tE,cACZ8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAIbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,iCAEzC,IAEJ+H,GAAS8+E,EAAAA,EAAAA,4BAA0B,IACnCJ,GAAoB,EACxB,CAAE,MAAOpkF,GACLC,QAAQD,MAAMA,EAClB,MAIAokF,GAAoB,EAI5B,IAAC,kBA3DoB,OAAAvuB,EAAAx1D,MAAA,KAAAC,UAAA,KA4ErB,OACI/C,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQmmE,EACR7lE,QAAS,WACL4lE,IACAE,EAAiB3xE,QAAQpQ,MAAQ,EACrC,EACAQ,KAAM,KAAKhF,UACXY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAEuC,gBAAiB,WAAazG,UAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,mBAC/FJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEiqD,eAAgB,GAAKnuD,SAAA,EAChCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,GAAK3D,UAClDJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACqhB,MAAI,EAACjhB,MAAO,QAASie,WAAY,EAAExf,SAAC,eAE9CJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKslE,EACL7hF,aAAc,kBAzBlB,SAACoiF,GACjB,IAAMn7D,EAAem7D,EAASlyE,QAAQpQ,MAChCuiF,EAAgBp7D,EAAa1hB,QAAQ,kBAAmB,IAC1D0hB,IAAiBo7D,GACjBD,EAASlyE,QAAQiF,eAAe,CAAElV,KAAMoiF,GAEhD,CAmB4CC,CAAYT,EAAiB,EACjDriF,MAAO,CACHwhD,aAAc,OACd/hD,KAAM,EACN6d,QAAS,EACT/a,gBAAiB,QACjBssD,uBAAwB,EACxBowB,wBAAyB,EACzBh+E,qBAAsB,UACtBW,YAAa,UACbD,YAAa,GAEjBX,YAAY,wBAMxBtF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,EAAAA,MAAC6E,EAAAA,OAAO4pD,MAAK,CAACxsC,QAAQ,QAAQ/hB,MAAM,IAAGd,SAAA,EACnCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,OAAQvW,QAAS,WAClC8gF,IACAE,EAAiB3xE,QAAQpQ,MAAQ,EACrC,EAAExE,SAAC,WACFwmF,GACI5mF,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAO,aAC1B3B,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWvW,QAASmhF,EAAgB1mF,SAAC,iBAUvF,EAEMinF,GAAe,WACjB,IAAMC,GAAiBl/E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMi/E,cAAc,IAElE,MAAuB,cAAnBA,GACOtnF,EAAAA,EAAAA,KAACunF,GAAc,IAEH,UAAnBD,GACOtnF,EAAAA,EAAAA,KAACwnF,GAAU,SADtB,CAGJ,EAGMC,GAA4B,SAAHzsD,GAAuF,IAAjF0sD,EAAoC1sD,EAApC0sD,qCAE3BC,GAFoG3sD,EAAnC4sD,qCAE9Bx/E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMs/E,gCAAgC,KAEtG16E,IADyB7E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMw/E,gBAAgB,KAC9C5qF,EAAAA,EAAAA,UAAS,KAAGiQ,GAAA/P,EAAAA,EAAAA,SAAA8P,EAAA,GAA7BrE,EAAIsE,EAAA,GAAE2G,EAAO3G,EAAA,GACpBE,GAA0CnQ,EAAAA,EAAAA,WAAS,GAAMoQ,GAAAlQ,EAAAA,EAAAA,SAAAiQ,EAAA,GACzDG,GADoBF,EAAA,GAAkBA,EAAA,IACEpQ,EAAAA,EAAAA,WAAS,IAAMuQ,GAAArQ,EAAAA,EAAAA,SAAAoQ,EAAA,GAAhD42B,EAAY32B,EAAA,GAAE42B,EAAe52B,EAAA,GACpCE,GAA8CzQ,EAAAA,EAAAA,WAAS,GAAM0Q,GAAAxQ,EAAAA,EAAAA,SAAAuQ,EAAA,GAC7DG,GADsBF,EAAA,GAAoBA,EAAA,IACR1Q,EAAAA,EAAAA,WAAS,IAAM6Q,GAAA3Q,EAAAA,EAAAA,SAAA0Q,EAAA,GACjDI,GADgBH,EAAA,GAAcA,EAAA,IACkB7Q,EAAAA,EAAAA,WAAS,IAAMiR,GAAA/Q,EAAAA,EAAAA,SAAA8Q,EAAA,GAAxDw2B,EAAgBv2B,EAAA,GAAEw2B,EAAmBx2B,EAAA,GAC5CC,GAA4ClR,EAAAA,EAAAA,WAAS,GAAMmR,GAAAjR,EAAAA,EAAAA,SAAAgR,EAAA,GAApC22B,GAAF12B,EAAA,GAAmBA,EAAA,IAClCjG,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,aAEdllF,EAAAA,EAAAA,YAAU,WAEN,IAAMgmF,EAAuBhgB,GAAgBt7D,QAAQ,MAAO,KAGtDwa,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAG/D5kB,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACzL,GACpC,GAAIA,EAAiBzQ,SAAU,CAE3B,IAAMi9E,EAAcxsE,EAAiBxQ,OAAO+8E,GAE5C,GAAIC,GAAeA,EAAYrgB,aAAc,CACzC,IAAMA,EAAeqgB,EAAYrgB,aACjC1xD,EAAQ0xD,EAEZ,MAEI1xD,EAAQ,GAEhB,MAGInR,QAAQe,IAAI,oBAEpB,IACI,SAAChB,GAEGC,QAAQD,MAAM,2BAA4BA,EAC9C,IAGJ,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,CAAC4+E,IAEJ,IAAM5iD,GAAwBzsB,EAAAA,EAAAA,cAC1B,SAACyB,GACGlG,GAAQ,SAACmxB,GAEL,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAEjE,GACJ,GACA,IAGE0rB,GAAqBntB,EAAAA,EAAAA,cAAY,WACnC8rB,GAAgB,GAChBsjD,IACA5iD,GAAkB,EAGtB,GAAG,IAEGY,GAAsBptB,EAAAA,EAAAA,cAAY,WACpC8rB,GAAgB,GAChBj8B,GAAS2/E,EAAAA,EAAAA,sCAAoC,GACjD,GAAG,IAEGC,GAAsB,eAAA3lD,GAAApgC,EAAAA,EAAAA,UAAG,UAAOG,GAElC,IAAMgX,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAC1E+W,GAAoB,GACpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAGrC,GAAqC,KAAjCmoE,GAAuBO,MAAc,CACrC,IAAM2B,EAAuBhgB,GAAgBt7D,QAAQ,MAAO,KACtD29E,EAAuBrC,EAAoB,gBAEjD,IAEI,IAAMxkC,QAAgB9nC,EAAAA,EAAAA,QAAOF,GAC7B,GAAIgoC,EAAQx4C,SAAU,CAAC,IAADs/E,EACZ1iB,GAAmD,OAApC0iB,EAAA9mC,EAAQv4C,OAAO+8E,SAAqB,EAApCsC,EAAsC1iB,eAAgB,GAG3E,GAAKA,EAAapoD,SAASsmE,GAAuBO,OA4C9CthF,QAAQe,IAAI,iDACZihC,GAAoB,OA7CkC,OAEhDniC,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBwlF,EAAiB,GAAAl7D,QAAAC,EAAAA,EAAAA,SAAOw4C,GAAY,CAAEke,GAAuBO,UAGlE,IAAMjoE,EAAU,CACZvY,QAAQ,yBAA0B6hC,GAAatgC,KAAI,YAAY0+E,GAAuBO,MAAK,cAAcre,GAAe,IACxH1pD,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,yBAAyB8tB,GAAatgC,KAAI,YAAY0+E,GAAuBO,MAAK,cAAcre,GAAe,KAAIpuD,cACnH,gBAAgBA,cAChB,UAAUA,cACV,sBAAsBA,cACtB,QAAQA,cACR,QAAQA,cACRksE,GAAuBO,MAAMzsE,cAC7BouD,GAAgBpuD,cAChB8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB2rE,IACA9C,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,sCAEzC,IAEJsC,QAAQe,IAAI,oCACZihC,GAAoB,GACpBgB,GAEJ,CAOJ,MACIhjC,QAAQe,IAAI,qBACZihC,GAAoB,EAE5B,CAAE,MAAOjiC,GACLC,QAAQD,MAAM,6BAA8BA,GAC5CiiC,GAAoB,EAExB,CACJ,MAEIv8B,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQe,IAAItB,EAIpB,IAAC,gBA3F2B2gF,GAAA,OAAA1gD,EAAAt/B,MAAA,KAAAC,UAAA,KA8FtBmlF,GAAuB,eAAAlkD,GAAAhiC,EAAAA,EAAAA,UAAG,UAAOG,GAEnC,IAAMgX,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAC1E+W,GAAoB,GACpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAGrC,GAAiB,KAAbnZ,EAAiB,CAGjB,IAGM6lF,EAHuBriB,GAAgBt7D,QAAQ,MAAO,KAGX,gBAEjD,UAGU9H,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBwlF,EAAoB7lF,IAGzBgG,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAAM0E,EAAU,CACZvY,QAAQ,2BAA4B6hC,GAAatgC,KAAI,cAAc4gE,GAAe,kBAClF1pD,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,2BAA2B8tB,GAAatgC,KAAI,cAAc4gE,GAAe,mBAAkBpuD,cAC3F,gBAAgBA,cAChB,UAAUA,cACV,wBAAwBA,cACxB,QAAQA,cACR,UAAUA,cACVouD,GAAgBpuD,cAChB8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB2rE,IACA9C,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,wCAEzC,IAEJsC,QAAQe,IAAI,sCACZihC,GAAoB,EAIxB,CAAE,MAAOjiC,GACLC,QAAQD,MAAM,6BAA8BA,GAC5CiiC,GAAoB,EACxB,CACJ,MAEIv8B,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQe,IAAItB,EAIpB,IAAC,gBA9E4BgmF,GAAA,OAAAnkD,EAAAlhC,MAAA,KAAAC,UAAA,KAkF7B,OACI/B,EAAAA,EAAAA,MAAAmoB,EAAAA,SAAA,CAAA/oB,SAAA,EAAEJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQonE,EACR9mE,QAAS6mE,EAAqCtnF,UAC9CY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UAC/BY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,oBAAkBulE,SAEnD3lE,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAChEY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,QAASuD,SAAA,EAC3BJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEnE,WAAY,YAAcC,UACrCJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS8/B,EAAmBrlC,UAACJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,iBAEhH3B,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGkC,YAAa,EAAGC,YAAa,UAAWQ,aAAc,GAAKtG,UAC/EJ,EAAAA,EAAAA,KAACymC,EAAAA,QAAiB,CACdniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAMA,EACN+rB,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAAmS,GAAA,IAAGlrB,EAAIkrB,EAAJlrB,KAAM4sB,EAAI1B,EAAJ0B,KAAI,OAErB3lC,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACTP,KAAM,EACN8C,gBAAiB,sBACjBsY,kBAAmB,EACnBC,kBAAmB,UACnBL,cAAe,MACf1d,eAAgB,SAChBlB,WAAY,UACdC,SAAA,EACEJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMo/B,EAAsBhrB,EAAK,EAAC3Z,UAACJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,gBAAkBC,KAAM,EAAGzD,MAAM,eACzH3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,QAAQvB,SAAE2Z,KACrD/Z,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CAACK,UAAWD,EAAKvmC,UAACJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,EAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWC,KAAM,EAAGzD,MAAM,gBACjF,EAGX6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAAykD,GAAA,IAAGn0D,EAAIm0D,EAAJn0D,KAAI,OAAOiL,EAAQjL,EAAK,GAAE,cAOpE5I,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC5BY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+hF,EAAsCxrE,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,UAClHqkC,GACIzkC,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAAC9B,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGwV,YAAa,UAAW/V,UAAQ,EAAA/F,UAC3EJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,GAAIzD,MAAO,QAASoC,KAAM,EAAG2C,aAAc,OAE7D1G,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAMuiF,GAAwBt/E,EAAK,EAAE7E,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGwV,YAAa,UAAU9b,SAAC,oBAOrIJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQ4jB,EACRtjB,QAAS6kB,EAAoBtlC,UAG7BY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UAC/BY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,iBAAeulE,SAEhD3lE,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAChEJ,EAAAA,EAAAA,KAAC0jF,GAAsB,CAACv/C,aAAcA,OAG1CnkC,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC5BY,EAAAA,EAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+/B,EAAqBxpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WAClGJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS,kBAAMoiF,IAAwB,EAAE5oF,YAAWslC,EAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGwV,YAAa,UAAU9b,SAAC,oBAOvL,EAEMgoF,GAAqB,SAAH/qB,GAA2C,IAArCgrB,EAA6BhrB,EAA7BgrB,8BACpBC,GAA4BlgF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMigF,yBAAyB,IACxF/5E,GAA0CtR,EAAAA,EAAAA,WAAS,GAAMuR,GAAArR,EAAAA,EAAAA,SAAAoR,EAAA,GAAlDg6E,EAAa/5E,EAAA,GAAEg6E,EAAgBh6E,EAAA,GAEhCi6E,EAAmB,eAAAxpB,GAAAj9D,EAAAA,EAAAA,UAAG,YACxBwmF,GAAiB,GACjB,IAAMrvE,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBACpE+6D,EAAqB/iB,GAAgBt7D,QAAQ,MAAO,KAGlD6Q,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,UACrC/Y,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GAChBkmF,GAAqBC,EAAAA,EAAAA,iBAErBvlF,MAAK,WACFV,QAAQe,IAAI,8BACZ4kF,IACAG,GAAiB,GACjB,IAAMzsE,EAAU,CACZvY,QAAQ,qBAAsB6hC,GAAatgC,KAAI,sBAAsB4gE,GAAe,iBACpF1pD,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,qBAAqB8tB,GAAatgC,KAAI,sBAAsB4gE,GAAe,kBAAiBpuD,cAC5F,UAAUA,cACV,kBAAkBA,cAClB,UAAUA,cACV,UAAUA,cACVouD,GAAgBpuD,cAChB8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAIbmD,GAAmBqB,EACvB,IACCzY,OAAM,SAACb,GACJC,QAAQD,MAAM,yBAA0BA,EAC5C,GAER,IAAC,kBAjDwB,OAAAw8D,EAAAn8D,MAAA,KAAAC,UAAA,KAmDzB,OAEI/C,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ+nE,EAA2BznE,QAASwnE,EAA8BjoF,UAC7EY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,qBACdJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAC,2DAGZJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAQ3e,SAAA,EAC3CJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACbjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GACnF9b,QAAS0iF,EAA8BjoF,UAEvCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAY/sB,SAAC,SAE1DmoF,GACIvoF,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACdjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GAAKrhB,UAC3FJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,GAAIzD,MAAO,aAE1B3B,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACdjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GACnF9b,QAAS8iF,EAAoBroF,UAE7BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAY/sB,SAAC,mBAYvF,EAEMmnF,GAAiB,WAGnB,IAAMp/E,GAAWK,EAAAA,EAAAA,eAEX8K,EAAiB,CAAC,GAAI,GAAI,IAC1BkyE,GAA2Bp9E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMm9E,wBAAwB,IAChFS,GAAqB79E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM49E,kBAAkB,IAC1Et3E,GAAwB1R,EAAAA,EAAAA,UAAS,IAAG2R,GAAAzR,EAAAA,EAAAA,SAAAwR,EAAA,GAA7B/F,EAAIgG,EAAA,GAAEiF,EAAOjF,EAAA,GACpBE,GAAwB7R,EAAAA,EAAAA,UAAS,GAAE8R,GAAA5R,EAAAA,EAAAA,SAAA2R,EAAA,GAA5BsE,EAAIrE,EAAA,GAAEsE,EAAOtE,EAAA,GACpBG,GAAwCjS,EAAAA,EAAAA,UAASqW,EAAe,IAAGnE,GAAAhS,EAAAA,EAAAA,SAAA+R,EAAA,GAA5DuE,EAAYtE,EAAA,GAAEuE,EAAevE,EAAA,GACpCc,GAAsChT,EAAAA,EAAAA,UAAS,IAAGkT,GAAAhT,EAAAA,EAAAA,SAAA8S,EAAA,GAA3C+D,EAAW7D,EAAA,GAAE8D,EAAc9D,EAAA,GAClCG,GAAwCrT,EAAAA,EAAAA,UAAS,IAAGsT,GAAApT,EAAAA,EAAAA,SAAAmT,EAAA,GAA/B+D,GAAF9D,EAAA,GAAiBA,EAAA,IAE9Bq4E,GAAiB14E,EAAAA,EAAAA,QAAO,MACxB24E,GAAiB34E,EAAAA,EAAAA,QAAO,IACxB00E,GAAQC,EAAAA,EAAAA,YACRiE,GAAkC54E,EAAAA,EAAAA,QAAO,MACzC64E,GAA4B74E,EAAAA,EAAAA,QAAO,MACnC0+B,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,OAE7C8C,EAAAA,EAAAA,YAAU,WACN0T,EAAQ,EACZ,GAAG,CAACI,IAEJ,IAAM4K,GAAWC,EAAAA,EAAAA,UAAQ,WACrB,OAAO1V,EAAKsU,QAAO,SAACnD,GAAI,OACpBA,EAAKsxC,QAAQ9zC,cAAc4F,SAASnJ,EAAYuD,gBAChDwC,EAAKiyC,eAAez0C,cAAc4F,SAASnJ,EAAYuD,gBACvDwC,EAAK8rE,qBAAqBtuE,cAAc4F,SAASnJ,EAAYuD,gBAC7DwC,EAAKksD,UAAUrpC,WAAWzf,SAASnJ,EAAY,GAEvD,GAAG,CAACA,EAAapL,IAEX2V,GAAgBD,EAAAA,EAAAA,UAAQ,WAC1B,IAAME,EAAapL,EAAOK,EACpBgL,EAAWD,EAAa/K,EAC9B,OAAO4K,EAASK,MAAMF,EAAYC,EACtC,GAAG,CAACrL,EAAMK,EAAcO,EAAapL,EAAMyV,IAGrCM,IAAexE,EAAAA,EAAAA,WAAS,WAAO,IAAD6uE,EAChC/0E,EAAqC,OAAvB+0E,EAACJ,EAAe5zE,cAAO,EAAtBg0E,EAAwBpkF,MAC3C,GAAG,IAEG4Z,GAAapL,EAAOK,EACpBgL,GAAW7U,KAAKgV,IAAIJ,GAAa/K,EAAc7K,EAAKlF,SAmD1D/D,EAAAA,EAAAA,YAAU,WACN,IAAMklB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBACrExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAGhC,IAAMtO,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACs8B,GACpC,GAAIA,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACfm7E,EAAgBznF,OAAOD,KAAKuM,GAC7BjN,KAAI,SAAAs8D,GAAG,OAAAxwD,GAAA,CACJ4jD,QAAS4M,EAAI5tD,QAAQ,KAAM,MACxBzB,EAAKqvD,GAAI,IAEfrnC,MAAK,SAAC2C,EAAGG,GAAC,OAAKH,EAAE0yC,UAAYvyC,EAAEuyC,SAAS,IAC7CpyD,EAAQkwE,GACR1vE,EAAgB0vE,GAChB57E,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,MACI3U,QAAQe,IAAI,oBAGpB,IAAG,SAAChB,GACAC,QAAQD,MAAM,6BAA8BA,EAEhD,IAGA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,IAGH,IAAMkgF,GAA4B,WAE9B9gF,GAAS8+E,EAAAA,EAAAA,4BAA0B,GAEvC,EAEMR,GAA6B,WAE/Bt+E,GAAS8+E,EAAAA,EAAAA,4BAA0B,GAEvC,EAGMW,GAAsC,SAACriB,EAAcla,GAEvDljD,GAAS2/E,EAAAA,EAAAA,sCAAoC,IAC7C3/E,GAAS+gF,EAAAA,EAAAA,qBAAoB3jB,IAE7BI,GAAkBta,CACtB,EAGMq8B,GAAuC,WAEzCv/E,GAAS2/E,EAAAA,EAAAA,sCAAoC,GACjD,GAEAnoF,EAAAA,EAAAA,YAAU,WACN4e,EAAc7H,SAAQ,SAAAqD,GAClB8uE,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAQmV,EAAKksD,UAAYlsD,EAAKksD,UAAY,CACnF,GAGJ,GAAG,CAAC1nD,EAAeqwB,IAGnB,IAAMu6C,GAAsB,eAAAnjD,GAAAhkC,EAAAA,EAAAA,UAAG,UAAOqjF,EAAaljF,EAAU+kF,GAEzD,IACQhsE,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAE/BnC,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAE1E,GADAxlB,GAASkP,EAAAA,EAAAA,yBAAuB,IACf,KAAblV,EAAiB,CAGjB,IAGMinF,EAHuB/D,EAAYh7E,QAAQ,MAAO,KAGV,aAE9C,UAEU9H,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtB4mF,EAAiBjnF,IAKtB,IAAM4Z,EAAU,CACZvY,QAAQ,wBAAyB6hC,GAAatgC,KAAI,cAAcsgF,EAAW,oBAAoBljF,EAAQ,KACvG8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,wBAAwB8tB,GAAatgC,KAAI,cAAcsgF,EAAW,oBAAoBljF,EAAQ,KAAIoV,cAClG,OAAOA,cACP,aAAaA,cACb,qBAAqBA,cACrB,gBAAgBA,cAChB,QAAQA,cACR,UAAUA,cACV8tE,EAAY9tE,cACZ8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbqtE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,sCAEzC,IAEJsa,GAAmBqB,GACnB5T,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQe,IAAI,kCAChB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,6BAA8BA,EAEhD,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBAzE2BgyE,EAAAC,EAAAC,GAAA,OAAAvjD,EAAAljC,MAAA,KAAAC,UAAA,KA+EtBymF,GAA4B,SAACzkF,EAAMgV,GAErC,IAAMyjB,EAAez4B,EAAKsF,QAAQ,UAAW,IAAIqU,MAAM,EAAG,GAE1DmqE,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAQ44B,CAEjD,EAKMisD,GAA+B,SAAC3hE,GAElC3f,GAASuhF,EAAAA,EAAAA,+BAA6B,IACtC/jB,GAAkB79C,CAEtB,EAEMugE,GAAgC,WAElClgF,GAASuhF,EAAAA,EAAAA,+BAA6B,GAE1C,EAEMC,GAAqB,eAAAjjD,GAAA1kC,EAAAA,EAAAA,UAAG,UAAOG,EAAU4pB,EAAcs5D,GAGzD,IAAMlsE,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,gBAC1ExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SACrC,GAAiB,KAAbnZ,EAAiB,CAGjB,IAGMynF,EAHuBvE,EAAYh7E,QAAQ,MAAO,KAGV,aAE9C,IACI,GAAI0hB,GAAgB5pB,EAEhBgG,GAASkP,EAAAA,EAAAA,yBAAuB,QAG/B,OAEK9U,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBonF,EAAiBznF,IAGtBgG,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC,IAAM0E,EAAU,CACZvY,QAAQ,uBAAwB6hC,GAAatgC,KAAI,cAAcsgF,EAAW,mBAAmBljF,EAAQ,IACrG8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,uBAAuB8tB,GAAatgC,KAAI,cAAcsgF,EAAW,mBAAmBljF,EAAQ,KAAIoV,cAChG,YAAYA,cACZ,aAAaA,cACb,oBAAoBA,cACpB,UAAUA,cACVpV,EAASy6B,WAAWrlB,cACpB8tE,EAAY9tE,cACZ8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,oCAEzC,IAEJsC,QAAQe,IAAI,iCAChB,CAGJ,CAAE,MAAOhB,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBA9E0BwyE,EAAAC,EAAAC,GAAA,OAAArjD,EAAA5jC,MAAA,KAAAC,UAAA,KAgF3B,OACI/C,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,SACKwuC,GAAe,MACZ5tC,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsd,QAAS,IAAKxhB,UACzBJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKunE,EACL/jF,gBAAiB8Z,GACjBra,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAC7GD,YAAY,SACZ0kF,cAAc,SACdC,eAAe,YAKvBjqF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,GAAIiqB,WAAY,EAAG5O,cAAe,EAAG1hB,WAAY,cAAeC,UAC9FY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAASsjF,GACT3kF,MAAO,CACHoC,aAAc,EACdkb,QAAS,GACT3b,YAAa,EACbC,YAAa,QACbW,gBAAiB,UACjBkY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,UAClBjB,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMC,KAAM,GAAIzD,MAAO,WAC3C3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASF,WAAY,OAAQme,WAAY,GAAIxf,SAAC,sBAK5EY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHya,cAAe,MACf1d,eAAgB,gBAChB8d,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjB+a,QAAS,GACTlb,aAAc,EACd4Y,UAAW,IACblf,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAKxhB,UAClCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGhtB,QAAS,GAAKxhB,UAC3DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAE3CY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGhtB,QAAS,EAAG7C,cAAe,OAAS3e,SAAA,EACjFJ,EAAAA,EAAAA,KAACyiC,GAAe,CACZwhD,eAAe,sBACf52D,QAAQ,0BACRC,oBAjUoB,WAAO,IAAD48D,EAC5ClkC,EAAuD,OAA1CkkC,EAAGpB,EAAgC9zE,cAAO,EAAvCk1E,EAAyCtlF,MAC/D,GAAIohD,EAAe,CACf,IAAMhY,EAAUgY,EACX7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACV2iC,EAAgC9zE,QAAQiF,eAAe,CAAElV,KAAMipC,GACnE,CACJ,EAyT4BzgB,YAAau7D,EACbt7D,MAAM,aACNC,SAAU,2BACVC,aAAcC,EAAAA,0BACdhH,WAAW,2BACX/d,KAAM48E,KAEVxlF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGO,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,mBAEpDY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGhtB,QAAS,EAAG7C,cAAe,OAAS3e,SAAA,EACjFJ,EAAAA,EAAAA,KAACyiC,GAAe,CACZwhD,eAAe,sBACf52D,QAAQ,oBACRC,oBA1Vc,WAAO,IAAD68D,EACtCnkC,EAAiD,OAApCmkC,EAAGpB,EAA0B/zE,cAAO,EAAjCm1E,EAAmCvlF,MACzD,GAAIohD,EAAe,CACf,IAAMhY,EAAUgY,EACX7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACV4iC,EAA0B/zE,QAAQiF,eAAe,CAAElV,KAAMipC,GAC7D,CACJ,EAkV4BzgB,YAAaw7D,EACbv7D,MAAM,kBACNC,SAAU,qBACVC,aAAcC,EAAAA,0BACdhH,WAAW,2BACX/d,KAAMq9E,KAEVjmF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,wBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAavK,MAAI,EAAAxiB,SAAC,iBAEhEJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGhtB,QAAS,GAAIxhB,UAC1DJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAavK,MAAI,EAAAxiB,SAAC,oBAGhEJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAYC,UAClFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAK/CY,EAAAA,EAAAA,MAACwgB,EAAAA,QAAS,CAACC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGrhB,SAAA,CACjCme,EAAc5iB,KAAI,SAACoe,EAAM6T,GAAK,OAC3B5sB,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAEDtpD,MAAO,CACHP,KAAM,EACNgb,cAAe,MACf1d,eAAgB,gBAChBlB,WAAY,SACZgf,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjBC,gBAAiB,IACnB1G,SAAA,EACFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,GAAKwY,YAAU,EAAAnrE,SAAE2Z,EAAKsxC,WAChErqD,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAG7vB,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,GAAK3yD,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK,SAACA,GAAG,OAAMwnE,EAAe7zE,QAAQ+E,EAAKsxC,SAAWhqC,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASigB,gBAAiB,UAAWD,gBAAiB,GAChIhiB,gBAAiB,kBAAMskF,GAAuBpvE,EAAKsxC,QAASw9B,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAOikF,EAAe,EACvH/jF,aAAc,SAACC,GAAI,OAAKykF,GAA0BzkF,EAAMgV,EAAK,KAEjE/Z,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMwjF,GAAuBpvE,EAAKsxC,QAASw9B,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAOikF,EAAe,EAC/G1D,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAM7DpF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGmkB,iBAAkB,GAAI3yD,UACnEJ,EAAAA,EAAAA,KAAColF,GAA0B,CAACvoF,MAAO,MAAO8lB,aAAc5I,EAAK8rE,qBAAsBR,YAAatrE,EAAKsxC,QAASj4C,KAAMA,EAAMY,YAAaA,OAG3IhU,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAGmkB,iBAAkB,GAAI3yD,UACnEJ,EAAAA,EAAAA,KAAC8lF,GAAoB,CAACjpF,MAAO,MAAO8lB,aAAc5I,EAAKiyC,eAAgBq5B,YAAatrE,EAAKsxC,QAASj4C,KAAMA,EAAMY,YAAaA,OAG/HhU,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,EAAG1xD,eAAgB,SAAUlB,WAAY,UAAYC,UAC3FJ,EAAAA,EAAAA,KAACoqF,EAAAA,QAAc,CACXhlF,KAAM,GACNilF,UAAU,UACVC,YAAY,UACZC,eAAgB,CAAEtkF,YAAa,GAC/BukF,UAAW,CAAEC,WAAY,uBACzB3lB,YAAW/qD,EAAKgpD,WAAYhpD,EAAKgpD,UACjCp9D,QAAS,SAACm/D,GAAS,OAAK6kB,GAAsB7kB,IAAW/qD,EAAKgpD,WAAYhpD,EAAKgpD,UAAmBhpD,EAAKsxC,QAAQ,OAGvHrrD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM6qC,EAAc,KAAO,EAAI,EAAGmkB,iBAAkB,GAAI3yD,UACzFY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS,kBAAMiiF,GAAoC7tE,EAAKwrD,aAAexrD,EAAKwrD,aAAe,GAAIxrD,EAAKsxC,QAAQ,EAC5G/mD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAGqY,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,SAAA,EAE9JJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,kBACLC,KAAM,GACNzD,MAAO,WAEX3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE6oB,UAAW,SAAUxrB,MAAO,QAASie,WAAY,GAAKxf,SAAC,qBAM9EJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAG1xD,eAAgB,SAAUlB,WAAY,UAAYC,UAEpKJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6+E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAClEJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAM8jF,GAA6B1vE,EAAKsxC,QAAQ,EACzD85B,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,GACTuL,UAAW,SACXrwB,OAAQ,OACRuE,eAAgB,SAChBlB,WAAY,UACdC,UACFJ,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAvFpDwoB,EA+FF,KAEX5tB,EAAAA,EAAAA,KAACwhB,EAAAA,QAAUS,WAAU,CACjB7O,KAAMA,EACN8O,cAAetY,KAAKuY,KAAK9D,EAAS3a,OAAS+P,GAC3C2O,aAAc,SAAChP,GAAI,OAAKC,EAAQD,EAAK,EACrCiP,MAAU7D,GAAa,EAAC,IAAIC,GAAQ,OAAOJ,EAAS3a,OACpD4P,eAAgBA,EAChBG,aAAcA,EACdC,gBAAiBA,EACjB4O,oBAAkB,EAClBC,aAAc,sBAGtBviB,EAAAA,EAAAA,KAACwmF,GAAe,CAACC,2BAA4BA,MAC7CzmF,EAAAA,EAAAA,KAACynF,GAAyB,CAACC,qCAAsCA,GAAsCE,oCAAqCA,MAC5I5nF,EAAAA,EAAAA,KAACooF,GAAkB,CAACC,8BAA+BA,SAMnDrnF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsd,QAAS,IAAKxhB,UACzBJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKunE,EACL/jF,gBAAiB8Z,GACjBra,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAC7GD,YAAY,SACZ0kF,cAAc,SACdC,eAAe,YAIvBjqF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,GAAIiqB,WAAY,EAAG5O,cAAe,EAAG1hB,WAAY,cAAeC,UAC9FY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAASsjF,GACT3kF,MAAO,CACHoC,aAAc,EACdkb,QAAS,GACT3b,YAAa,EACbC,YAAa,QACbW,gBAAiB,UACjBkY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,UAClBjB,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMC,KAAM,GAAIzD,MAAO,WAC3C3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASF,WAAY,OAAQme,WAAY,GAAIxf,SAAC,sBAQ5EY,EAAAA,EAAAA,MAACwgB,EAAAA,QAAS,CAACC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGrhB,SAAA,CACjCme,EAAc5iB,KAAI,SAACoe,EAAM6T,GAAK,OAC3B5sB,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAEDtpD,MAAO,CACHP,KAAM,EACNgb,cAAe,SACf9Y,YAAa,EACbC,YAAa,UACbW,gBAAiB,UACjB4a,OAAQ,IACVrhB,SAAA,EAEFY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEsb,WAAY,GAAIxf,SAAE2Z,EAAKsxC,gBAIzDrqD,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAE3CY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAG5zC,kBAAmB,EAAGC,kBAAmB,WAAahf,SAAA,EAExKJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAK,SAACA,GAAG,OAAMwnE,EAAe7zE,QAAQ+E,EAAKsxC,SAAWhqC,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,OAAQgK,gBAAiB,QAASigB,gBAAiB,UAAWD,gBAAiB,GACjIhiB,gBAAiB,kBAAMskF,GAAuBpvE,EAAKsxC,QAASw9B,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAOikF,EAAe,EACvH/jF,aAAc,SAACC,GAAI,OAAKykF,GAA0BzkF,EAAMgV,EAAK,KAEjE/Z,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMwjF,GAAuBpvE,EAAKsxC,QAASw9B,EAAe7zE,QAAQ+E,EAAKsxC,SAASzmD,MAAOikF,EAAe,EAC/G1D,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,gBAUjEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACpGJ,EAAAA,EAAAA,KAAColF,GAA0B,CAACvoF,MAAO,OAAQ8lB,aAAc5I,EAAK8rE,qBAAsBR,YAAatrE,EAAKsxC,QAASj4C,KAAMA,EAAMY,YAAaA,UAKhJhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,uBAG3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACpGJ,EAAAA,EAAAA,KAAC8lF,GAAoB,CAACjpF,MAAO,OAAQ8lB,aAAc5I,EAAKiyC,eAAgBq5B,YAAatrE,EAAKsxC,QAASj4C,KAAMA,EAAMY,YAAaA,UAIpIhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAG3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,SAAUgf,kBAAmB,EAAGC,kBAAmB,WAAahf,UAC1HJ,EAAAA,EAAAA,KAACoqF,EAAAA,QAAc,CACXhlF,KAAM,GACNilF,UAAU,UACVC,YAAY,UACZC,eAAgB,CAAEtkF,YAAa,GAC/BukF,UAAW,CAAEC,WAAY,uBACzB3lB,YAAW/qD,EAAKgpD,WAAYhpD,EAAKgpD,UACjCp9D,QAAS,SAACm/D,GAAS,OAAK6kB,GAAsB7kB,IAAW/qD,EAAKgpD,WAAYhpD,EAAKgpD,UAAmBhpD,EAAKsxC,QAAQ,UAI3HrqD,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,oBAG3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACpGJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,EAAGgvD,iBAAkB,GAAI3yD,UAChEY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS,kBAAMiiF,GAAoC7tE,EAAKwrD,aAAexrD,EAAKwrD,aAAe,GAAIxrD,EAAKsxC,QAAQ,EAC5G/mD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAGqY,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,SAAA,EAE9JJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,kBACLC,KAAM,GACNzD,MAAO,WAEX3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE6oB,UAAW,SAAUxrB,MAAO,QAASie,WAAY,GAAKxf,SAAC,0BAMtFY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAG3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,UAAYjB,UAChDJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,GAAK3yD,UAEpHJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGo/E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC3EJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAM8jF,GAA6B1vE,EAAKsxC,QAAQ,EACzD85B,cAAe,yBACf7gF,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAGqY,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,UAC9JJ,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBA5H5DwoB,EAmIF,KAEX5tB,EAAAA,EAAAA,KAACwhB,EAAAA,QAAUS,WAAU,CACjB7O,KAAMA,EACN8O,cAAetY,KAAKuY,KAAK9D,EAAS3a,OAAS+P,GAC3C2O,aAAc,SAAChP,GAAI,OAAKC,EAAQD,EAAK,EACrCiP,MAAU7D,GAAa,EAAC,IAAIC,GAAQ,OAAOJ,EAAS3a,OACpD4P,eAAgBA,EAChBG,aAAcA,EACdC,gBAAiBA,EACjB4O,oBAAkB,EAClBC,aAAc,sBAGtBviB,EAAAA,EAAAA,KAACwmF,GAAe,CAACC,2BAA4BA,MAC7CzmF,EAAAA,EAAAA,KAACynF,GAAyB,CAACC,qCAAsCA,GAAsCE,oCAAqCA,MAC5I5nF,EAAAA,EAAAA,KAACooF,GAAkB,CAACC,8BAA+BA,SAS3E,EAqbMqC,GAAe,SAAHxjD,GAAqC,IAA/ByjD,EAAuBzjD,EAAvByjD,wBAEdC,GAAsBxiF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMuiF,mBAAmB,IACtEC,GAAgB36E,EAAAA,EAAAA,QAAO,MACvBy2E,GAAmBz2E,EAAAA,EAAAA,QAAO,MAC1B/H,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACdn0E,GAAgDzT,EAAAA,EAAAA,WAAS,GAAM0T,GAAAxT,EAAAA,EAAAA,SAAAuT,EAAA,GAAxDk2E,EAAgBj2E,EAAA,GAAEk2E,EAAmBl2E,EAAA,GAEtCm2E,EAAe,eAAA3kB,GAAAngE,EAAAA,EAAAA,UAAG,YAAa,IAAD8oF,EAAAC,EAEhC,GADAlE,GAAoB,GACiB,MAAZ,OAArBiE,EAAAD,EAAc71E,cAAO,EAArB81E,EAAuBlmF,QAAoD,MAAZ,OAAxBmmF,EAAApE,EAAiB3xE,cAAO,EAAxB+1E,EAA0BnmF,OAAc,CACnC,OAA3BomF,EAAGrE,EAAiB3xE,UAAjBg2E,EAA0BpmF,MADkC,IAADomF,EAAAC,EAEzEzG,EAAgC,OAAxByG,EAAGJ,EAAc71E,cAAO,EAArBi2E,EAAuBrmF,MAClCqgF,EAAoBT,EAASn6E,QAAQ,MAAO,KAE1C6Q,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SACrC,IAAK,IAAD4vE,QACM9E,GAAQnB,EAA2C,OAA1BiG,EAAEvE,EAAiB3xE,cAAO,EAAxBk2E,EAA0BtmF,MAAO,MAClE,IAAMmX,EAAU,CACZvY,QAAQ,gBAAiB6hC,GAAatgC,KAAI,iBAAiBy/E,EAAQ,iBACnEvoE,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,gBAAgB8tB,GAAatgC,KAAI,iBAAiBy/E,EAAQ,kBAAiBjtE,cAC3E,OAAOA,cACP,aAAaA,cACb,QAAQA,cACR,UAAUA,cACVitE,EAASjtE,cACT8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAIbmD,GAAmBqB,GACnB6oE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,8BAEzC,IAGJ+H,GAASgjF,EAAAA,EAAAA,yBAAuB,IAChCtE,GAAoB,EACxB,CAAE,MAAOpkF,GACLC,QAAQD,MAAMA,EAClB,CACJ,MAEIokF,GAAoB,EAK5B,IAAC,kBA5DoB,OAAA1kB,EAAAr/D,MAAA,KAAAC,UAAA,KA8DfqkF,EAAc,SAACF,GACjB,IAAMn7D,EAAem7D,EAASlyE,QAAQpQ,MAChCuiF,EAAgBp7D,EAAa1hB,QAAQ,kBAAmB,IAC1D0hB,IAAiBo7D,GACjBD,EAASlyE,QAAQiF,eAAe,CAAElV,KAAMoiF,GAEhD,EAEA,OACInnF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQqqE,EACR/pE,QAAS,WACL8pE,IACAE,EAAc71E,QAAQpQ,MAAQ,EAClC,EACAQ,KAAM,KAAKhF,UACXY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACpe,MAAO,CAAEuC,gBAAiB,WAAazG,UAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,gBAC/FJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEiqD,eAAgB,GAAKnuD,SAAA,EAChCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,GAAK3D,UAClDJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACqhB,MAAI,EAACjhB,MAAO,QAASie,WAAY,EAAExf,SAAC,YAE9CJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKwpE,EACL/lF,aAAc,kBAAMsiF,EAAYyD,EAAc,EAC9CvmF,MAAO,CACHwhD,aAAc,OACd/hD,KAAM,EACN6d,QAAS,EACT/a,gBAAiB,QACjBssD,uBAAwB,EACxBowB,wBAAyB,EACzBh+E,qBAAsB,UACtBW,YAAa,UACbD,YAAa,GAEjBX,YAAY,gBAEhBtF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGub,UAAW,IAAMlf,UACjEJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACqhB,MAAI,EAACjhB,MAAO,QAASie,WAAY,EAAExf,SAAC,eAE9CJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKslE,EACL7hF,aAAc,kBAAMsiF,EAAYT,EAAiB,EACjDriF,MAAO,CACHwhD,aAAc,OACd/hD,KAAM,EACN6d,QAAS,EACT/a,gBAAiB,QACjBssD,uBAAwB,EACxBowB,wBAAyB,EACzBh+E,qBAAsB,UACtBW,YAAa,UACbD,YAAa,GAEjBX,YAAY,wBAMxBtF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,EAAAA,MAAC6E,EAAAA,OAAO4pD,MAAK,CAACxsC,QAAQ,QAAQ/hB,MAAM,IAAGd,SAAA,EACnCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,OAAQvW,QAAS,WAClCglF,IACAE,EAAc71E,QAAQpQ,MAAQ,EAClC,EAAExE,SAAC,WACFwmF,GACI5mF,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAO,aAC1B3B,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWvW,QAASmhF,EAAgB1mF,SAAC,iBAUvF,EAEMgrF,GAAkB,SAAH/oB,GAAwC,IAAlCgpB,EAA0BhpB,EAA1BgpB,2BACjBC,GAAyBljF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMijF,sBAAsB,IAClF16E,GAA0C3T,EAAAA,EAAAA,WAAS,GAAM4T,GAAA1T,EAAAA,EAAAA,SAAAyT,EAAA,GAAlD23E,EAAa13E,EAAA,GAAE23E,EAAgB33E,EAAA,GAEhC06E,EAAgB,eAAAC,GAAAxpF,EAAAA,EAAAA,UAAG,YACrBwmF,GAAiB,GACjB,IAAMrvE,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YACpE+6D,EAAqB9iB,GAAav7D,QAAQ,MAAO,KAG/C6Q,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,UACrC/Y,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GAChBkmF,GAAqBC,EAAAA,EAAAA,iBAErBvlF,MAAK,WACFV,QAAQe,IAAI,8BACZ4nF,IACA7C,GAAiB,GACjB,IAAMzsE,EAAU,CACZvY,QAAQ,kBAAmB6hC,GAAatgC,KAAI,mBAAmB6gE,GAAY,iBAC3E3pD,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACd,kBAAkB8tB,GAAatgC,KAAI,mBAAmB6gE,GAAY,kBAAiBruD,cACnF,OAAOA,cACP,eAAeA,cACf,UAAUA,cACV,UAAUA,cACVquD,GAAaruD,cACb8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAIbmD,GAAmBqB,EACvB,IACCzY,OAAM,SAACb,GACJC,QAAQD,MAAM,yBAA0BA,EAC5C,GAER,IAAC,kBAjDqB,OAAA+oF,EAAA1oF,MAAA,KAAAC,UAAA,KAmDtB,OAEI/C,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ+qE,EAAwBzqE,QAASwqE,EAA2BjrF,UACvEY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAAtiB,SAAC,kBACdJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAC,wDAGZJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAA1iB,UACTY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAQ3e,SAAA,EAC3CJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACbjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GACnF9b,QAAS0lF,EAA2BjrF,UAEpCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAY/sB,SAAC,SAE1DmoF,GACIvoF,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACdjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GAAKrhB,UAC3FJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAM,GAAIzD,MAAO,aAE1B3B,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACdjiC,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAG+a,OAAQ,GACnF9b,QAAS4lF,EAAiBnrF,UAE1BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAY/sB,SAAC,mBAYvF,EAIMonF,GAAa,WACf,IAAMr/E,GAAWK,EAAAA,EAAAA,eACXm8E,GAAav8E,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMs8E,UAAU,IACpDC,GAAQC,EAAAA,EAAAA,YACd9zE,GAAwB9T,EAAAA,EAAAA,UAAS,IAAG+T,GAAA7T,EAAAA,EAAAA,SAAA4T,EAAA,GAA7BnI,EAAIoI,EAAA,GAAE6C,EAAO7C,EAAA,GACpBG,GAAwBlU,EAAAA,EAAAA,UAAS,GAAEmU,GAAAjU,EAAAA,EAAAA,SAAAgU,EAAA,GAA5BiC,EAAIhC,EAAA,GAAEiC,EAAOjC,EAAA,GACdkC,EAAiB,CAAC,GAAI,GAAI,IAChC/B,GAAwCtU,EAAAA,EAAAA,UAASqW,EAAe,IAAG9B,GAAArU,EAAAA,EAAAA,SAAAoU,EAAA,GAA5DkC,EAAYjC,EAAA,GAAEkC,EAAelC,EAAA,GACpCG,GAAsC1U,EAAAA,EAAAA,UAAS,IAAG2U,GAAAzU,EAAAA,EAAAA,SAAAwU,EAAA,GAA3CqC,EAAWpC,EAAA,GAAEqC,EAAcrC,EAAA,GAC5Bg3E,GAAiB14E,EAAAA,EAAAA,QAAO,MACxBu7E,GAAoBv7E,EAAAA,EAAAA,QAAO,MAE3B24E,GAAiB34E,EAAAA,EAAAA,QAAO,IACxBw7E,GAAmBx7E,EAAAA,EAAAA,QAAO,IAC1By7E,GAAmBz7E,EAAAA,EAAAA,QAAO,IAC1B07E,GAAqB17E,EAAAA,EAAAA,QAAO,IAC5B27E,GAAmB37E,EAAAA,EAAAA,QAAO,IAC1B47E,GAAiB57E,EAAAA,EAAAA,QAAO,IACxB67E,GAAY77E,EAAAA,EAAAA,QAAO,IAEzB6B,GAA8C9U,EAAAA,EAAAA,UAAS,CAAC,GAAE+U,GAAA7U,EAAAA,EAAAA,SAAA4U,EAAA,GAEpD68B,GAFgB58B,EAAA,GAAoBA,EAAA,GAEtBrV,EAAAA,QAAWC,IAAI,UAAUC,OAEvC2sF,GAA4B,SAACzkF,EAAMgV,GAErC,IAAMyjB,EAAez4B,EAAKsF,QAAQ,UAAW,IAAIqU,MAAM,EAAG,GAE1DmqE,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAQ44B,CAE/C,EAEMwuD,GAA8B,SAACjnF,EAAMgV,GAEvC,IAAMyjB,EAAez4B,EAAKsF,QAAQ,UAAW,IAAIqU,MAAM,EAAG,GAE1DgtE,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQ44B,CAEjD,EAGMyuD,GAAgB,eAAA5kD,GAAArlC,EAAAA,EAAAA,UAAG,UAAOwiF,EAAUriF,EAAU+kF,EAAU15D,EAAOtrB,GAEjE,IACQgZ,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAE/BnC,GAAc9W,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YAE1E,GADAxlB,GAASkP,EAAAA,EAAAA,yBAAuB,IACf,KAAblV,EAAiB,CAGjB,IAGMsuE,EAHuB+T,EAASn6E,QAAQ,MAAO,KAGhB,IAAInI,EAEzC,UAEUK,EAAAA,EAAAA,WAAU4W,GAAW3W,EAAAA,EAAAA,SAAA,GACtBiuE,EAAQtuE,IAGb,IAAM4Z,EAAU,CACZvY,QAAYgqB,EAAK,cAAc6X,GAAatgC,KAAI,cAAcy/E,EAAQ,KAAKh3D,EAAK,QAAQrrB,EAAQ,KAChG8Z,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,eACXiW,EAAK,cAAc6X,GAAatgC,KAAI,cAAcy/E,EAAQ,KAAKh3D,EAAK,QAAQrrB,EAAQ,KAAIoV,cAC3F,OAAOA,eACP,GAAGiW,GAAQjW,eACRiW,EAAK,YAAWjW,cACnB,UAAUA,cACVitE,EAASjtE,cACT8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,gBAGbqtE,EAAM7mF,KAAK,CACPinF,OAAQ,WACJ,OAAOhlF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC5EY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAEotB,EAAM,6BAEhD,IAEJ9S,GAAmBqB,GACnB5T,GAASkP,EAAAA,EAAAA,yBAAuB,IAChC3U,QAAQe,IAAO+pB,EAAK,wBACxB,CAAE,MAAO/qB,GACLC,QAAQD,MAAM,kBAAkB+qB,EAAK,IAAK/qB,EAE9C,CACJ,MAEI0F,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAC,gBArEqB60E,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjlD,EAAAvkC,MAAA,KAAAC,UAAA,MAuEtBpD,EAAAA,EAAAA,YAAU,WACN0T,EAAQ,EACZ,GAAG,CAACI,IAEJ,IAAM4K,IAAWC,EAAAA,EAAAA,UAAQ,WACrB,OAAO1V,EAAKsU,QAAO,SAACnD,GAAI,OACpBA,EAAKsxC,QAAQ9zC,cAAc4F,SAASnJ,EAAYuD,gBAChDwC,EAAKiqE,MAAMzsE,cAAc4F,SAASnJ,EAAYuD,gBAC9CwC,EAAKksD,UAAUrpC,WAAWzf,SAASnJ,EAAY,GAEvD,GAAG,CAACA,EAAapL,IAEX2V,IAAgBD,EAAAA,EAAAA,UAAQ,WAC1B,IAAME,EAAapL,EAAOK,EACpBgL,EAAWD,EAAa/K,EAC9B,OAAO4K,GAASK,MAAMF,EAAYC,EACtC,GAAG,CAACrL,EAAMK,EAAcO,EAAapL,EAAMyV,KAGrCM,IAAexE,EAAAA,EAAAA,WAAS,WAAO,IAADoyE,EAChCt4E,EAAqC,OAAvBs4E,EAAC3D,EAAe5zE,cAAO,EAAtBu3E,EAAwB3nF,MAC3C,GAAG,IAEG4Z,GAAapL,EAAOK,EACpBgL,GAAW7U,KAAKgV,IAAIJ,GAAa/K,EAAc7K,EAAKlF,SAoB1D/D,EAAAA,EAAAA,YAAU,WACN,IAAMklB,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,sBAAuB,YACrExlB,GAASkP,EAAAA,EAAAA,yBAAuB,IAGhC,IAAMtO,GAAcG,EAAAA,EAAAA,YAAW2b,GAAQ,SAACs8B,GACpC,GAAIA,EAAQx4C,SAAU,CAClB,IAAMC,EAAOu4C,EAAQv4C,OACfm7E,EAAgBznF,OAAOD,KAAKuM,GAC7BjN,KAAI,SAAAs8D,GAAG,OAAAxwD,GAAA,CACJu8E,MAAO/rB,EAAI5tD,QAAQ,KAAM,MACtBzB,EAAKqvD,GAAI,IAEfrnC,MAAK,SAAC2C,EAAGG,GAAC,OAAKH,EAAE0yC,UAAYvyC,EAAEuyC,SAAS,IAC7CpyD,EAAQkwE,GAER57E,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,MACI3U,QAAQe,IAAI,qBACZ0E,GAASkP,EAAAA,EAAAA,yBAAuB,GAIxC,IAAG,SAAC5U,GACAC,QAAQD,MAAM,6BAA8BA,EAEhD,IAGA,OAAO,kBAAMsG,GAAc,CAC/B,GAAG,KAcHpJ,EAAAA,EAAAA,YAAU,WACN4e,GAAc7H,SAAQ,SAAAqD,GAClBgyE,EAAU/2E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAKokB,KAAOpkB,EAAKokB,KAAO,GAC9D0qD,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAKksD,UAAYlsD,EAAKksD,UAAY,EAC7EylB,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAKyyE,YAAczyE,EAAKyyE,YAAc,EACnFb,EAAiB32E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAK+zD,YAAc/zD,EAAK+zD,YAAc,EACnF8d,EAAmB52E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAKg0D,cAAgBh0D,EAAKg0D,cAAgB,EACzF8d,EAAiB72E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAKi0D,YAAcj0D,EAAKi0D,YAAc,EACnF8d,EAAe92E,QAAQ+E,EAAKiqE,OAAOp/E,MAAQmV,EAAK8zD,UAAY9zD,EAAK8zD,UAAY,CAIjF,GAGJ,GAAG,CAACtvD,KAEJ,IAAMkuE,GAAyB,WAE3BtkF,GAASgjF,EAAAA,EAAAA,yBAAuB,GAEpC,EAEMR,GAA0B,WAE5BxiF,GAASgjF,EAAAA,EAAAA,yBAAuB,GAEpC,EAEMuB,GAA4B,SAAC5kE,GAE/B3f,GAASwkF,EAAAA,EAAAA,4BAA0B,IACnC/mB,GAAe99C,CAEnB,EAEMujE,GAA6B,WAE/BljF,GAASwkF,EAAAA,EAAAA,4BAA0B,GAEvC,EAKA,OACI3sF,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,SACKwuC,GAAe,MACZ5tC,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsd,QAAS,IAAKxhB,UACzBJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKunE,EACL/jF,gBAAiB8Z,GACjBra,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAC7GD,YAAY,SACZ0kF,cAAc,SACdC,eAAe,YAKvBjqF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,GAAIiqB,WAAY,EAAG5O,cAAe,EAAG1hB,WAAY,cAAeC,UAC9FY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS8mF,GACTnoF,MAAO,CACHoC,aAAc,EACdkb,QAAS,GACT3b,YAAa,EACbC,YAAa,QACbW,gBAAiB,UACjBkY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,UAClBjB,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMC,KAAM,GAAIzD,MAAO,WAC3C3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASF,WAAY,OAAQme,WAAY,GAAIxf,SAAC,mBAI5EY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHya,cAAe,MACf1d,eAAgB,gBAChB8d,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjB+a,QAAS,GACTlb,aAAc,EACd4Y,UAAW,IACblf,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,mBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,gBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,YAG3CY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAG7C,cAAe,OAAQ3e,SAAA,EACvDJ,EAAAA,EAAAA,KAACyiC,GAAe,CACZwhD,eAAe,sBACf52D,QAAQ,YACRC,oBArIM,WAAO,IAADs/D,EAC9B5mC,EAAyC,OAA5B4mC,EAAGnB,EAAkBz2E,cAAO,EAAzB43E,EAA2BhoF,MACjD,GAAIohD,EAAe,CACf,IAAMhY,EAAUgY,EACX7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACVslC,EAAkBz2E,QAAQiF,eAAe,CAAElV,KAAMipC,GACrD,CACJ,EA6H4BzgB,YAAak+D,EACbj+D,MAAM,SACNC,SAAU,aACVC,aAAcC,EAAAA,0BACdhH,WAAW,uBACX/d,KAAM+7E,KAEV3kF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAYC,UAClFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,YAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAYC,UAClFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAK/CY,EAAAA,EAAAA,MAACwgB,EAAAA,QAAS,CAACC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGrhB,SAAA,CACjCme,GAAc5iB,KAAI,SAACoe,EAAM6T,GAAK,OAC3B5sB,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAEDtpD,MAAO,CACHP,KAAM,EACNgb,cAAe,MACf1d,eAAgB,gBAChBlB,WAAY,SACZgf,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjBC,gBAAiB,IACnB1G,SAAA,EACFJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,GAAKwY,YAAU,EAAAnrE,SAAE2Z,EAAKiqE,SAChEhkF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,EAAG5lC,UAAW,UAAYo+C,YAAU,EAAAnrE,SAAE2Z,EAAKsxC,WACrFrrD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,UAE7IY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGjsC,gBAAiB,WAAa1mB,SAAA,EAChJJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAAc,SAACC,GAAI,OAAKykF,GAA0BzkF,EAAMgV,EAAK,EAC7DlV,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO6E,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAOikF,EAAgB,aAAc,YAAY,EACxIxnE,IAAK,SAACA,GAAG,OAAMwnE,EAAe7zE,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACvD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,MAEvInzD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO6E,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAOikF,EAAgB,aAAc,YAAY,EAChI1D,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,eAMjEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAAc,SAACC,GAAI,OAAKinF,GAA4BjnF,EAAMgV,EAAK,EAC/DlV,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO0H,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO8mF,EAAkB,eAAgB,cAAc,EAChJrqE,IAAK,SAACA,GAAG,OAAMqqE,EAAiB12E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO0H,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO8mF,EAAkB,eAAgB,cAAc,EACxIvG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO2H,EAAiB32E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO+mF,EAAkB,eAAgB,cAAc,EAChJtqE,IAAK,SAACA,GAAG,OAAMsqE,EAAiB32E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO2H,EAAiB32E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO+mF,EAAkB,eAAgB,cAAc,EACxIxG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO4H,EAAmB52E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOgnF,EAAoB,iBAAkB,gBAAgB,EACxJvqE,IAAK,SAACA,GAAG,OAAMuqE,EAAmB52E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EAC3D/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO4H,EAAmB52E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOgnF,EAAoB,iBAAkB,gBAAgB,EAChJzG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO6H,EAAiB72E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOinF,EAAkB,eAAgB,cAAc,EAChJxqE,IAAK,SAACA,GAAG,OAAMwqE,EAAiB72E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO6H,EAAiB72E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOinF,EAAkB,eAAgB,cAAc,EACxI1G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO8H,EAAe92E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOknF,EAAgB,aAAc,YAAY,EACxIzqE,IAAK,SAACA,GAAG,OAAMyqE,EAAe92E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACvD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO8H,EAAe92E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOknF,EAAgB,aAAc,YAAY,EAChI3G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM6qC,EAAc,KAAO,EAAI,EAAG7vB,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,UACtKJ,EAAAA,EAAAA,KAACukF,GAAY,CAAC5hE,aAAc5I,EAAK85D,OAAQ2Q,SAAUzqE,EAAKiqE,MAAO5wE,KAAMA,EAAMY,YAAaA,OAG5FhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,GAAK3yD,SAAA,EACpHJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN9rB,WAAS,EAGT1lB,IAAK,SAACA,GAAG,OAAM0qE,EAAU/2E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EAClD/c,MAAO,CAAEwhD,aAAc,OAAQ/hD,KAAM,EAAGjH,OAAQ,GAAIyiB,YAAa,EAAG1Y,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,MAElJnzD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6+E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAClEJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO+H,EAAU/2E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOmnF,EAAW,OAAQ,OAAO,EAC3G5G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTuL,UAAW,SACXrwB,OAAQ,OACRuE,eAAgB,SAChBlB,WAAY,UACdC,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAK7DpF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAG1xD,eAAgB,SAAUlB,WAAY,UAAYC,UAEpKJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6+E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAClEJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAM+mF,GAA0B3yE,EAAKiqE,MAAM,EACpDmB,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,GACTuL,UAAW,SACXrwB,OAAQ,OACRuE,eAAgB,SAChBlB,WAAY,UACdC,UACFJ,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,SAASxD,MAAM,QAAQyD,KAAM,aAxMpDwoB,EAkNF,KAEX5tB,EAAAA,EAAAA,KAACwhB,EAAAA,QAAUS,WAAU,CACjB7O,KAAMA,EACN8O,cAAetY,KAAKuY,KAAK9D,GAAS3a,OAAS+P,GAC3C2O,aAAc,SAAChP,GAAI,OAAKC,EAAQD,EAAK,EACrCiP,MAAU7D,GAAa,EAAC,IAAIC,GAAQ,OAAOJ,GAAS3a,OACpD4P,eAAgBA,EAChBG,aAAcA,EACdC,gBAAiBA,EACjB4O,oBAAkB,EAClBC,aAAc,sBAGtBviB,EAAAA,EAAAA,KAAC0qF,GAAY,CAACC,wBAAyBA,MACvC3qF,EAAAA,EAAAA,KAACorF,GAAe,CAACC,2BAA4BA,SAI7CrqF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsd,QAAS,IAAKxhB,UACzBJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNxxC,IAAKunE,EACL/jF,gBAAiB8Z,GACjBra,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAC7GD,YAAY,SACZ0kF,cAAc,SACdC,eAAe,YAKvBjqF,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,GAAIiqB,WAAY,EAAG5O,cAAe,EAAG1hB,WAAY,cAAeC,UAC9FY,EAAAA,EAAAA,MAACulC,EAAAA,QAAgB,CACb5gC,QAAS8mF,GACTnoF,MAAO,CACHoC,aAAc,EACdkb,QAAS,GACT3b,YAAa,EACbC,YAAa,QACbW,gBAAiB,UACjBkY,cAAe,MACf5e,WAAY,SACZkB,eAAgB,UAClBjB,SAAA,EAEFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMC,KAAM,GAAIzD,MAAO,WAC3C3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASF,WAAY,OAAQme,WAAY,GAAIxf,SAAC,mBAI5EY,EAAAA,EAAAA,MAACwgB,EAAAA,QAAS,CAACC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGrhB,SAAA,CACjCme,GAAc5iB,KAAI,SAACoe,EAAM6T,GAAK,OAC3B5sB,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAEDtpD,MAAO,CACHP,KAAM,EACNgb,cAAe,SACf9Y,YAAa,EACbC,YAAa,UACbW,gBAAiB,UACjB4a,OAAQ,IACVrhB,SAAA,EAEFY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,GAAKwY,YAAU,EAAAnrE,SAAE2Z,EAAKiqE,cAIxEhjF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UAExJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGgvD,iBAAkB,GAAMwY,YAAU,EAAAnrE,SAAE2Z,EAAKsxC,gBAIzErqD,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,kBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UAExJJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,UAE7IY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGjsC,gBAAiB,WAAa1mB,SAAA,EAChJJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAAc,SAACC,GAAI,OAAKykF,GAA0BzkF,EAAMgV,EAAK,EAC7DlV,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO6E,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAOikF,EAAgB,aAAc,YAAY,EACxIxnE,IAAK,SAACA,GAAG,OAAMwnE,EAAe7zE,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACvD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,MAEvInzD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO6E,EAAe7zE,QAAQ+E,EAAKiqE,OAAOp/E,MAAOikF,EAAgB,aAAc,YAAY,EAChI1D,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,oBASzEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,mBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN/tD,aAAc,SAACC,GAAI,OAAKinF,GAA4BjnF,EAAMgV,EAAK,EAC/DlV,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO0H,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO8mF,EAAkB,eAAgB,cAAc,EAChJrqE,IAAK,SAACA,GAAG,OAAMqqE,EAAiB12E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO0H,EAAiB12E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO8mF,EAAkB,eAAgB,cAAc,EACxIvG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAQrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO2H,EAAiB32E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO+mF,EAAkB,eAAgB,cAAc,EAChJtqE,IAAK,SAACA,GAAG,OAAMsqE,EAAiB32E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO2H,EAAiB32E,QAAQ+E,EAAKiqE,OAAOp/E,MAAO+mF,EAAkB,eAAgB,cAAc,EACxIxG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAOrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,gBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO4H,EAAmB52E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOgnF,EAAoB,iBAAkB,gBAAgB,EACxJvqE,IAAK,SAACA,GAAG,OAAMuqE,EAAmB52E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EAC3D/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO4H,EAAmB52E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOgnF,EAAoB,iBAAkB,gBAAgB,EAChJzG,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAQrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO6H,EAAiB72E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOinF,EAAkB,eAAgB,cAAc,EAChJxqE,IAAK,SAACA,GAAG,OAAMwqE,EAAiB72E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACzD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO6H,EAAiB72E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOinF,EAAkB,eAAgB,cAAc,EACxI1G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAOrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,YAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,SAAA,EAE7IJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACNhuD,gBAAiB,kBAAMonF,GAAiBlyE,EAAKiqE,MAAO8H,EAAe92E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOknF,EAAgB,aAAc,YAAY,EACxIzqE,IAAK,SAACA,GAAG,OAAMyqE,EAAe92E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EACvD/c,MAAO,CAAEwhD,aAAc,OAAQlkC,QAAS,EAAG/kB,MAAO,MAAOgK,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,EAAGrsC,gBAAiB,UAAWD,gBAAiB,MAEvL7mB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,QAASs8E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAC5FJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO8H,EAAe92E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOknF,EAAgB,aAAc,YAAY,EAChI3G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACb/sB,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAQrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UAGxJJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAGlsD,gBAAiB,SAAUzG,UAC7IJ,EAAAA,EAAAA,KAACukF,GAAY,CAAC5hE,aAAc5I,EAAK85D,OAAQ2Q,SAAUzqE,EAAKiqE,MAAO5wE,KAAMA,EAAMY,YAAaA,YAKpGhT,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,YAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,GAAK3yD,SAAA,EACpHJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CACN9rB,WAAS,EAGT1lB,IAAK,SAACA,GAAG,OAAM0qE,EAAU/2E,QAAQ+E,EAAKiqE,OAAS3iE,CAAG,EAClD/c,MAAO,CAAEwhD,aAAc,OAAQ/hD,KAAM,EAAGjH,OAAQ,GAAIyiB,YAAa,EAAG1Y,gBAAiB,QAASq8E,oBAAqB,EAAG/vB,uBAAwB,MAElJnzD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE6+E,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UAClEJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAMsmF,GAAiBlyE,EAAKiqE,MAAO+H,EAAU/2E,QAAQ+E,EAAKiqE,OAAOp/E,MAAOmnF,EAAW,OAAQ,OAAO,EAC3G5G,cAAe,yBACf7gF,MAAO,CACHuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTuL,UAAW,SACXrwB,OAAQ,OACRuE,eAAgB,SAChBlB,WAAY,UACdC,UACFJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAOrEpE,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EAClCJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACjJJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,SAAU8d,kBAAmB,EAAGC,kBAAmB,WAAahf,UACxJJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOmkE,oBAAqB,EAAG/vB,uBAAwB,EAAGJ,iBAAkB,EAAG1xD,eAAgB,SAAUlB,WAAY,UAAYC,UACpKJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,OAAQsmF,qBAAsB,EAAGI,wBAAyB,GAAKnjF,UACjFJ,EAAAA,EAAAA,KAACklF,EAAAA,QAAkB,CACfv/E,QAAS,kBAAM+mF,GAA0B3yE,EAAKiqE,MAAM,EACpDmB,cAAe,yBACf7gF,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,EAAGqY,cAAe,MAAO1d,eAAgB,SAAUlB,WAAY,SAAUshB,OAAQ,GAAKrhB,UAC9JJ,EAAAA,EAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,SAASxD,MAAM,QAAQyD,KAAM,kBAnR5DwoB,EAiSF,KAEX5tB,EAAAA,EAAAA,KAACwhB,EAAAA,QAAUS,WAAU,CACjB7O,KAAMA,EACN8O,cAAetY,KAAKuY,KAAK9D,GAAS3a,OAAS+P,GAC3C2O,aAAc,SAAChP,GAAI,OAAKC,EAAQD,EAAK,EACrCiP,MAAU7D,GAAa,EAAC,IAAIC,GAAQ,OAAOJ,GAAS3a,OACpD4P,eAAgBA,EAChBG,aAAcA,EACdC,gBAAiBA,EACjB4O,oBAAkB,EAClBC,aAAc,sBAGtBviB,EAAAA,EAAAA,KAAC0qF,GAAY,CAACC,wBAAyBA,MACvC3qF,EAAAA,EAAAA,KAACorF,GAAe,CAACC,2BAA4BA,SAQrE,EAKe,SAASwB,KAEpB,IAAA16E,GAA0BlV,EAAAA,EAAAA,UAAS,IAAGmV,GAAAjV,EAAAA,EAAAA,SAAAgV,EAAA,GAAxB9U,GAAF+U,EAAA,GAAUA,EAAA,IAGtBG,GAFavT,EAAQ,OACPA,EAAQ,QACkB/B,EAAAA,EAAAA,WAAS,IAAMuV,GAAArV,EAAAA,EAAAA,SAAAoV,EAAA,GACvDI,GADmBH,EAAA,GAAiBA,EAAA,IACIvV,EAAAA,EAAAA,WAAS,IAAM2V,GAAAzV,EAAAA,EAAAA,SAAAwV,EAAA,GAEjDlT,GAFamT,EAAA,GAAiBA,EAAA,IAEnBlT,EAAAA,EAAAA,gBAEXyI,GAAWK,EAAAA,EAAAA,eAGjB0K,GAA0CjW,EAAAA,EAAAA,UAAS,IAAGkW,GAAAhW,EAAAA,EAAAA,SAAA+V,EAAA,GAGhDxI,GAHcyI,EAAA,GAAkBA,EAAA,IAGpB/K,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,KACxD26B,GAAatgC,KAAO2F,EACpB,IAAA6I,GAAwBtW,EAAAA,EAAAA,UAASyN,GAAU8I,GAAArW,EAAAA,EAAAA,SAAAoW,EAAA,GAApCpO,EAAIqO,EAAA,GAAE5H,EAAO4H,EAAA,GACpBG,GAAwB1W,EAAAA,EAAAA,UAAS,IAAG2W,GAAAzW,EAAAA,EAAAA,SAAAwW,EAAA,GAEpCG,GAFWF,EAAA,GAASA,EAAA,IAEwB3W,EAAAA,EAAAA,UAAS,KAAG8W,GAAA5W,EAAAA,EAAAA,SAAA2W,EAAA,GAExDI,GAFqBH,EAAA,GAAmBA,EAAA,IAEJ9W,EAAAA,EAAAA,UAASN,EAAAA,QAAWC,IAAI,UAAUC,QAAMsX,GAAAhX,EAAAA,EAAAA,SAAA+W,EAAA,GAKtE06B,GALWz6B,EAAA,GAAeA,EAAA,GAKZxX,EAAAA,QAAWC,IAAI,UAAUC,QAG7C8C,EAAAA,EAAAA,YAAU,WACNwI,GAASm8E,EAAAA,EAAAA,mBAAkBd,IAC/B,GAAG,KAGH7jF,EAAAA,EAAAA,YAAU,WAON,OANoBwuB,EAAAA,mBAAmBtuB,oBAAmB,SAAAC,GACjDA,GAEDL,EAAS,SAEjB,GAEJ,GAAG,IAaH,IAAMgJ,EAAuB,SAACC,GACtBA,EAASC,SACID,EAASE,OACAC,SAGlBC,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACH/qB,MAAK,WAEF3D,EAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,KAGRqG,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACH/qB,MAAK,WAEF3D,EAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,GAEZ,GAgBA9C,EAAAA,EAAAA,YAAU,WACN,IAAMoJ,EAfqB,WAAO,IAAD65E,EAC3B35E,EAAuC,OAAjC25E,EAAGz0D,EAAAA,mBAAmBrmB,kBAAW,EAA9B86E,EAAgCxlF,MAC/C,GAAI6L,EAAQ,CACR,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,GAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,EAE5C,CAEI,OAAO,WACHhJ,EAAS,SACb,CAER,CAGwB0J,GAEpB,OAAO,WAEHJ,GACJ,CACJ,GAAG,KAGHpJ,EAAAA,EAAAA,YAAU,WACN,IAAMyJ,EAAmBvB,KACrBuB,IACAC,EAAqBD,GACrB/L,EAAS+L,GAET0P,EADmB1P,GAG3B,GAAG,IAGH,IAAM0P,EAAsB,SAAC7W,GAK7B,EAIMoH,EAAoB,eAAA+jC,GAAAprC,EAAAA,EAAAA,UAAG,UAAO5E,GAChC,IACI,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,GAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC7B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,GAASwB,EAAAA,EAAAA,cAAaf,EAAKzD,MAE/B,MACIzC,QAAQe,IAAI,0BAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,8BAA+BA,EACjD,CACJ,IAAC,gBAjByBqqF,GAAA,OAAA1/C,EAAAtqC,MAAA,KAAAC,UAAA,KAiGpB8b,EAASxY,EAAAA,QAAWC,OAAO,CAC7BC,UAAW,CACPxC,KAAM,GAEV+a,MAAO,CACH/a,KAAM,KAId,OACI/C,EAAAA,EAAAA,MAAC2C,EAAAA,mBAAkB,CAAAvD,SAAA,EACfY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW/J,OAAQ,OAAQD,MAAO,OAAQkiB,cAAe,UAAanb,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE7JY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACA+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAG9BJ,EAAAA,EAAAA,KAACqf,EAAAA,QAAU,CACPlU,eAAgBA,MAEpBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,EAAI,IAAK/qC,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAEzGJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,EAAOC,UAGrB8vB,GAAe,MAAO5uC,EAAAA,EAAAA,KAAC+sF,EAAAA,QAAgB,CACpC5hF,eAAgBA,MAGpBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,IAAM,EAAG/qC,EAAG+qC,GAAe,IAAM,EAAI,GAAIjoC,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAE/HJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,EAAOC,WAEtB9e,EAAAA,EAAAA,MAzFI,SAAH2tC,GAAiC,IAA3BxoC,EAAIwoC,EAAJxoC,KAAM2a,EAAa6tB,EAAb7tB,cACzBxL,GAA8CrX,EAAAA,EAAAA,WAAS,GAAMsX,GAAApX,EAAAA,EAAAA,SAAAmX,EAAA,GAAtD2L,EAAe1L,EAAA,GAAE2L,EAAkB3L,EAAA,GAEpC4L,EAAc,WAChBD,GAAoBD,EACxB,EAEA,OACIjgB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UAC/CJ,EAAAA,EAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UACzBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQN,EACRO,QAAS,SAACC,GAAY,OAClBzf,EAAAA,EAAAA,MAACO,EAAAA,QAAIkG,GAAAA,GAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC7HJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,EAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC5H,EAEXkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAExCJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACrCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASrM,GAwD4B,CAAC+E,KAAMA,EAAM2a,cAxHnB,YAElBhX,EAAAA,EAAAA,SAAQqlB,EAAAA,oBAAoB/qB,MAAK,WAE7B3D,EAAS,UAETpC,EAAS,IACTuO,EAAQ,GACZ,IAAGtI,OAAM,WAET,GAGJ,QAiHYtD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAShb,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAS1EJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW/J,OAAQ,QAASsD,UACjEJ,EAAAA,EAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAEP,KAAM,GAAMipF,0BAA0B,SAAQ5sF,UAC/DY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBJ,EAAAA,EAAAA,KAACkkF,GAAiB,KAClBlkF,EAAAA,EAAAA,KAACqnF,GAAY,iBAgBjCrnF,EAAAA,EAAAA,KAACinB,GAAY,MAIzB,C,s0BCz0JA,IAAMgmE,EAAc,SAAHlrF,GAAiC,IAA3BoD,EAAIpD,EAAJoD,KAAM2a,EAAa/d,EAAb+d,cAC3B9iB,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAtDijB,EAAe/iB,EAAA,GAAEgjB,EAAkBhjB,EAAA,GAEpCijB,EAAc,WAClBD,GAAoBD,EACtB,EAEA,OACEjgB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UACjDJ,EAAAA,EAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UAC3BJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAO,CACNC,OAAQN,EACRO,QAAS,SAACC,GAAY,OACpBzf,EAAAA,EAAAA,MAACO,EAAAA,QAAIkG,EAAAA,EAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC/HJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,EAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC1H,EAETkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAE1CJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACvCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASvL,EA2DA,QAzDqB,SAAHkJ,GAA2C,IAArC6B,EAAc7B,EAAd6B,eAAgB2U,EAAaxW,EAAbwW,cAChCpV,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IAElDkkC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAIvCgiB,EAASxY,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,GAER+a,MAAO,CACL/a,KAAM,KAIV,OAEE/C,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACF+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAE9BJ,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,EAAG,EAAG,EAAG,KAAM2D,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAIlf,UAC7EJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CACJC,OAAQ,CAAEC,IAAK,mCACfG,MAAOua,EAAOC,MACd1a,WAAW,cAIdwqC,GAAe,MAAO5uC,EAAAA,EAAAA,KAAC+sF,EAAAA,QAAgB,CACtC5hF,eAAgBA,KAIlBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,IAAK,GAAI2D,EAAG,CAAC,EAAG,EAAG,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAC5GJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CACFC,OAAQ,CAAEC,IAAK,mCACfG,MAAOua,EAAOC,MACd1a,WAAW,eAIfpE,EAAAA,EAAAA,KAACitF,EAAW,CAAC9nF,KAAMuF,EAAWoV,cAAeA,MAInD,C,0oCCzCA,IAAApjB,EAA0BC,EAAAA,QAAWC,IAAI,UAEnC+K,GAFOjL,EAALG,MAAaH,EAANI,QAEG8K,EAAAA,EAAAA,iBACZC,EAAwB,WAC1B,IAAM/H,EAAOF,EAAAA,KAAKkI,YAClB,OAAIhI,EACcA,EAAK1C,MAIZ,IAEf,EASI+N,EAAiB,OAwCf8b,EAAe,WACjB,IAAMC,GAAsB9e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6e,mBAAmB,IAG5E,OACIlnB,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CACDtpD,MAAO,CACH0a,SAAU,WACVC,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,qBACjB9C,KAAM,EACN4d,QAASuF,EAAsB,OAAS,OACxC7lB,eAAgB,SAChBlB,WAAY,UACdC,UAGFY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,SAAA,EACrEJ,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,WACzB3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,8BAMjD,EAGM8sF,EAAY,WAEd,IAAM/kF,GAAWK,EAAAA,EAAAA,eACjBxL,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCmY,EAAQjY,EAAA,GACfI,GAD4BJ,EAAA,IACUD,EAAAA,EAAAA,UAAS,IAAEM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA1C2Y,EAAW1Y,EAAA,GAAE2Y,EAAc3Y,EAAA,GAClCC,GAAsCP,EAAAA,EAAAA,UAAS,MAAKQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAA7C8X,EAAW7X,EAAA,GAAE8X,EAAc9X,EAAA,GAClCwB,GAAwChC,EAAAA,EAAAA,UAAS,MAAKiC,GAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GAA/CyW,EAAYxW,EAAA,GAAEyW,EAAezW,EAAA,GACpCG,GAAoCpC,EAAAA,EAAAA,UAAS,IAAGqC,GAAAnC,EAAAA,EAAAA,SAAAkC,EAAA,GAAzCyW,EAAUxW,EAAA,GAAEiyD,EAAajyD,EAAA,GAC1B2yD,GAAiB/hD,EAAAA,EAAAA,QAAO,MACxBi9E,GAAW/kF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM8kF,QAAQ,IAChDv+C,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,OAE7C8C,EAAAA,EAAAA,YAAU,WACN,IAAMwW,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAEJpM,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACK,GAC/B,IAAMC,EAAmB,GACzBD,EAAUE,SAAQ,SAACC,GACfF,EAAiBG,KAAInP,EAAC,CAClB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IACAT,GAASilF,EAAAA,EAAAA,aAAY32E,IACrBlB,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IACtDiS,EAAgBa,EAAUM,KAAK,GACnC,IACA,OAAO,kBAAM/N,GAAc,CAE/B,GAAG,IAEH,IAAMgO,EAAa,eAAAhV,GAAAC,EAAAA,EAAAA,UAAG,YAElB,GAAmB,KAAf8T,EAAmB,CAGnB,IAAMK,GAAIC,EAAAA,EAAAA,QACNY,EAAAA,EAAAA,iBAAgBC,EAAAA,wBAAyB,SACzCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW5B,IACXiB,EAAAA,EAAAA,OAAMpB,IAGJqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,EAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAGpC,KAEK,CACD,IAAMlB,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,EAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW5B,IACXiB,EAAAA,EAAAA,OAAMpB,IAGJqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,EAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,CAEJ,IAAC,kBAvCkB,OAAAtV,EAAAe,MAAA,KAAAC,UAAA,KA0CbyU,EAAiB,eAAAlO,GAAAtH,EAAAA,EAAAA,UAAG,YACtB,GAAmB,KAAf8T,EAAmB,CAGnB,IAAMK,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBmB,EAAAA,EAAAA,WAAU/B,IACVgC,EAAAA,EAAAA,aAAYvC,IAIVqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,EAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAEpC,KAEK,CAED,IAAMlB,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,EAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBmB,EAAAA,EAAAA,WAAU/B,IACVgC,EAAAA,EAAAA,aAAYvC,IAGVqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,EAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,EAAAA,yBAAuB,GAEpC,CAGJ,IAAC,kBAnCsB,OAAA/N,EAAAxG,MAAA,KAAAC,UAAA,KAuCjB4U,EAAiB,SAACnB,GAGpB,IAAMC,EAAmB,GAEzBD,EAAUE,SAAQ,SAACC,GACfF,EAAiBG,KAAInP,EAAC,CAClB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IAEAT,GAASilF,EAAAA,EAAAA,aAAY32E,IAER,MAATD,GAAAA,EAAWM,KAAK,IAChBnB,EAAgBa,EAAUM,KAAK,IAEtB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IACxC6R,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,GAO9D,EAEM0T,EAAW,eAAAS,GAAA7V,EAAAA,EAAAA,UAAG,UAAOwU,EAAWsB,GAGlC,GAAKtB,EAAUuB,MA8BX,GAAkB,IAAdjC,EAAkB,CAClBI,EAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAEJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,EAAeK,EAEnB,KACK,CAED9B,EAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,EAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAEJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,EAAeK,EAEnB,KAvDkB,CAClB,IAAMvB,EAAmB,GACzBD,EAAUE,SAAQ,SAACC,GACfF,EAAiBG,KAAInP,EAAC,CAClB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEpB,IAIa,MAAT4N,GAAAA,EAAWM,KAAK,IAChBnB,EAAgBa,EAAUM,KAAK,IAEtB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IACxC6R,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IAGvC,QAAfoU,GACA5B,EAAeD,EAAc,GAEd,QAAf6B,GACA5B,EAAeD,EAAc,GAGjC9N,GAASilF,EAAAA,EAAAA,aAAY32E,GACzB,CAmCJ,IAAC,gBAhEgB9T,EAAAC,GAAA,OAAAiV,EAAA/U,MAAA,KAAAC,UAAA,KAmEXsqF,EAAc,eAAAp1E,GAAAjW,EAAAA,EAAAA,UAAG,YAEnBmG,GAASkP,EAAAA,EAAAA,yBAAuB,UAE1BN,GAKV,IAAC,kBATmB,OAAAkB,EAAAnV,MAAA,KAAAC,UAAA,KAWduqF,EAAkB,eAAAp1E,GAAAlW,EAAAA,EAAAA,UAAG,YAEvBmG,GAASkP,EAAAA,EAAAA,yBAAuB,UAE1BG,GAGV,IAAC,kBAPuB,OAAAU,EAAApV,MAAA,KAAAC,UAAA,MAUxBpD,EAAAA,EAAAA,YAAU,WAENwY,GAEJ,GAAG,CAACrC,IAEJ,IAAMqC,EAAU,eAAAC,GAAApW,EAAAA,EAAAA,UAAG,YAIf,GAFAmG,GAASkP,EAAAA,EAAAA,yBAAuB,IAEb,KAAfvB,EAAmB,CAEnBI,EAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAGJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,EAAeK,GACf7P,GAASkP,EAAAA,EAAAA,yBAAuB,GAIpC,KAEK,CAEDnB,EAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACNC,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,SACpCK,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,EAAWyB,gBAC/CjB,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAGJ6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,EAAeK,GACf7P,GAASkP,EAAAA,EAAAA,yBAAuB,GACpC,CACJ,IAAC,kBAnCe,OAAAe,EAAAtV,MAAA,KAAAC,UAAA,KAsDhB,OACI/B,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EACtBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,UACDJ,EAAAA,EAAAA,KAAC6yD,EAAAA,QAAS,CAACxxC,IAAK4wC,EAAgB3tD,MAAO,CAAEzH,MAAO,OAAQ+kB,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAClIV,gBArBU,WAAO,IAADu6D,EAEU,MAAZ,OAAtBA,EAAAnN,EAAej9C,cAAO,EAAtBoqD,EAAwBx6D,OACxB2sD,EAAcU,EAAej9C,QAAQpQ,MAAMzB,SAG3CouD,EAAc,IAEI,IAAdz7C,GACAqC,IAMZ,EAOgB7S,YAAY,SACZ0kF,cAAc,SACdxnD,aAAa,UACbynD,eAAe,YAGvBjpF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CACDtpD,MAAO,CACHya,cAAe,MACf1d,eAAgB,gBAChB8d,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjB+a,QAAS,EACTlb,aAAc,GAChBtG,SAAA,EACFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAE3CJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACjCJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,gBAG9C+sF,EAASxxF,KAAI,SAACoe,GAAI,OACf/Y,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAEDtpD,MAAO,CACHya,cAAe,MACf1d,eAAgB,gBAChBlB,WAAY,SACZgf,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiBkT,EAAKmC,YAAc,UAAY,UAChDpV,gBAAiB,GACjBqa,SAAU,GACZ/gB,SAAA,EACFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,UACtBJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEzH,MAAO,MAAO+iB,WAAY,GAAKxf,SAAE2Z,EAAKkC,eAEpEjc,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,UACrBY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEzH,MAAO,OAASuD,SAAA,CAAE2Z,EAAKvW,QAAQ,WAfxDuW,EAAKje,GAiBP,KAGXkF,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOliB,MAAO+xC,EAAc,IAAM,MAAQ,MAAOzhB,UAAW,UAAY/sB,SAAA,EAElGJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,UACrEJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACbjiC,MAAO,CAAEqd,QAAS1L,GAAe,EAAI,OAAS,QAC9CtQ,QAAS2nF,EAAmBltF,UAC5BJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,sBAAuBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UAC7FJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,kBAAkBC,KAAM,GAAIzD,MAAO,iBAMnE3B,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,sBAAuBH,aAAc,EAAG+a,OAAQ,GAAIG,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAWC,UACtJY,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,SAAWihB,MAAI,EAAAxiB,SAAA,CAAC,QAAM6V,QAGrEjW,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAYC,UACtEJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACb5gC,QAAS0nF,EAAejtF,UACxBJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,sBAAuBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UAC7FJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,gBAAgBC,KAAM,GAAIzD,MAAO,qBAoBjF,EAEM+Y,EAAkB,eAAA9B,GAAA5W,EAAAA,EAAAA,UAAG,UAAO4G,GAC9B,IACI,IAAMjB,GAAYC,EAAAA,EAAAA,gBACZgT,GAAoBvE,EAAAA,EAAAA,YAAW1O,EAAW,cAG1CkT,EAAAA,EAAAA,QAAOD,EAAmBhS,EAGpC,CAAE,MAAOnG,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,gBAZuBI,GAAA,OAAA+V,EAAA9V,MAAA,KAAAC,UAAA,KAclBwqF,EAA6B,WAC/B,IAAA/hF,GAAkCvO,EAAAA,EAAAA,WAAS,GAAMwO,GAAAtO,EAAAA,EAAAA,SAAAqO,EAAA,GAA1CrM,EAASsM,EAAA,GAAErM,EAAYqM,EAAA,GAC9BC,GAAwCzO,EAAAA,EAAAA,WAAS,GAAM0O,GAAAxO,EAAAA,EAAAA,SAAAuO,EAAA,GAAhD+G,EAAY9G,EAAA,GAAE+G,EAAe/G,EAAA,GACpCE,GAAsD5O,EAAAA,EAAAA,WAAS,GAAM6O,GAAA3O,EAAAA,EAAAA,SAAA0O,EAAA,GAA9D2hF,EAAmB1hF,EAAA,GAAE2hF,EAAsB3hF,EAAA,GAClDC,GAA0C9O,EAAAA,EAAAA,UAAS,IAAG+O,GAAA7O,EAAAA,EAAAA,SAAA4O,EAAA,GAA/C2hF,EAAa1hF,EAAA,GAAE2hF,EAAgB3hF,EAAA,GACtCC,GAAkDhP,EAAAA,EAAAA,UAAS,IAAGiP,GAAA/O,EAAAA,EAAAA,SAAA8O,EAAA,GAAvD2hF,EAAiB1hF,EAAA,GAAE2hF,EAAoB3hF,EAAA,GAC9CE,GAAwCnP,EAAAA,EAAAA,UAAS,IAAGoP,GAAAlP,EAAAA,EAAAA,SAAAiP,EAAA,GAA/B0hF,GAAFzhF,EAAA,GAAiBA,EAAA,IACpCE,GAAwCtP,EAAAA,EAAAA,WAAS,GAAMuP,GAAArP,EAAAA,EAAAA,SAAAoP,EAAA,GAAhDiE,EAAYhE,EAAA,GAAEiE,EAAejE,EAAA,GACpCE,GAAwBzP,EAAAA,EAAAA,UAAS,IAAG0P,GAAAxP,EAAAA,EAAAA,SAAAuP,EAAA,GAAvBoE,GAAFnE,EAAA,GAASA,EAAA,IACpBC,GAAoC3P,EAAAA,EAAAA,UAAS,MAAK4P,GAAA1P,EAAAA,EAAAA,SAAAyP,EAAA,GAA/BmhF,GAAFlhF,EAAA,GAAeA,EAAA,IAC1BnC,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IAClDkkC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,OAE7C8C,EAAAA,EAAAA,YAAU,WACN,IAAMoJ,GAAcG,EAAAA,EAAAA,aAChB7G,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,WAAY,aAC3C,SAACjlB,GACG,IAAME,EAAOF,EAASE,OACtB+kF,EAAqB,MAAJ/kF,OAAI,EAAJA,EAAM8kF,eACvBG,EAAyB,MAAJjlF,OAAI,EAAJA,EAAMglF,kBAC/B,IAGJ,OAAO,kBAAM7kF,GAAc,CAC/B,GAAG,IAEH,IAAMilF,GAAiB,eAAA/0E,GAAAjX,EAAAA,EAAAA,UAAG,YAEtB5C,GAAa,GACbsT,GAAgB,GAChB,IACI,IAAM8e,QAAiBrW,EAAAA,QAAMve,IAAI,yFAO3BqxF,EAAQz8D,EAAS5oB,KAAKqlF,MACtBrpB,EAAW,EAAIqpB,EAAMC,IACrBC,EAAWF,EAAMC,IAAM,EAIvBE,EAAcvoC,OAAO+e,EAAS7mC,QAAQ,IACtCswD,EAAcxoC,OAAOsoC,EAASpwD,QAAQ,IAEtCuwD,EAAW,EAAIL,EAAMM,IACrBC,EAAWP,EAAMM,IAEjBE,EAAW,EAAIR,EAAMS,IACrBC,EAAWV,EAAMS,IAEjBE,EAAW,EAAIX,EAAMY,IACrBC,EAAWb,EAAMY,IAGjBE,EAAW,EAAId,EAAMe,IACrBC,EAAWhB,EAAMe,IAGjBE,EAAYd,EAAcI,EAC1BW,EAAYd,EAAcC,EAE1Bc,EAAWhB,EAAcO,EACzBU,EAAWhB,EAAcI,EAEzBa,EAAWlB,EAAcU,EACzBS,EAAWlB,EAAcO,EAEzBY,EAAWpB,EAAca,EACzBQ,EAAWpB,EAAcU,EAM/BjB,EAAgBM,GAEhB,IAAMnyE,EAAYuV,EAAS5oB,KAAKqT,UAC1ByzE,EAAiB,IAAIh4B,KAAiB,IAAZz7C,GAChC8xE,EAAc2B,GAEd,IAAMC,EAAsBD,EAAe1jE,eAAe,QAAS,CAC/DxQ,MAAO,OACPG,IAAK,UACLJ,KAAM,UACNq0E,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,aAAc,UAGZC,EAAgB,WAAc5B,EAAW,kBAAkBC,EAAW,iBAAiBa,EAAUnxD,QAAQ,GAAE,kBAAkBoxD,EAAUpxD,QAAQ,GAAE,iBAAiBuxD,EAASvxD,QAAQ,GAAE,kBAAkBwxD,EAASxxD,QAAQ,GAAE,iBAAiBqxD,EAASrxD,QAAQ,GAAE,kBAAkBsxD,EAAStxD,QAAQ,GAAE,iBAAiByxD,EAASzxD,QAAQ,GAAE,kBAAkB0xD,EAAS1xD,QAAQ,GAAE,SAC5WkyD,GAAc5tF,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,WAAY,YAE/D,UACU9P,EAAAA,EAAAA,QAAOoyE,EAAa,CACtBx2D,SAAUosB,OAAO+e,GACjBA,SAAU/e,OAAOsoC,GACjB+B,SAAUhB,EACViB,SAAUhB,EACViB,SAAUhB,EACViB,SAAUhB,EACViB,SAAUhB,EACViB,SAAUhB,EACVjB,SAAUE,EACVA,SAAUF,EACVG,SAAUE,EACVA,SAAUF,EACVG,SAAUE,EACVA,SAAUF,EACVK,SAAUF,EACVA,SAAUE,EACVuB,SAAUf,EACVgB,SAAUjB,EACV9B,cAAesC,EACfpC,kBAAmB,iBAAmB+B,GACvC,CAAErpD,OAAO,IAEZmnD,GAAuB,GACvBh9E,GAAgB,GAChBrR,GAAa,GACbsT,GAAgB,GAChB,IACI,IACQwI,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvDxK,EAAQsK,GAER,IAAMs1E,EAAkB,CACpBltF,QAAQ,qBAAsBkH,EAAS,2DAAmDm7C,OAAO+e,GAAU7mC,QAAQ,GAAE,4BAAoB8nB,OAAOsoC,GAAUpwD,QAAQ,GAAE,gCAAmBmxD,EAAUnxD,QAAQ,GAAE,iCAAoBoxD,EAAUpxD,QAAQ,GAAE,4BAAoBuxD,EAASvxD,QAAQ,GAAE,6BAAqBwxD,EAASxxD,QAAQ,GAAE,8BAAmBqxD,EAASrxD,QAAQ,GAAE,+BAAoBsxD,EAAStxD,QAAQ,GAAE,4BAAoByxD,EAASzxD,QAAQ,GAAE,6BAAqB0xD,EAAS1xD,QAAQ,GAC5d9hB,UAAWb,EACXc,aAAa,EACbF,SAAU,CACNZ,EAAc7D,cACd7M,EAAU6M,cACV,IAAIA,cACJ,OAAIA,eACJ,qBAAqB7M,EAAS,oCAAmC6M,cACjE,SAASA,cACT,WAAWA,cACX6D,EAAc7D,cACdgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAK/BmD,EAAmBg2E,EACvB,CACA,MAAOjuF,GACHC,QAAQD,MAAM,uBAAwBA,EAC1C,CAEJ,CAAE,MAAOA,GACLC,QAAQD,MAAM,gCAAiCA,EACnD,CACJ,CAAE,MAAOA,GACLC,QAAQD,MAAM,gCAAiCA,EACnD,CACJ,IAAC,kBAnJsB,OAAAwW,EAAAnW,MAAA,KAAAC,UAAA,KAsJjB4tF,GAA2B,WAC7BlgF,GAAgB,GAChBrR,GAAa,EACjB,EAMMwxF,GAA0B,WAC5BnD,GAAuB,GACvBruF,GAAa,EACjB,EAGA,OACI4B,EAAAA,EAAAA,MAAAmoB,EAAAA,SAAA,CAAA/oB,SAAA,EACIY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACA8D,KAAM,EACNkC,YAAa,EACbC,YAAY,WACZQ,aAAc,EACdgb,SAAS,SACTD,OAAQ,EACRthB,WAAY,SACZgoB,GAAG,UAAS/nB,SAAA,EACZJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CACFC,OAAQlF,EAAQ,OAChBqF,IAAI,mBACJD,WAAW,UACXvH,MAAM,OACNC,OAAO,OACPkiB,SAAU,cAIdhf,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAAChH,OAAO,OAAMsD,UAEjBY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAACE,WAAW,SAAS0G,gBAAiB,qBAAsBH,aAAc,EAAGmb,cAAe,EAAEzhB,SAAA,EAE9FJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACqhB,MAAI,EAACjhB,MAAM,UAAU8f,OAAQ,EAAGza,UAAW,SAAUxF,SAAUotC,EAAc,IAAM,GAAK,GAAGxuC,SAAGstF,KACpG1tF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAU,SAASrF,MAAM,UAAU8f,OAAQ,EAAGjgB,SAAUotC,EAAc,IAAM,GAAK,GAAGxuC,SAAEwtF,KAC5F5tF,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACsnB,UAAW,SAAUjtB,EAAG,MAAO4F,OAAQ,CAAElC,QAAS,aAAeA,QAAS,cAAeqf,QAAS,UAAW/c,YAAa,UAAWrE,MAAO,CAAEF,MAAO,WAAcgE,QAtC/J,WAC5B8K,GAAgB,GAChBrR,GAAa,EACjB,EAmCgOgB,SAAEjB,GAAYa,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,UAAUyD,KAAM,KAAS,oBAQ9QpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ/P,EAAcqQ,QAAS8vE,GAAyBvwF,UAC3DY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,SAAC,qBACpCJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAC,mDAGZY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,SAAA,EAC5BJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASgrF,GAA0B5sF,KAAM,EAAG0d,OAAQ,EAAGvF,YAAa,SAAS9b,SAAC,QACtFJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASqoF,GAAmB9xE,YAAa,UAAWnY,KAAM,EAAG0d,OAAQ,EAAErhB,SAAEqS,GAAezS,EAAAA,EAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,QAAQyD,KAAM,KAAS,iBAG1IpF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQitE,EAAqB3sE,QAAS+vE,GAAwBxwF,UACzEY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAE/e,SAAC,qBAC1DY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMvB,KAAI,CAACrd,QAAS,YAAYxD,SAAA,EAC7BJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACqhB,MAAI,EAACnB,OAAQ,EAAErhB,SAAEstF,KACvB1tF,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACkgB,OAAQ,EAAErhB,SAAEwtF,QAEtB5tF,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,UAClDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASirF,GAAyB7sF,KAAM,EAAG0d,OAAQ,EAAErhB,SAAC,gBAQtF,EAGMywF,EAAa,WAQf,OACI7wF,EAAAA,EAAAA,KAACshB,EAAAA,WAAU,CAAChd,MAAO,CAAEP,KAAM,EAAG0d,OAAQ,EAAG/a,aAAc,GAAKtG,UACxDY,EAAAA,EAAAA,MAAC8vF,EAAAA,aAAY,CACTC,MAAOC,EAAAA,aAAaC,SACpBC,cAAe,GACf5sF,MAAO,CACH6sF,OAAQ,CACJtqF,gBAAiB,SAEvBzG,SAAA,EAEFJ,EAAAA,EAAAA,KAACoxF,EAAAA,YAAW,CACR9sF,MAAO,CACH+sF,KAAM,CAAEC,OAAQ,WAChBC,MAAO,CAAED,OAAQ,OAAQlsF,KAAM,GAC/BosF,WAAY,CAAEhwF,SAAU,GAAIogB,QAAS,EAAG6vE,KAAM,YAGtDzxF,EAAAA,EAAAA,KAACoxF,EAAAA,YAAW,CACRM,eAAa,EACbptF,MAAO,CACH+sF,KAAM,CAAEC,OAAQ,WAChBC,MAAO,CAAED,OAAQ,OAAQlsF,KAAM,GAC/BosF,WAAY,CAAEhwF,SAAU,GAAIogB,QAAS,EAAG6vE,KAAM,YAGtDzxF,EAAAA,EAAAA,KAAC2xF,EAAAA,QAAU,CACP/oF,KAlCG,CACf,CAAE+S,IAAK,EAAG/W,MAAO,IACjB,CAAE+W,IAAK,EAAG/W,MAAO,IAEjB,CAAE+W,IAAK,GAAI/W,MAAO,KA+BNo3C,EAAE,MACFC,EAAE,QACF33C,MAAO,CACHsE,KAAM,CACF6oF,KAAM,SAAAj4E,GAAQ,OAAAA,EAALo4E,MAAkBhtF,MAAQ,GAAK,UAAY,SAAS,EAC7D/H,MAAO,IAGfg1F,SAAU,SAK9B,EAGe,SAASC,KAAQ,IAADzmF,EAC3ByB,GAA0B7P,EAAAA,EAAAA,UAAS,IAAG8P,GAAA5P,EAAAA,EAAAA,SAAA2P,EAAA,GAAxBzP,GAAF0P,EAAA,GAAUA,EAAA,IACtBE,GAAwBhQ,EAAAA,EAAAA,UAAS,IAAGiQ,GAAA/P,EAAAA,EAAAA,SAAA8P,EAAA,GAAvBrB,GAAFsB,EAAA,GAASA,EAAA,IACdxC,GAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IAGlDjL,GAAWC,EAAAA,EAAAA,eAEjB0N,GAA4CnQ,EAAAA,EAAAA,WAAS,GAAKoQ,GAAAlQ,EAAAA,EAAAA,SAAAiQ,EAAA,GAC1DG,GADqBF,EAAA,GAAmBA,EAAA,IACgBpQ,EAAAA,EAAAA,WAAS,IAAMuQ,GAAArQ,EAAAA,EAAAA,SAAAoQ,EAAA,GACvEG,GAD2BF,EAAA,GAAyBA,EAAA,IACMvQ,EAAAA,EAAAA,WAAS,IAAM0Q,GAAAxQ,EAAAA,EAAAA,SAAAuQ,EAAA,GACzEG,GAD4BF,EAAA,GAA0BA,EAAA,IACZ1Q,EAAAA,EAAAA,UAAS,KAAG6Q,GAAA3Q,EAAAA,EAAAA,SAAA0Q,EAAA,GACtDjQ,GADoBkQ,EAAA,GAAkBA,EAAA,GACJjQ,EAAAA,UAAe,IAAMC,GAAAX,EAAAA,EAAAA,SAAAS,EAAA,GAAhD0lB,EAASxlB,EAAA,GAAEylB,EAAYzlB,EAAA,GAC9BmQ,GAAwChR,EAAAA,EAAAA,WAAS,GAAMiR,IAAA/Q,EAAAA,EAAAA,SAAA8Q,EAAA,GAEvDE,IAFmBD,GAAA,GAAiBA,GAAA,IAEMjR,EAAAA,EAAAA,UAAS,IAAEmR,IAAAjR,EAAAA,EAAAA,SAAAgR,GAAA,GACrDI,IADoBH,GAAA,GAAkBA,GAAA,IACInR,EAAAA,EAAAA,UAAS,KAAGuR,IAAArR,EAAAA,EAAAA,SAAAoR,GAAA,GACtDI,IADoBH,GAAA,GAAkBA,GAAA,IACYvR,EAAAA,EAAAA,UAAS,KAAG2R,IAAAzR,EAAAA,EAAAA,SAAAwR,GAAA,GAC9DG,IADwBF,GAAA,GAAsBA,GAAA,IACN3R,EAAAA,EAAAA,UAAS,OAAK8R,IAAA5R,EAAAA,EAAAA,SAAA2R,GAAA,GACtDI,IADmBH,GAAA,GAAiBA,GAAA,IACA9R,EAAAA,EAAAA,UAAS,OAAKkS,IAAAhS,EAAAA,EAAAA,SAAA+R,GAAA,GAElDe,IAFiBd,GAAA,GAAeA,GAAA,IAERlS,EAAAA,EAAAA,UAAS,KAAGkT,IAAAhT,EAAAA,EAAAA,SAAA8S,GAAA,GAEpCK,IAFWH,GAAA,GAASA,GAAA,IAEIlT,EAAAA,EAAAA,UAAS,IAAEsT,IAAApT,EAAAA,EAAAA,SAAAmT,GAAA,GAAtB+C,IAAF9C,GAAA,GAASA,GAAA,IACpBG,IAAwCzT,EAAAA,EAAAA,UAFhB,IAE2C0T,IAAAxT,EAAAA,EAAAA,SAAAuT,GAAA,GAA5D+C,GAAY9C,GAAA,GACnBC,IADoCD,GAAA,IACZ1T,EAAAA,EAAAA,UAAS,KAAG4T,IAAA1T,EAAAA,EAAAA,SAAAyT,GAAA,GAAvBiD,IAAFhD,GAAA,GAASA,GAAA,IACpBE,IAAsC9T,EAAAA,EAAAA,UAAS,IAAG+T,IAAA7T,EAAAA,EAAAA,SAAA4T,GAAA,GAK5C69B,IALY59B,GAAA,GAAgBA,GAAA,GAGU,OAAtB3F,GADF6E,EAAAA,EAAAA,QAAO,MACU8E,UAAZ3J,EAAqBzG,MAE1BjI,EAAAA,QAAWC,IAAI,UAAUC,OAEvCsL,IAAWK,EAAAA,EAAAA,gBAMjB7I,EAAAA,EAAAA,YAAU,WACN,IAAMgZ,EAAS,eAAAgC,GAAA3Y,EAAAA,EAAAA,UAAG,YACd,IACI,IAAMmU,GAAIC,EAAAA,EAAAA,QAAMC,EAAAA,EAAAA,YAAW/T,EAAAA,GAAI,SAASgU,EAAAA,EAAAA,SAAQ,YAAa,SACvDvN,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACzN,GAC/B,IAAM8N,EAAY9N,EAASoO,KAAKnb,KAAI,SAAC0G,GAAG,OAAAoF,EAAA,CAAQ3L,GAAIuG,EAAIvG,IAAOuG,EAAIuG,OAAM,IACzEiL,GAAQ2C,EACZ,IAEA,OAAO,kBAAMzN,GAAc,CAC/B,CAAE,MAAOtG,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,CACJ,IAAC,kBAZc,OAAAkY,EAAA7X,MAAA,KAAAC,UAAA,KAcf4V,GACJ,GAAG,KAEHhZ,EAAAA,EAAAA,YAAU,WACN0T,GAAQ,EACZ,GAAG,CAACI,MA6DJ9T,EAAAA,EAAAA,YAAU,WASN,OARoBC,EAAAA,KAAKC,oBAAmB,SAAAC,GACnCA,GAEDL,EAAS,SAGjB,GAGJ,GAAG,IAaH,IAAMgJ,GAAuB,SAACC,GACtBA,EAASC,SACID,EAASE,OACAC,SAGlBC,EAAAA,EAAAA,SAAQlJ,EAAAA,MACHwD,MAAK,WAEF3D,EAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,KAGRqG,EAAAA,EAAAA,SAAQlJ,EAAAA,MACHwD,MAAK,WAEF3D,EAAS,SAEb,IACC6D,OAAM,SAACb,GACJC,QAAQD,MAAM,qBAAsBA,EACxC,GAEZ,GAgBA9C,EAAAA,EAAAA,YAAU,WACN,IAAMoJ,EAfqB,WAAO,IAADC,EAC3BC,EAAyB,OAAnBD,EAAGpJ,EAAAA,KAAKkI,kBAAW,EAAhBkB,EAAkB5L,MACjC,GAAI6L,EAAQ,CACR,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,EAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,GAE5C,CAEI,OAAO,WACHhJ,EAAS,SACb,CAER,CAGwB0J,GAEpB,OAAO,WAEHJ,GACJ,CACJ,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACN,IAAMyJ,EAAmBvB,IACrBuB,IACAC,GAAqBD,GACrB/L,EAAS+L,GAET0P,GADmB1P,GAG3B,GAAG,IAEH,IAAM0P,GAAsB,SAAC7W,IACTI,EAAAA,EAAAA,KAAIC,EAAAA,GAAI,WAAYL,EAKxC,EAIMoH,GAAoB,eAAA2R,GAAAhZ,EAAAA,EAAAA,UAAG,UAAO5E,GAChC,IACI,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,EAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC7B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,IAASwB,EAAAA,EAAAA,cAAaf,EAAKzD,MAE/B,MACIzC,QAAQe,IAAI,0BAEpB,CAAE,MAAOhB,GACLC,QAAQD,MAAM,8BAA+BA,EACjD,CACJ,IAAC,gBAjByB8W,GAAA,OAAAyB,EAAAlY,MAAA,KAAAC,UAAA,KAoFpB8b,GAASxY,EAAAA,QAAWC,OAAO,CAC7BC,UAAW,CACPxC,KAAM,GAEV+a,MAAO,CACH/a,KAAM,KAGd,OACI/C,EAAAA,EAAAA,MAAC2C,EAAAA,mBAAkB,CAAAvD,SAAA,EACfJ,EAAAA,EAAAA,MAnNa,WACjB,OAAOA,EAAAA,EAAAA,KAAC8D,EAAAA,QAAM,CAAA1D,UACVJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ+C,EAAWzC,QAAS,kBAAM0C,GAAa,EAAM,EAAEne,KAAK,KAAIhF,UACnEY,EAAAA,EAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACgC,SAAS,MAAMpf,QAAS,YAAaqC,YAAa,EAAGC,YAAa,YAAY9F,SAAA,EACzFJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,YAAaub,kBAAmB,EAAE/e,UAACJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAU4b,MAAI,EAAAxiB,SAAC,kEACxGJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACPJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAS5G,SAAC,yEAE7CJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAAClf,QAAS,YAAamf,eAAgB,EAAE3iB,UAClDJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,aAAgBqf,QAAS,UAAWlf,KAAK,IAAI4B,QAAS,kBAAM4d,GAAa,EAAM,EAACnjB,UACvGJ,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAM,QAAQqF,UAAW,SAAS5G,SAAC,sBAMjE,GAmMqB,KACbY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC2D,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE5DY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CACA+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAE9BJ,EAAAA,EAAAA,KAACqf,EAAAA,QAAU,CACPlU,eAAgBA,KAEpBnL,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,EAAG,EAAG,EAAG,KAAM2D,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAC3FJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAOtB9e,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,IAAK,GAAI2D,EAAG,CAAC,EAAG,EAAG,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UACxGJ,EAAAA,EAAAA,KAACwf,EAAAA,QAAS,CACNtb,OAAQ,CACJC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAEjCtb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,GAAOC,WAItB9e,EAAAA,EAAAA,MAvFI,SAAHqc,GAAiC,IAA3BlX,EAAIkX,EAAJlX,KAAM2a,EAAazD,EAAbyD,cACzB3O,GAA8ClU,EAAAA,EAAAA,WAAS,GAAMmU,GAAAjU,EAAAA,EAAAA,SAAAgU,EAAA,GAAtD8O,EAAe7O,EAAA,GAAE8O,EAAkB9O,EAAA,GAEpC+O,EAAc,WAChBD,GAAoBD,EACxB,EAEA,OACIjgB,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UAC/CJ,EAAAA,EAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UACzBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAO,CACJC,OAAQN,EACRO,QAAS,SAACC,GAAY,OAClBzf,EAAAA,EAAAA,MAACO,EAAAA,QAAIkG,EAAAA,EAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC7HJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,EAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC5H,EAEXkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAExCJ,EAAAA,EAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACrCJ,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASrM,GAsD4B,CAAC+E,KAAMuF,EAAWoV,cAlHxB,YAElBhX,EAAAA,EAAAA,SAAQlJ,EAAAA,MAAMwD,MAAK,WAEf3D,EAAS,UACTpC,EAAS,IACTuO,EAAQ,GACZ,IAAGtI,OAAM,WAET,GAGJ,QA2GYtD,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAI/BY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAGod,SAAU,EAAGC,UAAW,EAAGrC,cAAe6vB,IAAe,IAAM,SAAW,MAAMxuC,SAAA,EAK1FY,EAAAA,EAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACTJ,EAAAA,EAAAA,KAACutF,EAA0B,KAC3BvtF,EAAAA,EAAAA,KAAC6wF,EAAU,QAKf7wF,EAAAA,EAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGjH,OAAQ,OAAOsD,UACzBJ,EAAAA,EAAAA,KAACshB,EAAAA,WAAU,CAACvd,KAAM,EAAE3D,UAChBJ,EAAAA,EAAAA,KAACktF,EAAS,iBAgB9BltF,EAAAA,EAAAA,KAACinB,EAAY,MAGzB,C,uQCr4BA,QA9UyB,SAAHllB,GAA4B,IAAtBoJ,EAAcpJ,EAAdoJ,eAE1BnO,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAApCujB,EAAMrjB,EAAA,GAAE60F,EAAS70F,EAAA,GAClBqO,EAAQvM,EAAQ,OAIhBgJ,GAFcrL,EAAAA,QAAWC,IAAI,UAAUC,OAE1Bm1F,EAAAA,EAAAA,kBAEbC,EAAa,WAEjBF,GAAU,EAEZ,EACM5iC,EAAc,WAElB4iC,GAAU,EAEZ,EAEMG,GAAmB55E,EAAAA,EAAAA,cAAY,WAGnCtQ,EAAWvI,SAAS,OACtB,GAAG,IAEG0yF,GAAyB75E,EAAAA,EAAAA,cAAY,WAGzCtQ,EAAWvI,SAAS,oBACtB,GAAG,IAEG2yF,GAA0B95E,EAAAA,EAAAA,cAAY,WAE1CtQ,EAAWvI,SAAS,eACtB,GAAG,IAEG4yF,GAAyB/5E,EAAAA,EAAAA,cAAY,WAEzCtQ,EAAWvI,SAAS,kBACtB,GAAG,IAGG6yF,GAAoBh6E,EAAAA,EAAAA,cAAY,WACpCtQ,EAAWvI,SAAS,eACtB,GAAG,IAGG8yF,GAAgBj6E,EAAAA,EAAAA,cAAY,WAChCtQ,EAAWvI,SAAS,UACtB,GAAG,IAEG+yF,GAAqBl6E,EAAAA,EAAAA,cAAY,WACrCtQ,EAAWvI,SAAS,gBACtB,GAAG,IAGGgzF,GAAiBviF,EAAAA,EAAAA,QAAO,IAAIgtE,EAAAA,QAASC,MAAM,IAAInoE,QAoBrD,OAlBArV,EAAAA,EAAAA,YAAU,WACJ4gB,EACF28D,EAAAA,QAASI,OAAOmV,EAAgB,CAC9BlV,QAAS,EACT38E,SAAU,IACV8xF,OAAQC,EAAAA,QAAOC,MAAMD,EAAAA,QAAOE,MAC5BrV,iBAAiB,IAChBC,QAEHP,EAAAA,QAASI,OAAOmV,EAAgB,CAC9BlV,QAAS,EACT38E,SAAU,IACV8xF,OAAQC,EAAAA,QAAOC,MAAMD,EAAAA,QAAOE,MAC5BrV,iBAAiB,IAChBC,OAEP,GAAG,CAACl9D,EAAQkyE,KAIVzxF,EAAAA,EAAAA,MAAAmoB,EAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,EAAAA,KAACklF,EAAAA,mBAAkB,CAACv/E,QAAS,kBAAMssF,GAAY,EAAEa,WAAY,kBAAMb,GAAY,EAAE9M,cAAc,UAAU7gF,MAAO,CAAEoC,aAAc,EAAG3C,KAAM,GAAI3D,UAC3IJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,UAAUC,KAAM,GAAIzD,MAAM,QAAQ2C,MAAO,CAAEmd,OAAQ,QAIvEzhB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQA,EACRM,QAASsuC,EACT9lC,YAAU,EACV/kB,MAAO,CACLnE,WAAY,aACZkB,eAAgB,aAChBvE,OAAQ,QAERsD,UAEFJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CACZgC,SAAU,IACVtc,aAAc,EACd0qB,UAAU,OACVt0B,OAAO,OACP8G,QAAS,cAAcxD,UAEvBJ,EAAAA,EAAAA,KAACk9E,EAAAA,QAAStvB,KAAI,CACZtpD,MAAO,CACLP,KAAM,EACNgvF,UAAW,CACT,CACEC,WAAYP,EAAe/U,YAAY,CACrCC,WAAY,CAAC,EAAG,GAChBC,YAAa,EAAE,IAAK,QAI1Bx9E,UAEFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGm2D,iBAAkB,EAAGh0D,YAAa,QAAS9F,UAC7FY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAExBY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO0C,OAAQ,EAAGpgB,eAAgB,iBAAkBjB,SAAA,EAChFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAOsD,WAAY,SAAUkB,eAAgB,UAAWjB,UAC5EJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CACJC,OAAQ,CACNC,IAAKoH,GAEPnH,WAAW,UACXE,MAAO,CAAEzH,MAAO,IAAKC,OAAQ,SAGjCkD,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CAAEya,cAAe,MAAO5e,WAAY,WAAYouD,eAAgB,IAAKwE,iBAAkB,KAAM3yD,UAEpGJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACZC,KAAK,aACLC,KAAM,GACNzD,MAAM,QACNgE,QAASwpD,UAMfnvD,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,EAAGK,gBAAiB,UAAW9C,KAAM,GAAI3D,UACzEY,EAAAA,EAAAA,MAACsgB,EAAAA,WAAU,CAAAlhB,SAAA,EACTJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnB4D,eAAgB,EAChB7c,YAAa,QACbW,gBAAmC,QAAlBsE,EAA2B,UAAY,WAE1DxF,QAASusF,EAAiB9xF,UAE1BY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,GAAIzD,MAAM,WACvD3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,eAQ3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,qBAAlBsE,EAAwC,UAAY,WAEvExF,QAASwsF,EAAuB/xF,UAEhCY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAE1EJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,aAAaC,KAAM,GAAIzD,MAAM,WACjD3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,4BAM3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,gBAAlBsE,EAAmC,UAAY,WAElExF,QAASysF,EAAwBhyF,UAEjCY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EJ,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAkBC,KAAM,GAAIzD,MAAM,WAC/D3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,uBAO3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,mBAAlBsE,EAAsC,UAAY,WAErExF,QAAS0sF,EAAuBjyF,UAGhCY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,SAAA,EAC9BJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,aAAaC,KAAM,GAAIzD,MAAM,WAC/C3B,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CACV1d,KAAK,OACLC,KAAM,GACNzD,MAAM,QACN2C,MAAO,CACL0a,SAAU,WACVC,KAAM,EACNmI,MAAO,SAIbpnB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,mCAK3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,gBAAlBsE,EAAmC,UAAY,WAElExF,QAAS2sF,EAAkBlyF,UAG3BY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,SAAA,EAC9BJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CACV1d,KAAK,aACLC,KAAM,GACNzD,MAAM,WAER3B,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,uBAAuBC,KAAM,GAAIzD,MAAM,QAClE2C,MAAO,CACL0a,SAAU,WACVC,KAAM,EACNmI,MAAO,SAKbpnB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,uBAO3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,WAAlBsE,EAA8B,UAAY,WAE7DxF,QAAS4sF,EAAcnyF,UAGvBY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,SAAA,EAC9BJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACZC,KAAK,SACLC,KAAM,GACNzD,MAAM,WAER3B,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,OAAOC,KAAM,GAAIzD,MAAM,QACzC2C,MAAO,CACL0a,SAAU,WACVC,KAAM,EACNmI,MAAO,SAKbpnB,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,kBAO3EJ,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CACL6a,kBAAmB,EACnBC,kBAAmB,QACnBvY,gBAAmC,iBAAlBsE,EAAoC,UAAY,WAEnExF,QAAS6sF,EAAmBpyF,UAG5BY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,SAAUyf,WAAY,GAAKxf,SAAA,EAC1EJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEsb,WAAY,GAAKxf,UAC9BJ,EAAAA,EAAAA,KAACkzB,EAAAA,QAAM,CACL/tB,KAAK,OACLC,KAAM,GACNzD,MAAM,aAGV3B,EAAAA,EAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASmF,gBAAiB,GAAIyY,YAAa,IAAKnf,SAAC,yCA0B/F,C,sSCqEA,QAhZmB,SAAH2B,GAA4B,IAAtBoJ,EAAcpJ,EAAdoJ,eAEZ7C,GAAmBF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,IAEtEtL,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAApCujB,EAAMrjB,EAAA,GAAE60F,EAAS70F,EAAA,GAClBqO,EAAQvM,EAAQ,OACtB1B,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAtC21F,EAAO11F,EAAA,GAAE21F,EAAU31F,EAAA,GAOpBkC,GALc9C,EAAAA,QAAWC,IAAI,UAAUC,OAK5B6C,EAAAA,EAAAA,gBACXuyF,EAAa,WAEfF,GAAU,EAEd,EACM5iC,EAAc,WAEhB4iC,GAAU,EAEd,EAEMG,GAAmB55E,EAAAA,EAAAA,cAAY,WACjC7Y,EAAS,YACb,GAAG,IAEG0yF,GAAyB75E,EAAAA,EAAAA,cAAY,WACvC7Y,EAAS,yBACb,GAAG,IAEG2yF,GAA0B95E,EAAAA,EAAAA,cAAY,WAExC7Y,EAAS,oBACb,GAAG,IAEG4yF,GAAyB/5E,EAAAA,EAAAA,cAAY,WAEvC7Y,EAAS,uBACb,GAAG,IAGG6yF,GAAoBh6E,EAAAA,EAAAA,cAAY,WAClC7Y,EAAS,oBACb,GAAG,IAGG8yF,GAAgBj6E,EAAAA,EAAAA,cAAY,WAC9B7Y,EAAS,eACb,GAAG,IAEG+yF,GAAqBl6E,EAAAA,EAAAA,cAAY,WACnC7Y,EAAS,qBACb,GAAG,IAGGgzF,GAAiBviF,EAAAA,EAAAA,QAAO,IAAIgtE,EAAAA,QAASC,MAAM,IAAInoE,QAwBrD,OAtBArV,EAAAA,EAAAA,YAAU,WACF4gB,EACA28D,EAAAA,QAASI,OAAOmV,EAAgB,CAC5BlV,QAAS,EACT38E,SAAU,IACV8xF,OAAQC,EAAAA,QAAOC,MAAMD,EAAAA,QAAOE,MAC5BrV,iBAAiB,IAClBC,QAEHP,EAAAA,QAASI,OAAOmV,EAAgB,CAC5BlV,QAAS,EACT38E,SAAU,IACV8xF,OAAQC,EAAAA,QAAOC,MAAMD,EAAAA,QAAOE,MAC5BrV,iBAAiB,IAClBC,OAEX,GAAG,CAACl9D,EAAQkyE,KAQRzxF,EAAAA,EAAAA,MAAAmoB,EAAAA,SAAA,CAAA/oB,SAAA,EACIJ,EAAAA,EAAAA,KAAC0F,EAAAA,QAAS,CACN2oD,UAAW,WACP4jC,IACAiB,GAAW,EACf,EACA5kC,WAAY,kBACRrrD,YAAW,kBAAMiwF,GAAW,EAAM,GAAE,CAAC,KAAK,EAE9CvtF,QAAS,kBAAMssF,GAAY,EAAEa,WAAY,kBAAMb,GAAY,EAAE9M,cAAc,UAAU7gF,MAAO,CACxFuC,gBAAiBosF,EAAU,UAAY,cACvCvsF,aAAc,GAChBtG,UACFJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,UAAUC,KAAM,GAAIzD,MAAM,QAAQ2C,MAAO,CAAEmd,OAAQ,QAGzEzhB,EAAAA,EAAAA,KAACwiB,EAAAA,MAAK,CACFjC,OAAQA,EACRM,QAASsuC,EACT9lC,YAAU,EACV/kB,MAAO,CACHnE,WAAY,aACZkB,eAAgB,aAChBvE,OAAQ,QACVsD,UAEFJ,EAAAA,EAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CACVgC,SAAU,IACVtc,aAAc,EACd0qB,UAAU,OACVt0B,OAAO,OACP8G,QAAS,cAAcxD,UAEvBJ,EAAAA,EAAAA,KAACk9E,EAAAA,QAAStvB,KAAI,CACVtpD,MAAO,CACHP,KAAM,EACNgvF,UAAW,CACP,CACIC,WAAYP,EAAe/U,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,EAAE,IAAK,QAIlCx9E,UAGFJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGm2D,iBAAkB,EAAGh0D,YAAa,QAAS9F,UAC3FY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EAEtBY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO0C,OAAQ,EAAGpgB,eAAgB,iBAAkBjB,SAAA,EAC9EJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAOsD,WAAY,SAAUkB,eAAgB,UAAWjB,UAC1EJ,EAAAA,EAAAA,KAACiE,EAAAA,QAAK,CACFC,OAAQ,CACJC,IAAKoH,GAETnH,WAAW,UACXE,MAAO,CAAEzH,MAAO,IAAKC,OAAQ,SAGrCkD,EAAAA,EAAAA,KAACumC,EAAAA,QAAgB,CACbjiC,MAAO,CAAEya,cAAe,MAAO5e,WAAY,WAAYouD,eAAgB,IAAKwE,iBAAkB,KAAM3yD,UAEpGJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,aACLC,KAAM,GACNzD,MAAM,QACNgE,QAASwpD,UAMrBnuD,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEkC,kBAAmB,EAAGK,gBAAiB,UAAW/J,OAAQ,QAASsD,SAAA,EAC9EJ,EAAAA,EAAAA,KAACshB,EAAAA,WAAU,CAAChd,MAAO,CAAEzH,MAAO,KAAMuD,UAC9BY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,IAAKsD,SAAA,EAEF,SAApBkI,GAAmD,SAApBA,KAC7BtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACHhE,MAAO,CAAEF,MAAyB,QAAlBwJ,EAA2B,UAAY,SACvDzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,QAAlBuH,EAA2B,UAAY,WAC1DmU,UAAW,EACXpf,EAAG,OACHyF,QAAS,iBAAwB,QAAlBwF,EAA2B,KAAO+mF,GAAkB,EACnEh2E,iBAAa+hB,EACbr6B,QAA2B,QAAlBuH,EAA2B,UAAY,UAChD+V,UAAUlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,GAAIzD,MAAyB,QAAlBwJ,EAA2B,UAAY,UACzG9J,eAAe,aACflB,WAAW,SAAQC,SACtB,SAMgB,SAApBkI,IAA+BtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACnChE,MAAO,CAAEF,MAAyB,qBAAlBwJ,EAAwC,UAAY,SACpEzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,qBAAlBuH,EAAwC,UAAY,WACvEmU,UAAW,EAAGpf,EAAG,OACjByF,QAAS,iBAAwB,qBAAlBwF,EAAwC,KAAOgnF,GAAwB,EACtFj2E,iBAAa+hB,EACbr6B,QAA2B,qBAAlBuH,EAAwC,UAAY,UAC7D+V,UAAUlhB,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,aAAaC,KAAM,GAAIzD,MAAyB,qBAAlBwJ,EAAwC,UAAY,UAChH9J,eAAe,aACflB,WAAW,SAAQC,SACtB,sBAEoB,SAApBkI,IAA+BtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACnChE,MAAO,CAAEF,MAAyB,gBAAlBwJ,EAAmC,UAAY,SAC/DzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,gBAAlBuH,EAAmC,UAAY,WAClEmU,UAAW,EACX3Z,QAAS,iBAAwB,gBAAlBwF,EAAmC,KAAOinF,GAAyB,EAClFl2E,iBAAa+hB,EACbr6B,QAA2B,gBAAlBuH,EAAmC,UAAY,UACxD+V,UACIlhB,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,kBAAkBC,KAAM,GACjDzD,MAAyB,gBAAlBwJ,EAAmC,UAAY,UAI9D9J,eAAe,aACflB,WAAW,SAAQC,SACtB,kBAEqB,SAApBkI,GAAmD,SAApBA,GAAmD,WAApBA,KAC5DtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACHhE,MAAO,CAAEF,MAAyB,mBAAlBwJ,EAAsC,UAAY,SAClEzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,mBAAlBuH,EAAsC,UAAY,WACrEmU,UAAW,EAAGpf,EAAG,OACjByF,QAAS,iBAAwB,mBAAlBwF,EAAsC,KAAOknF,GAAwB,EACpFn2E,iBAAa+hB,EACbr6B,QAA2B,mBAAlBuH,EAAsC,UAAY,UAC3D+V,UACIlhB,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,UACIY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EACDJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,aAAaC,KAAM,GACjCzD,MAAyB,mBAAlBwJ,EAAsC,UAAY,WAE7DnL,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CACR1d,KAAK,OACLC,KAAM,GACNzD,MAAyB,mBAAlBwJ,EAAsC,UAAY,QACzD7G,MAAO,CACH0a,SAAU,WACVC,KAAM,EACNmI,MAAO,UAQ3B/lB,eAAe,aACflB,WAAW,SAAQC,SACtB,8BAGiB,SAApBkI,GAAmD,SAApBA,GAAmD,WAApBA,KAC5DtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACHhE,MAAO,CAAEF,MAAyB,gBAAlBwJ,EAAmC,UAAY,SAC/DzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,gBAAlBuH,EAAmC,UAAY,WAClEmU,UAAW,EACX3Z,QAAS,iBAAwB,gBAAlBwF,EAAmC,KAAOmnF,GAAmB,EAC5Ep2E,iBAAa+hB,EACbr6B,QAA2B,gBAAlBuH,EAAmC,UAAY,UACxD+V,UACIlhB,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,UACIY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EACDJ,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CACR1d,KAAK,aACLC,KAAM,GACNzD,MAAyB,gBAAlBwJ,EAAmC,UAAY,WAG1DnL,EAAAA,EAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,uBAAuBC,KAAM,GACtDzD,MAAyB,gBAAlBwJ,EAAmC,UAAY,QACtD7G,MAAO,CACH0a,SAAU,WACVC,KAAM,EACNmI,MAAO,UAS3B/lB,eAAe,aACflB,WAAW,SAAQC,SAEtB,iBAEgB,SAApBkI,IAA+BtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACnChE,MAAO,CAAEF,MAAyB,WAAlBwJ,EAA8B,UAAY,SAC1DzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,WAAlBuH,EAA8B,UAAY,WAC7DmU,UAAW,EACX3Z,QAAS,iBAAwB,WAAlBwF,EAA8B,KAAOonF,GAAe,EACnEr2E,iBAAa+hB,EACbr6B,QAA2B,WAAlBuH,EAA8B,UAAY,UACnD+V,UACIlhB,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,UACIY,EAAAA,EAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EACDJ,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CACVC,KAAK,SACLC,KAAM,GACNzD,MAAyB,WAAlBwJ,EAA8B,UAAY,WAGrDnL,EAAAA,EAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,OAAOC,KAAM,GAC7BzD,MAAyB,WAAlBwJ,EAA8B,UAAY,QACjD7G,MAAO,CACH0a,SAAU,WACVC,KAAM,EACNmI,MAAO,UAS3B/lB,eAAe,aACflB,WAAW,SAAQC,SAEtB,aAGqB,SAApBkI,GAAmD,SAApBA,GAAmD,WAApBA,KAAkCtI,EAAAA,EAAAA,KAAC6F,EAAAA,OAAM,CACrGhE,MAAO,CAAEF,MAAyB,iBAAlBwJ,EAAoC,UAAY,SAChEzE,aAAc,EACdqc,eAAgB,EAChB5D,kBAAmB,EACnBjZ,YAAa,QACbJ,OAAQ,CAAElC,QAA2B,iBAAlBuH,EAAoC,UAAY,WACnEmU,UAAW,EACX3Z,QAAS,WAA0B,iBAAlBwF,GAA2CqnF,GAAqB,EACjFt2E,iBAAa+hB,EACbr6B,QAA2B,iBAAlBuH,EAAoC,UAAY,UACzD+V,UACIlhB,EAAAA,EAAAA,KAAAmpB,EAAAA,SAAA,CAAA/oB,UACIJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,UACDJ,EAAAA,EAAAA,KAACkzB,EAAAA,QAAM,CACH/tB,KAAK,OACLC,KAAM,GACNzD,MAAyB,iBAAlBwJ,EAAoC,UAAY,cASvE9J,eAAe,aACflB,WAAW,SAAQC,SAEtB,wBAYTJ,EAAAA,EAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEye,eAAgB,EAAGlc,gBAAiB,UAAWmY,SAAU,WAAYmI,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAG4gC,eAAgB,OAAQx3B,WAAY,qBAkB1L,C,wzCC5TA,IAAQ5zB,GAAUF,EAAAA,QAAWC,IAAI,UAAzBC,MACJsO,GAAiB,eAEjB2a,GAA6B,GAC7BqtE,GAAoC,GAEpCC,GAAuB,GACvBntE,GAAuB,GACvBM,GAAwB,GACxBR,GAA4B,GAC5BC,GAA+B,EAC/BI,GAAuB,GACvBitE,GAAwB,GACxBC,GAAuC,GACvCC,GAAwB,GACtBluD,GAAe,CACnBtgC,KAAM,IAGF4C,IAAYC,EAAAA,EAAAA,gBAEZC,GAAwB,WAC5B,IAAM/H,EAAOquB,EAAAA,mBAAmBrmB,YAChC,OAAIhI,EACYA,EAAK1C,MAIZ,IAEX,EAKMgxB,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,0BAErBklE,GAAoB,SAAHzxF,GAAqC,IAA/B+lB,EAAa/lB,EAAb+lB,cAAehsB,EAAEiG,EAAFjG,GAAIie,EAAIhY,EAAJgY,KAExC5R,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACR7rD,GAAkB5wB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM2wB,eAAe,IACpEh8B,GAAsBC,EAAAA,EAAAA,WAAS2qB,EAAAA,GAAAA,WAAS1qB,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAExCM,GAFUJ,EAAA,GAAQA,EAAA,IAE8CD,EAAAA,EAAAA,UAAS6qB,IAAcvqB,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAhFm2F,EAAwBl2F,EAAA,GAAEm2F,EAA2Bn2F,EAAA,GACtDqxC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,OAG7C8C,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,GAAcG,EAAAA,EAAAA,aAAW7G,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB7xB,IAAK,SAACuG,GACrF,GAAIA,EAAIsG,SAAU,CAChB,IAAMC,EAAOvG,EAAIuG,OAEjB8qF,EAA4B9qF,EAAK8yB,YAGnC,CACF,IAGA,OAAO,kBAAM3yB,GAAc,CAC7B,GAAG,IAEH,IAAM4qF,EAAqB,eAAArqF,GAAAtH,EAAAA,EAAAA,UAAG,YAE5BmG,GAASkP,EAAAA,GAAAA,yBAAuB,IAEhC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAE/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACvD,GAAIvB,EAAK2hB,aAAe+3D,GAAwD,IAA5BA,GAA8D,6BAA5BA,EACpFtrF,GAASkP,EAAAA,GAAAA,yBAAuB,QAG7B,CAEH,IAAMu8E,EAAyB,CAC7Bl4E,KAAMN,EACNsgB,YAAa+3D,EACblyC,UAAWlc,GAAatgC,MAEpB8uF,GAAoBxxF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAAoB5T,EAAK4nB,SAE7F,UACQp/B,EAAAA,EAAAA,WAAUsxF,EAAmB,CACjCn4D,YAAa+3D,EACbK,oBAAoBztD,EAAAA,EAAAA,YAAWutD,KAEjC,IAAM73E,EAAU,CACdvY,QAAQ,0BAA2B6hC,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,sBAAsBo2D,EAAwB,iCAAiC15E,EAAKiiB,gBAAe,wBACjL/f,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,cACd67E,GAAqB77E,eACrB,0BAA0B8tB,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,qBAAqBo2D,EAAwB,gCAAgC15E,EAAKiiB,gBAAe,wBAAuBzkB,cAC7L,eAAeA,cACf,uBAAuBA,cACvB,QAAQA,cACR,iBAAiBA,cACjB,UAAUA,cACVg8E,GAAsBh8E,cACtB+7E,GAAqC/7E,cACrC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB5T,GAASkP,EAAAA,GAAAA,yBAAuB,IAGhCutE,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,wCAErC,GAEJ,CAAE,MAAOqC,GACPC,QAAQD,MAAMA,GACdmiF,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAC,mBAAiBqC,MAEtD,GAEJ,CACF,CACF,IAAC,kBAhF0B,OAAA6G,EAAAxG,MAAA,KAAAC,UAAA,KAkF3B,OACE/B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAQ3e,SAAA,EAC7CJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO+xC,GAAe,KAAO,MAAQ,MAAO/nC,gBAAiB,SAAWzG,UACrFJ,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACLC,cAAe2rE,EACf1rE,cAAe,SAACnjB,GACd8uF,EAA4B9uF,EAC9B,EACAb,KAAM,EACNkkB,mBAAmB,MACnB3iB,YAAY,MACZ4iB,cAAe,CACbC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SAED44B,EAAgBr9B,KAAI,SAACoe,GAAI,OACxB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,SAK1D/Z,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBC,cAAe,yBACfx/E,QAASguF,EACTrvF,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACX/sB,UACFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,SAQzD,EAGMsV,GAAkB,eAAA7C,GAAA7V,EAAAA,EAAAA,UAAG,UAAO4G,GAChC,IACE,IAAMgS,GAAoBvE,EAAAA,EAAAA,YAAWY,EAAAA,wBAAyB,cAGxD4D,EAAAA,EAAAA,QAAOD,EAAmBhS,EAGlC,CAAE,MAAOnG,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,IAAC,gBAXuBE,GAAA,OAAAkV,EAAA/U,MAAA,KAAAC,UAAA,KAalBkkB,GAAe,WACnB,IAAMC,GAAsB9e,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6e,mBAAmB,IAG5E,OACElnB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACL0a,SAAU,WACVC,IAAK,EACLkI,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxgB,gBAAiB,qBACjB9C,KAAM,EACN4d,QAASuF,EAAsB,OAAS,OACxC7lB,eAAgB,SAChBlB,WAAY,UACZC,UAGFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,SAAA,EACvEJ,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAAChB,KAAK,KAAKzD,MAAM,WACzB3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,8BAMzC,EAEMmuB,GAAmB,SAAHtW,GAAyH,IAAnHuW,EAAwBvW,EAAxBuW,yBAA0BC,EAA2BxW,EAA3BwW,4BAA6BC,EAAiBzW,EAAjByW,kBAAmBC,EAAc1W,EAAd0W,eAAgBC,EAAiB3W,EAAjB2W,kBAO9GC,EAAyB,WAC7BJ,GAA4B,EAC9B,EAEA,OACEztB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACL0a,SAAU,WACVC,IAAK,EACLoI,MAAO,EACPxgB,gBAAiB,UACjBH,aAAc,EACdvG,WAAY,SACZkB,eAAgB,SAChBsgB,QAASiN,EAAoB,OAAS,QACtCxuB,UAEFJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CAACv/E,QAtBI,WAC5B8oB,GAA4B,EAC9B,EAoB0DnqB,MAAO,CAAEP,KAAM,GAAI3D,UACrEJ,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,cAAcC,KAAM,GAAIzD,MAAM,eAIjD3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQiO,EAA0B3N,QAASgO,EAAwBxF,YAAU,EAAAjpB,UAClFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,oBAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,aACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,SAAA,EACvBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,UAAWF,WAAY,QAASrB,SAAC,YACvDY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,WAAYvB,SAAA,CAAC,iCACF,KAC/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,UAAWF,WAAY,QAASrB,SACnDuuB,EAAejrB,SACV,IAAI,8BAKlB1D,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,GAAI3D,SAAA,EAC7CJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAASkpB,EACTvqB,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdvG,WAAY,SACZkB,eAAgB,SAChBogB,OAAQ,EACRG,QAAS,GACTxhB,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,SAAUvB,SAAC,UAEjDJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS+oB,EACTpqB,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdvG,WAAY,SACZkB,eAAgB,SAChBogB,OAAQ,EACRG,QAAS,GACTxhB,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE9C,SAAU,GAAIG,MAAO,SAAUvB,SAAC,+BAQ/D,EAEM2uB,GAAgB,SAAH7W,GAAyD,IAAnD8W,EAAmB9W,EAAnB8W,oBAAqBC,EAAsB/W,EAAtB+W,uBACtC9mB,GAAWK,EAAAA,EAAAA,eACT3L,EAAUF,EAAAA,QAAWC,IAAI,UAAzBC,MAEFqyB,GAAqB9mB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6mB,kBAAkB,IAC1E1xB,GAA8BP,EAAAA,EAAAA,WAAS,GAAKQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAArC2xB,EAAO1xB,EAAA,GACRkxB,GADoBlxB,EAAA,IACH2K,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMsmB,cAAc,KAE5DC,GAAoBxmB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMumB,iBAAiB,IAClEQ,GAAmBhnB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM+mB,gBAAgB,IAItEnwB,GAAgEhC,EAAAA,EAAAA,WAAS,GAAMiC,GAAA/B,EAAAA,EAAAA,SAAA8B,EAAA,GAAxEuvB,EAAwBtvB,EAAA,GAAEuvB,EAA2BvvB,EAAA,GAC5DG,GAA0CpC,EAAAA,EAAAA,WAAS,GAAKqC,GAAAnC,EAAAA,EAAAA,SAAAkC,EAAA,GAAjDgwB,EAAa/vB,EAAA,GAAEgwB,EAAgBhwB,EAAA,GACtCkM,GAAsCvO,EAAAA,EAAAA,WAAS,GAAMwO,GAAAtO,EAAAA,EAAAA,SAAAqO,EAAA,GAA9C+jB,EAAW9jB,EAAA,GAAE+jB,EAAc/jB,EAAA,GAClCC,GAAoCzO,EAAAA,EAAAA,UAASN,EAAAA,QAAWC,IAAI,UAAUC,OAAM8O,GAAAxO,EAAAA,EAAAA,SAAAuO,EAAA,GAArE+jB,EAAU9jB,EAAA,GAAE+jB,EAAa/jB,EAAA,GAChCE,GAA8C5O,EAAAA,EAAAA,WAAS,GAAM6O,GAAA3O,EAAAA,EAAAA,SAAA0O,EAAA,GAArC8jB,GAAF7jB,EAAA,GAAoBA,EAAA,IAC1CC,GAA0C9O,EAAAA,EAAAA,UAAS,IAAG+O,IAAA7O,EAAAA,EAAAA,SAAA4O,EAAA,GAA/C6jB,GAAa5jB,GAAA,GAAE6jB,GAAgB7jB,GAAA,GACtCC,IAAkDhP,EAAAA,EAAAA,WAAS,GAAMiP,IAAA/O,EAAAA,EAAAA,SAAA8O,GAAA,GAA1D6jB,GAAiB5jB,GAAA,GAAE6jB,GAAoB7jB,GAAA,GAC9CE,IAAwDnP,EAAAA,EAAAA,WAAS,GAAMoP,IAAAlP,EAAAA,EAAAA,SAAAiP,GAAA,GAAhE4jB,GAAoB3jB,GAAA,GAAE4jB,GAAuB5jB,GAAA,GAE9C6jB,IAAmB5X,EAAAA,EAAAA,cAAY,SAACnU,GAGpCwrB,GAAmB,GACnBE,GAAiB1rB,GACjB4rB,IAAqB,EAGvB,GAAG,IAEGlR,GAASxY,EAAAA,QAAWC,OAAO,CAC/B6pB,SAAU,CACR1O,OAAQ,GACR3kB,OAAQ,GACRsiB,kBAAmB,OACnBD,kBAAmB,IAErBiR,KAAM,CACJ1P,YAAa,GAEf2P,iBAAkB,CAChB7uB,SAAU,IAEZ8uB,kBAAmB,CACjB9uB,SAAU,IAEZ+uB,UAAW,CACT1zB,MAAO,GACPC,OAAQ,IAEV0zB,iBAAkB,CAChB1zB,OAAQ,GACR0E,SAAU,IAEZ+E,UAAW,CACTxC,KAAM,EACN0sB,WAAY,IAGdC,IAAK,CACHlvB,SAAU,GACVmvB,WAAY,GACZ/O,QAAS,GAEXgP,KAAM,CACN,EACAC,cAAe,CACbh0B,MAAO,GACPC,OAAQ,GACR+J,gBAAiB,QACjBxF,eAAgB,SAChBlB,WAAY,UAEd2wB,iBAAkB,CAChBj0B,MAAO,GACPC,OAAQ,GACRkiB,SAAU,WACVqI,MAAO,EACPpI,IAAK,GAEP8R,UAAW,CACTl0B,MAAO,GACPC,OAAQ,GACRsH,WAAY,UACZ4a,SAAU,cAIRgS,GAAyB,eAAA5Y,GAAApW,EAAAA,EAAAA,UAAG,YAEhC,GADAmG,GAAS8oB,EAAAA,GAAAA,wBAAsB,IACD,KAA1BtC,EAAejrB,OAAnB,CAIA,IAAMwtB,EAAU,CACdC,UAAW,QAEXnO,SAAU,IACVoO,UAAW,IACXC,eAAgB,GAAK1C,EAAejrB,OACpC4tB,eAAgB,CACdC,YAAY,EACZtnB,KAAM,WAIV,IACE,IAAMunB,QAAiBC,EAAAA,EAAAA,oBAAmBP,GAC1C,GAAIM,EAASE,UAEX,OACK,GAAIF,EAAS/uB,MAElB,OACK,IAAK+uB,EAASG,QAAqC,IAA3BH,EAASG,OAAOjuB,OAE7C,OAIF,IAAMkuB,GAAS7E,EAAAA,EAAAA,SAAO4B,GAChBkD,EAAWL,EAASG,OAAOh2B,IAAI,WAAD,IAAAid,GAAA5W,EAAAA,EAAAA,UAAC,UAAO8vB,UACvBC,MAAMD,EAAM3tB,KAAKf,MAAK,SAAC4uB,GAAG,OAAKA,EAAIC,MAAM,KACtC7sB,KACP,KAAO,KAAO,GACZwsB,EAAUM,MAAK,SAACpT,GAAK,OAAKA,EAAM3a,MAAQ2tB,EAAM3tB,GAAG,KAE9DytB,EAAUhb,KAAKkb,GAGjB7B,IAAwB,EAE5B,IAAG,OAAF,SAAArtB,GAAA,OAAAgW,EAAA9V,MAAA,KAAAC,UAAE,CAAF,CAXoC,UAa/BovB,QAAQC,IAAIP,GAElB,IAAMQ,EAAgBT,EAAUlT,MAAM,EAAG,IACzCvW,GAASmqB,EAAAA,GAAAA,mBAAkBD,IAC3BjM,GAAuBiM,EAEnBA,EAAc3uB,QAAU,IAC1ByE,GAASoqB,EAAAA,GAAAA,sBAAoB,GAOjC,CAAE,MAAO9vB,GAET,CA1DA,CA2DF,IAAC,kBA/D8B,OAAA2V,EAAAtV,MAAA,KAAAC,UAAA,KAiEzByvB,IAAala,EAAAA,EAAAA,cAAY,WAC7B,GAAIqW,EAAejrB,OAAS,EAAG,CAI7B,IAAM+uB,GAAqB1F,EAAAA,EAAAA,SAAO4B,GAGlCxmB,GAASmqB,EAAAA,GAAAA,mBAAkBG,GAC7B,CAEF,GAAG,CAAChD,KAEJ9vB,EAAAA,EAAAA,YAAU,WACR,IAAM+yB,EAAoB,SAAHzZ,GAAoB,IAAd0Z,EAAM1Z,EAAN0Z,OAC3BjD,EAAciD,EAAO91B,MACvB,EAIA,OAFAF,EAAAA,QAAWi2B,iBAAiB,SAAUF,GAE/B,WACL/1B,EAAAA,QAAWk2B,oBAAoB,SAAUH,EAC3C,CACF,GAAG,KAEH/yB,EAAAA,EAAAA,YAAU,WACR6yB,IACF,GAAG,CAACA,KAIJ,IAAM9D,IAAoBpW,EAAAA,EAAAA,cAAY,WACpCmW,GAA4B,GAM5BQ,GAEF,GAAG,IAIG6D,IAAaxa,EAAAA,EAAAA,cAAY,SAACyB,GAI9B,OAAIwV,GAIAvvB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAgBqE,MAAOua,GAAO9E,KAAK3Z,UACrCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,SAAA,EAE/BJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,EAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,EAAAA,QAAUpb,WAAW4uB,WAEnChzB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,KAAM,EACNoI,OAAQ,EACRc,GAAG,qBACHzhB,aAAc,GACdvG,WAAW,SACXkB,eAAe,SAAQjB,UAEvBJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMstB,GAAuBlZ,EAAK5V,IAAI,EAAEwd,QAASwN,EAAU,QAAU,OAAO/uB,UAC9FJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,sBAAwBC,KAAM,EAAGzD,MAAO,QAASmtB,OAAQ,oBArB9E/U,EAAK5V,MAgCfnE,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAeqE,MAAOua,GAAO9E,KAAK3Z,UACpCY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,SAAA,EAE/BJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,EAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,EAAAA,QAAUpb,WAAW4uB,WAInChzB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,KAAM,EACNoI,OAAQ,EACRc,GAAG,qBACHzhB,aAAc,GACdvG,WAAW,SACXkB,eAAe,SAAQjB,UAEvBJ,EAAAA,GAAAA,KAAC0F,EAAAA,QAAS,CAACC,QAAS,kBAAMstB,GAAuBlZ,EAAK5V,IAAI,EAAEwd,QAASwN,EAAU,QAAU,OAAO/uB,UAC9FJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,sBAAwBC,KAAM,EAAGzD,MAAO,QAASmtB,OAAQ,oBAvB9E/U,EAAKje,GAgCrB,GAAG,IAEGq3B,IAAsB7a,EAAAA,EAAAA,cAAY,SAACyB,GAIvC,OAAIwV,GAIAvvB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAgBqE,MAAOua,GAAO9E,KAAK3Z,UACrCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,UAE/BJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,EAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,EAAAA,QAAUpb,WAAW4uB,aAT7BjZ,EAAK5V,MAqBfnE,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAeqE,MAAOua,GAAO9E,KAAK3Z,UACpCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACqE,MAAOua,GAAOgS,cAAczwB,UAE/BJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRlb,MAAOua,GAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,EAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,EAAAA,QAAUpb,WAAW4uB,aAT7BjZ,EAAKje,GAmBrB,GAAG,IAGGs3B,GAAoB,eAAA5Z,GAAAxX,EAAAA,EAAAA,UAAG,YAa3B,IACE,IAAMwvB,QAAiBC,EAAAA,EAAAA,oBAbT,CACdN,UAAW,QAEXnO,SAAU,IACVoO,UAAW,IACXC,eAAgB,GAChBC,eAAgB,CACdC,YAAY,EACZtnB,KAAM,YAMR,GAAIunB,EAASE,UAEX,OACK,GAAIF,EAAS/uB,MAElB,OACK,IAAK+uB,EAASG,QAAqC,IAA3BH,EAASG,OAAOjuB,OAE7C,OAWF,IAPA,IAAM2vB,EAAe7B,EAASG,OAAOzU,QACnC,SAAC4U,EAAOlE,EAAO0F,GAAI,OAAK1F,IAAU0F,EAAKhH,WAAU,SAACiH,GAAC,OAAKA,EAAEpvB,MAAQ2tB,EAAM3tB,GAAG,GAAC,IAIxEqvB,EAAiB,GACjBC,EAAa,GACV7F,EAAQ,EAAGA,EAAQyF,EAAa3vB,OAAQkqB,IAAS,CACxD,IAAM9O,EAAQuU,EAAazF,UACRmE,MAAMjT,EAAM3a,KAAKf,MAAK,SAAC4uB,GAAG,OAAKA,EAAIC,MAAM,KACtC7sB,KACP,KAAO,KAAO,IAC3BouB,EAAe5c,KAAKkI,GACpB2U,EAAW7c,KAAKgX,IAEhBqC,IAAwB,EAE5B,CAIA,IASMoC,EATemB,EAAe5C,MAAK,SAAC2C,EAAGG,GAG3C,OAFeD,EAAWD,EAAeG,QAAQJ,IAClCE,EAAWD,EAAeG,QAAQD,GAEnD,IAKmChV,MAAM,EAAG,IAE5C0H,GAAuBiM,EACnBA,EAAc3uB,OAAS,IACzByE,GAASyrB,EAAAA,GAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,GAAAA,sBAAoB,KAG3BF,EAAc3uB,QAAU,KAC1ByE,GAASyrB,EAAAA,GAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,GAAAA,sBAAoB,KAG/BpqB,GAASmqB,EAAAA,GAAAA,mBAAkBlM,IAE7B,CAAE,MAAO3jB,GAET,CACF,IAAC,kBA3EyB,OAAA+W,EAAA1W,MAAA,KAAAC,UAAA,KAiFpBkwB,IAAyB3a,EAAAA,EAAAA,cAAY,SAACnU,IAE1CiiB,GAAuBA,GAAqBlJ,QAAO,SAACnD,GAElD,OAAOA,EAAK5V,MAAQA,CACtB,KAEyBT,OAAS,IAChCyE,GAASoqB,EAAAA,GAAAA,sBAAoB,IAGI,GAA/BnM,GAAqB1iB,SACvByE,GAASoqB,EAAAA,GAAAA,sBAAoB,IAC7BpqB,GAASyrB,EAAAA,GAAAA,uBAAqB,KAEhCzrB,GAASmqB,EAAAA,GAAAA,mBAAkBlM,IAe7B,GAAG,IAMH,OACEplB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAIEJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAGmC,YAAa,QAASD,YAAa,EAAE7F,UACjDJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAACvd,KAAM,EAAGwd,sBAAuB,CAAEJ,SAAU,GAAI/gB,UAC1DY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACoB,eAAgB,SAAUlB,WAAY,SAAU0D,EAAG,OAAQ3D,EAAG,OAAOE,SAAA,EAExEJ,EAAAA,GAAAA,KAACuuB,GAAgB,CACfC,yBAA0BA,EAC1BC,4BAA6BA,EAC7BC,kBAAmBA,GACnBC,eAAgBA,EAChBC,kBAAmBA,KAErB5tB,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACoB,eAAgB,SAAU8rB,UAAW,SAAUhtB,WAAY,SAAUshB,OAAQ,EAAErhB,SAAA,EAElFJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAACqgB,QAASiN,EAAoB,QAAU,OAAQjpB,QAASytB,GAAsBnuB,IAAIjF,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,wBAA0BC,KAAM,IAAKC,GAAG,IAAI1D,MAAM,aAG9JX,EAAAA,GAAAA,MAACsgB,EAAAA,QAAU,CACT+N,cAAeA,EACftrB,KAAM,EAAE3D,SAAA,EAERY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAG4d,QAASuN,EAAqB,OAAS,OAAQryB,MAAO,OAAQsD,WAAY,SAAUkB,eAAgB,SAASjB,SAAA,EAGzHJ,EAAAA,GAAAA,KAAC6zB,EAAAA,iBAAgB,CACfxS,IAAK2N,EACL8E,WAAYnF,EACZoF,eAAgB,IAChBC,YAAqB,IAARn3B,EACbo3B,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAsB,EACtBC,mBAAoB,EACpBC,oBAAqB,EACrBC,aAAajc,EAAAA,EAAAA,cAAY,WAClBiX,GACHC,GAAe,GAGfF,GAAiB,EAErB,GAAG,IACHkF,WAAWlc,EAAAA,EAAAA,cAAY,WACrBgX,GAAiB,EACnB,GAAG,IACHmF,cAAcnc,EAAAA,EAAAA,cAAY,SAAC1P,GAErBA,EAAKlF,SAAWkF,IAClBT,GAASmqB,EAAAA,GAAAA,mBAAkB1pB,IAC3Bwd,GAAuBxd,EAG3B,GAAG,IACH8rB,YAAa,SAAC3a,EAAM6T,GAClBsC,GAAiBtC,EAAMzpB,IACzB,EACAwwB,aAAc,SAAC5a,GAAI,OAAKA,EAAK5V,GAAG,EAChC2uB,YACExa,EAAAA,EAAAA,cAAY,SAACyB,EAAM6T,GAAK,OAAKkF,GAAW/Y,EAAM6T,EAAM,GAAE,OAE1D5tB,EAAAA,GAAAA,KAAC8D,EAAAA,QAAM,CAAA1D,UACLJ,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAACqgB,QAASyN,EAAmB,QAAU,OAAQzpB,QAASqrB,GAA2B/rB,IAAIjF,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,SAAWE,GAAI,IAAKD,KAAM,GAAIzD,MAAM,kBAOjJ3B,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAC8D,KAAM,EAAG4d,QAASuN,EAAqB,OAAS,OAAQryB,MAAO,OAAOuD,UAGzEJ,EAAAA,GAAAA,KAAC6zB,EAAAA,iBAAgB,CACfe,UAAU,EACVvT,IAAK2N,EACL8E,WAAYnF,EACZqF,YAAqB,IAARn3B,EACbo3B,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAsB,EACtBC,mBAAoB,EACpBC,oBAAqB,EACrBI,YAAa,SAAC3a,EAAM6T,GAClBsC,GAAiBtC,EAAMzpB,IACzB,EACAwwB,aAAc,SAAC5a,GAAI,OAAKA,EAAK5V,GAAG,EAChC2uB,YACExa,EAAAA,EAAAA,cAAY,SAACyB,EAAM6T,GAAK,OAAKuF,GAAoBpZ,EAAM6T,EAAM,GAAE,eAWzE5tB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CACF+e,SAAS,WACTC,IAAK,EACLmI,KAAM,EACN1gB,aAAc,EACd9C,QAAS,qBACTzD,WAAW,SACXkB,eAAe,SACfsgB,QAASiN,EAAoB,OAAS,QAAQxuB,UAC9CY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACqe,WAAY,EAAGc,YAAa,EAAG/e,MAAO,QAASihB,MAAI,EAACiS,QAAM,EAACrzB,SAAU,GAAGpB,SAAA,CAAC,YAAUuuB,EAAejrB,OAAO,yCAYvH1D,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQuP,GAAmBjP,QAAS,kBAAMkP,IAAqB,EAAM,EAAE3qB,KAAM,OAAQikB,YAAU,EAAAjpB,UAEpGY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,MAAO2D,EAAG,MAAOD,QAAS,qBAAsB8C,aAAc,GAAIib,QAAQ,OAAOxhB,WAAW,SAASkB,eAAe,SAASyzB,aAAc,SAAS10B,SAAA,EAC1JJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,CAAC9gB,MAAO,WAC1B3B,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CAEV7wB,OAAQ,CAAEC,IAAKyrB,IACfxrB,WAAW,UACXL,KAAM,EACNM,IAAKurB,GACL/rB,EAAG,IACH3D,EAAG,MANE0vB,UAaX5vB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQyP,GAAsBnP,QAAS,kBAAMoP,IAAwB,EAAM,EAAE5G,YAAU,EAAAjpB,UAC5FY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,aAAaxD,SAAA,EACnCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,aAAaxD,UACxDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,eAI/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACTrd,QAAS,aACTijB,gBAAiB,EACjBC,gBAAiB,aACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAcihB,MAAI,EAAAxiB,SAAC,aAGhCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,aAAavB,SAAC,oDAK/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,aAAaxD,UACrDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAAS,kBAAMsqB,IAAwB,EAAM,EAAEpuB,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBASjI,EAEM2zF,GAAmB,SAAHp5E,GAAwH,IAAlHq5E,EAA4Br5E,EAA5Bq5E,6BAA8BplD,EAAWj0B,EAAXi0B,YAAa5f,EAAmBrU,EAAnBqU,oBAAqBC,EAAsBtU,EAAtBsU,uBAAwBglE,EAAkBt5E,EAAlBs5E,mBAE5GC,GAA2B9rF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6rF,wBAAwB,IAChFC,GAA4B/rF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM8rF,yBAAyB,IACxF,OACEn0F,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ2zE,EAA0BrzE,QAASmzE,EAA8B5uF,KAAM,OAAQikB,YAAU,EAAAjpB,UACtGY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG,MAAO2D,EAAG,OAAOzD,SAAA,EACnDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBzhB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAWiiB,QAAS+oB,GAAe,IAAM,SAAW,MAAOzuC,WAAYyuC,GAAe,IAAM,SAAW,GAAGxuC,SAAA,EAC/HJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,wBAAyBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,WAAYH,SAAU,GAAIohB,MAAI,EAAC5b,UAAW4nC,GAAe,IAAM,SAAW,GAAGxuC,SAAEizF,SAIhKrzF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGjH,OAAQ,OAAQD,MAAO,OAAQsD,WAAY,SAAUkB,eAAgB,UAAWjB,UAEtGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAE2B,YAAa,EAAGC,YAAa,UAAWrJ,MAAO,MAAOC,OAAQ,OAAQsD,UAEnFJ,EAAAA,GAAAA,KAAC+uB,GAAa,CAACC,oBAAqBA,EAAqBC,uBAAwBA,SAMrFjuB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAASquF,EACT1vF,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,aAEnCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,MAErB/D,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACfpgC,SAAUguF,EACVxuF,QAASsuF,EACT3vF,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,SACA+zF,GAEAn0F,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WADf3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,oBAe/C,EAEMg0F,GAAoB,SAAHp5E,GAA8B,IAAxBq5E,EAAgBr5E,EAAhBq5E,iBAGrBzlD,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MACvCsL,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACR71D,GAAsB9e,EAAAA,EAAAA,UAEtB+e,EAAyB,WAC7B9mB,GAASmqB,EAAAA,GAAAA,mBAAkB,KAC3BlM,GAAuB,GACvBje,GAASyrB,EAAAA,GAAAA,uBAAqB,IAC9BzrB,GAASoqB,EAAAA,GAAAA,sBAAoB,IAC7BpqB,GAAS8oB,EAAAA,GAAAA,wBAAsB,GACjC,EAGM+iE,EAA+B,WAEnC7rF,GAASmsF,EAAAA,GAAAA,8BAA4B,IAErCrlE,IACAokE,GAAwB,EAC1B,EAEMn5C,GAAe5hC,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAE/B,IAAMm4C,GAAa94B,EAAAA,EAAAA,KAAI+M,GAAQ,GAAIglE,IAE7Bl4D,GAAgB7kB,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBACtD9I,GAASxiB,EAAAA,EAAAA,KAAI64B,EAAek4D,IAIlC,IAEE,IAAMh5C,EAAmBh0B,GAAqBzqB,KAAI,SAACm2B,EAAOlE,GAAK,OAAKA,EAAMgP,UAAU,IAG9Eyd,QAAmBjgB,EAAAA,EAAAA,SAAQ+f,SAC3BhoB,QAAQC,IACZioB,EAAW/f,MACRpd,QAAO,SAACsd,GAAO,OAAM4f,EAAiBj9B,SAASqd,EAAQr1B,KAAK,IAC5DxJ,KAAI,SAAC6+B,GAAO,OAAK8f,EAAAA,EAAAA,cAAa9f,EAAQ,WAGrCrI,QAAQC,IACZhM,GAAqBzqB,IAAI,WAAD,IAAAghB,GAAA3a,EAAAA,EAAAA,UAAC,UAAO8vB,EAAOlE,GACrC,IAAQzpB,EAAQ2tB,EAAR3tB,IACFq2C,EAAY5sB,EAAMgP,WAElBpL,QAAiBO,MAAM5tB,GACvB8tB,QAAaT,EAASS,OAOtBwoB,GAJS9jC,SAAS+jC,cAAc,UACnBC,WAAW,MAGlB,IAAI12C,OAChBw2C,EAAIG,IAAMC,IAAIC,gBAAgB7oB,GAG9BwoB,EAAIM,QAAM/4C,EAAAA,EAAAA,UAAG,YAEX,IAAMg5C,EAASrkC,SAAS+jC,cAAc,UAChCO,EAAMD,EAAOL,WAAW,MAK1BO,EAAWT,EAAI59C,MACfs+C,EAAYV,EAAI39C,OAGhB29C,EAAI59C,MANS,MAOfq+C,EAPe,IAQfC,EARe,IAQFV,EAAI39C,OAAqB29C,EAAI59C,OAGxCs+C,EAVc,MAWhBD,EAXgB,IAWJA,EAAwBC,EACpCA,EAZgB,KAgBlBH,EAAOn+C,MAAQq+C,EACfF,EAAOl+C,OAASq+C,EAGhBF,EAAIG,UAAUX,EAAK,EAAG,EAAGS,EAAUC,GAIlBV,EAAI39C,OAAS29C,EAAI59C,MADlC,IAEM2E,EAFqB,EAETw5C,EAAOn+C,MAA8B,IAEvDo+C,EAAII,KAAI,QAAW75C,EAAQ,WAC3By5C,EAAIK,UAAY,OAChBL,EAAInY,YAAc,cAClBmY,EAAIM,uBAAwB,EAC5BN,EAAIO,UAAY,EAGhB,IAAMC,EAAa,oBAAuB63C,GACpC53C,EAAYT,EAAIU,YAAYF,GAAe5+C,MAQ3C++C,GAAWZ,EAAOn+C,MAAQ6+C,GAAa,EAAI,EAC3CG,EAAUb,EAAOl+C,OAAS,GAAK,EAGrCm+C,EAAIa,WAAa,GAGjBb,EAAIK,UAAY,QAChBL,EAAIc,SAASN,EAAeG,EAASC,GAGrCZ,EAAIa,WAAa,EAGjB,IAAME,GAAKhB,EAAOn+C,MAAQ6+C,GAAa,EACjCO,EAAIjB,EAAOl+C,OAAS,GAG1Bm+C,EAAIK,UAAY,OAChBL,EAAIc,SAASN,EAAeO,EAAGC,GAG/B,IAAMC,QAA6B,IAAI/pB,SAAQ,SAAA51B,GAC7Cy+C,EAAOmB,OAAO5/C,EAAS,aAAc,GACvC,IAGM6/C,GAAW/6B,EAAAA,EAAAA,KAAI+M,GAAYglE,GAAoB,IAAI54C,SACnD6B,EAAAA,EAAAA,aAAYD,EAAUF,EAAsB,CAAEI,YAAa,cACnE,GACF,IAAC,gBAAAz5C,EAAA0W,GAAA,OAAAoD,EAAA7Z,MAAA,KAAAC,UAAA,EAhGwB,KAkG3B,IACQmY,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YACjDmmC,EAAa,CACjBA,WAAYr7B,GAAqB1iB,cAG7BnB,EAAAA,EAAAA,WAAUsiB,EAAQ48B,GAExB,IAAM1lC,EAAU,CACdvY,QAAQ,qBAAsB6hC,GAAatgC,KAAI,cAAcwuF,GAAqB,wCAAwCD,GAAoC,uBAC9Jr3E,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,cACd67E,GAAqB77E,eACrB,qBAAqB8tB,GAAatgC,KAAI,cAAcwuF,GAAqB,wCAAwCD,GAAoC,wBAAuB/7E,cAC5K,eAAeA,cACf,kBAAkBA,cAClB,UAAUA,cACV,UAAUA,cACVg8E,GAAsBh8E,cACtB+7E,GAAqC/7E,cACrC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,EAGrB,CAAE,MAAOtZ,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,CACF,IAAG,IAGGwxF,EAAkB,eAAA52E,GAAArb,EAAAA,EAAAA,UAAG,YAIzB,GAFAmG,GAASosF,EAAAA,GAAAA,+BAA6B,IAElCnuE,GAAqB1iB,OAAS,EAAG,CACnCkhF,EAAM4P,WACN,UACQt6C,IACN/xC,GAASosF,EAAAA,GAAAA,+BAA6B,IACtCF,IACAL,IACApP,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,mCAErC,GAGJ,CAAE,MAAOqC,GACPC,QAAQD,MAAMA,GACd0F,GAASosF,EAAAA,GAAAA,+BAA6B,IACtCP,IAEApP,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAC,mBAAiBqC,MAEtD,GAEJ,CACF,MAGE0F,GAASosF,EAAAA,GAAAA,+BAA6B,GAK1C,IAAC,kBAxCuB,OAAAl3E,EAAAva,MAAA,KAAAC,UAAA,KA0CxB,OAEE/C,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UACEJ,EAAAA,GAAAA,KAAC+zF,GAAgB,CACfC,6BAA8BA,EAC9BplD,YAAaA,EACb5f,oBAAqBA,EACrBC,uBAAwBA,EACxBglE,mBAAoBA,KAI5B,EAGMhqE,GAAoB,SAAH7L,GAAkB,IAAZxV,EAAIwV,EAAJxV,KAErBT,GAAWK,EAAAA,EAAAA,eAIXisF,GAAmCn8E,EAAAA,EAAAA,cAAY,SAAC1P,GACpDT,GAASwiB,EAAAA,GAAAA,mCAAiC,IAC1CxiB,GAASusF,EAAAA,GAAAA,qCAAoC9rF,EAAK4hB,sBAAwB5hB,EAAK4hB,sBAAwB,KACvG1E,GAA6Bld,EAAK4hB,sBAClC2oE,GAAoCvqF,EAAK4hB,sBACzC4oE,GAAuBxqF,EAAK+4B,QAC5B0xD,GAA2BzqF,EAAKozB,gBAAe,MAAMpzB,EAAKy0B,QAC1Di2D,GAAuC1qF,EAAKozB,gBAC5Cu3D,GAAwB3qF,EAAKy0B,OAE/B,GAAG,IAEH,OACEr9B,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UAAEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACjB5gC,QAAS,kBAAM8uF,EAAiC7rF,EAAK,EACrDtE,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EAET/kB,MAAO,MACPwE,eAAgB,SAChBlB,WAAY,UACZC,UAGFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,WAAWC,KAAM,GAAIzD,MAAM,aAQrD,EAEMgzF,GAAe,SAAH90E,GAA8I,IAAxI6K,EAA6B7K,EAA7B6K,8BAAsDhD,GAAF7H,EAArB2K,sBAAsC3K,EAAf6H,iBAAiBe,EAAU5I,EAAV4I,WAAYgC,EAAW5K,EAAX4K,YAAamqE,EAAgC/0E,EAAhC+0E,iCAChHhmD,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAEvCsL,GAAWK,EAAAA,EAAAA,eAEXo8E,GAAQC,EAAAA,EAAAA,YAEdt4E,GAA8BtP,EAAAA,EAAAA,UAAS,IAAGuP,GAAArP,EAAAA,EAAAA,SAAAoP,EAAA,GAG1CG,GAHcF,EAAA,GAAYA,EAAA,IAG8BvP,EAAAA,EAAAA,WAAS,IAAM0P,GAAAxP,EAAAA,EAAAA,SAAAuP,EAAA,GAGvEE,GAH2BD,EAAA,GAAyBA,EAAA,IAGF1P,EAAAA,EAAAA,WAAS,IAAM4P,GAAA1P,EAAAA,EAAAA,SAAAyP,EAAA,GACjEE,GADwBD,EAAA,GAAsBA,EAAA,IACtB5P,EAAAA,EAAAA,UAAS,KAAG8P,GAAA5P,EAAAA,EAAAA,SAAA2P,EAAA,GAEpCG,GAFWF,EAAA,GAASA,EAAA,IAEoB9P,EAAAA,EAAAA,UAASwtB,IAAYvd,GAAA/P,EAAAA,EAAAA,SAAA8P,EAAA,GAAtD4b,EAAY3b,EAAA,GAAE4b,EAAe5b,EAAA,GACpCE,GAAoDnQ,EAAAA,EAAAA,WAAS,GAAMoQ,GAAAlQ,EAAAA,EAAAA,SAAAiQ,EAAA,GAA5D0d,EAAkBzd,EAAA,GAAE0d,EAAqB1d,EAAA,GAChDE,GAAoDtQ,EAAAA,EAAAA,WAAS,GAAMuQ,GAAArQ,EAAAA,EAAAA,SAAAoQ,EAAA,GAA5Dga,EAAkB/Z,EAAA,GAAEwd,EAAqBxd,EAAA,GAChDE,GAA0CzQ,EAAAA,EAAAA,WAAS,GAAM0Q,GAAAxQ,EAAAA,EAAAA,SAAAuQ,EAAA,GAAlD8a,EAAa7a,EAAA,GAAEsd,EAAgBtd,EAAA,GACtCE,GAAsC5Q,EAAAA,EAAAA,UAAS+oB,IAA6BlY,GAAA3Q,EAAAA,EAAAA,SAAA0Q,EAAA,GAAxDsd,IAAFrd,EAAA,GAAgBA,EAAA,IAGlCG,IAA4ChR,EAAAA,EAAAA,WAAS2qB,EAAAA,GAAAA,WAAS1Z,IAAA/Q,EAAAA,EAAAA,SAAA8Q,GAAA,GAAvDwZ,GAAcvZ,GAAA,GAAEkd,GAAiBld,GAAA,GAClCsZ,IAAuBtX,EAAAA,EAAAA,QAAO,MAE9B2kF,KADkB3kF,EAAAA,EAAAA,QAAO,OACRA,EAAAA,EAAAA,QAAO,OAExBia,IAAyBja,EAAAA,EAAAA,QAAO,MAChCogC,IAAoBpgC,EAAAA,EAAAA,QAAO,MAC3Bka,IAAqBla,EAAAA,EAAAA,QAAO,MAkB5Bmb,GAAoC,WAAO,IAADC,EAC9CnjB,GAASwiB,EAAAA,GAAAA,mCAAiC,IAChB,OAA1BW,EAAAlB,GAAmBpV,UAAnBsW,EAA4BC,QAC5BxF,GAA4B,GAC5BqF,IAAkBxD,EAAAA,GAAAA,WAClB3B,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,EACxBtiB,GAAS6f,EAAAA,GAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,GAAAA,mBAAkB,KAC3BoC,GAAsB,GACtBC,GAAsB,GACtBC,GAAiB,GACjBooE,GAAwB,EAC1B,GAWA1zF,EAAAA,EAAAA,YAAU,WACR,IAQM8rB,EARUmpE,EAAiCj5F,KAAI,SAACoe,GACpD,IACM2R,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAEtC,OAAO4R,WAAWD,EAAYE,OAAOvhB,QAAQ,IAAK,MAAQ,CAC5D,IAG4BwhB,QAAO,SAACC,EAAaC,GAAY,OAAKD,EAAcC,CAAY,GAAE,GACrDC,iBACzCb,GAAeM,GACfzF,GAA+ByF,CAEjC,GAAG,CAACmpE,IAEJ,IAAMx3E,IAAa9E,EAAAA,EAAAA,cAAY,WAAO,IAAD2T,EAAAC,EAInC,GAAyC,KAAX,OAA1BD,EAAA7B,GAAmBpV,cAAO,EAA1BiX,EAA4BrnB,QACU,IAAX,OAA1BsnB,EAAA9B,GAAmBpV,cAAO,EAA1BkX,EAA4BtnB,QACC,IAA7BmhB,IACwB,IAAxBE,GACH,CAAC,IAADkG,EAAAC,EAEyC,KAAX,OAA1BD,EAAA/B,GAAmBpV,cAAO,EAA1BmX,EAA4BvnB,QAAoD,IAAX,OAA1BwnB,EAAAhC,GAAmBpV,cAAO,EAA1BoX,EAA4BxnB,QACzEmmB,GAAsB,GAGS,IAA7BhF,IACFiF,GAAsB,GAGI,IAAxB/E,IACFgF,GAAiB,EAErB,KAEK,CACH,IAAMoB,EAAgBvG,GAA2BwG,WAAU,SAAAvS,GAAI,OAAIA,EAAKgM,GAA0B,IAElG,IAAuB,IAAnBsG,EAAsB,CAAC,IAADE,EAElB1T,GAAc2T,EAAAA,GAAAA,WAAU1G,IAC9BjN,EAAYwT,GAAetG,IAA6B,CACtD0G,YAAa1G,GACb6F,OAAkC,OAA5BW,EAAEnC,GAAmBpV,cAAO,EAA1BuX,EAA4B3nB,MACpC8W,KAAM6K,GACNmG,SAAUzG,IAEZH,GAA6BjN,EAC7B1Q,GAASusF,EAAAA,GAAAA,qCAAoC5uE,KAC7C3d,GAAS6f,EAAAA,GAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,GAAAA,mBAAkB,KAC3ByB,GAAmBpV,QAAQuW,QAC3BxF,GAA4B,GAC5BE,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,CAE1B,KAAO,CAAC,IAADmC,EACL7B,GAAsB,GACtBC,GAAsB,GACtBC,GAAiB,GAEjB,IAAM4B,GAAOrqB,EAAAA,EAAAA,SAAA,GACVujB,GAA4B,CAC3B0G,YAAa1G,GACb6F,OAAkC,OAA5BgB,EAAExC,GAAmBpV,cAAO,EAA1B4X,EAA4BhoB,MACpC8W,KAAM6K,GACNmG,SAAUzG,KAGdH,GAA0B,GAAAgH,QAAAC,EAAAA,EAAAA,SAAOjH,IAA0B,CAAE+G,IAG7D1kB,GAASusF,EAAAA,GAAAA,qCAAoC5uE,KAE7CsF,IAAkBxD,EAAAA,GAAAA,WAClBwC,GAAmBpV,QAAQuW,QAC3BxF,GAA4B,GAC5BE,GAAuB,GACvB6C,EAAgB2B,GAChBlE,GAAwBkE,EACxBtiB,GAAS6f,EAAAA,GAAAA,wBAAuB,KAChC7f,GAASwgB,EAAAA,GAAAA,mBAAkB,IAG7B,CAEF,CAIF,GAAG,IAIGqE,IAAkB1U,EAAAA,EAAAA,cAAY,SAACyB,GAEnCqQ,GAAmBpV,QAAQiF,eAAe,CAAElV,KAAMgV,EAAK6R,SACvDzjB,GAAS6f,EAAAA,GAAAA,wBAAuBjO,EAAK0S,cACrC1G,GAA4BhM,EAAK0S,YACjCtkB,GAASwgB,EAAAA,GAAAA,mBAAkB5O,EAAK2S,WAChCzG,GAAuBlM,EAAK2S,SAC5BnG,GAAwBxM,EAAK2B,KAC7BoN,EAAgB/O,EAAK2B,MACrBm5E,GAAe7/E,QAAQ4qC,eAAe,CAAEC,SAAU,UAEpD,GAAG,IAGG3xB,GAAmB,SAACzB,GAExB,IAAMuB,EAAYlI,GAA2BwG,WAAU,SAACvS,GAAI,OAAKzd,OAAOD,KAAK0d,GAAM,KAAO0S,CAAW,IAErG,IAAmB,IAAfuB,EAAkB,CAEpB,IAAMnB,GAAOE,EAAAA,EAAAA,SAAOjH,IACpB+G,EAAQoB,OAAOD,EAAW,GAG1B7lB,GAASusF,EAAAA,GAAAA,qCAAoC7nE,IAC7C/G,GAA6B+G,CAC/B,CACF,EAEMI,GAAwB,WAC5B9kB,GAASwiB,EAAAA,GAAAA,mCAAiC,GAE5C,EACMuC,GAAuB,WAC3B/kB,GAASwiB,EAAAA,GAAAA,mCAAiC,GAE5C,EAwBMmqE,GAA2B,eAAA76D,GAAAj4B,EAAAA,EAAAA,UAAG,YAGlC,GADA4iF,EAAM4P,WACFrB,IAAqCrtE,GAEvC3d,GAASwiB,EAAAA,GAAAA,mCAAiC,IAC1Ci6D,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,+CAErC,QAGC,CACH,IAAMyzF,GAAoBxxF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAAoBylE,IAExF,UACQ7wF,EAAAA,EAAAA,WAAUsxF,EAAmB,CAAErpE,sBAAuB1E,KAC5D3d,GAASwiB,EAAAA,GAAAA,mCAAiC,IAE1Ci6D,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,+CAErC,IAGF+H,GAASwiB,EAAAA,GAAAA,mCAAiC,IAC1CxiB,GAASusF,EAAAA,GAAAA,qCAAoC,KAC7C5uE,GAA6B,GAC7BqtE,GAAoC,GACpCC,GAAuB,EAGzB,CAAE,MAAO3wF,GACPC,QAAQD,MAAMA,GACdmiF,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAC,mBAAiBqC,MAEtD,GAEJ,CACF,CAIF,IAAC,kBAlDgC,OAAAw3B,EAAAn3B,MAAA,KAAAC,UAAA,KAmDjC,OAEE/C,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,UAAEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQmK,EAA+B7J,QAASwK,GAAmCjmB,KAAM,OAAOhF,UACvGY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG0uC,GAAe,IAAM,MAAQ,MAAO/qC,EAAG,OAAOzD,SAAA,EAChFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBzhB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAWiiB,QAAS+oB,GAAe,KAAO,SAAW,MAAOzuC,WAAYyuC,GAAe,KAAO,SAAW,GAAGxuC,SAAA,EACjIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,yBACzCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,WAAYH,SAAU,GAAIohB,MAAI,EAAC5b,UAAW4nC,GAAe,KAAO,SAAW,GAAGxuC,SAAA,CAAC,IAAEizF,UAEhGrzF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACTY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAExH,OAAQ,QAASsD,SAAA,EAC9BY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAC/rC,cAAe,EAAEzhB,SAAA,EACrBY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe6vB,GAAe,IAAM,SAAW,MAAO/sB,cAAe,GAAMR,IAAKwzE,GAAez0F,SAAA,EAC5GY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UAAW9C,KAAM,EAAGgb,cAAe,MAAO5e,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EACzHkb,QAASgtB,GAAe,IAAM,EAAI,GAElChrC,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,SAAA,EAC7GJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,aACnEJ,EAAAA,GAAAA,KAACotB,GAAgC,CAC/BC,QAAQ,cACRC,oBA9FqB,WAAO,IAAD46B,EACrClC,EAA8C,OAAjCkC,EAAG/9B,GAAuBnV,cAAO,EAA9BkzC,EAAgCtjD,MACtD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACRh8B,GAAuBnV,QAAQiF,eAAe,CAAElV,KAAMipC,GACxD,CACF,EAsFkBzgB,YAAapD,GACbqD,MAAM,eACNC,SAAU,cACVC,aAAcC,EAAAA,0BACdhH,WAAW,6BACX/d,KAAM8e,EACNuF,sBAAuBA,GACvBC,qBAAsBA,SAE1BltB,EAAAA,GAAAA,KAACsnB,GAAiB,CAACC,mBAAoBA,EAAoBC,qBAAsBA,GAAsBC,eAAgBA,GAAgB2D,kBAAmBA,SAI5JpqB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe6vB,GAAe,IAAM,SAAW,MAAO/sB,cAAe+sB,GAAe,IAAM,EAAI,GAAM/oB,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EAClJJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UAAW9C,KAAM,EAAGgb,cAAe,MAAO5e,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EACzHkb,QAASgtB,GAAe,IAAM,EAAI,GAElChrC,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,UAC7GJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,cAErEJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CACJ0B,YAAa4kB,EAAqB,YAAc,YAChD/mB,KAAM,EACNsd,IAAK+I,GACLtlB,aA1SuB,SAACC,GAEtC,IAGM24B,EAHe34B,EAAKsF,QAAQ,UAAW,IAGTqU,MAAM,EAAG,GAGvCif,EAAiBkoB,OAAOnoB,GAAgB1R,iBAE9C5B,GAAmBpV,QAAQpQ,MAAQ+4B,CACrC,EAgSgBr4B,YAAY,SACZ1B,QAAS,QACT2B,qBAAsB,YACtBP,kBAAkBhF,EAAAA,GAAAA,KAACsB,EAAAA,QAAI,CAAC2D,IAAIjF,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,QAAUC,KAAM,EAAGC,GAAG,IAAI1D,MAAM,oBAGlFX,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe6vB,GAAe,IAAM,SAAW,MAAO/sB,cAAe,GAAMgE,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACzHJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UAAW9C,KAAM,EAAGgb,cAAe,MAAO5e,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EACzHkb,QAASgtB,GAAe,IAAM,EAAI,GAElChrC,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,UAC7GJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,YAErEJ,EAAAA,GAAAA,KAAC4oB,GAAa,CAACE,gBAAiBA,EAAiBD,aAAcA,QAGjE7nB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe6vB,GAAe,IAAM,SAAW,MAAO/sB,cAAe,GAAMgE,QAAS,MAAOhE,cAAe,EAAEzhB,SAAA,EACzHY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UAAW9C,KAAM,EAAGgb,cAAe,MAAO5e,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EACzHkb,QAASgtB,GAAe,IAAM,EAAI,GAElChrC,QAAS,UAAWG,KAAM,EAAG8hB,QAAS,MAAO1lB,WAAY,SAAUkB,eAAgB,SAAUqF,aAAc,EAAEtG,SAAA,EAC7GJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASwrB,UAAW,SAAUvN,WAAY,EAAG7b,KAAM,EAAE3D,SAAC,aACnEJ,EAAAA,GAAAA,KAACotB,GAAgC,CAC/BC,QAAQ,SACRC,oBAxIgB,WAAO,IAAD66B,EAChCnC,EAAyC,OAA5BmC,EAAG7X,GAAkBt7B,cAAO,EAAzBmzC,EAA2BvjD,MACjD,GAAIohD,EAAe,CACjB,IAAMhY,EAAUgY,EACb7f,MAAM,MACNxqC,KAAI,SAACsqD,GAAI,OAAKA,EAAKC,OAAO,GAAGjY,cAAgBgY,EAAKvnC,MAAM,EAAE,IAC1DynC,KAAK,MACR7V,GAAkBt7B,QAAQiF,eAAe,CAAElV,KAAMipC,GACnD,CACF,EAgIkBzgB,YAAapD,GACbqD,MAAM,UACNC,SAAU,SACVC,aAAcC,EAAAA,0BACdhH,WAAW,wBACX/d,KAAM6f,EACNwE,sBAAuBA,GACvBC,qBAAsBA,SAE1BltB,EAAAA,GAAAA,KAACuoB,GAAY,CAACC,cAAeA,QAG/BxoB,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBv/E,QAASyX,GACT+nE,cAAc,aACd7gF,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACNlH,MAAO+xC,GAAe,IAAM,MAAQ,MACpCzhB,UAAW,SACXpO,cAAe,MACf1d,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,IACTxhB,UACFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAO5e,WAAY,UAAWC,SAAA,EAC1DJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,MAAMxD,MAAM,QAAQyD,KAAM,MAC9CpF,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASie,WAAY,GAAIxf,SAAC,qBAIrDwuC,GAAe,MAEd5tC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAAAxtD,SAAA,EACHY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAClGkY,cAAc,MAAMI,kBAAmB,EAAGjZ,YAAY,WAAWtC,QAAQ,UAASxD,SAAA,EAClFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,kBACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,YACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,UACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,aACnDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAGpC,MAAO,QAASie,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,cAEpDw0F,EAAiCj5F,KAAI,SAACoe,EAAM6T,GAC3C,IACMlC,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAEtC,OACE/Y,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOlY,gBAAiB,UAAWuY,kBAAmB,UAAWD,kBAAmB,EAAG9d,eAAgB,SAAUlB,WAAY,UACzJ4e,cAAc,MAAMnb,QAAS,YAAawb,kBAAkB,WAAWD,kBAAmB,EAC1F9d,eAAgB,SAAUlB,WAAY,SAASC,SAAA,EAC/CJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYe,eAC3CzrB,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAA,CAAC,OAAEsrB,EAAYE,WAC5C5rB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYhQ,QAC3C1b,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYgB,YAC3C1rB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOa,WAAY,GACxD7b,KAAM,EAAG6b,WAAY,EAAGiG,QAAS,MAAMzlB,SAAA,EACvCJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBv/E,QAAS,kBAAMqnB,GAAgBtB,EAAY,EAC3Cy5D,cAAe,UACf7gF,MAAO,CACLP,KAAM,EACN0d,OAAQ,EACR/a,aAAc,GACdtG,UACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdrF,eAAgB,SAChBlB,WAAY,UACZC,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASqF,UAAW,UAAW5G,SAAC,cAG1DJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBv/E,QAAS,kBAAMuoB,GAAiBxC,EAAYe,YAAY,EACxD04D,cAAe,UACf7gF,MAAO,CACLP,KAAM,EACN0d,OAAQ,EACR/a,aAAc,GACdtG,UACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdrF,eAAgB,SAChBlB,WAAY,UACZC,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASqF,UAAW,UAAW5G,SAAC,oBA5C+GwtB,EAqEjL,QAMF5tB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,SACFw0F,EAAiCj5F,KAAI,SAACoe,EAAM6T,GAC3C,IACMlC,EAAc3R,EADAzd,OAAOD,KAAK0d,GAAM,IAEtC,OAEE/Y,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,SAAU1d,eAAgB,SAAU0C,KAAM,EAAG0d,OAAQ,EAAG9a,aAAc,IAAMvG,SAAA,EAExGY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAAYzG,SAAA,EAE9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGob,kBAAmB,EAAGjZ,YAAa,UAAW7E,eAAgB,SAAUxE,MAAO,OAAQuD,UACzIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASiC,QAAS,UAAWgc,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,oBAGhEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYe,kBAG7CzrB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAAYzG,SAAA,EAE9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGob,kBAAmB,EAAGjZ,YAAa,UAAW7E,eAAgB,SAAUxE,MAAO,OAAQuD,UACzIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASiC,QAAS,UAAWgc,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,cAGhEY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAA,CAAC,OAAEsrB,EAAYE,cAG9C5qB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAAYzG,SAAA,EAE9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGob,kBAAmB,EAAGjZ,YAAa,UAAW7E,eAAgB,SAAUxE,MAAO,OAAQuD,UACzIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASiC,QAAS,UAAWgc,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,YAEhEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYhQ,WAG7C1a,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAAYzG,SAAA,EAE9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGob,kBAAmB,EAAGjZ,YAAa,UAAW7E,eAAgB,SAAUxE,MAAO,OAAQuD,UACzIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASiC,QAAS,UAAWgc,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,eAEhEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACwC,KAAM,EAAG6b,WAAY,EAAExf,SAAEsrB,EAAYgB,eAG7C1rB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGjZ,YAAa,UAAWW,gBAAiB,WAAYzG,SAAA,EAC9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW9C,KAAM,EAAGob,kBAAmB,EAAGjZ,YAAa,UAAW7E,eAAgB,SAAUxE,MAAO,OAAQuD,UACzIJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASiC,QAAS,UAAWgc,WAAY,EAAGgD,MAAI,EAAAxiB,SAAC,cAEhEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OACrChb,KAAM,EAAG6b,WAAY,EAAGiG,QAAS,MAAMzlB,SAAA,EAEvCJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBv/E,QAAS,kBAAMqnB,GAAgBtB,EAAY,EAC3Cy5D,cAAe,UACf7gF,MAAO,CACLP,KAAM,EACN0d,OAAQ,EACR/a,aAAc,GACdtG,UACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdrF,eAAgB,SAChBlB,WAAY,UACZC,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASqF,UAAW,UAAW5G,SAAC,cAG1DJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBv/E,QAAS,kBAAMuoB,GAAiBxC,EAAYe,YAAY,EACxD04D,cAAe,UACf7gF,MAAO,CACLP,KAAM,EACN0d,OAAQ,EACR/a,aAAc,GACdtG,UACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CACHtpD,MAAO,CACLP,KAAM,EACN8C,gBAAiB,UACjBH,aAAc,EACdrF,eAAgB,SAChBlB,WAAY,UACZC,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASqF,UAAW,UAAW5G,SAAC,uBA9EgDwtB,EA2GpH,YAWR5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACHtpD,MAAO,CACLya,cAAe,MACf1d,eAAgB,gBAChBxE,MAAO,QACPuD,SAAA,EACFJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS0lB,GACT/mB,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,aAEnCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,MACrB/D,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAASmvF,GACTxwF,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACd+a,OAAQ,EACR1d,KAAM,EACN1C,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,UACFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,oBAiD7C,EAEMmoB,GAAe,SAAHgS,GAA4B,IAAtB/R,EAAa+R,EAAb/R,cAEhBrgB,GAAWK,EAAAA,EAAAA,eACXigB,GAAargB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMogB,UAAU,IACpDC,GAAiBtgB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqgB,cAAc,IAIlE,OAAO1oB,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACZC,cAAeY,EACfxiB,YAAasiB,EAAgB,YAAc,YAC3CzkB,KAAM,EACNgkB,cAAe,SAACnjB,GACdqhB,GAAuBrhB,EACvBuD,GAASwgB,EAAAA,GAAAA,mBAAkB/jB,GAC7B,EACAqjB,mBAAmB,iBACnB3iB,YAAY,iBACZ4iB,cAAe,CACbC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACDqoB,EAAW9sB,KAAI,SAACoe,GAAI,OAEnB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAK1D,EAEMqT,GAAmC,SAAHkrC,GAAqJ,IAA/I3xC,EAAU2xC,EAAV3xC,WAAY/d,EAAI0vD,EAAJ1vD,KAAM4kB,EAAK8qC,EAAL9qC,MAAOC,EAAQ6qC,EAAR7qC,SAAUC,EAAY4qC,EAAZ5qC,aAAcH,EAAW+qC,EAAX/qC,YAAaD,EAAmBgrC,EAAnBhrC,oBAAqBD,EAAOirC,EAAPjrC,QAASH,EAAoBorC,EAApBprC,qBAAsBD,EAAqBqrC,EAArBrrC,sBAC5J9e,GAA0ClR,EAAAA,EAAAA,WAAS,GAAMmR,GAAAjR,EAAAA,EAAAA,SAAAgR,EAAA,GAAlD81B,EAAa71B,EAAA,GAAE81B,EAAgB91B,EAAA,GACtCG,GAAwCtR,EAAAA,EAAAA,WAAS,GAAMuR,GAAArR,EAAAA,EAAAA,SAAAoR,EAAA,GAAhD41B,EAAY31B,EAAA,GAAE41B,EAAe51B,EAAA,GACpCG,GAA8C1R,EAAAA,EAAAA,WAAS,GAAM2R,GAAAzR,EAAAA,EAAAA,SAAAwR,EAAA,GAAtD01B,EAAez1B,EAAA,GAAE01B,EAAkB11B,EAAA,GAC1CE,GAAkC7R,EAAAA,EAAAA,WAAS,GAAM8R,GAAA5R,EAAAA,EAAAA,SAAA2R,EAAA,GAA1Cy1B,EAASx1B,EAAA,GAAEy1B,EAAYz1B,EAAA,GAC9BG,GAAgDjS,EAAAA,EAAAA,WAAS,GAAMkS,GAAAhS,EAAAA,EAAAA,SAAA+R,EAAA,GAAxDu1B,EAAgBt1B,EAAA,GAAEu1B,GAAmBv1B,EAAA,GAC5Cc,IAAkChT,EAAAA,EAAAA,UAAS2L,GAAKuH,IAAAhT,EAAAA,EAAAA,SAAA8S,GAAA,GAAzC00B,GAASx0B,GAAA,GAAEy0B,GAAYz0B,GAAA,GAC9BG,IAA4CrT,EAAAA,EAAAA,WAAS,GAAMsT,IAAApT,EAAAA,EAAAA,SAAAmT,GAAA,GAApDu0B,GAAct0B,GAAA,GAAEu0B,GAAiBv0B,GAAA,GAClC7F,IAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IACxD26B,GAAatgC,KAAO2F,GAEpB,IAAMq6B,IAAwBzsB,EAAAA,EAAAA,cAC5B,SAACyB,GACC6qB,IAAa,SAACI,GAEZ,OADoBA,EAAS9nB,QAAO,SAACtY,GAAK,OAAKA,IAAUmV,CAAI,GAE/D,GACF,GACA,IAWIpB,IAAYL,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC5B,IAE2BkjC,EAFrBC,GAAc9iC,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,GACrD+X,QAAqB/rB,EAAAA,EAAAA,QAAO8rB,GAC9BC,EAAaz8B,UAEfi8B,IAAgC,OAAnBM,EAAAE,EAAax8B,aAAM,EAAnBs8B,EAAsBzX,KAAa,GAEpD,IAAG,CAACC,EAAciX,KAUZvnB,IAAa9E,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAC7B0iC,IAAoB,GAEpB,IACQxpB,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BAE9C,UACQ/Y,EAAAA,EAAAA,YAAUF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWqX,EAAcL,GAAUA,IAAQ7qB,EAAAA,EAAAA,SAAA,GAAKirB,EAAWkX,KAC/ED,IAAoB,GACpBR,GAAiB,GACjBM,GAAa,GAGb,IAAMzoB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,eAAe6X,GAAatgC,KAAI,cAAcyoB,EAAK,IACrEvR,UAAWb,EACXc,aAAa,GAGfxB,GAAmBqB,EAErB,CAAE,MAAOtZ,GACPiiC,IAAoB,GACpBY,KACA5iC,QAAQD,MAAMA,EAChB,CAGF,IAAG,CAACirB,EAAciX,GAAWlX,EAAUJ,IAGjCkY,IAAsBjtB,EAAAA,EAAAA,cAAY,WACtCwsB,IAAkB,GAClBnsB,KACAurB,GAAiB,GACjBjX,GACF,GAAG,CAACgX,EAAeY,KAEbW,IAAuBltB,EAAAA,EAAAA,cAAWtW,EAAAA,EAAAA,UAAC,YAEvCkiC,GAAiB,GACjBY,IAAkB,GAClB5X,GACF,IAAG,CAAC+W,EAAeY,KAObY,IAAqBntB,EAAAA,EAAAA,cAAY,WACrC8rB,GAAgB,GAChBoB,KACAV,IAAkB,GAClB7X,GAEF,GAAG,IAEGyY,IAAsBptB,EAAAA,EAAAA,cAAY,WAAO,IAADqtB,EAC5CvB,GAAgB,GAChBmB,KACmB,OAAnBI,EAAApY,EAAYvY,UAAZ2wB,EAAqBpa,OACvB,GAAG,CAAC4Y,IAEEyB,IAA6BttB,EAAAA,EAAAA,cAAY,WAC7CgsB,GAAmB,GAEnBiB,IACF,GAAG,CAAClB,IAEEwB,IAA4BvtB,EAAAA,EAAAA,cAAY,WAC5CgsB,GAAmB,GACnBkB,KACApB,GAAgB,GAChBU,IAAkB,GAClB7X,GACF,GAAG,CAACoX,EAAiBF,EAAcU,KAE7BiB,IAAsBxtB,EAAAA,EAAAA,cAAY,WACtCksB,GAAa,GACbN,GAAiB,GACjBY,IAAkB,EACpB,GAAG,CAACP,EAAWN,EAAeY,KAExBS,IAAuBhtB,EAAAA,EAAAA,cAAY,WACvCksB,GAAa,GACbN,GAAiB,EACnB,GAAG,CAACK,EAAWN,IAET8B,GAAe,eAAAd,GAAAjjC,EAAAA,EAAAA,UAAG,YAAa,IAADikC,EAE5Br9B,EAA0B,OAAtBq9B,EAAG1Y,EAAYvY,cAAO,EAAnBixB,EAAqBrhC,MAC5BshC,EAAYt9B,EAAKu9B,MAAM,MAAMxqC,KAAI,SAACoe,GAAI,OAAKA,EAAK5W,MAAM,IAGpD+X,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BAE9C,GAAa,KAAT1S,EAAa,CAEf87B,IAAoB,GAEpB,IACE,IAAM0B,GAAqB/vB,EAAAA,EAAAA,YAAWqX,EAAcL,GAC9C8X,GAAc9iC,EAAAA,EAAAA,KAAI+jC,EAAoB/Y,SACtCxP,EAAAA,EAAAA,QAAOsnB,GAAW3iC,EAAAA,EAAAA,SAAA,GAAKirB,EAAW4Y,EAAAA,WAAUvjC,WAAC,GAADiqB,EAAAA,EAAAA,SAAImZ,KAAc,CAAEI,OAAO,IAE7E,IAAMvqB,EAAU,CACdvY,QAAQ,IAAKgqB,EAAK,aAAa6X,GAAatgC,KAAI,YAAYyoB,EAAK,QACjEvR,UAAWb,EACXc,aAAa,GAEfxB,GAAmBqB,GACnB2oB,IAAoB,GAEpBmB,IAKF,CAAE,MAAOpjC,GACPC,QAAQD,MAAM,kCAAmCA,GACjDiiC,IAAoB,EACtB,CACF,CAMF,IAAC,kBAzCoB,OAAAO,EAAAniC,MAAA,KAAAC,UAAA,KA2CrB,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,WAAYugB,YAAa,GAAItgB,SACvFykC,IAKA7kC,EAAAA,GAAAA,KAACoG,EAAAA,QAAO,CAACzE,MAAM,WAJf3B,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS4/B,GAAoBnlC,UAC7CJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,gBAAgBC,KAAM,GAAIzD,MAAM,eAOnE3B,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ0jB,EAAepjB,QAAS2kB,GAAsBnc,YAAU,EAAAjpB,UACrEY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAEumB,OAEhC3mB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAClEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXzH,MAAO,OACPkiB,cAAe,UACf3e,SAAA,EACAJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEnE,WAAY,YAAaC,UACtCJ,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CAACv/E,QAAS8/B,GAAmBrlC,UAC9CJ,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,cAAcC,KAAM,GAAIzD,MAAM,iBAIpD3B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXP,KAAM,EACNkC,YAAa,EACbC,YAAa,UACbQ,aAAc,GACdtG,UACAJ,EAAAA,GAAAA,KAACymC,EAAAA,QAAiB,CAChBniC,MAAO,CAAEwwB,aAAc,SAAU/wB,KAAM,GACvC6E,KAAM+7B,GACNhQ,aAAc,SAAC5a,GAAI,OAAKA,CAAI,EAC5B+Y,WAAY,SAAAiqC,GAAA,IAAGhjD,EAAIgjD,EAAJhjD,KAAM4sB,EAAIo2B,EAAJp2B,KAAI,OACvB3lC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACHtpD,MAAO,CACLP,KAAM,EACN8C,gBAAiB,sBACjBsY,kBAAmB,EACnBC,kBAAmB,UACnBL,cAAe,MACf1d,eAAgB,SAChBlB,WAAY,UACZC,SAAA,EAEFJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMo/B,GAAsBhrB,EAAK,EAAC3Z,UAC3DJ,EAAAA,GAAAA,KAACylB,EAAAA,QAAS,CAACtgB,KAAK,cAAcC,KAAM,GAAIzD,MAAM,eAEhD3B,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGiD,UAAW,SAAUrF,MAAO,SAAUvB,SAAE2Z,KAChE/Z,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAACK,UAAWD,EAAKvmC,UAChCJ,EAAAA,GAAAA,KAACkzB,EAAAA,QAAM,CAAC/tB,KAAK,OAAOC,KAAM,GAAIzD,MAAM,gBAEjC,EAET6yB,WAAWlc,EAAAA,EAAAA,cAAY,SAAA+kD,GAAA,IAAGz0D,EAAIy0D,EAAJz0D,KAAI,OAAOg8B,GAAah8B,EAAK,GAAE,cAMjE5I,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,GAAI3D,SAAA,EAC7CJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS6/B,GACTlhC,MAAO,CACLP,KAAM,EACN2C,aAAc,EACdG,gBAAiB,UACjB4a,OAAQ,EACRpgB,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,aAEnCJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAASmgC,GACTxhC,MAAO,CACLP,KAAM,EACN2C,aAAc,EACdG,gBAAiB,UACjB4a,OAAQ,EACRpgB,eAAgB,SAChBlB,WAAY,SACZyhB,QAAS,GACTxhB,UAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,sBAQ3CJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQgkB,EACR1jB,QAASykB,GAAqBllC,UAC9BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,mBAE/BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAAnB,SAAC,8CAGRJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS2/B,GAAsBppB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,QACnGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASyX,GAAYrZ,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAGvH,YAAWslC,EAAgCrkC,SAAC,mBAOvHJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQ4jB,EACRtjB,QAAS6kB,GACTlQ,gBAAiBjI,EAAYntB,UAC7BY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAAA5gB,SAAA,EACZJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAE/e,UACjCY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACI,MAAO,UAAWihB,MAAI,EAAAxiB,SAAA,CAAC,OAAKotB,QAEpCxtB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAC5f,eAAgB,SAAUlB,WAAY,SAAU4D,KAAM,EAAE3D,UAElEJ,EAAAA,GAAAA,KAAC8mC,EAAAA,QAAQ,CACP9/B,UAAW,SACX9G,EAAG,OACHmhB,IAAKkM,EACLwZ,WAAS,EACTjiC,aAAcwoB,EACd0Z,WAAY,EACZ1hC,YAAY,+CAGhBtF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAE3iB,UAC9BY,EAAAA,GAAAA,MAACI,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAAS+/B,GAAqBxpB,YAAa,QAASnY,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,WAClGJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACF,QAASogC,GAAiB5mC,YAAWslC,EAAiC1gC,KAAM,EAAGqB,KAAM,KAAMsB,aAAc,EAAEtG,SAAC,mBAO5HJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ8jB,EAAiBxjB,QAAS+kB,GAA4Bvc,YAAU,EAAAjpB,UAC7EY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,YAAYxD,SAAA,EAClCJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAACvD,kBAAmB,EAAGvb,QAAS,YAAYxD,UACvDJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACyF,UAAW,SAAUrF,MAAO,UAAWihB,MAAI,EAAAxiB,SAAC,kEAIpDJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CACT5f,eAAgB,SAChBlB,WAAY,SACZyD,QAAS,YACTijB,gBAAiB,EACjBC,gBAAiB,YACjBrF,OAAQ,EAAErhB,UAEVY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAAC8D,KAAM,EAAE3D,SAAA,EACXJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAaihB,MAAI,EAAAxiB,SAAC,yBAG/BJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,YAAYvB,SAAC,8BAK9BJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMM,OAAM,CAACC,eAAgB,EAAGnf,QAAS,YAAYxD,UACpDJ,EAAAA,GAAAA,KAACoB,EAAAA,QAAM,CAACF,MAAO,EAAG6C,KAAM,EAAE3D,UACxBJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACqW,YAAa,UAAWnY,KAAK,IAAI4B,QAASigC,GAA4B/jC,MAAO,CAAEF,MAAO,SAAUvB,SAAC,kBAavH,EAIM20F,GAAa,WAEjB,IAAMrqE,GAAgCtiB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqiB,6BAA6B,IAC1FF,GAAwBpiB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmiB,qBAAqB,IAC1E9C,GAAkBtf,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqf,eAAe,IAC9De,GAAargB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMogB,UAAU,IACpDgC,GAAcriB,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMoiB,WAAW,IACtDmqE,GAAmCxsF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMusF,gCAAgC,IAEtG,OACE50F,EAAAA,GAAAA,KAAC20F,GAAY,CACXjqE,8BAA+BA,EAC/BF,sBAAuBA,EACvB9C,gBAAiBA,EACjBe,WAAYA,EACZgC,YAAaA,EACbmqE,iCAAkCA,GAGxC,EAEMhsE,GAAgB,SAAHq2C,GAA2C,IAArCp2C,EAAYo2C,EAAZp2C,aAAcC,EAAem2C,EAAfn2C,gBAErCpY,GAAwDzT,EAAAA,EAAAA,WAAS,GAAM0T,GAAAxT,EAAAA,EAAAA,SAAAuT,EAAA,GAAhEqY,EAAoBpY,EAAA,GAAEqY,EAAuBrY,EAAA,GAG9CsY,EAA0B,WAC9BD,GAAwB,EAC1B,EAEME,EAA2B,WAC/BF,GAAwB,EAC1B,EAIA,OAEEhoB,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAASsjB,EAAyB3kB,MAAO,CAAEP,KAAM,GAAI3D,UACrEJ,EAAAA,GAAAA,KAACwE,EAAAA,MAAK,CAACI,MAAOikB,EAAcO,QAASH,OAGvCjoB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAK,CAACjC,OAAQwI,EAAsBlI,QAASqI,EAA0BG,YAAU,EAAAjpB,SAAA,EAChFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMxB,QAAO,CAAA5gB,UACZJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACnD,OAAQ,OAAQiH,KAAM,EAAE3D,UAE3BJ,EAAAA,GAAAA,KAACspB,EAAAA,SAAQ,CACPC,YAAYjR,EAAAA,EAAAA,cAAY,SAAAqD,GACtBmN,EAAgBnN,EAAI6N,YAEpBjD,GAAwB5K,EAAI6N,WAC5BN,GACF,GAAG,IACHO,aAAWjnB,EAAAA,EAAAA,SAAA,GACRqmB,EAAe,CAAEa,UAAU,EAAMC,mBAAmB,EAAMC,iBAAkB,YAE/EC,YAAa,SAACxJ,GAAS,MACP,SAAdA,GAAuBrgB,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,iBAAiBxD,MAAM,aAAe3B,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,oBAAoBxD,MAAM,WAAY,EAE7ImoB,mBAAmB,EACnBC,YAAalB,EACbmB,cAAY,aAU1B,EAEM1C,GAAoB,SAAHof,GAAsE,IAAhEnf,EAAkBmf,EAAlBnf,mBAErBpf,GAF6Du+B,EAApBlf,qBAAoCkf,EAAdjf,gBAEpDjf,EAAAA,EAAAA,gBACXkf,GAAkBtf,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqf,eAAe,IAC9DC,GAAsBvf,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMsf,mBAAmB,IAC5E/W,GAAsB3T,EAAAA,EAAAA,WAAS2qB,EAAAA,GAAAA,WAAS/W,GAAA1T,EAAAA,EAAAA,SAAAyT,EAAA,GAA9BC,EAAA,GAAQA,EAAA,GAIlB,OAAO7Q,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAM,CACZC,cAAeH,EACfzhB,YAAaqhB,EAAqB,YAAc,YAChDxjB,KAAM,EACNgkB,cAAe,SAACnjB,GACdmhB,GAA4BnhB,EAC5BuD,GAAS6f,EAAAA,GAAAA,wBAAuBpjB,GAClC,EACAqjB,mBAAmB,sBACnB3iB,YAAY,sBACZ4iB,cAAe,CACbC,GAAI,WACJC,SAASpoB,EAAAA,GAAAA,KAACqoB,EAAAA,UAAS,CAACjjB,KAAK,OACzBhF,SACDsnB,EAAgB/rB,KAAI,SAACoe,GAAI,OAExB/Z,EAAAA,GAAAA,KAAC6nB,EAAAA,QAAOS,KAAI,CAAYjG,MAAOtI,EAAMnV,MAAOmV,GAA1BA,EAAkC,KAM1D,EAEMi7E,GAAmB,SAAHnuD,GAAkC,IAA5BouD,EAAoBpuD,EAApBouD,qBAEpBC,GAA0B9sF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAM6sF,uBAAuB,IAC9EtmD,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MAE7C,OACEmD,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQ20E,EAAyBr0E,QAASo0E,EAAsB7vF,KAAM,OAAOhF,UAClFY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG0uC,GAAe,KAAO,MAAQ,MAAO/qC,EAAG,OAAOzD,SAAA,EACjFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBzhB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAWiiB,QAAS+oB,GAAe,IAAM,SAAW,MAAOzuC,WAAYyuC,GAAe,IAAM,SAAW,GAAGxuC,SAAA,EAC/HJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,mBAAoBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,WAAYH,SAAU,GAAIohB,MAAI,EAAC5b,UAAW4nC,GAAe,IAAM,SAAW,GAAGxuC,SAAEizF,SAI3JrzF,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,SAAE,8DAQrB,EAEM+0F,GAAmB,WACvB,IAAMhtF,GAAWK,EAAAA,EAAAA,eAWjB,OACExI,EAAAA,GAAAA,KAACg1F,GAAgB,CAACC,qBAVS,WAC3B9sF,GAASitF,EAAAA,GAAAA,6BAA2B,IACpChC,GAAuB,GACvBC,GAAwB,GACxBC,GAAuC,GACvCC,GAAwB,EAE1B,GAQF,EA0CM8B,GAAkB,SAAHnuD,GAAwC,IAAlCouD,EAA0BpuD,EAA1BouD,2BAEnB1mD,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MACvC04F,GAAyBntF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMktF,sBAAsB,IAC5EC,GAAiBptF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMmtF,cAAc,IAElEzkF,GAA0C9T,EAAAA,EAAAA,UAAS,IAAG+T,GAAA7T,EAAAA,EAAAA,SAAA4T,EAAA,GAA/C6e,EAAa5e,EAAA,GAAE6e,EAAgB7e,EAAA,GACtCG,GAAkDlU,EAAAA,EAAAA,WAAS,GAAMmU,GAAAjU,EAAAA,EAAAA,SAAAgU,EAAA,GAA1D2e,EAAiB1e,EAAA,GAAE2e,EAAoB3e,EAAA,GAExC8e,GAAmB5X,EAAAA,EAAAA,cAAY,SAACnU,GAGpC0rB,EAAiB1rB,GACjB4rB,GAAqB,EAGvB,GAAG,IAIGoD,GAAsB7a,EAAAA,EAAAA,cAAY,SAACyB,GAEvC,IAAM8E,EAASxY,EAAAA,QAAWC,OAAO,CAC/B6pB,SAAU,CACR1O,OAAQ,GACR3kB,OAAQ,GACRsiB,kBAAmB,OACnBD,kBAAmB,IAErBiR,KAAM,CACJ1P,YAAa,GAEf2P,iBAAkB,CAChB7uB,SAAU,IAEZ8uB,kBAAmB,CACjB9uB,SAAU,IAEZ+uB,UAAW,CACT1zB,MAAO,GACPC,OAAQ,IAEV0zB,iBAAkB,CAChB1zB,OAAQ,GACR0E,SAAU,IAEZ+E,UAAW,CACTxC,KAAM,EACN0sB,WAAY,IAGdC,IAAK,CACHlvB,SAAU,GACVmvB,WAAY,GACZ/O,QAAS,GAEXgP,KAAM,CACN,EACAC,cAAe,CACbh0B,MAAO,GACPC,OAAQ,GACR+J,gBAAiB,QACjBxF,eAAgB,SAChBlB,WAAY,UAEd2wB,iBAAkB,CAChBj0B,MAAO,GACPC,OAAQ,GACRkiB,SAAU,WACVqI,MAAO,EACPpI,IAAK,GAEP8R,UAAW,CACTl0B,MAAO,GACPC,OAAQ,GACRsH,WAAY,UACZ4a,SAAU,cAId,OAEEhf,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAAeqE,MAAOua,EAAO9E,KAAK3Z,UACpCJ,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACqE,MAAOua,EAAOgS,cAAczwB,UAE/BJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRlb,MAAOua,EAAOkS,UACd7sB,OAAQ,CACNC,IAAK4V,EAAK5V,IACVsb,SAAUD,EAAAA,QAAUC,SAASsT,QAE/B3uB,WAAYob,EAAAA,QAAUpb,WAAW4uB,aAT7BjZ,EAAKje,GAmBnB,GAAG,IAEH,OAEEkF,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQg1E,EAAwB10E,QAASy0E,EAA4BlwF,KAAM,OAAQikB,YAAU,EAAAjpB,UAClGY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG0uC,GAAe,KAAO,MAAQ,MAAO/qC,EAAG,OAAOzD,SAAA,EACjFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBzhB,EAAAA,GAAAA,MAACwhB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAWiiB,QAAS+oB,GAAe,IAAM,SAAW,MAAOzuC,WAAYyuC,GAAe,IAAM,SAAW,GAAGxuC,SAAA,EAC/HJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,sBAAuBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,WAAYH,SAAU,GAAIohB,MAAI,EAAC5b,UAAW4nC,GAAe,IAAM,SAAW,GAAGxuC,SAAEizF,SAI9JrzF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,SAAUkB,eAAgB,SAAUogB,OAAQ,KAAM7B,WAAY,OAAQxf,UAExGJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG5D,WAAY,SAAUkB,eAAgB,UAAWjB,UACvEJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAExH,OAAQ,OAAQsD,UACnCJ,EAAAA,GAAAA,KAAC6zB,EAAAA,iBAAgB,CACfe,UAAU,EAEVd,WAAY0hE,EACZxhE,YAAqB,IAARn3B,GACbo3B,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAsB,EACtBC,mBAAoB,EACpBC,oBAAqB,EACrBI,YAAa,SAAC3a,EAAM6T,GAClBsC,EAAiBtC,EAAMzpB,IACzB,EACAwwB,aAAc,SAAC5a,GAAI,OAAKA,EAAK5V,GAAG,EAChC2uB,YAAYxa,EAAAA,EAAAA,cAAY,SAACyB,EAAM6T,GAAK,OAAKuF,EAAoBpZ,EAAM6T,EAAM,GAAE,kBAcvF5tB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CAACjC,OAAQuP,EAAmBjP,QAAS,kBAAMkP,GAAqB,EAAM,EAAE3qB,KAAM,OAAQikB,YAAU,EAAAjpB,UAEpGY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CAACC,EAAG,MAAO2D,EAAG,MAAOD,QAAS,qBAAsB8C,aAAc,GAAIib,QAAQ,OAAOxhB,WAAW,SAASkB,eAAe,SAASyzB,aAAc,SAAS10B,SAAA,EAC1JJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,CAAC9gB,MAAO,WAC1B3B,EAAAA,GAAAA,KAAC+0B,EAAAA,QAAW,CAEV7wB,OAAQ,CAAEC,IAAKyrB,GACfxrB,WAAW,UACXL,KAAM,EACNM,IAAKurB,EACL/rB,EAAG,IACH3D,EAAG,MANE0vB,UAejB,EAGM6lE,GAAuB,SAAHtzB,GAAwC,IAAlCuzB,EAA0BvzB,EAA1BuzB,2BAExB9mD,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MACvC84F,GAA8BvtF,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMstF,2BAA2B,IACtFr0C,GAAiBl5C,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMi5C,cAAc,IAElE,OACEthD,EAAAA,GAAAA,KAACwiB,EAAAA,MAAK,CACJjC,OAAQo1E,EACR90E,QAAS60E,EACTtwF,KAAM,OACNikB,YAAU,EAAAjpB,UAEVY,EAAAA,GAAAA,MAACwhB,EAAAA,MAAMxB,QAAO,CAACpd,QAAS,QAAS1D,EAAG0uC,GAAe,KAAO,MAAQ,MAAO/qC,EAAG,OAAOzD,SAAA,EACjFJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMC,YAAW,KAClBziB,EAAAA,GAAAA,KAACwiB,EAAAA,MAAME,OAAM,CAAC9e,QAAS,UAAWzD,WAAYyuC,GAAe,IAAM,SAAW,aAAaxuC,UACzFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACI,MAAO,QAASH,SAAU,GAAIohB,MAAI,EAAAxiB,SAAC,0BAE3CJ,EAAAA,GAAAA,KAACwiB,EAAAA,MAAMvB,KAAI,CAAA7gB,UACTJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAEzH,MAAO,QAASuD,SAClCwuC,GAAe,KACd5tC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEnE,WAAY,UAAWmf,UAAW,IAAKlf,SAAA,EAEpDY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXoC,aAAc,EACdG,gBAAiB,UACjBkY,cAAe,MACfI,kBAAmB,EACnBC,kBAAmB,WACnBhf,SAAA,EACAJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,UACxFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,oBACxFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO2E,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,gBAK9F2sB,EAAAA,EAAAA,SAAIu0B,GACF1wB,MAAK,SAAC2C,EAAGG,GAAC,OAAK,IAAIgkC,KAAKhkC,EAAEhY,KAAKrR,QAAQ,OAAQ,MAAQ,IAAIqtD,KAAKnkC,EAAE7X,KAAKrR,QAAQ,OAAQ,KAAK,IAC5F1O,KAAI,SAACiN,EAAMglB,GAAK,OACf5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAEHtpD,MAAO,CACLuC,gBAAiB,UACjBkY,cAAe,MACfI,kBAAmB,EACnBC,kBAAmB,WACnBhf,SAAA,EAEFJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIogB,QAAS,GAAIxhB,SAAEwI,EAAK8S,QAC1D1a,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIogB,QAAS,GAAIxhB,SAAA,CAAC,OAAEylD,OAAOj9C,EAAK20B,UAAUvR,qBAC5EhsB,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEzH,MAAO,MAAO2E,SAAU,GAAIogB,QAAS,GAAIxhB,SAAEwI,EAAK24C,cAV1D3zB,EAWA,QAMb5tB,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEnE,WAAY,UAAWmf,UAAW,IAAKlf,UAgBnD2sB,EAAAA,EAAAA,SAAIu0B,GACF1wB,MAAK,SAAC2C,EAAGG,GAAC,OAAK,IAAIgkC,KAAKhkC,EAAEhY,KAAKrR,QAAQ,OAAQ,MAAQ,IAAIqtD,KAAKnkC,EAAE7X,KAAKrR,QAAQ,OAAQ,KAAK,IAC5F1O,KAAI,SAACiN,EAAMglB,GAAK,OACf5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAEHtpD,MAAO,CACLuC,gBAAiB,UACjBkY,cAAe,SACf9Y,YAAa,EACbC,YAAa,UACbub,OAAQ,GACRrhB,SAAA,EAGFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGC,kBAAmB,WAAahf,SAAA,EACzFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UACjBsY,kBAAmB,EACnBC,kBAAmB,UACnBviB,MAAO,OACPuD,UACAJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,YAG1FJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIogB,QAAS,GAAIxhB,SAAEwI,EAAK8S,WAG5D1a,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGC,kBAAmB,WAAahf,SAAA,EACzFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UACjBsY,kBAAmB,EACnBC,kBAAmB,UACnBviB,MAAO,OACPuD,UACAJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,sBACnFY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIogB,QAAS,GAAIxhB,SAAA,CAAC,OAAEylD,OAAOj9C,EAAK20B,UAAUvR,wBAGrFhrB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOI,kBAAmB,EAAGC,kBAAmB,WAAahf,SAAA,EACzFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CACXuC,gBAAiB,UACjBsY,kBAAmB,EACnBC,kBAAmB,UACnBviB,MAAO,OACPuD,UACAJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIC,WAAY,OAAQmgB,QAAS,EAAGjgB,MAAO,SAAUvB,SAAC,eAE1FJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAEP,KAAM,EAAGvC,SAAU,GAAIogB,QAAS,GAAIxhB,SAAEwI,EAAK24C,iBA3CvD3zB,EA6CA,cAkB3B,EAEMgoE,GAAkB,WACtB,IAAMztF,GAAWK,EAAAA,EAAAA,eAajB,OAEExI,EAAAA,GAAAA,KAACy1F,GAAoB,CAACC,2BAZW,WAEjCvtF,GAAS0tF,EAAAA,GAAAA,iCAA+B,IACZ,GAC5BzC,GAAuB,GACvBC,GAAwB,GACxBC,GAAuC,EAEzC,GAOF,EAGMwC,GAAsB,SAAHzzB,GAA0E,IAApEtoD,EAAIsoD,EAAJtoD,KAAMg8E,EAAyB1zB,EAAzB0zB,0BAA2BC,EAA2B3zB,EAA3B2zB,4BAE9DzkF,GAAoCtU,EAAAA,EAAAA,UAAS8c,EAAK0nC,YAAc,GAAEjwC,GAAArU,EAAAA,EAAAA,SAAAoU,EAAA,GAA3DkwC,EAAUjwC,EAAA,GAAEykF,EAAazkF,EAAA,GAuBhC,OArBA7R,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,GAAcG,EAAAA,EAAAA,aAAW7G,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB5T,EAAK4nB,UAAU,SAACt/B,GAC/F,GAAIA,EAAIsG,SAAU,CAChB,IAAMC,EAAOvG,EAAIuG,OACjBqtF,EAAcrtF,EAAK64C,YAAc,EACnC,CACF,IAGA,OAAO,kBAAM14C,GAAc,CAC7B,GAAG,CAACgR,EAAK4nB,WAYP3gC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAQ3e,SAAA,CAC5CqhD,EAAa,GACZzhD,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMowF,EAA0Bh8E,EAAK,EAAC3Z,UAC/DY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE2uD,mBAAoB,aAAc7yD,SAAA,CAC9CqhD,EAAW,iBAIhBzgD,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAAnB,SAAA,CAAEqhD,EAAW,eAGpBzhD,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMqwF,EAA4Bj8E,EAAK,EAAC3Z,SAChEqhD,EAAa,EAAI,MAChBzhD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,sBAAsBC,KAAM,GAAIzD,MAAO,cAKrE,EAEMu0F,GAAgB,SAAH1K,GAA0B,IAApBzxE,EAAIyxE,EAAJzxE,KAAM6T,EAAK49D,EAAL59D,MACvBzlB,GAAWK,EAAAA,EAAAA,eACXo8E,GAAQC,EAAAA,EAAAA,YACdlzE,GAAgC1U,EAAAA,EAAAA,UAAS8c,EAAKwjB,SAAW5R,WAAW5R,EAAKwjB,UAAUvR,iBAAmB,IAAGpa,GAAAzU,EAAAA,EAAAA,SAAAwU,EAAA,GAAlG4rB,EAAQ3rB,EAAA,GAAEukF,EAAWvkF,EAAA,GACtB8lB,GAAcxnB,EAAAA,EAAAA,QAAO,KAE3BvQ,EAAAA,EAAAA,YAAU,WAER,IAAMoJ,GAAcG,EAAAA,EAAAA,aAAW7G,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB5T,EAAK4nB,UAAU,SAACt/B,GAG/F,GAAIA,EAAIsG,SAAU,CAChB,IAAMC,EAAOvG,EAAIuG,OAEjButF,EAAYvtF,EAAK20B,SAAW5R,WAAW/iB,EAAK20B,UAAUvR,iBAAmB,GAC3E,CACF,IAGA,OAAO,kBAAMjjB,GAAc,CAC7B,GAAG,IAGH,IAAMqtF,EAAwB,SAACxxF,GAI7B,OAHqBA,EAAMyF,QAAQ,UAAW,IACVqU,MAAM,EAAG,GACPrU,QAAQ,wBAAyB,IAEzE,EAsBMgsF,EAAa,eAAAhvD,GAAArlC,EAAAA,EAAAA,UAAG,UAAO+X,EAAM6T,GACjCzlB,GAASkP,EAAAA,GAAAA,yBAAuB,IAEhC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEjDg7E,EAAW5+D,EAAY1iB,QAAQ+E,EAAK4nB,SAAS/8B,MAAMyF,QAAQ,KAAM,IAQvEu6E,EAAM4P,WAUN,IAAMlzC,EAAiB,CACrB5lC,KAAMN,EACNmiB,SAAU+4D,EACV/0C,UAAWlc,GAAatgC,MAEpB8uF,GAAoBxxF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAAoB5T,EAAK4nB,SAE7F,UACQp/B,EAAAA,EAAAA,WAAUsxF,EAAmB,CACjCt2D,SAAU+4D,EACV50C,YAAYrb,EAAAA,EAAAA,YAAWib,KAEzB,IAAMvlC,EAAU,CACdvY,QAAQ,+BAAgC6hC,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,2CAA2CtjB,EAAKiiB,gBAAe,wBAClJ/f,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,cACd67E,GAAqB77E,eACrB,+BAA+B8tB,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,2CAA2CtjB,EAAKiiB,gBAAe,wBAAuBzkB,cAChK,eAAeA,cACf,4BAA4BA,cAC5B,oBAAoBA,cACpB,cAAcA,cACd,UAAUA,cACV,oBAAoBA,cACpB,YAAYA,cACZ,MAAMA,cACN,UAAUA,cACVg8E,GAAsBh8E,cACtB+7E,GAAqC/7E,cACrC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB5T,GAASkP,EAAAA,GAAAA,yBAAuB,IAGhCutE,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,qCAErC,GAEJ,CAAE,MAAOqC,GACPC,QAAQD,MAAMA,GACdmiF,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAC,mBAAiBqC,MAEtD,GAEJ,CAKF,IAAC,gBAlGkBiX,EAAAoB,GAAA,OAAAusB,EAAAvkC,MAAA,KAAAC,UAAA,KAoGnB,OACE/B,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EACEJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CACRxxC,IAAK,SAACA,GAAG,OAAMqW,EAAY1iB,QAAQ+E,EAAK4nB,SAAWtgB,CAAG,EACtDzc,MAAOwxF,EAAsB74D,GAC7Bj5B,MAAO,CAAEwhD,aAAc,OAAQ/hD,KAAM,EAAG6d,QAAS,EAAGlb,aAAc,EAAG7J,MAAO,OAE5EiI,aAAc,SAACC,IA/HI,SAACA,GACxB,IAAMy4B,EAAez4B,EAAKsF,QAAQ,UAAW,IAIzCmzB,IAHwBD,EAASlzB,QAAQ,UAAW,KAItD8rF,EAAY34D,EAEhB,CAwHQ+4D,CAAiBxxF,GArHO,SAACA,EAAM48B,GACrC,IAAMhE,EAAiBy4D,EAAsBrxF,GAGzC2yB,EAAY1iB,QAAQ2sB,IACtBjK,EAAY1iB,QAAQ2sB,GAAS1nB,eAAe,CAAElV,KAAM44B,GAExD,CA+GQK,CAAwBj5B,EAAMgV,EAAK4nB,QACrC,EACA98B,gBAAiB,kBAAMwxF,EAAct8E,EAAM6T,EAAM,GAL5C7T,EAAKje,KAMZkE,EAAAA,GAAAA,KAACklF,EAAAA,QAAkB,CACjBC,cAAe,yBACfx/E,QAAS,kBAAM0wF,EAAct8E,EAAM6T,EAAM,EACzCtpB,MAAO,CACLuC,gBAAiB,UACjBH,aAAc,EACdkb,QAAS,EACTH,OAAQ,EACR0L,UAAW,UACX/sB,UAEFJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,SAASxD,MAAM,QAAQyD,KAAM,SAIzD,EAGMoxF,GAAmB,WACvB,IAAM5R,GAAQC,EAAAA,EAAAA,YACRj2C,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,MACvCsL,GAAWK,EAAAA,EAAAA,eACjBuJ,GAAsC9U,EAAAA,EAAAA,UAAS,GAAE+U,GAAA7U,EAAAA,EAAAA,SAAA4U,EAAA,GAA1CkE,EAAWjE,EAAA,GAAEkE,EAAclE,EAAA,GAElCG,GAAgClV,EAAAA,EAAAA,UAAS,IAAGmV,GAAAjV,EAAAA,EAAAA,SAAAgV,EAAA,GAArCgD,EAAQ/C,EAAA,GACTqkF,GADsBrkF,EAAA,IACJhK,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMouF,eAAe,KACpElkF,GAAsCtV,EAAAA,EAAAA,UAAS,IAAGuV,GAAArV,EAAAA,EAAAA,SAAAoV,EAAA,GAA3CyB,EAAWxB,EAAA,GACZy/C,GAD4Bz/C,EAAA,IACXtC,EAAAA,EAAAA,QAAO,OAG9ByC,GAAgC1V,EAAAA,EAAAA,UAAS,IAAG2V,GAAAzV,EAAAA,EAAAA,SAAAwV,EAAA,GAA3B+jF,GAAF9jF,EAAA,GAAaA,EAAA,IAC5BM,GAAsCjW,EAAAA,EAAAA,UAAS,IAAGkW,GAAAhW,EAAAA,EAAAA,SAAA+V,EAAA,GAA9ByjF,GAAFxjF,EAAA,GAAgBA,EAAA,IAGlCI,IAD2BrD,EAAAA,EAAAA,QAAO,OACAjT,EAAAA,EAAAA,UAAS,IAAEuW,GAAArW,EAAAA,EAAAA,SAAAoW,EAAA,GAE7CI,GAFgBH,EAAA,GAAcA,EAAA,IAEUvW,EAAAA,EAAAA,UAAS,KAAG2W,GAAAzW,EAAAA,EAAAA,SAAAwW,EAAA,GAC9C+jB,GADa9jB,EAAA,GAAiBA,EAAA,IAChB1D,EAAAA,EAAAA,QAAO,KAC3B4D,GAAsC7W,EAAAA,EAAAA,UAAS,IAAG8W,GAAA5W,EAAAA,EAAAA,SAAA2W,EAAA,GAClDI,GADkBH,EAAA,GAAgBA,EAAA,IACI9W,EAAAA,EAAAA,UAAS,OAAKkX,GAAAhX,EAAAA,EAAAA,SAAA+W,EAAA,GAA7CoB,EAAWnB,EAAA,GAAEoB,EAAcpB,EAAA,GAClCG,GAAwCrX,EAAAA,EAAAA,UAAS,MAAKsX,GAAApX,EAAAA,EAAAA,SAAAmX,EAAA,GAA/CoB,EAAYnB,EAAA,GAAEoB,EAAepB,EAAA,GACpCC,GAAoCvX,EAAAA,EAAAA,UAAS,IAAGwX,IAAAtX,EAAAA,EAAAA,SAAAqX,EAAA,GAAzCsB,GAAUrB,GAAA,GAAE88C,GAAa98C,GAAA,GAChCQ,IAAkChY,EAAAA,EAAAA,UAAS,CAAC,GAAEiY,IAAA/X,EAAAA,EAAAA,SAAA8X,GAAA,GAE9CG,IAFgBF,GAAA,GAAcA,GAAA,IAEIjY,EAAAA,EAAAA,UAAS,cAAYoY,IAAAlY,EAAAA,EAAAA,SAAAiY,GAAA,GAAhDwhF,GAASvhF,GAAA,GAAEwhF,GAAYxhF,GAAA,GAC9BG,IAAwCvY,EAAAA,EAAAA,WAAS,GAAMwY,IAAAtY,EAAAA,EAAAA,SAAAqY,GAAA,GAAhDshF,GAAYrhF,GAAA,GAAEshF,GAAethF,GAAA,GAC9B/K,IAAYtC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,IACxD26B,GAAatgC,KAAO2F,GAEpB,IAAMssF,GAAmB,SAACvmB,GACxBv6D,EAAe,GAEfq7C,GAAc,IACdU,EAAej9C,QAAQuW,QACnBklD,IAAUmmB,IACZG,IAAiBD,IAMfD,GALGC,GAKU,YAHArmB,KAOfomB,GAAapmB,GACbsmB,IAAgB,IAGlB5uF,GAASkP,EAAAA,GAAAA,yBAAuB,GAClC,EAGM4/E,GAAa,eAAAzvD,GAAAxlC,EAAAA,EAAAA,UAAG,YACpB,IAEImU,EAFE+gF,EAAgBJ,IAAgBF,GAAYA,GAAY,YACxDO,EAAgBL,GAAe,MAAQ,OAI3C3gF,EADiB,KAAfL,IACEM,EAAAA,EAAAA,QACFC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB5gF,EAAAA,EAAAA,OAAMpB,KAGJiB,EAAAA,EAAAA,QACFC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB7/E,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWm4B,gBAC/C13B,EAAAA,EAAAA,OAAMpB,IAIV,IACE,IAAMqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAC1BihF,EAAqB,GAC3B5gF,EAAUE,SAAQ,SAACC,GACjBygF,EAAmBxgF,KAAInP,GAAC,CACtB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEhB,IACAT,GAASkvF,EAAAA,GAAAA,oBAAmBD,IAC5B7hF,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IACtDiS,EAAgBa,EAAUM,KAAK,GACjC,CAAE,MAAOrU,GACPC,QAAQD,MAAM,mCAAoCA,EACpD,CAAC,QACC0F,GAASkP,EAAAA,GAAAA,yBAAuB,GAClC,CACF,IAAC,kBArCkB,OAAAmwB,EAAA1kC,MAAA,KAAAC,UAAA,MAwCnBpD,EAAAA,EAAAA,YAAU,WACRs3F,IACF,GAAG,CAACL,MAIJj3F,EAAAA,EAAAA,YAAU,WAER,IAAMu3F,EAAgBJ,IAAgBF,GAAYA,GAAY,YACxDO,EAAgBL,GAAe,MAAQ,OAGvC3gF,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB5gF,EAAAA,EAAAA,OAAMpB,KAIRgC,EAAAA,EAAAA,SAAQhB,GACL/S,MAAK,SAACoT,GACL,IAAM4gF,EAAqB,GAC3B5gF,EAAUE,SAAQ,SAACC,GACjBygF,EAAmBxgF,KAAInP,GAAC,CACtB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEhB,IACAT,GAASkvF,EAAAA,GAAAA,oBAAmBD,IAC5B7hF,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IACtDiS,EAAgBa,EAAUM,KAAK,GACjC,IACCxT,OAAM,SAACb,GACNC,QAAQD,MAAM,oCAAqCA,EAErD,GAGJ,GAAG,CAACkrB,EAAAA,0BAA2BxY,EAAUyhF,GAAWE,KAIpD,IAAM//E,GAAa,eAAA2wB,GAAA1lC,EAAAA,EAAAA,UAAG,YACpB,IAAMk1F,EAAgBJ,IAAgBF,GAAYA,GAAY,YACxDO,EAAgBL,GAAe,MAAQ,OAG7C,GAAmB,KAAfhhF,GAAmB,CAGrB,IAAMK,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvBjgF,EAAAA,EAAAA,YAAW5B,IACXiB,EAAAA,EAAAA,OAAMpB,IAGFqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,GAAAA,yBAAuB,GAGlC,KAEK,CACH,IAAMlB,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB7/E,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWm4B,gBAC/C/2B,EAAAA,EAAAA,YAAW5B,IACXiB,EAAAA,EAAAA,OAAMpB,IAGFqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QAIvBrO,GAASkP,EAAAA,GAAAA,yBAAuB,GAClC,CAEF,IAAC,kBA1CkB,OAAAqwB,EAAA5kC,MAAA,KAAAC,UAAA,KA6CbyU,GAAiB,eAAAqwB,GAAA7lC,EAAAA,EAAAA,UAAG,YACxB,IAAMk1F,EAAgBJ,IAAgBF,GAAYA,GAAY,YACxDO,EAAgBL,GAAe,MAAQ,OAE7C,GAAmB,KAAfhhF,GAAmB,CAErB,IAAMK,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB1/E,EAAAA,EAAAA,WAAU/B,IACVgC,EAAAA,EAAAA,aAAYvC,IAIRqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,GAAAA,yBAAuB,GAElC,KAEK,CAEH,IAAMlB,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB7/E,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWm4B,gBAC/Cx2B,EAAAA,EAAAA,WAAU/B,IACVgC,EAAAA,EAAAA,aAAYvC,IAGRqB,QAAkBW,EAAAA,EAAAA,SAAQhB,GAChCiB,GAAYZ,EAAW,QACvBrO,GAASkP,EAAAA,GAAAA,yBAAuB,GAElC,CAGF,IAAC,kBArCsB,OAAAwwB,EAAA/kC,MAAA,KAAAC,UAAA,KAyCjB4U,GAAiB,SAACnB,GAGtB,IAAM4gF,EAAqB,GAE3B5gF,EAAUE,SAAQ,SAACC,GACjBygF,EAAmBxgF,KAAInP,GAAC,CACtB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEhB,IAEAT,GAASkvF,EAAAA,GAAAA,oBAAmBD,IAEf,MAAT5gF,GAAAA,EAAWM,KAAK,IAClBnB,EAAgBa,EAAUM,KAAK,IAEpB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IAC1C6R,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,GAO1D,EAEM0T,GAAW,eAAA6xD,GAAAjnE,EAAAA,EAAAA,UAAG,UAAOwU,EAAWsB,GAGpC,GAAKtB,EAAUuB,MAgCV,CACH,IAAMm/E,EAAgBJ,IAAgBF,GAAYA,GAAY,YACxDO,EAAgBL,GAAe,MAAQ,OAE7C,GAAkB,IAAdhhF,GAAkB,CACpBI,EAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB5gF,EAAAA,EAAAA,OAAMpB,IAEF6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,EAEjB,KACK,CAEH9B,EAAe,GAEf,IAAMC,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrW,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWm4B,gBAC/C33B,EAAAA,EAAAA,SAAQ4gF,EAAeC,IACvB5gF,EAAAA,EAAAA,OAAMpB,IAEF6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,EAEjB,CAGF,KAhEsB,CACpB,IAAMo/E,EAAqB,GAC3B5gF,EAAUE,SAAQ,SAACC,GACjBygF,EAAmBxgF,KAAInP,GAAC,CACtB3L,GAAI6a,EAAS7a,IACV6a,EAAS/N,QAEhB,IAIa,MAAT4N,GAAAA,EAAWM,KAAK,IAClBnB,EAAgBa,EAAUM,KAAK,IAEpB,MAATN,GAAAA,EAAWM,KAAKN,EAAUM,KAAKpT,OAAS,IAC1C6R,EAAeiB,EAAUM,KAAKN,EAAUM,KAAKpT,OAAS,IAGrC,QAAfoU,GACF5B,EAAeD,EAAc,GAEZ,QAAf6B,GACF5B,EAAeD,EAAc,GAE3BmhF,EAAmB1zF,OAAS,GAC9ByE,GAASkP,EAAAA,GAAAA,yBAAuB,IAIlClP,GAASkvF,EAAAA,GAAAA,oBAAmBD,GAC9B,CAmCF,IAAC,gBApEgBj7E,EAAAK,GAAA,OAAAysD,EAAAnmE,MAAA,KAAAC,UAAA,KAsEXsqF,GAAc,eAAAjkB,GAAApnE,EAAAA,EAAAA,UAAG,YAErBmG,GAASkP,EAAAA,GAAAA,yBAAuB,UAE1BN,IAKR,IAAC,kBATmB,OAAAqyD,EAAAtmE,MAAA,KAAAC,UAAA,KAWduqF,GAAkB,eAAAhkB,GAAAtnE,EAAAA,EAAAA,UAAG,YAEzBmG,GAASkP,EAAAA,GAAAA,yBAAuB,UAE1BG,IAGR,IAAC,kBAPuB,OAAA8xD,EAAAxmE,MAAA,KAAAC,UAAA,MAUxBpD,EAAAA,EAAAA,YAAU,WAERwY,IAEF,GAAG,CAACrC,KAEJ,IAAMqC,GAAU,eAAA4vB,GAAA/lC,EAAAA,EAAAA,UAAG,YAIjB,GAFAmG,GAASkP,EAAAA,GAAAA,yBAAuB,IAEb,KAAfvB,GAAmB,CACrBI,EAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAGF6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,GACf7P,GAASkP,EAAAA,GAAAA,yBAAuB,GAIlC,KAEK,CACHnB,EAAe,GACf,IAAMC,GAAIC,EAAAA,EAAAA,QACRC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrW,EAAAA,EAAAA,OAAM,WAAY,iBAAkBxB,GAAWm4B,gBAC/C33B,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAGF6C,QAA2Bb,EAAAA,EAAAA,SAAQhB,GACzCwB,GAAeK,GACf7P,GAASkP,EAAAA,GAAAA,yBAAuB,GAClC,CACF,IAAC,kBAjCe,OAAA0wB,EAAAjlC,MAAA,KAAAC,UAAA,KAqCVqR,IAAekK,EAAAA,EAAAA,UAAQ,WAC3B,IAAMg5E,EAAuBtjF,EAAY7Q,OAAOoU,cAmBhD,OAhBwBk/E,EAAgBv5E,QAAO,SAACnD,GAC9C,IAAMsjB,EAAUtjB,EAAKsjB,QAAUtjB,EAAKsjB,QAAQl6B,OAAOoU,cAAgB,GAC7DykB,EAAkBjiB,EAAKiiB,gBAAkBjiB,EAAKiiB,gBAAgB74B,OAAOoU,cAAgB,GACrF0kB,EAAgBliB,EAAKkiB,cAAgBliB,EAAKkiB,cAAc94B,OAAOoU,cAAgB,GAC/EmkB,EAAc3hB,EAAK2hB,YAAc3hB,EAAK2hB,YAAYv4B,OAAOoU,cAAgB,GACzEgmB,EAAWxjB,EAAKwjB,SAAWxjB,EAAKwjB,SAASX,WAAWz5B,OAAOoU,cAAgB,GAEjF,OACE8lB,EAAQlgB,SAASm6E,IACjBt7D,EAAgB7e,SAASm6E,IACzBr7D,EAAc9e,SAASm6E,IACvB57D,EAAYve,SAASm6E,IACrB/5D,EAASpgB,SAASm6E,EAEtB,GAGF,GAAG,CAACtjF,EAAayiF,IAYXz4D,GAA0B,SAACj5B,EAAM6oB,GACrC,IAAM+P,EAAuC54B,EARlBsF,QAAQ,UAAW,IACVqU,MAAM,EAAG,GACPrU,QAAQ,wBAAyB,KAQnEqtB,EAAY1iB,QAAQ4Y,KACtB8J,EAAY1iB,QAAQ4Y,GAAOhpB,MAAQ+4B,EAEvC,EAKM02D,GAAgB,eAAA/rD,GAAAtmC,EAAAA,EAAAA,UAAG,YAGvB,IAAMu1F,EAAMnjF,GAAazY,KAAI,SAAAoe,GAAI,OAAIA,EAAK4nB,OAAO,IACjD+0D,EAAYa,GAGZ,IAAMC,QAAerlE,QAAQC,IAC3BmlE,EAAI57F,IAAI,WAAD,IAAA4sC,GAAAvmC,EAAAA,EAAAA,UAAC,UAAM2/B,GAEZ,MAAO,CAAEA,QAAAA,EAAS6uC,YADEinB,GAAsB91D,GAE5C,IAAC,gBAAAllB,GAAA,OAAA8rB,EAAAzlC,MAAA,KAAAC,UAAA,EAHO,KAOJ20F,EAAoBF,EAAO3rE,QAAO,SAAC8rE,EAAGnvD,GAA0B,IAAtB7G,EAAO6G,EAAP7G,QAAS6uC,EAAKhoC,EAALgoC,MAEvD,OADAmnB,EAAIh2D,GAAW6uC,EACRmnB,CACT,GAAG,CAAC,GAEJhB,EAAee,EACjB,IAAC,kBArBqB,OAAApvD,EAAAxlC,MAAA,KAAAC,UAAA,MAuBtBpD,EAAAA,EAAAA,YAAU,WACR00F,IACF,GAAG,IAEH,IAAMoD,GAAqB,eAAAnsD,GAAAtpC,EAAAA,EAAAA,UAAG,UAAO41F,GACnC,IACE,IAAMC,GAAYx2E,EAAAA,EAAAA,KAAI+M,GAASwpE,GAG/B,aAFyBx9D,EAAAA,EAAAA,SAAQy9D,IAEfv9D,MAAM52B,MAC1B,CAAE,MAAOjB,GAEP,OADAC,QAAQD,MAAM,6BAA8BA,IACpC,CACV,CACF,IAAC,gBAV0Boa,GAAA,OAAAyuB,EAAAxoC,MAAA,KAAAC,UAAA,KAiBrB+0F,GAAyB,eAAAhsD,GAAA9pC,EAAAA,EAAAA,UAAG,UAAO+X,GAGvC,GAFA5R,GAASkP,EAAAA,GAAAA,yBAAuB,IAChClP,GAAS0tF,EAAAA,GAAAA,iCAA+B,IACpC97E,EAAK4nB,QAAS,CAChB,IAAM9c,GAASxiB,EAAAA,EAAAA,KAAIsrB,EAAAA,0BAA2B,kBAAmB5T,EAAK4nB,SACtE,IACE,IAAMwf,QAAgB9nC,EAAAA,EAAAA,QAAOwL,GAEzBs8B,EAAQx4C,UAEVR,GAAS4vF,EAAAA,GAAAA,mBAAkB52C,EAAQv4C,OAAO84C,YAAc,KACxDv5C,GAASkP,EAAAA,GAAAA,yBAAuB,KAGhC3U,QAAQe,IAAI,oBAEhB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,CACF,CAEA2wF,GAAuBr5E,EAAK4nB,QAAU5nB,EAAK4nB,QAAU,GACrD0xD,GAA2Bt5E,EAAKiiB,gBAAe,MAAMjiB,EAAKsjB,QAAO,IACjEi2D,GAAuCv5E,EAAKiiB,eAE9C,IAAC,gBAzB8B/e,GAAA,OAAA6uB,EAAAhpC,MAAA,KAAAC,UAAA,KA2BzBszF,GAAa,eAAAtlB,GAAA/uE,EAAAA,EAAAA,UAAG,UAAO+X,EAAM6T,GACjCzlB,GAASkP,EAAAA,GAAAA,yBAAuB,IAEhC,IACQ6D,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,4BACxCC,EAAOF,IAAOH,GAAUI,OAAO,QAC/BE,EAAQH,IAAOH,GAAUI,OAAO,MAChCG,EAAeJ,IAAOH,GAAUI,OAAO,SACvCI,EAAOL,IAAOH,GAAUI,OAAO,cAC/BK,EAAMN,IAAOH,GAAUI,OAAO,MAC9BM,EAAOP,IAAOH,GAAUI,OAAO,SAC/BO,EAAyBR,IAAOH,GAAUI,OAAO,YAEjDg7E,EAAW5+D,EAAY1iB,QAAQ+E,EAAK4nB,SAAS/8B,MAAMyF,QAAQ,KAAM,IAQvEu6E,EAAM4P,WAON,IAAMlzC,EAAiB,CACrB5lC,KAAMN,EACNmiB,SAAU+4D,EACV/0C,UAAWlc,GAAatgC,MAEpB8uF,GAAoBxxF,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAAoB5T,EAAK4nB,SAE7F,UACQp/B,EAAAA,EAAAA,WAAUsxF,EAAmB,CACjCt2D,SAAU+4D,EACV50C,YAAYrb,EAAAA,EAAAA,YAAWib,KAEzB,IAAMvlC,EAAU,CACdvY,QAAQ,+BAAgC6hC,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,2CAA2CtjB,EAAKiiB,gBAAe,wBAClJ/f,UAAWb,EACXc,aAAa,EACbF,SAAU,CACRZ,EAAc7D,cACd67E,GAAqB77E,eACrB,+BAA+B8tB,GAAatgC,KAAI,cAAcgV,EAAKsjB,QAAO,2CAA2CtjB,EAAKiiB,gBAAe,wBAAuBzkB,cAChK,eAAeA,cACf,4BAA4BA,cAC5B,oBAAoBA,cACpB,cAAcA,cACd,UAAUA,cACV,oBAAoBA,cACpB,YAAYA,cACZ,MAAMA,cACN,UAAUA,cACVg8E,GAAsBh8E,cACtB+7E,GAAqC/7E,cACrC8tB,GAAatgC,KAAKwS,cAClBgE,EAAKhE,cACLiE,EAAMjE,cACNkE,EAAalE,cACbmE,EAAKnE,cACLoE,EAAIpE,cACJqE,EAAKrE,cACLsE,EAAuBtE,gBAG3BmD,GAAmBqB,GACnB5T,GAASkP,EAAAA,GAAAA,yBAAuB,IAGhCutE,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAC,qCAErC,GAEJ,CAAE,MAAOqC,GACPC,QAAQD,MAAMA,GACdmiF,EAAM7mF,KAAK,CACTinF,OAAQ,WACN,OAAOhlF,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW+a,QAAS,EAAGlb,aAAc,GAAItG,UAC9EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAUvB,SAAA,CAAC,mBAAiBqC,MAEtD,GAEJ,CAKF,IAAC,gBA/FkB0b,EAAA8kC,GAAA,OAAA8tB,EAAAjuE,MAAA,KAAAC,UAAA,KAiGbizF,GAA8B,SAACj8E,GACnC5R,GAASmsF,EAAAA,GAAAA,8BAA4B,IACrClB,GAAuBr5E,EAAK4nB,QAC5B0xD,GAA2Bt5E,EAAKiiB,gBAAe,MAAMjiB,EAAKsjB,QAAO,IACjEi2D,GAAuCv5E,EAAKiiB,gBAC5Cu3D,GAAwBx5E,EAAKsjB,OAE/B,EAEM04D,GAAyB,eAAA3oD,GAAAprC,EAAAA,EAAAA,UAAG,UAAO+X,GACvC5R,GAASkP,EAAAA,GAAAA,yBAAuB,IAChC,UACQ2iB,GAAUjgB,EAAK4nB,SACrByxD,GAAuBr5E,EAAK4nB,QAC5B0xD,GAA2Bt5E,EAAKiiB,gBAAe,MAAMjiB,EAAKsjB,QAAO,IACjEi2D,GAAuCv5E,EAAKiiB,gBAC5C7zB,GAASkP,EAAAA,GAAAA,yBAAuB,IAChClP,GAAS6vF,EAAAA,GAAAA,4BAA0B,GACrC,CAAE,MAAOv1F,GACPC,QAAQD,MAAMA,GACd0F,GAASkP,EAAAA,GAAAA,yBAAuB,GAElC,CACF,IAAC,gBAd8B48D,GAAA,OAAA7mC,EAAAtqC,MAAA,KAAAC,UAAA,KAgBzBuyF,GAA6B,WACjCntF,GAAS6vF,EAAAA,GAAAA,4BAA0B,IACnC5E,GAAuB,GACvBC,GAAqB,GACrBC,GAAuC,GACvCC,GAAwB,GACxBprF,GAAS8vF,EAAAA,GAAAA,mBAAkB,IAC7B,EAEMj+D,IAAY1hB,EAAAA,EAAAA,aAAY,WAAD,IAAAq1B,GAAA3rC,EAAAA,EAAAA,UAAC,UAAOk4B,GACnC,IAEE,IAAMC,QAAkBC,EAAAA,EAAAA,UAAQ/Y,EAAAA,EAAAA,KAAI+M,GAAY8L,EAAU,MAGpDG,QAAalI,QAAQC,IACzB+H,EAAUG,MAAM3+B,IAAI,WAAD,IAAAiyC,GAAA5rC,EAAAA,EAAAA,UAAC,UAAOw4B,GAEzB,MAAO,CAAEr2B,UADSs2B,EAAAA,EAAAA,gBAAeD,GACnBE,SAAUF,EAAQr1B,KAClC,IAAC,gBAAAgjF,GAAA,OAAAv6C,EAAA9qC,MAAA,KAAAC,UAAA,EAHmB,KAMtBs3B,EAAKzJ,MAAK,SAAC2C,EAAGG,GAGZ,OAFkBiH,SAASpH,EAAEmH,UACXC,SAASjH,EAAEgH,SAE/B,IAEIL,EAAK32B,OAAS,EAChByE,GAAS8vF,EAAAA,GAAAA,mBAAkB59D,IAK3BlyB,GAAS8vF,EAAAA,GAAAA,mBAAkB,IAK/B,CAAE,MAAOx1F,GAEPC,QAAQD,MAAM,4BAA6BA,EAC7C,CACF,IAAC,gBAAAqgF,GAAA,OAAAn1C,EAAA7qC,MAAA,KAAAC,UAAA,EAlC6B,GAkC3B,IA+BGm1F,IA5B+B,eAAA/pD,GAAAnsC,EAAAA,EAAAA,UAAG,YACtC,IAAMm2F,GAAqB9hF,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,mBAEjE,WAC8BxW,EAAAA,EAAAA,SAAQghF,IACtBzhF,QAAQ,WAAD,IAAAgiC,GAAA12C,EAAAA,EAAAA,UAAC,UAAOK,GAI3B,QAAyB47B,IAHZ57B,EAAIuG,OAGR8yB,YACP,UAEQn5B,EAAAA,EAAAA,WAAUF,EAAIgf,IAAK,CACvBqa,YAAa,KAEfh5B,QAAQe,IAAI,iDAAiDpB,EAAIvG,GACnE,CAAE,MAAO2G,GACPC,QAAQD,MAAM,wCAAyCA,EACzD,CAEJ,IAAG,OAAF,SAAA4mF,GAAA,OAAA3wC,EAAA51C,MAAA,KAAAC,UAAE,CAAF,CAfqB,GAgBxB,CAAE,MAAON,GACPC,QAAQD,MAAM,4CAA6CA,EAC7D,CAEF,GAzBqC,IA4BX,WAAO,IAAD28D,EAGQ,MAAZ,OAAtBA,EAAAnN,EAAej9C,cAAO,EAAtBoqD,EAAwBx6D,QAC1B2sD,GAAcU,EAAej9C,QAAQpQ,MAAMzB,QAC3C0zF,GAAa,aACbE,IAAgB,KAGhBxlC,GAAc,IACdslC,GAAa,aACbE,IAAgB,GACE,IAAdjhF,IAEFqC,KAQN,GAGA,OACEnY,EAAAA,GAAAA,KAAAmpB,GAAAA,SAAA,CAAA/oB,SAEGwuC,GAAe,MAEZ5tC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,UACHJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAACxxC,IAAK4wC,EAAgB3tD,MAAO,CAAEwhD,aAAc,OAAQjpD,MAAO,OAAQ+kB,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,WAC1JV,gBAAiBqzF,GACjB5yF,YAAY,SACZ0kF,cAAc,SACdC,eAAe,YAInBjpF,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CACHtpD,MAAO,CACLya,cAAe,MACf1d,eAAgB,gBAChB8d,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjB+a,QAAS,EACTlb,aAAc,GACdtG,SAAA,EACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,aAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,gBAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAGzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAG7C,cAAe,MAAO5e,WAAY,UAAWC,UAC/EJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMqxF,GAAiB,aAAa,EAAC52F,UAC9DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAOm1F,IAA8B,eAAdF,GAA6B,UAAY,SAAYh0E,MAAI,EAAC0oD,WAAS,EAAAlrE,SAAC,gBAK9GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAG7C,cAAe,MAAO5e,WAAY,UAAWC,UAC/EJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMqxF,GAAiB,cAAc,EAAC52F,UAC/DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAOm1F,IAA8B,gBAAdF,GAA8B,UAAY,SAAYh0E,MAAI,EAAC0oD,WAAS,EAAAlrE,SAAC,sBAI/GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,EAAG7C,cAAe,MAAO5e,WAAY,UAAWC,UAC/EJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMqxF,GAAiB,WAAW,EAAC52F,UAC5DJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAOm1F,IAA8B,aAAdF,GAA2B,UAAY,SAAYh0E,MAAI,EAAC0oD,WAAS,EAAAlrE,SAAC,mBAG5GJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG6d,QAAS,GAAIxhB,UACnCJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,QAASwrB,UAAW,UAAavK,MAAI,EAAAxiB,SAAC,iBAG/Dq2F,EAAgB96F,KAAI,SAACoe,EAAM6T,GAAK,OAC/B5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAEHtpD,MAAO,CACLP,KAAM,EACNgb,cAAe,MACf1d,eAAgB,gBAChBlB,WAAY,SACZgf,kBAAmB,EACnBC,kBAAmB,UACnBvY,gBAAiB,UACjBC,gBAAiB,IACjB1G,SAAA,EACFJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,UACvBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEzH,MAAO,MAAO+iB,WAAY,GAAKxf,SAAE2Z,EAAKiiB,qBAElEh8B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,UACvBY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEzH,MAAO,OAASuD,SAAA,CAAE2Z,EAAKsjB,QAAQ,UAE3Dr9B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAI3D,UACvBJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEzH,MAAO,OAASuD,SAAE2Z,EAAKkiB,mBAEnDj8B,EAAAA,GAAAA,KAAC81F,GAAmB,CAAC/7E,KAAMA,EAAMg8E,0BAA2BA,GAA2BC,4BAA6BA,MAqBpHh2F,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,UACxBJ,EAAAA,GAAAA,KAACwzF,GAAiB,CAAoB1rE,cAAe/N,EAAK2hB,YAAa5/B,GAAIie,EAAK4nB,QAAS5nB,KAAMA,GAAvEA,EAAK4nB,YAI/B3gC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAOkH,KAAM,EAAGgb,cAAe,MAAOlY,gBAAiB,QAASH,aAAc,GAAKtG,SAAA,EACvGJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS,kBAAMmyF,GAA0B/9E,EAAK,EAC9CzV,MAAO,CACLmd,OAAQ,EACR0L,UAAW,UACX/sB,UAEFJ,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,UAAUxD,MAAM,QAAQyD,KAAM,QAElDpF,EAAAA,GAAAA,KAACk2F,GAAa,CAACn8E,KAAMA,EAAM6T,MAAOA,EAAOoQ,wBAAyBA,GAAyBq4D,cAAeA,SAU5Gr2F,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,EAAG5D,WAAY,SAAUkB,eAAgB,UAAYjB,UAC9FJ,EAAAA,GAAAA,KAACiqB,GAAiB,CAACrhB,KAAMmR,QAnEtBA,EAAKje,GAsEL,KAGTkF,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXya,cAAe,MAAOliB,MAAO+xC,EAAc,IAAM,MAAQA,EAAc,KAAO,MAAQ,MACtFzhB,UAAW,UACX/sB,SAAA,EAEAJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,UACvEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CAAEqd,QAAS1L,GAAe,EAAI,OAAS,QAC9CtQ,QAAS2nF,GAAmBltF,UAC5BJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,wBAAyBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UACjGJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,kBAAkBC,KAAM,GAAIzD,MAAO,iBAM7D3B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,wBAAyBH,aAAc,EAAG+a,OAAQ,GAAIG,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAWC,UAC1JY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,SAAWihB,MAAI,EAAAxiB,SAAA,CAAC,QAAM6V,QAGnEjW,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAYC,UACxEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS0nF,GAAejtF,UACxBJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,sBAAuBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UAC/FJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,gBAAgBC,KAAM,GAAIzD,MAAO,oBAS7D3B,EAAAA,GAAAA,KAACo0F,GAAiB,CAACC,iBAAkBA,MACrCr0F,EAAAA,GAAAA,KAACq1F,GAAe,CAACC,2BAA4BA,SAiB/Ct0F,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,SAAA,EACxBJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAAAxtD,UACHJ,EAAAA,GAAAA,KAAC6yD,EAAAA,QAAS,CAACxxC,IAAK4wC,EAAgB3tD,MAAO,CAAEwhD,aAAc,OAAQjpD,MAAO,MAAO+kB,QAAS,GAAI/a,gBAAiB,QAASH,aAAc,EAAGnB,qBAAsB,UAAW4nB,UAAW,SAAU7N,UAAW,GACpMza,gBAAiBqzF,GACjB5yF,YAAY,SACZ0kF,cAAc,SACdC,eAAe,WAIlBwM,EAAgB96F,KAAI,SAACoe,EAAM6T,GAAK,OAC/B5sB,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAEHtpD,MAAO,CACLP,KAAM,EACNgb,cAAe,SACf9Y,YAAa,EACbC,YAAa,UACbW,gBAAiB,UACjB4a,OAAQ,IACRrhB,SAAA,EAEFY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,WAAahf,UACzHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,aAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,WAAahf,UAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEsb,WAAY,GAAIxf,SAAE2Z,EAAKiiB,wBAIrDh7B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,WAAahf,UACzHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,gBAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,WAAahf,UAC5EY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEsb,WAAY,GAAIxf,SAAA,CAAE2Z,EAAKsjB,QAAQ,aAI7Dr8B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,WAAahf,UACzHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,iBAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGob,kBAAmB,EAAGC,kBAAmB,WAAahf,UAC5EJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAACgqE,YAAU,EAACjnE,MAAO,CAAEsb,WAAY,GAAIxf,SAAE2Z,EAAKkiB,sBAKrDj7B,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,WAAahf,UACzHJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,cAEzCY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOI,kBAAmB,EAAGC,kBAAmB,WAAahf,SAAA,CACjG2Z,EAAK0nC,WAAa,GAChBzhD,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMowF,GAA0Bh8E,EAAK,EAAC3Z,UAChEY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+pE,WAAS,EAAChnE,MAAO,CAAEsb,WAAY,GAAIxf,SAAA,CACtC2Z,EAAK0nC,WAAa1nC,EAAK0nC,WAAa,EAAE,iBAG1CzgD,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAEsb,WAAY,GAAIxf,SAAA,CAC7B2Z,EAAK0nC,WAAa1nC,EAAK0nC,WAAa,EAAE,eAK3CzhD,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CAAC5gC,QAAS,kBAAMqwF,GAA4Bj8E,EAAK,EAAC3Z,SAChE2Z,EAAK0nC,WAAa,EAAI,MACrBzhD,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,sBAAsBC,KAAM,GAAIzD,MAAO,mBAMnEX,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACnJJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,oBAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG+C,gBAAiB,EAAGqY,kBAAmB,EAAGC,kBAAmB,WAAahf,UAChGJ,EAAAA,GAAAA,KAACwzF,GAAiB,CAAoB1rE,cAAe/N,EAAK2hB,YAAa5/B,GAAIie,EAAK4nB,QAAS5nB,KAAMA,GAAvEA,EAAK4nB,eAKjC3gC,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACnJJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,sBAEzCY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,MAAOlY,gBAAiB,QAASH,aAAc,EAAGyY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,SAAA,EACvKJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS,kBAAMmyF,GAA0B/9E,EAAK,EAC9CzV,MAAO,CACLmd,OAAQ,EACR0L,UAAW,UACX/sB,UAEFJ,EAAAA,GAAAA,KAAC6iB,EAAAA,QAAW,CAAC1d,KAAK,UAAUxD,MAAM,QAAQyD,KAAM,QAElDpF,EAAAA,GAAAA,KAACk2F,GAAa,CAACn8E,KAAMA,EAAM6T,MAAOA,EAAOoQ,wBAAyBA,GAAyBq4D,cAAeA,YAwB9Gr1F,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,OAAQ3e,SAAA,EACpCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEzH,MAAO,MAAO+kB,QAAS,EAAG/a,gBAAiB,UAAWsY,kBAAmB,EAAGC,kBAAmB,UAAW/d,eAAgB,UAAYjB,UACnJJ,EAAAA,GAAAA,KAACuB,EAAAA,QAAI,CAAC+C,MAAO,CAAE3C,MAAO,SAAYihB,MAAI,EAAAxiB,SAAC,eAEzCJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEya,cAAe,MAAOhb,KAAM,EAAG0d,OAAQ,GAAKrhB,UACzDJ,EAAAA,GAAAA,KAACiqB,GAAiB,CAACrhB,KAAMmR,WApHxBA,EAAKje,GAwHL,KAGTkF,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CACXya,cAAe,MAAOliB,MAAO+xC,EAAc,IAAM,MAAQA,EAAc,KAAO,MAAQ,MACtFzhB,UAAW,UACX/sB,SAAA,EAEAJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAWC,UACvEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACfjiC,MAAO,CAAEqd,QAAS1L,GAAe,EAAI,OAAS,QAC9CtQ,QAAS2nF,GAAmBltF,UAC5BJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,wBAAyBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UACjGJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,kBAAkBC,KAAM,GAAIzD,MAAO,iBAM7D3B,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,wBAAyBH,aAAc,EAAG+a,OAAQ,GAAIG,QAAS,EAAGvgB,eAAgB,SAAUlB,WAAY,UAAWC,UAC1JY,EAAAA,GAAAA,MAACO,EAAAA,QAAI,CAAC+C,MAAO,CAAE0C,UAAW,SAAUrF,MAAO,SAAWihB,MAAI,EAAAxiB,SAAA,CAAC,QAAM6V,QAGnEjW,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG1C,eAAgB,SAAUlB,WAAY,UAAYC,UACxEJ,EAAAA,GAAAA,KAACumC,EAAAA,QAAgB,CACf5gC,QAAS0nF,GAAejtF,UACxBJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,sBAAuBH,aAAc,EAAGkb,QAAS,EAAGH,OAAQ,IAAKrhB,UAC/FJ,EAAAA,GAAAA,KAACkF,EAAAA,QAAa,CAACC,KAAK,gBAAgBC,KAAM,GAAIzD,MAAO,oBA0B7D3B,EAAAA,GAAAA,KAACo0F,GAAiB,CAACC,iBAAkBA,MACrCr0F,EAAAA,GAAAA,KAACq1F,GAAe,CAACC,2BAA4BA,SAczD,EAOe,SAAS8C,KACtB,IAAAxiF,GAA0B3Y,EAAAA,EAAAA,UAAS,IAAG4Y,GAAA1Y,EAAAA,EAAAA,SAAAyY,EAAA,GAAxBvY,GAAFwY,EAAA,GAAUA,EAAA,IAGtBE,GAFa/W,EAAQ,OACPA,EAAQ,QACkB/B,EAAAA,EAAAA,WAAS,IAAM+Y,GAAA7Y,EAAAA,EAAAA,SAAA4Y,EAAA,GACvDgK,GADmB/J,EAAA,GAAiBA,EAAA,IACI/Y,EAAAA,EAAAA,WAAS,IAAM+iB,GAAA7iB,EAAAA,EAAAA,SAAA4iB,EAAA,GAEjDtgB,GAFaugB,EAAA,GAAiBA,EAAA,IAEnBtgB,EAAAA,GAAAA,gBAGjBipC,GAA0C1rC,EAAAA,EAAAA,UAAS,IAAG2rC,GAAAzrC,EAAAA,EAAAA,SAAAwrC,EAAA,GAGhDj+B,GAHck+B,EAAA,GAAkBA,EAAA,IAGpBxgC,EAAAA,EAAAA,cAAY,SAACC,GAAK,OAAKA,EAAMqC,SAAS,KACxDq+B,GAAwB9rC,EAAAA,EAAAA,UAASyN,GAAUs+B,GAAA7rC,EAAAA,EAAAA,SAAA4rC,EAAA,GAApC5jC,EAAI6jC,EAAA,GAAEp9B,EAAOo9B,EAAA,GACpBG,GAAwBlsC,EAAAA,EAAAA,UAAS,IAAGmsC,GAAAjsC,EAAAA,EAAAA,SAAAgsC,EAAA,GAEpCI,GAFWH,EAAA,GAASA,EAAA,IAEwBnsC,EAAAA,EAAAA,UAAS,KAAGusC,GAAArsC,EAAAA,EAAAA,SAAAosC,EAAA,GAExDI,GAFqBH,EAAA,GAAmBA,EAAA,IAEJvsC,EAAAA,EAAAA,UAASN,EAAAA,QAAWC,IAAI,UAAUC,QAAM+sC,GAAAzsC,EAAAA,EAAAA,SAAAwsC,EAAA,GAEtExhC,GAFWyhC,EAAA,GAAeA,EAAA,IAEfphC,EAAAA,EAAAA,gBAGXomC,EAAcjyC,EAAAA,QAAWC,IAAI,UAAUC,OA2B7C8C,EAAAA,EAAAA,YAAU,WAUR,OAToBwuB,EAAAA,mBAAmBtuB,oBAAmB,SAAAC,GACnDA,GAEHL,EAAS,SAIb,GAGF,GAAG,IAaH,IAAMgJ,EAAuB,SAACC,GACxBA,EAASC,SACED,EAASE,OACAC,SAGpBC,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACL/qB,MAAK,WAEJ3D,EAAS,SAEX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,KAGJqG,EAAAA,EAAAA,SAAQqlB,EAAAA,oBACL/qB,MAAK,WAEJ3D,EAAS,SAEX,IACC6D,OAAM,SAACb,GACNC,QAAQD,MAAM,qBAAsBA,EACtC,GAEN,GAgBA9C,EAAAA,EAAAA,YAAU,WACR,IAAMoJ,EAfuB,WAAO,IAAD65E,EAC7B35E,EAAuC,OAAjC25E,EAAGz0D,EAAAA,mBAAmBrmB,kBAAW,EAA9B86E,EAAgCxlF,MAC/C,GAAI6L,EAAQ,CACV,IAAM7G,GAAUC,EAAAA,EAAAA,KAAIsF,GAAW,WAAYsB,GAE3C,OADoBC,EAAAA,EAAAA,YAAW9G,EAASqG,EAE1C,CAEE,OAAO,WACLhJ,EAAS,SACX,CAEJ,CAGsB0J,GAEpB,OAAO,WAELJ,GACF,CACF,GAAG,KAGHpJ,EAAAA,EAAAA,YAAU,WACR,IAAMyJ,EAAmBvB,KACrBuB,IACFC,EAAqBD,GACrB/L,EAAS+L,GAET0P,EADmB1P,GAGvB,GAAG,IAGH,IAAM0P,EAAsB,SAAC7W,GAK7B,EAIMoH,EAAoB,eAAAiqE,GAAAtxE,EAAAA,EAAAA,UAAG,UAAO5E,GAClC,IACE,IAAMmM,GAAgBlH,EAAAA,EAAAA,KAAIsF,GAAW,WAAYvK,GAC3Cqc,QAA2BJ,EAAAA,EAAAA,QAAO9P,GAExC,GAAIkQ,EAAmB9Q,SAAU,CAC/B,IAAMC,EAAO6Q,EAAmB7Q,OACdA,EAAKpD,KACLoD,EAAKzD,KACvBgD,GAASwB,EAAAA,GAAAA,cAAaf,EAAKzD,MAE7B,MACEzC,QAAQe,IAAI,0BAEhB,CAAE,MAAOhB,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CACF,IAAC,gBAjByB6mF,GAAA,OAAAhW,EAAAxwE,MAAA,KAAAC,UAAA,KAkHpB8b,EAASxY,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTxC,KAAM,GAER+a,MAAO,CACL/a,KAAM,KAuDV,OAEE/D,EAAAA,GAAAA,KAAC2D,EAAAA,mBAAkB,CAAAvD,UACjBY,EAAAA,GAAAA,MAAAmoB,GAAAA,SAAA,CAAA/oB,SAAA,EAEEY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEuC,gBAAiB,UAAW/J,OAAQ,OAAQD,MAAO,OAAQkiB,cAAe,UAAanb,QAAQ,UAAUC,EAAE,QAAQ3D,EAAE,OAAO6e,cAAc,SAAQ3e,SAAA,EAE/JY,EAAAA,GAAAA,MAACf,EAAAA,QAAG,CACF+D,GAAG,IACHJ,QAAQ,UACR9G,OAAQ,GACRkiB,SAAS,SACTC,IAAK,EACLC,OAAQ,IACRH,cAAc,MACd5e,WAAW,SACXgf,kBAAmB,EACnBC,kBAAmB,WAAWhf,SAAA,EAI9BJ,EAAAA,GAAAA,KAACqf,EAAAA,QAAU,CACTlU,eAAgBA,MAElBnL,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,EAAI,IAAK/qC,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK8C,aAAc,IAAK2Y,UAAW,IAAKC,YAAa,EAAEnf,UAE3GJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,EAAOC,UAGjB8vB,GAAe,MAAO5uC,EAAAA,GAAAA,KAAC+sF,EAAAA,QAAgB,CACtC5hF,eAAgBA,MAElBnL,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG0uC,GAAe,IAAM,IAAM,EAAG/qC,EAAG+qC,GAAe,IAAM,EAAI,GAAIjoC,aAAc,IAAK2Y,UAAW,IAAKM,WAAY,CAAC,EAAG,EAAG,EAAG,IAAIxf,UAEjIJ,EAAAA,GAAAA,KAACwf,EAAAA,QAAS,CACRtb,OAAQ,CACNC,IAAK,mKACLsb,SAAUD,EAAAA,QAAUC,SAASC,MAE/Btb,WAAYob,EAAAA,QAAUpb,WAAWub,QACjCrb,MAAOua,EAAOC,WAElB9e,EAAAA,GAAAA,MA/IU,SAAHu6C,GAAiC,IAA3Bp1C,EAAIo1C,EAAJp1C,KAAM2a,EAAay6B,EAAbz6B,cAC3BiqB,GAA8C9sC,EAAAA,EAAAA,WAAS,GAAM+sC,GAAA7sC,EAAAA,EAAAA,SAAA4sC,EAAA,GAAtD9pB,EAAe+pB,EAAA,GAAE9pB,EAAkB8pB,EAAA,GAEpC7pB,EAAc,WAClBD,GAAoBD,EACtB,EAEA,OACEjgB,EAAAA,GAAAA,KAACC,EAAAA,QAAG,CAACC,EAAG,CAAC,IAAK,IAAK,MAAO2D,EAAG,CAAC,GAAI,GAAI,IAAKE,KAAM,EAAE3D,UACjDJ,EAAAA,GAAAA,KAACogB,EAAAA,QAAI,CAACC,UAAU,cAAajgB,UAC3BJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAO,CACNC,OAAQN,EACRO,QAAS,SAACC,GAAY,OACpBzf,EAAAA,GAAAA,MAACO,EAAAA,QAAIkG,GAAAA,GAAA,CAAC9F,MAAM,QAAQ2d,UAAW,CAAC,EAAG,EAAG,GAAI9d,SAAU,CAAC,GAAI,GAAI,IAAKkf,YAAa,CAAC,EAAG,EAAG,IAAQD,GAAY,IAAE9a,QAASwa,EAAY/f,SAAA,EAC/HJ,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,UAAUC,KAAM,CAAC,GAAI,GAAI,IAAKzD,MAAM,UAAU,IAAEwD,EAAK,KAACnF,EAAAA,GAAAA,KAAC4gB,EAAAA,QAAQ,CAACzb,KAAK,aAAaC,KAAM,GAAIzD,MAAM,aAC1H,EAETkf,QAAS,kBAAMX,GAAoBD,EAAgB,EACnDa,UAAU,eACVC,WAAW,EAAM3gB,UAEjBJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQU,QAAO,CAACna,gBAAiB,UAAUzG,UAE1CJ,EAAAA,GAAAA,KAACsgB,EAAAA,QAAQW,KAAI,CAACpa,gBAAiB,UAAUzG,UACvCJ,EAAAA,GAAAA,KAAC6F,EAAAA,OAAM,CAACC,OAAQ,CAAElC,QAAS,gBAAkB+B,QAASma,EAAeoB,UAAUlhB,EAAAA,GAAAA,KAAC2gB,EAAAA,QAAsB,CAACxb,KAAK,SAASC,KAAM,GAAIzD,MAAM,UAAYiC,QAAS,cAAcxD,SAAC,oBASvL,GA8GsB,CAAC+E,KAAMA,EAAM2a,cA/Lb,YAEpBhX,EAAAA,EAAAA,SAAQqlB,EAAAA,oBAAoB/qB,MAAK,WAE/B3D,EAAS,UAETpC,EAAS,IACTuO,EAAQ,GACV,IAAGtI,OAAM,WAET,GAGF,QAwLQtD,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAGgb,cAAe,OAAShb,KAAM,CAAC,GAAIgb,cAAc,MAAK3e,UAS5EY,EAAAA,GAAAA,MAAC4sD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,EAAG8C,gBAAiB,UAAW/J,OAAQ,QAASsD,SAAA,EACnEJ,EAAAA,GAAAA,KAACshB,EAAAA,QAAU,CAAChd,MAAO,CAAEP,KAAM,GAAMipF,0BAA0B,SAAQ5sF,UACjEJ,EAAAA,GAAAA,KAAC4tD,EAAAA,QAAI,CAACtpD,MAAO,CAAEP,KAAM,GAAK3D,UACxBJ,EAAAA,GAAAA,KAACw2F,GAAgB,SAKrBx2F,EAAAA,GAAAA,KAAC+0F,GAAU,KACX/0F,EAAAA,GAAAA,KAACm1F,GAAgB,KACjBn1F,EAAAA,GAAAA,KAAC41F,GAAe,aAYtB51F,EAAAA,GAAAA,KAACinB,GAAY,QAerB,C,iXCrrJO,IAAMoxE,EAAgB,SAAC1qE,GAC1B,IAAMxlB,GAAWK,EAAAA,EAAAA,eACjBxL,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA1CiZ,EAAW/Y,EAAA,GAAEgZ,EAAchZ,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA7CgY,EAAW/X,EAAA,GAAEgY,EAAchY,EAAA,GAElCC,GAAgCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAArC2X,EAAQ1X,EAAA,GAAaA,EAAA,GAyD5B,OA7CAkC,EAAAA,EAAAA,YAAU,WACN,IAAMgZ,EAAS,eAAA5W,GAAAC,EAAAA,EAAAA,UAAG,YACd,IACI,IAAImU,EAEAA,EADAb,GACIc,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ,YAAa,SACrBY,EAAAA,EAAAA,YAAW5B,IACXiB,EAAAA,EAAAA,OAAMpB,KAGNiB,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,YAAWsX,EAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAMpB,IAId,IAAMpM,GAAcG,EAAAA,EAAAA,YAAWiN,GAAG,SAACzN,GAC/B,IAAM0uF,EAAqB,GAC3B1uF,EAASgO,SAAQ,SAACrU,GACd+0F,EAAmBxgF,K,2WAAInP,CAAC,CACpB3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEf,IAEKF,EAASqP,OACVxC,EAAe7M,EAASoO,KAAKpO,EAASoO,KAAKpT,OAAS,IAIxDyE,GAASkvF,EAAAA,EAAAA,oBAAmBD,GAChC,IAEA,OAAOruF,CACX,CAAE,MAAOtG,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,CACJ,IAAC,kBAvCc,OAAAV,EAAAe,MAAA,KAAAC,UAAA,KAyCf4V,GACJ,GAAG,CAACgV,EAA2B1X,EAAad,IAErC,CAAEk4E,eAxDc,WACnBn3E,EAAeD,EAAc,EACjC,EAsDyBq3E,mBApDE,WACnBr3E,EAAc,GACdC,EAAeD,EAAc,EAGrC,EAgDJ,C,m6GC7DA,IAMMqiF,GAAmBC,EAAAA,EAAAA,aAAY,CACnCpzF,KAAM,cACNqzF,aAAc,GACdC,SAAU,CACRt+B,eAAgB,SAAC9xD,EAAOqwF,GACtB,OAAOA,EAAOC,OAChB,KAKEC,GAAuBL,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,kBACNqzF,aAAc,GACdC,SAAU,CACRxd,mBAAoB,SAAC5yE,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAIEE,GAA6BN,EAAAA,EAAAA,aAAY,CAC7CpzF,KAAM,wBACNqzF,cAAc,EACdC,SAAU,CACRtd,yBAA0B,SAAC9yE,EAAOqwF,GAChC,OAAOA,EAAOC,OAChB,KAKEG,GAA2BP,EAAAA,EAAAA,aAAY,CAC3CpzF,KAAM,sBACNqzF,aAAc,GACdC,SAAU,CACRh9B,uBAAwB,SAACpzD,EAAOqwF,GAC9B,OAAOA,EAAOC,OAChB,KAGEI,GAA4BR,EAAAA,EAAAA,aAAY,CAC5CpzF,KAAM,uBACNqzF,aAAc,GACdC,SAAU,CACR/8B,wBAAyB,SAACrzD,EAAOqwF,GAC/B,OAAOA,EAAOC,OAChB,KAIEK,GAA6BT,EAAAA,EAAAA,aAAY,CAC7CpzF,KAAM,wBACNqzF,cAAc,EACdC,SAAU,CACRjmB,yBAA0B,SAACnqE,EAAOqwF,GAChC,OAAOA,EAAOC,OAChB,KAKEM,GAA+BV,EAAAA,EAAAA,aAAY,CAC/CpzF,KAAM,0BACNqzF,cAAc,EACdC,SAAU,CACRjuB,2BAA4B,SAACniE,EAAOqwF,GAClC,OAAOA,EAAOC,OAChB,KAKEO,GAAmBX,EAAAA,EAAAA,aAAY,CACnCpzF,KAAM,cACNqzF,aAAc,CAAC,EACfC,SAAU,CACRr8B,eAAgB,SAAC/zD,EAAOqwF,GACtB,OAAOA,EAAOC,OAChB,KAIEQ,GAAoCZ,EAAAA,EAAAA,aAAY,CACpDpzF,KAAM,+BACNqzF,cAAc,EACdC,SAAU,CACRznC,gCAAiC,SAAC3oD,EAAOqwF,GACvC,OAAOA,EAAOC,OAChB,KAIES,GAA+Bb,EAAAA,EAAAA,aAAY,CAC/CpzF,KAAM,0BACNqzF,cAAc,EACdC,SAAU,CACR1a,2BAA4B,SAAC11E,EAAOqwF,GAClC,OAAOA,EAAOC,OAChB,KAIEU,GAA0Bd,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,cAAc,EACdC,SAAU,CACRza,sBAAuB,SAAC31E,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAIEW,GAA8Bf,EAAAA,EAAAA,aAAY,CAC9CpzF,KAAM,yBACNqzF,cAAc,EACdC,SAAU,CACRzb,0BAA2B,SAAC30E,EAAOqwF,GACjC,OAAOA,EAAOC,OAChB,KAKEY,GAAwBhB,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACRh/B,oBAAqB,SAACpxD,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAKEa,GAA6BjB,EAAAA,EAAAA,aAAY,CAC7CpzF,KAAM,wBACNqzF,cAAc,EACdC,SAAU,CACR98B,yBAA0B,SAACtzD,EAAOqwF,GAChC,OAAOA,EAAOC,OAChB,KAIEc,GAAwBlB,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACRj/B,oBAAqB,SAACnxD,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAKEe,GAA0BnB,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,aAAc,GACdC,SAAU,CACRl5B,sBAAuB,SAACl3D,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAKEgB,GAAoBpB,EAAAA,EAAAA,aAAY,CACpCpzF,KAAM,eACNqzF,aAAc,GACdC,SAAU,CACRl/B,gBAAiB,SAAClxD,EAAOqwF,GACvB,OAAOA,EAAOC,OAChB,KAIEiB,GAAuBrB,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,kBACNqzF,cAAc,EACdC,SAAU,CACR75B,mBAAoB,SAACv2D,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAIEkB,GAAkBtB,EAAAA,EAAAA,aAAY,CAClCpzF,KAAM,aACNqzF,cAAc,EACdC,SAAU,CACR55B,cAAe,SAACx2D,EAAOqwF,GACrB,OAAOA,EAAOC,OAChB,KAIEmB,GAA2BvB,EAAAA,EAAAA,aAAY,CAC3CpzF,KAAM,sBACNqzF,aAAc,KACdC,SAAU,CACRsB,uBAAwB,SAAC1xF,EAAOqwF,GAC9B,OAAOA,EAAOC,OAChB,KAIEqB,GAAoBzB,EAAAA,EAAAA,aAAY,CACpCpzF,KAAM,eACNqzF,aAAc,GACdC,SAAU,CACR15B,gBAAiB,SAAC12D,EAAOqwF,GACvB,OAAOA,EAAOC,OAChB,KAIEsB,GAAwB1B,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,KACdC,SAAU,CACRyB,oBAAqB,SAAC7xF,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAYEwB,GAAwB5B,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACRvP,oBAAqB,SAAC7gF,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAKEyB,GAAwC7B,EAAAA,EAAAA,aAAY,CACxDpzF,KAAM,mCACNqzF,cAAc,EACdC,SAAU,CACR3Q,oCAAqC,SAACz/E,EAAOqwF,GAC3C,OAAOA,EAAOC,OAChB,KAIE0B,GAAkB9B,EAAAA,EAAAA,aAAY,CAClCpzF,KAAM,aACNqzF,aAAc,GACdC,SAAU,CACR6B,cAAe,SAACjyF,EAAOqwF,GACrB,OAAOA,EAAOC,OAChB,KAKE4B,GAAgChC,EAAAA,EAAAA,aAAY,CAChDpzF,KAAM,2BACNqzF,aAAc,GACdC,SAAU,CACR+B,4BAA6B,SAACnyF,EAAOqwF,GACnC,OAAOA,EAAOC,OAChB,KAIE8B,GAA0BlC,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,aAAc,GACdC,SAAU,CACRiC,sBAAuB,SAACryF,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAKEgC,GAA8BpC,EAAAA,EAAAA,aAAY,CAC9CpzF,KAAM,yBACNqzF,cAAc,EACdC,SAAU,CACR9L,0BAA2B,SAACtkF,EAAOqwF,GACjC,OAAOA,EAAOC,OAChB,KAIEiC,GAAiCrC,EAAAA,EAAAA,aAAY,CACjDpzF,KAAM,4BACNqzF,cAAc,EACdC,SAAU,CACR/O,6BAA8B,SAACrhF,EAAOqwF,GACpC,OAAOA,EAAOC,OAChB,KAIEkC,GAA2BtC,EAAAA,EAAAA,aAAY,CAC3CpzF,KAAM,sBACNqzF,cAAc,EACdC,SAAU,CACRtN,uBAAwB,SAAC9iF,EAAOqwF,GAC9B,OAAOA,EAAOC,OAChB,KAKEmC,GAA8BvC,EAAAA,EAAAA,aAAY,CAC9CpzF,KAAM,yBACNqzF,cAAc,EACdC,SAAU,CACRxR,0BAA2B,SAAC5+E,EAAOqwF,GACjC,OAAOA,EAAOC,OAChB,KAIEoC,GAAsBxC,EAAAA,EAAAA,aAAY,CACtCpzF,KAAM,iBACNqzF,aAAc,GACdC,SAAU,CACRnU,kBAAmB,SAACj8E,EAAOqwF,GACzB,OAAOA,EAAOC,OAChB,KAIEqC,GAA4BzC,EAAAA,EAAAA,aAAY,CAC5CpzF,KAAM,uBACNqzF,aAAc,GACdC,SAAU,CACRwC,wBAAyB,SAAC5yF,EAAOqwF,GAC/B,OAAOA,EAAOC,OAChB,KAIEuC,GAAwB3C,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACR0C,oBAAqB,SAAC9yF,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAQEyC,GAAsB7C,EAAAA,EAAAA,aAAY,CACtCpzF,KAAM,iBACNqzF,aAAc,GACdC,SAAU,CACRV,kBAAmB,SAAC1vF,EAAOqwF,GACzB,OAAOA,EAAOC,OAChB,KAIE0C,GAAgB9C,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACR6C,YAAa,SAACjzF,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAIE4C,GAAmChD,EAAAA,EAAAA,aAAY,CACnDpzF,KAAM,8BACNqzF,cAAc,EACdC,SAAU,CACR5C,+BAAgC,SAACxtF,EAAOqwF,GACtC,OAAOA,EAAOC,OAChB,KAIE6C,GAA+BjD,EAAAA,EAAAA,aAAY,CAC/CpzF,KAAM,0BACNqzF,cAAc,EACdC,SAAU,CACRrD,2BAA4B,SAAC/sF,EAAOqwF,GAClC,OAAOA,EAAOC,OAChB,KAKE8C,GAAuBlD,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,kBACNqzF,aAAc,GACdC,SAAU,CACRpB,mBAAoB,SAAChvF,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAIE+C,GAA0BnD,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,aAAc,GACdC,SAAU,CACRkD,sBAAuB,SAACtzF,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAIEiD,GAAqCrD,EAAAA,EAAAA,aAAY,CACrDpzF,KAAM,gCACNqzF,cAAc,EACdC,SAAU,CACR9tE,iCAAkC,SAACtiB,EAAOqwF,GACxC,OAAOA,EAAOC,OAChB,KAIEkD,IAAgCtD,EAAAA,EAAAA,aAAY,CAChDpzF,KAAM,kCACNqzF,cAAc,EACdC,SAAU,CACRnE,4BAA6B,SAACjsF,EAAOqwF,GACnC,OAAOA,EAAOC,OAChB,KAIEmD,IAAwCvD,EAAAA,EAAAA,aAAY,CACxDpzF,KAAM,mCACNqzF,aAAc,GACdC,SAAU,CACR/D,oCAAqC,SAACrsF,EAAOqwF,GAC3C,OAAOA,EAAOC,OAChB,KAIEoD,IAAiCxD,EAAAA,EAAAA,aAAY,CACjDpzF,KAAM,4BACNqzF,cAAc,EACdC,SAAU,CACRlE,6BAA8B,SAAClsF,EAAOqwF,GACpC,OAAOA,EAAOC,OAChB,KAIEqD,IAA8BzD,EAAAA,EAAAA,aAAY,CAC9CpzF,KAAM,yBACNqzF,cAAc,EACdC,SAAU,CACRT,0BAA2B,SAAC3vF,EAAOqwF,GACjC,OAAOA,EAAOC,OAChB,KAKEsD,IAAsB1D,EAAAA,EAAAA,aAAY,CACtCpzF,KAAM,iBACNqzF,aAAc,GACdC,SAAU,CACRR,kBAAmB,SAAC5vF,EAAOqwF,GACzB,OAAOA,EAAOC,OAChB,KAKEuD,IAAmB3D,EAAAA,EAAAA,aAAY,CACnCpzF,KAAM,cACNqzF,aAAc,GACdC,SAAU,CACRljF,eAAgB,SAAClN,EAAOqwF,GACtB,OAAOA,EAAOC,OAChB,KAOEwD,IAAuB5D,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,kBACNqzF,aAAc,GACdC,SAAU,CACR5hF,mBAAoB,SAACxO,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAUEyD,IAAgB7D,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACRrL,YAAa,SAAC/kF,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAOE0D,IAAuB9D,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,kBACNqzF,aAAc,CACZ,UACA,WACA,OACA,UACFC,SAAU,CACR6D,mBAAoB,SAACj0F,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAGE4D,IAA0BhE,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,cAAc,EACdC,SAAU,CACR11C,sBAAuB,SAAC16C,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAGE6D,IAAgCjE,EAAAA,EAAAA,aAAY,CAChDpzF,KAAM,2BACNqzF,cAAc,EACdC,SAAU,CACRp2C,4BAA6B,SAACh6C,EAAOqwF,GACnC,OAAOA,EAAOC,OAChB,KAGE8D,IAA2BlE,EAAAA,EAAAA,aAAY,CAC3CpzF,KAAM,sBACNqzF,cAAc,EACdC,SAAU,CACRphF,uBAAwB,SAAChP,EAAOqwF,GAC9B,OAAOA,EAAOC,OAChB,KAGE+D,IAA2BnE,EAAAA,EAAAA,aAAY,CAC3CpzF,KAAM,sBACNqzF,aAAc,GACdC,SAAU,CACRzwE,uBAAwB,SAAC3f,EAAOqwF,GAC9B,OAAOA,EAAOC,OAChB,KAGEgE,IAAsBpE,EAAAA,EAAAA,aAAY,CACtCpzF,KAAM,iBACNqzF,aAAc,GACdC,SAAU,CACR9vE,kBAAmB,SAACtgB,EAAOqwF,GACzB,OAAOA,EAAOC,OAChB,KAGEiE,IAA6BrE,EAAAA,EAAAA,aAAY,CAC7CpzF,KAAM,wBACNqzF,aAAc,GACdC,SAAU,CACR9rE,yBAA0B,SAACtkB,EAAOqwF,GAChC,OAAOA,EAAOC,OAChB,KAGEkE,IAAmBtE,EAAAA,EAAAA,aAAY,CACnCpzF,KAAM,cACNqzF,aAAc,GACdC,SAAU,CACRqE,eAAgB,SAACz0F,EAAOqwF,GACtB,OAAOA,EAAOC,OAChB,KAGEoE,IAAkBxE,EAAAA,EAAAA,aAAY,CAClCpzF,KAAM,aACNqzF,cAAc,EACdC,SAAU,CACRuE,cAAe,SAAC30F,EAAOqwF,GACrB,OAAOA,EAAOC,OAChB,KAIEsE,IAAwB1E,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACR/uF,oBAAqB,SAACrB,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAIEuE,IAAiB3E,EAAAA,EAAAA,aAAY,CACjCpzF,KAAM,YACNqzF,cAAc,EACdC,SAAU,CACR9uF,aAAc,SAACtB,EAAOqwF,GACpB,OAAOA,EAAOC,OAChB,KAGEwE,IAAgC5E,EAAAA,EAAAA,aAAY,CAChDpzF,KAAM,oBACNqzF,cAAc,EACdC,SAAU,CACRhqE,4BAA6B,SAACpmB,EAAOqwF,GACnC,OAAOA,EAAOC,OAChB,KAGEyE,IAAwB7E,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,0BACNqzF,cAAc,EACdC,SAAU,CACRlmE,oBAAqB,SAAClqB,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAGE0E,IAAyB9E,EAAAA,EAAAA,aAAY,CACzCpzF,KAAM,oBACNqzF,cAAc,EACdC,SAAU,CACR7kE,qBAAsB,SAACvrB,EAAOqwF,GAC5B,OAAOA,EAAOC,OAChB,KAGE2E,IAAgB/E,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACR8E,YAAa,SAACl1F,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAGE6E,IAAgBjF,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACRgF,YAAa,SAACp1F,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAGE+E,IAAiBnF,EAAAA,EAAAA,aAAY,CACjCpzF,KAAM,YACNqzF,aAAc,GACdC,SAAU,CACR9+D,aAAc,SAACtxB,EAAOqwF,GACpB,OAAOA,EAAOC,OAChB,KAGEgF,IAAgBpF,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAvrBqB,GAwrBrBC,SAAU,CACRmF,YAAa,SAACv1F,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAGEkF,IAAuBtF,EAAAA,EAAAA,aAAY,CACvCpzF,KAAM,cACNqzF,aAAc,GACdC,SAAU,CACRqF,mBAAoB,SAACz1F,EAAOqwF,GAC1B,OAAOA,EAAOC,OAChB,KAGEoF,IAAkBxF,EAAAA,EAAAA,aAAY,CAClCpzF,KAAM,SACNqzF,aAAc,GACdC,SAAU,CACRuF,cAAe,SAAC31F,EAAOqwF,GACrB,OAAOA,EAAOC,OAChB,KAGEsF,IAAoB1F,EAAAA,EAAAA,aAAY,CACpCpzF,KAAM,eACNqzF,aAAc,GACdC,SAAU,CACRyF,gBAAiB,SAAC71F,EAAOqwF,GACvB,OAAOA,EAAOC,OAChB,KAGEwF,IAAiB5F,EAAAA,EAAAA,aAAY,CACjCpzF,KAAM,YACNqzF,cAAc,EACdC,SAAU,CACRr5F,aAAc,SAACiJ,EAAOqwF,GACpB,OAAOA,EAAOC,OAChB,KAGEyF,IAAsB7F,EAAAA,EAAAA,aAAY,CACtCpzF,KAAM,iBACNqzF,aAAc,GACdC,SAAU,CACRnmE,kBAAmB,SAACjqB,EAAOqwF,GACzB,OAAOA,EAAOC,OAChB,KAGE0F,IAAgB9F,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACR6F,YAAa,SAACj2F,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAGE4F,IAAwBhG,EAAAA,EAAAA,aAAY,CACxCpzF,KAAM,mBACNqzF,aAAc,GACdC,SAAU,CACR+F,oBAAqB,SAACn2F,EAAOqwF,GAC3B,OAAOA,EAAOC,OAChB,KAGE8F,IAAgBlG,EAAAA,EAAAA,aAAY,CAChCpzF,KAAM,WACNqzF,aAAc,GACdC,SAAU,CACRiG,YAAa,SAACr2F,EAAOqwF,GACnB,OAAOA,EAAOC,OAChB,KAGEgG,IAAiBpG,EAAAA,EAAAA,aAAY,CACjCpzF,KAAM,YACNqzF,aAAc,GACdC,SAAU,CACRmG,aAAc,SAACv2F,EAAOqwF,GACpB,OAAOA,EAAOC,OAChB,KAGEkG,IAAiBtG,EAAAA,EAAAA,aAAY,CACjCpzF,KAAM,YACNqzF,aAAc,GACdC,SAAU,CACRqG,aAAc,SAACz2F,EAAOqwF,GACpB,OAAOA,EAAOC,OAChB,KAGEoG,IAAqBxG,EAAAA,EAAAA,aAAY,CACrCpzF,KAAM,gBACNqzF,aAAc,GACdC,SAAU,CACRuG,iBAAkB,SAAC32F,EAAOqwF,GACxB,OAAOA,EAAOC,OAChB,KAGEsG,IAAoB1G,EAAAA,EAAAA,aAAY,CACpCpzF,KAAM,eACNqzF,aAAc,GACdC,SAAU,CACRyG,gBAAiB,SAAC72F,EAAOqwF,GACvB,OAAOA,EAAOC,OAChB,KAGEwG,IAAyB5G,EAAAA,EAAAA,aAAY,CACzCpzF,KAAM,oBACNqzF,aAAc,GACdC,SAAU,CACR2G,qBAAsB,SAAC/2F,EAAOqwF,GAC5B,OAAOA,EAAOC,OAChB,KAGE0G,IAAmB9G,EAAAA,EAAAA,aAAY,CACnCpzF,KAAM,cACNqzF,aAAc,GACdC,SAAU,CACR6G,eAAgB,SAACj3F,EAAOqwF,GACtB,OAAOA,EAAOC,OAChB,KAKE4G,IAA0BhH,EAAAA,EAAAA,aAAY,CAC1CpzF,KAAM,qBACNqzF,cAAc,EACdC,SAAU,CACRxnE,sBAAuB,SAAC5oB,EAAOqwF,GAC7B,OAAOA,EAAOC,OAChB,KAKWl9B,GAA2Bq9B,EAAyB0G,QAApD/jC,uBACAtB,GAAmBm+B,EAAiBkH,QAApCrlC,eACA8gB,GAAuB2d,EAAqB4G,QAA5CvkB,mBACAE,GAA6B0d,EAA2B2G,QAAxDrkB,yBACAzf,GAA4Bq9B,EAA0ByG,QAAtD9jC,wBACA8W,GAA6BwmB,EAA2BwG,QAAxDhtB,yBACApW,GAAmB88B,EAAiBsG,QAApCpjC,eACAoO,GAA+ByuB,EAA6BuG,QAA5Dh1B,2BACAxZ,GAAoCmoC,EAAkCqG,QAAtExuC,gCACA+sB,GAA+Bqb,EAA6BoG,QAA5DzhB,2BACAC,GAA0Bqb,EAAwBmG,QAAlDxhB,sBACAhB,GAA8Bsc,EAA4BkG,QAA1DxiB,0BACAvjB,GAAwB8/B,EAAsBiG,QAA9C/lC,oBACAkC,GAA6B69B,EAA2BgG,QAAxD7jC,yBACAnC,GAAwBigC,EAAsB+F,QAA9ChmC,oBACAD,GAAoBogC,EAAkB6F,QAAtCjmC,gBACAgG,GAA0Bm6B,EAAwB8F,QAAlDjgC,sBACAX,GAAuBg7B,EAAqB4F,QAA5C5gC,mBACAC,GAAkBg7B,EAAgB2F,QAAlC3gC,cACAk7B,GAA2BD,EAAyB0F,QAApDzF,uBACAh7B,GAAoBi7B,EAAkBwF,QAAtCzgC,gBACAm7B,GAAwBD,EAAsBuF,QAA9CtF,oBAIAvN,GAA8BgO,EAA4B6E,QAA1D7S,0BACAjD,GAAiCkR,EAA+B4E,QAAhE9V,6BACAR,GAAwBiR,EAAsBqF,QAA9CtW,oBACApB,GAAwCsS,EAAsCoF,QAA9E1X,oCACA0S,GAAgCD,EAA8BiF,QAA9DhF,4BACAF,GAAkBD,EAAgBmF,QAAlClF,cACAI,GAA0BD,EAAwB+E,QAAlD9E,sBACApW,GAAsByW,EAAoByE,QAA1Clb,kBACA2C,GAA8B6T,EAA4B0E,QAA1DvY,0BACAkE,GAA2B0P,EAAyB2E,QAApDrU,uBACAgQ,GAAwBD,EAAsBsE,QAA9CrE,oBACAF,GAA4BD,EAA0BwE,QAAtDvE,wBAKAK,GAAgBD,EAAcmE,QAA9BlE,YACAvD,GAAsBqD,EAAoBoE,QAA1CzH,kBACAlC,GAAmC0F,EAAiCiE,QAApE3J,+BACAT,GAA+BoG,EAA6BgE,QAA5DpK,2BACAiC,GAAuBoE,EAAqB+D,QAA5CnI,mBACAsE,GAA0BD,EAAwB8D,QAAlD7D,sBACAhxE,GAAqCixE,EAAmC4D,QAAxE70E,iCACA+pE,GAAwCoH,GAAsC0D,QAA9E9K,oCACAJ,GAAgCuH,GAA8B2D,QAA9DlL,4BACAC,GAAiCwH,GAA+ByD,QAAhEjL,6BACAyD,GAA8BgE,GAA4BwD,QAA1DxH,0BACAC,GAAsBgE,GAAoBuD,QAA1CvH,kBACA1iF,GAAmB2mF,GAAiBsD,QAApCjqF,eAIAsB,GAAuBslF,GAAqBqD,QAA5C3oF,mBAKAu2E,GAAgBgP,GAAcoD,QAA9BpS,YAGAkP,GAAuBD,GAAqBmD,QAA5ClD,mBACAv5C,GAA0Bw5C,GAAwBiD,QAAlDz8C,sBACAV,GAAgCm6C,GAA8BgD,QAA9Dn9C,4BACAhrC,GAA2BolF,GAAyB+C,QAApDnoF,uBACAsR,GAAsBg0E,GAAoB6C,QAA1C72E,kBACAX,GAA2B00E,GAAyB8C,QAApDx3E,uBACA2E,GAA6BiwE,GAA2B4C,QAAxD7yE,yBACAmwE,GAAmBD,GAAiB2C,QAApC1C,eACAkB,GAAkBD,GAAgByB,QAAlCxB,cACA/sE,GAA0BsuE,GAAwBC,QAAlDvuE,sBACA6sE,GAAuBD,GAAqB2B,QAA5C1B,mBACAd,GAAkBD,GAAgByC,QAAlCxC,cACArzF,GAAiBuzF,GAAesC,QAAhC71F,aACAD,GAAwBuzF,GAAsBuC,QAA9C91F,oBACAkqB,GAAyBypE,GAAuBmC,QAAhD5rE,qBACArB,GAAwB6qE,GAAsBoC,QAA9CjtE,oBACA9D,GAAgC0uE,GAA8BqC,QAA9D/wE,4BACAmvE,GAAgBD,GAAc6B,QAA9B5B,YACAM,GAAoBD,GAAkBuB,QAAtCtB,gBACA9+F,GAAiB++F,GAAeqB,QAAhCpgG,aACAkzB,GAAsB8rE,GAAoBoB,QAA1CltE,kBACAgsE,GAAgBD,GAAcmB,QAA9BlB,YACAE,GAAwBD,GAAsBiB,QAA9ChB,oBACAE,GAAgBD,GAAce,QAA9Bd,YACAE,GAAiBD,GAAea,QAAhCZ,aACAE,GAAiBD,GAAeW,QAAhCV,aACAE,GAAqBD,GAAmBS,QAAxCR,iBACAE,GAAoBD,GAAkBO,QAAtCN,gBACAE,GAAyBD,GAAuBK,QAAhDJ,qBACA7B,GAAgBD,GAAckC,QAA9BjC,YACAE,GAAgBD,GAAcgC,QAA9B/B,YACA6B,GAAmBD,GAAiBG,QAApCF,eACA3lE,GAAiB+jE,GAAe8B,QAAhC7lE,aAET1uB,IAAQw0F,EAAAA,EAAAA,gBAAe,CAC3BC,QAAS,CAGPlnB,oBAAqBsgB,EAAyB4G,QAC9CjnB,YAAa6f,EAAiBoH,QAC9BplB,gBAAiBse,EAAqB8G,QACtCnlB,sBAAuBse,EAA2B6G,QAClDhlC,qBAAsBq+B,EAA0B2G,QAChD9vB,sBAAuBopB,EAA2B0G,QAClDr+B,YAAa63B,EAAiBwG,QAC9B5qB,wBAAyBmkB,EAA6ByG,QACtD3wC,6BAA8BoqC,EAAkCuG,QAChEjkB,wBAAyB2d,EAA6BsG,QACtDhkB,mBAAoB2d,EAAwBqG,QAC5CpmB,uBAAwBggB,EAA4BoG,QACpDhyC,iBAAkB6rC,EAAsBmG,QACxCrf,sBAAuBmZ,EAA2BkG,QAClDnnB,iBAAkBkhB,EAAsBiG,QACxCpf,mBAAoBoZ,EAAwBgG,QAC5CjsC,aAAckmC,EAAkB+F,QAChC9kC,gBAAiBg/B,EAAqB8F,QACtC7kC,WAAYg/B,EAAgB6F,QAC5B/kC,oBAAqBm/B,EAAyB4F,QAC9ChnC,aAAcshC,EAAkB0F,QAChCC,iBAAkB1F,EAAsByF,QAIxCpU,uBAAwBqP,EAA4B+E,QACpDpX,0BAA2BsS,EAA+B8E,QAC1D7X,iBAAkBsS,EAAsBuF,QACxC/X,iCAAkCyS,EAAsCsF,QACxEla,yBAA0B+U,EAA8BmF,QACxD/a,WAAY0V,EAAgBqF,QAC5BE,iBAAkB1E,EAAsBwE,QACxCzZ,mBAAoBwU,EAAwBiF,QAC5ChZ,uBAAwBoU,EAA4B4E,QACpD9U,oBAAqBiQ,EAAyB6E,QAC9CG,qBAAsB7E,EAA0B0E,QAChDpY,eAAgByT,EAAoB2E,QAIpCI,SAAUzE,EAAcqE,QACxBp+C,eAAgB85C,EAAoBsE,QACpC/J,4BAA6B4F,EAAiCmE,QAC9DxK,wBAAyBsG,EAA6BkE,QACtDjJ,gBAAiBgF,EAAqBiE,QACtCK,mBAAoBrE,EAAwBgE,QAC5Ch1E,8BAA+BkxE,EAAmC8D,QAClExL,yBAA0B2H,GAA8B6D,QACxDvL,0BAA2B4H,GAA+B2D,QAC1DnK,uBAAwByG,GAA4B0D,QACpDlK,eAAgByG,GAAoByD,QACpCpqF,YAAa4mF,GAAiBwD,QAK9BM,gBAAiB7D,GAAqBuD,QAKtCvS,SAAUiP,GAAcsD,QAExB1mE,gBAAiBqjE,GAAqBqD,QACtC94E,yBAA0B41E,GAA8BkD,QACxDx4E,oBAAqBu1E,GAAyBiD,QAC9Ch3E,eAAgBi0E,GAAoB+C,QACpC/3E,oBAAqB+0E,GAAyBgD,QAC9Cl1E,sBAAuBoyE,GAA2B8C,QAClD9K,iCAAkCkH,GAAsC4D,QACxEj1E,YAAaoyE,GAAiB6C,QAC9Bj3E,WAAYs1E,GAAgB2B,QAC5Bh4E,gBAAiBm2E,GAAqB6B,QACtChmE,UAAWgkE,GAAegC,QAC1B3mE,SAAU4kE,GAAc+B,QACxBO,aAAchC,GAAkByB,QAChCvgG,UAAWg/F,GAAeuB,QAC1B/wE,eAAgByvE,GAAoBsB,QACpCzmE,SAAUolE,GAAcqB,QACxBxmE,iBAAkBqlE,GAAsBmB,QACxCvmE,SAAUslE,GAAciB,QACxBtmE,UAAWulE,GAAee,QAC1BrmE,UAAWwlE,GAAea,QAC1BpmE,cAAeylE,GAAmBW,QAClCnmE,aAAc0lE,GAAkBS,QAChClmE,kBAAmB2lE,GAAuBO,QAC1CjmE,SAAU6jE,GAAcoC,QACxB96B,SAAU44B,GAAckC,QACxBnvD,YAAa8uD,GAAiBK,QAC9B9wE,kBAAmByuE,GAAuBqC,QAC1CtwE,iBAAkBguE,GAAsBsC,QACxClxE,yBAA0B2uE,GAA8BuC,QACxDh1F,UAAWwyF,GAAewC,QAC1Bp3F,iBAAkB20F,GAAsByC,QACxCj1F,WAAYsyF,GAAgB2C,QAC5BxwE,mBAAoBqwE,GAAwBG,SAG9CQ,WAAY,SAACC,GAAoB,OAC/BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAAC,wCACjBC,aAAc,CAAC,0CAEjB,IAIOC,GAAgB,WAC3B,OAAO,WAAP,IAAAx+F,GAAAC,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,KAAI4U,EAAAA,wBAAyB,WAAY,YASxD,OARoB/N,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD83F,EAAAC,EAC7ChnE,GAA0B,OAAf+mE,EAAA93F,EAASE,aAAM,EAAf43F,EAAiB/mE,WAAY,GACxCmrC,GAA0B,OAAf67B,EAAA/3F,EAASE,aAAM,EAAf63F,EAAiB77B,WAAY,GAC9Cz8D,EAASo1F,GAAY9jE,IACrBtxB,EAASs1F,GAAY74B,GACvB,GAIF,CAAE,MAAOniE,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAE,GAAA,OAAAZ,EAAAe,MAAA,KAAAC,UAAA,EAhBM,EAiBT,EAEa29F,GAAuB,WAClC,OAAO,WAAP,IAAAp3F,GAAAtH,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,eAAgB,eAOzE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADi4F,EAC7Cj5E,GAAiC,OAAfi5E,EAAAj4F,EAASE,aAAM,EAAf+3F,EAAiBl0E,cAAe,GACxDtkB,EAAS21F,GAAmBp2E,GAC9B,GAIF,CAAE,MAAOjlB,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAG,GAAA,OAAA0G,EAAAxG,MAAA,KAAAC,UAAA,EAdM,EAeT,EAIa69F,GAAkB,WAC7B,OAAO,WAAP,IAAA/oF,GAAA7V,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UAAW,UAOpE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADm4F,EAC7Cp4E,GAA4B,OAAfo4E,EAAAn4F,EAASE,aAAM,EAAfi4F,EAAiBC,SAAU,GAC9C34F,EAAS61F,GAAcv1E,GACzB,GAIF,CAAE,MAAOhmB,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAI,GAAA,OAAAgV,EAAA/U,MAAA,KAAAC,UAAA,EAdM,EAeT,EAGag+F,GAAgB,WAC3B,OAAO,WAAP,IAAA9oF,GAAAjW,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS,QAOlE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADs4F,EAC7CjoE,GAA0B,OAAfioE,EAAAt4F,EAASE,aAAM,EAAfo4F,EAAiB7lE,OAAQ,GAC1ChzB,EAASy1F,GAAY7kE,GACvB,GAIF,CAAE,MAAOt2B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA8W,GAAA,OAAAtB,EAAAnV,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEak+F,GAAgB,WAC3B,OAAO,WAAP,IAAA/oF,GAAAlW,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS,QAOlE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADw4F,EAC7CjoE,GAA0B,OAAfioE,EAAAx4F,EAASE,aAAM,EAAfs4F,EAAiB7/D,OAAQ,GAC1Cl5B,EAASm2F,GAAYrlE,GACvB,GAIF,CAAE,MAAOx2B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAiX,GAAA,OAAAxB,EAAApV,MAAA,KAAAC,UAAA,EAdM,EAeT,EAGao+F,GAAwB,WACnC,OAAO,WAAP,IAAA/oF,GAAApW,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,gBAAiB,gBAO1E,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD04F,EAC7CloE,GAAkC,OAAfkoE,EAAA14F,EAASE,aAAM,EAAfw4F,EAAiB7kE,eAAgB,GAC1Dp0B,EAASq2F,GAAoBtlE,GAC/B,GAIF,CAAE,MAAOz2B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAqY,GAAA,OAAA1C,EAAAtV,MAAA,KAAAC,UAAA,EAdM,EAeT,EAGas+F,GAAgB,WAC3B,OAAO,WAAP,IAAAzoF,GAAA5W,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,QAAS,QAOlE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD44F,EAC7CnoE,GAA0B,OAAfmoE,EAAA54F,EAASE,aAAM,EAAf04F,EAAiBzkE,OAAQ,GAC1C10B,EAASu2F,GAAYvlE,GACvB,GAIF,CAAE,MAAO12B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA0Z,GAAA,OAAAvD,EAAA9V,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEaw+F,GAAiB,WAC5B,OAAO,WAAP,IAAAtoF,GAAAjX,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SAAU,SAOnE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD84F,EAC7CpoE,GAA2B,OAAfooE,EAAA94F,EAASE,aAAM,EAAf44F,EAAiB//D,QAAS,GAC5Ct5B,EAASy2F,GAAaxlE,GACxB,GAIF,CAAE,MAAO32B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA+Z,GAAA,OAAAvD,EAAAnW,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEa0+F,GAAiB,WAC5B,OAAO,WAAP,IAAAjoF,GAAAxX,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,SAAU,SAOnE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADg5F,EAC7CroE,GAA2B,OAAfqoE,EAAAh5F,EAASE,aAAM,EAAf84F,EAAiBngE,QAAS,GAC5Cp5B,EAAS22F,GAAazlE,GACxB,GAIF,CAAE,MAAO52B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAga,GAAA,OAAAjD,EAAA1W,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEa4+F,GAAqB,WAChC,OAAO,WAAP,IAAAhnF,GAAA3Y,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,aAAc,aAOvE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADk5F,EAC7CtoE,GAA+B,OAAfsoE,EAAAl5F,EAASE,aAAM,EAAfg5F,EAAiB1kE,YAAa,GACpD/0B,EAAS62F,GAAiB1lE,GAC5B,GAIF,CAAE,MAAO72B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAoa,GAAA,OAAAlC,EAAA7X,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEa8+F,GAAoB,WAC/B,OAAO,WAAP,IAAA7mF,GAAAhZ,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,YAAa,YAOtE,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADo5F,EAC7CvoE,GAA8B,OAAfuoE,EAAAp5F,EAASE,aAAM,EAAfk5F,EAAiB1kE,WAAY,GAClDj1B,EAAS+2F,GAAgB3lE,GAC3B,GAIF,CAAE,MAAO92B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAwa,GAAA,OAAAjC,EAAAlY,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEag/F,GAAyB,WACpC,OAAO,WAAP,IAAA1lF,GAAAra,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,iBAAkB,iBAO3E,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAADs5F,EAC7CxoE,GAAmC,OAAfwoE,EAAAt5F,EAASE,aAAM,EAAfo5F,EAAiBxlE,gBAAiB,GAC5Dr0B,EAASi3F,GAAqB5lE,GAChC,GAIF,CAAE,MAAO/2B,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA0b,GAAA,OAAA9B,EAAAvZ,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEak/F,GAAY,WACvB,OAAO,WAAP,IAAAtlF,GAAA3a,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IACQ+S,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,QAC9CnT,EAASm3F,GAAelkF,GAC1B,CAAE,MAAO3Y,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,IAAC,gBAAAwgD,GAAA,OAAAtmC,EAAA7Z,MAAA,KAAAC,UAAA,EATM,EAUT,EAEam/F,GAAmB,WAE9B,OAAO,WAAP,IAAAnlF,GAAA/a,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IACQ+S,SADeC,EAAAA,QAAMve,IAAI,qDACHgM,KAAtBsS,SACFE,EAAgBC,IAAOH,GAAUI,OAAO,cAC9CnT,EAAS20F,GAAe1hF,GAC1B,CAAE,MAAO3Y,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,IAAC,gBAAAwxE,GAAA,OAAAl3D,EAAAja,MAAA,KAAAC,UAAA,EATM,EAUT,EAKao/F,GAAuB,WAClC,OAAO,WAAP,IAAA9kF,GAAArb,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAMu6E,GAAWtsE,EAAAA,EAAAA,QACfC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,oBACtCrX,EAAAA,EAAAA,SAAQ,YAAa,SACrBC,EAAAA,EAAAA,OAAM,KAeR,OAZoBrN,EAAAA,EAAAA,YAAWw5E,GAAU,SAACh6E,GACxC,IAAM0uF,EAAqB,GAC3B1uF,EAASgO,SAAQ,SAACrU,GAChB+0F,EAAmBxgF,KAAInP,EAAC,CACtB3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEX,IACAT,EAASkvF,GAAmBD,GAC9B,GAIF,CAAE,MAAO30F,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAAqgF,GAAA,OAAAzlE,EAAAva,MAAA,KAAAC,UAAA,EAzBM,EA0BT,EAuCaq/F,GAAkB,WAC7B,OAAO,WAAP,IAAAhkF,GAAApc,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,uBAAwB,aAOjF,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD25F,EAC7C1d,GAA4B,OAAf0d,EAAA35F,EAASE,aAAM,EAAfy5F,EAAiB1d,aAAc,GAClDx8E,EAASmyF,GAAc3V,GACzB,GAIF,CAAE,MAAOliF,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA0lF,GAAA,OAAA/pE,EAAAtb,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEau/F,GAAgC,WAC3C,OAAO,WAAP,IAAAziF,GAAA7d,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,uBAAwB,2BAOjF,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD65F,EAC7C/c,GAA0C,OAAf+c,EAAA75F,EAASE,aAAM,EAAf25F,EAAiB/c,2BAA4B,GAC9Er9E,EAASqyF,GAA4BhV,GACvC,GAIF,CAAE,MAAO/iF,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA4mF,GAAA,OAAAxpE,EAAA/c,MAAA,KAAAC,UAAA,EAdM,EAeT,EAEay/F,GAA0B,WACrC,OAAO,WAAP,IAAAvoE,GAAAj4B,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAM0c,GAASxiB,EAAAA,EAAAA,MAAIgU,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,uBAAwB,qBAOjF,OANoBzkB,EAAAA,EAAAA,YAAW2b,GAAQ,SAACnc,GAAc,IAAD+5F,EAC7Cxc,GAAoC,OAAfwc,EAAA/5F,EAASE,aAAM,EAAf65F,EAAiBxc,qBAAsB,GAClE99E,EAASuyF,GAAsBzU,GACjC,GAIF,CAAE,MAAOxjF,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA6mF,GAAA,OAAArvD,EAAAn3B,MAAA,KAAAC,UAAA,EAdM,EAeT,EAKa2/F,GAAoB,WAC/B,OAAO,WAAP,IAAAnoE,GAAAv4B,EAAAA,EAAAA,UAAO,UAAOmG,GACZ,IACE,IAAMu6E,GAAWtsE,EAAAA,EAAAA,QACfC,EAAAA,EAAAA,YAAWsX,EAAAA,0BAA2B,UACtCrX,EAAAA,EAAAA,SAAQ,kBAAmB,SAC3BC,EAAAA,EAAAA,OAAM,KAeR,OAZoBrN,EAAAA,EAAAA,YAAWw5E,GAAU,SAACh6E,GACxC,IAAMo2D,EAAY,GAClBp2D,EAASgO,SAAQ,SAACrU,GAChBy8D,EAAUloD,KAAInP,EAAC,CACb3L,GAAIuG,EAAIvG,IACLuG,EAAIuG,QAEX,IACAT,EAAS42D,GAAgBD,GAC3B,GAIF,CAAE,MAAOr8D,GAEPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,IAAC,gBAAA8mF,GAAA,OAAAhvD,EAAAz3B,MAAA,KAAAC,UAAA,EAzBM,EA0BT,EAKAkI,GAAM9C,SAAS+5F,MACfj3F,GAAM9C,SAASy4F,MACf31F,GAAM9C,SAASu4F,MACfz1F,GAAM9C,SAAS44F,MACf91F,GAAM9C,SAAS84F,MACfh2F,GAAM9C,SAASg5F,MACfl2F,GAAM9C,SAASk5F,MACfp2F,GAAM9C,SAASo5F,MACft2F,GAAM9C,SAASs5F,MACfx2F,GAAM9C,SAASw5F,MACf12F,GAAM9C,SAAS05F,MACf52F,GAAM9C,SAAS45F,MACf92F,GAAM9C,SAASo4F,MACft1F,GAAM9C,SAAS85F,MAMfh3F,GAAM9C,SAASi6F,MACfn3F,GAAM9C,SAASm6F,MACfr3F,GAAM9C,SAASq6F,MAKf,W,kQC15CaG,GAAyBC,EAAAA,EAAAA,eAnCR,CAC5BC,OAAO,0CACPC,WAAW,yCACXC,YAAY,mFACZC,UAAU,yBACVC,cAAc,qCACdC,kBAAkB,eAClBC,MAAM,4CACNC,cAAc,iBA4BHj1E,GAAqBk1E,EAAAA,EAAAA,SAAQV,GAC7B1rF,GAA0BrP,EAAAA,EAAAA,cAAa+6F,GAGvCr0E,GAA2Bs0E,EAAAA,EAAAA,eAxBR,CAE9BC,OAAO,0CACPC,WAAW,4BACXE,UAAU,YACVC,cAAc,wBACdC,kBAAkB,eAClBC,MAAM,4CACNC,cAAc,gBAgB+D,oBAClEE,GAAuBD,EAAAA,EAAAA,SAAQ/0E,GAC/BX,GAA4B/lB,EAAAA,EAAAA,cAAa0mB,E,miBChChDi1E,GAAMX,EAAAA,EAAAA,eAbkB,CAC5BC,OAAO,0CACPC,WAAW,yCACXC,YAAY,mFACZC,UAAU,yBACVC,cAAc,qCACdC,kBAAkB,eAClBC,MAAM,4CACNC,cAAc,iBAOVxjG,IADY4jG,EAAAA,EAAAA,cAAaD,IAClBF,EAAAA,EAAAA,SAAQE,IACrBvkG,EAAQ,OAER,IAAMsD,GAAKsF,EAAAA,EAAAA,cAAc27F,E,mHCJzBvkG,EAAQ,OAER,IAAMykG,GAA2Bb,EAAAA,EAAAA,eAhBO,CACtCC,OAAO,0CACPC,WAAW,yCACXC,YAAY,mFACZC,UAAU,yBACVC,cAAc,qCACdC,kBAAkB,eAClBC,MAAM,4CACNC,cAAc,gBAQgE,aAC1E/+E,GAAoBg/E,EAAAA,EAAAA,SAAQI,E,6DCtClC,SAAiB,C,kBCDjB,IAAI9nG,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,IACX,aAAc,IACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,aAAc,KACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,KACX,aAAc,KACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,KACZ,cAAe,KACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,KACT,aAAc,MACd,gBAAiB,MACjB,WAAY,KACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,qoHClShB4nG,EAA2B,CAAC,EAGhC,SAAS1nG,EAAoB2nG,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqB1lE,IAAjB2lE,EACH,OAAOA,EAAannG,QAGrB,IAAID,EAASknG,EAAyBC,GAAY,CACjD7nG,GAAI6nG,EACJE,QAAQ,EACRpnG,QAAS,CAAC,GAUX,OANAqnG,EAAoBH,GAAUI,KAAKvnG,EAAOC,QAASD,EAAQA,EAAOC,QAAST,GAG3EQ,EAAOqnG,QAAS,EAGTrnG,EAAOC,OACf,CAGAT,EAAoBgoG,EAAIF,E,MC5BxB,IAAIG,EAAW,GACfjoG,EAAoBkoG,EAAI,CAACvuC,EAAQwuC,EAAUC,EAAI3kF,KAC9C,IAAG0kF,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIN,EAASvgG,OAAQ6gG,IAAK,CAGzC,IAFA,IAAKJ,EAAUC,EAAI3kF,GAAYwkF,EAASM,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASzgG,OAAQ+gG,MACpB,EAAXhlF,GAAsB4kF,GAAgB5kF,IAAanjB,OAAOD,KAAKL,EAAoBkoG,GAAG7lD,OAAO4Z,GAASj8D,EAAoBkoG,EAAEjsC,GAAKksC,EAASM,MAC9IN,EAASl2E,OAAOw2E,IAAK,IAErBD,GAAY,EACT/kF,EAAW4kF,IAAcA,EAAe5kF,IAG7C,GAAG+kF,EAAW,CACbP,EAASh2E,OAAOs2E,IAAK,GACrB,IAAIG,EAAIN,SACEnmE,IAANymE,IAAiB/uC,EAAS+uC,EAC/B,CACD,CACA,OAAO/uC,CAnBP,CAJCl2C,EAAWA,GAAY,EACvB,IAAI,IAAI8kF,EAAIN,EAASvgG,OAAQ6gG,EAAI,GAAKN,EAASM,EAAI,GAAG,GAAK9kF,EAAU8kF,IAAKN,EAASM,GAAKN,EAASM,EAAI,GACrGN,EAASM,GAAK,CAACJ,EAAUC,EAAI3kF,EAqBjB,C,KCzBdzjB,EAAoBijF,EAAKziF,IACxB,IAAImoG,EAASnoG,GAAUA,EAAOooG,WAC7B,IAAOpoG,EAAiB,QACxB,IAAM,EAEP,OADAR,EAAoB6oG,EAAEF,EAAQ,CAAEpxE,EAAGoxE,IAC5BA,CAAM,E,MCNd,IACIG,EADAC,EAAWzoG,OAAO0oG,eAAkBC,GAAS3oG,OAAO0oG,eAAeC,GAASA,GAASA,EAAa,UAQtGjpG,EAAoBkpG,EAAI,SAAStgG,EAAOugG,GAEvC,GADU,EAAPA,IAAUvgG,EAAQwgG,KAAKxgG,IAChB,EAAPugG,EAAU,OAAOvgG,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPugG,GAAavgG,EAAMggG,WAAY,OAAOhgG,EAC1C,GAAW,GAAPugG,GAAoC,oBAAfvgG,EAAMxB,KAAqB,OAAOwB,CAC5D,CACA,IAAIygG,EAAK/oG,OAAOgK,OAAO,MACvBtK,EAAoB0oG,EAAEW,GACtB,IAAIC,EAAM,CAAC,EACXR,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI/vF,EAAiB,EAAPmwF,GAAYvgG,EAAyB,iBAAXoQ,KAAyB8vF,EAAenxE,QAAQ3e,GAAUA,EAAU+vF,EAAS/vF,GACxH1Y,OAAOipG,oBAAoBvwF,GAAS0B,SAASuhD,GAASqtC,EAAIrtC,GAAO,IAAOrzD,EAAMqzD,KAI/E,OAFAqtC,EAAa,QAAI,IAAM,EACvBtpG,EAAoB6oG,EAAEQ,EAAIC,GACnBD,CACR,C,KCxBArpG,EAAoB6oG,EAAI,CAACpoG,EAAS+oG,KACjC,IAAI,IAAIvtC,KAAOutC,EACXxpG,EAAoBC,EAAEupG,EAAYvtC,KAASj8D,EAAoBC,EAAEQ,EAASw7D,IAC5E37D,OAAOmpG,eAAehpG,EAASw7D,EAAK,CAAEytC,YAAY,EAAM9oG,IAAK4oG,EAAWvtC,IAE1E,ECNDj8D,EAAoB2pG,EAAI,CAAC,EAGzB3pG,EAAoBE,EAAK0pG,GACjBzzE,QAAQC,IAAI91B,OAAOD,KAAKL,EAAoB2pG,GAAG95E,QAAO,CAACgG,EAAUomC,KACvEj8D,EAAoB2pG,EAAE1tC,GAAK2tC,EAAS/zE,GAC7BA,IACL,KCNJ71B,EAAoB6pG,EAAKD,GAEjB,aAAeA,EAAU,IAAM,CAAC,IAAM,WAAW,IAAM,YAAYA,GAAW,YCFtF5pG,EAAoB8pG,SAAYF,IAEf,ECHjB5pG,EAAoB+pG,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOZ,MAAQ,IAAIa,SAAS,cAAb,EAChB,CAAE,MAAO/pG,GACR,GAAsB,kBAAXy2B,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB32B,EAAoBC,EAAI,CAACgpG,EAAKiB,IAAU5pG,OAAO6pG,UAAUC,eAAerC,KAAKkB,EAAKiB,G,MCAlF,IAAIG,EAAa,CAAC,EACdC,EAAoB,OAExBtqG,EAAoBuqG,EAAI,CAAC3vC,EAAK4vC,EAAMvuC,EAAK2tC,KACxC,GAAGS,EAAWzvC,GAAQyvC,EAAWzvC,GAAKhgD,KAAK4vF,OAA3C,CACA,IAAIC,EAAQC,EACZ,QAAWzoE,IAARg6B,EAEF,IADA,IAAI0uC,EAAUhwF,SAASiwF,qBAAqB,UACpCrC,EAAI,EAAGA,EAAIoC,EAAQjjG,OAAQ6gG,IAAK,CACvC,IAAIsC,EAAIF,EAAQpC,GAChB,GAAGsC,EAAEC,aAAa,QAAUlwC,GAAOiwC,EAAEC,aAAa,iBAAmBR,EAAoBruC,EAAK,CAAEwuC,EAASI,EAAG,KAAO,CACpH,CAEGJ,IACHC,GAAa,GACbD,EAAS9vF,SAAS+jC,cAAc,WAEzBqsD,QAAU,QACjBN,EAAOzrB,QAAU,IACbh/E,EAAoBgrG,IACvBP,EAAOQ,aAAa,QAASjrG,EAAoBgrG,IAElDP,EAAOQ,aAAa,eAAgBX,EAAoBruC,GAExDwuC,EAAO7rD,IAAMgc,GAEdyvC,EAAWzvC,GAAO,CAAC4vC,GACnB,IAAIU,EAAmB,CAACC,EAAM5vC,KAE7BkvC,EAAO5wC,QAAU4wC,EAAO1rD,OAAS,KACjCmgC,aAAaF,GACb,IAAIosB,EAAUf,EAAWzvC,GAIzB,UAHOyvC,EAAWzvC,GAClB6vC,EAAOY,YAAcZ,EAAOY,WAAWC,YAAYb,GACnDW,GAAWA,EAAQ1wF,SAAS0tF,GAAQA,EAAG7sC,KACpC4vC,EAAM,OAAOA,EAAK5vC,EAAM,EAExByjB,EAAU/3E,WAAWikG,EAAiBK,KAAK,UAAMtpE,EAAW,CAAEz4B,KAAM,UAAWkwD,OAAQ+wC,IAAW,MACtGA,EAAO5wC,QAAUqxC,EAAiBK,KAAK,KAAMd,EAAO5wC,SACpD4wC,EAAO1rD,OAASmsD,EAAiBK,KAAK,KAAMd,EAAO1rD,QACnD2rD,GAAc/vF,SAAS6wF,KAAKC,YAAYhB,EApCkB,CAoCX,C,KCvChDzqG,EAAoB0oG,EAAKjoG,IACH,qBAAXirG,QAA0BA,OAAOC,aAC1CrrG,OAAOmpG,eAAehpG,EAASirG,OAAOC,YAAa,CAAE/iG,MAAO,WAE7DtI,OAAOmpG,eAAehpG,EAAS,aAAc,CAAEmI,OAAO,GAAO,ECL9D5I,EAAoB4rG,IAAOprG,IAC1BA,EAAOqrG,MAAQ,GACVrrG,EAAO4D,WAAU5D,EAAO4D,SAAW,IACjC5D,GCHRR,EAAoB8rG,EAAI,qB,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAGN/rG,EAAoB2pG,EAAElB,EAAI,CAACmB,EAAS/zE,KAElC,IAAIm2E,EAAqBhsG,EAAoBC,EAAE8rG,EAAiBnC,GAAWmC,EAAgBnC,QAAW3nE,EACtG,GAA0B,IAAvB+pE,EAGF,GAAGA,EACFn2E,EAASjb,KAAKoxF,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAI91E,SAAQ,CAAC51B,EAAS44D,IAAY6yC,EAAqBD,EAAgBnC,GAAW,CAACrpG,EAAS44D,KAC1GtjC,EAASjb,KAAKoxF,EAAmB,GAAKC,GAGtC,IAAIrxC,EAAM56D,EAAoB8rG,EAAI9rG,EAAoB6pG,EAAED,GAEpDnjG,EAAQ,IAAItG,MAgBhBH,EAAoBuqG,EAAE3vC,GAfFW,IACnB,GAAGv7D,EAAoBC,EAAE8rG,EAAiBnC,KAEf,KAD1BoC,EAAqBD,EAAgBnC,MACRmC,EAAgBnC,QAAW3nE,GACrD+pE,GAAoB,CACtB,IAAIE,EAAY3wC,IAAyB,SAAfA,EAAM/xD,KAAkB,UAAY+xD,EAAM/xD,MAChE2iG,EAAU5wC,GAASA,EAAM7B,QAAU6B,EAAM7B,OAAO9a,IACpDn4C,EAAMe,QAAU,iBAAmBoiG,EAAU,cAAgBsC,EAAY,KAAOC,EAAU,IAC1F1lG,EAAM0C,KAAO,iBACb1C,EAAM+C,KAAO0iG,EACbzlG,EAAM2lG,QAAUD,EAChBH,EAAmB,GAAGvlG,EACvB,CACD,GAEwC,SAAWmjG,EAASA,EAE/D,CACD,EAWF5pG,EAAoBkoG,EAAEO,EAAKmB,GAA0C,IAA7BmC,EAAgBnC,GAGxD,IAAIyC,EAAuB,CAACC,EAA4B1/F,KACvD,IAGI+6F,EAAUiC,GAHTzB,EAAUoE,EAAaC,GAAW5/F,EAGhB27F,EAAI,EAC3B,GAAGJ,EAASjyE,MAAMp2B,GAAgC,IAAxBisG,EAAgBjsG,KAAa,CACtD,IAAI6nG,KAAY4E,EACZvsG,EAAoBC,EAAEssG,EAAa5E,KACrC3nG,EAAoBgoG,EAAEL,GAAY4E,EAAY5E,IAGhD,GAAG6E,EAAS,IAAI7yC,EAAS6yC,EAAQxsG,EAClC,CAEA,IADGssG,GAA4BA,EAA2B1/F,GACrD27F,EAAIJ,EAASzgG,OAAQ6gG,IACzBqB,EAAUzB,EAASI,GAChBvoG,EAAoBC,EAAE8rG,EAAiBnC,IAAYmC,EAAgBnC,IACrEmC,EAAgBnC,GAAS,KAE1BmC,EAAgBnC,GAAW,EAE5B,OAAO5pG,EAAoBkoG,EAAEvuC,EAAO,EAGjC8yC,EAAqBn1E,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9Em1E,EAAmB/xF,QAAQ2xF,EAAqBd,KAAK,KAAM,IAC3DkB,EAAmB7xF,KAAOyxF,EAAqBd,KAAK,KAAMkB,EAAmB7xF,KAAK2wF,KAAKkB,G,KClFvF,IAAIC,EAAsB1sG,EAAoBkoG,OAAEjmE,EAAW,CAAC,MAAM,IAAOjiC,EAAoB,SAC7F0sG,EAAsB1sG,EAAoBkoG,EAAEwE,E","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function Top({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n  const Drawer = createDrawerNavigator();\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginAccountType(fieldType));\r\n            // console.log('Account Type: ', fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            // navigate(`/top`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\r\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\r\n  };\r\n\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // <Drawer.Screen\r\n    //   name=\"LOGS\"\r\n    //   component={() => (\r\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //   )}\r\n    //   options={{ unmountOnBlur: true }}\r\n    // />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n    <NativeBaseProvider>\r\n      <Routes>\r\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\r\n        <Route path=\"freight\" element={<FreightComponent />} />\r\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\r\n        <Route path=\"logs\" element={<LogsComponent />} />\r\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\r\n        <Route path=\"account-list\" element={<AccountListComponent />} />\r\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\r\n        {/* Add additional nested routes as needed */}\r\n      </Routes>\r\n    </NativeBaseProvider>\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setLoginAccountType,\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      // if (loginAccountType !== '') {\r\n      const delay = getRandomDelay();\r\n      setTimeout(() => {\r\n        // navigation.replace(fieldType);\r\n        navigate(`/top`)\r\n      }, delay);\r\n      // navigate(`/top`)\r\n      // }\r\n      // else {\r\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\r\n      //     if (docSnapshot.exists()) {\r\n      //       const data = docSnapshot.data();\r\n      //       const fieldType = data.type;\r\n      //       const fieldName = data.name;\r\n\r\n      //       if (data.active === true) {\r\n      //         setType(fieldType);\r\n      //         dispatch(setLoginAccountType(fieldType));\r\n      //         dispatch(setLoginName(fieldName));\r\n      //         const delay = getRandomDelay();\r\n      //         // setTimeout(() => {\r\n      //         // navigation.replace(fieldType);\r\n      //         navigate(`/top`)\r\n      //         // }, delay);\r\n      //       }\r\n      //       else {\r\n      //         signOut(auth)\r\n      //           .then(() => {\r\n      //             // navigation.navigate('Login');\r\n      //             navigate('/Login');\r\n      //           })\r\n      //           .catch((error) => {\r\n      //             console.error('Error signing out:', error);\r\n      //           });\r\n      //       }\r\n      //     } else {\r\n      //       // Handle the case where the document does not exist\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport Top from './components/Top';\r\nimport Admin from './components/Top';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/Login\" element={<LoginPage />} />\r\n          <Route path=\"/Login/*\" element={<LoginPage />} />\r\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n          {/* Corrected path for Admin if needed */}\r\n          <Route path=\"/top/*\" element={<Top />} />\r\n          {/* Define other routes */}\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    // const handleToggleLogs = useCallback(() => {\r\n    //     // setIsSelectedLogs(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"LOGS\");\r\n    // }, []);\r\n    // const handleToggleAddAccount = useCallback(() => {\r\n    //     // setIsSelectedAddAccount(true);\r\n\r\n    //     // setIsSelectedLogs(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    // }, []);\r\n\r\n    // const handleToggleAccountList = useCallback(() => {\r\n    //     // setIsSelectedAccountList(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ACCOUNT LIST\");\r\n    // }, []);\r\n\r\n    // const handleToggleAddVehicle = useCallback(() => {\r\n    //     // setIsSelected3(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\r\n    // }, []);\r\n\r\n    // const handleVehicleList = useCallback(() => {\r\n    //     navigation.navigate(\"VEHICLE LIST\");\r\n    // }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\")\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\")\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigate('/account-list')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />} */}\r\n\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    {/* <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    /> */}\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\r\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\r\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\r\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\r\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      typeOfAccount === ''\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n    setTypeOfAccount('');\r\n    setTypeOfAccountDisplay('');\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAdmin = () => {\r\n    const text = 'admin';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeBooking = () => {\r\n    const text = 'booking';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeSales = () => {\r\n    const text = 'sales';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Sales');\r\n  };\r\n\r\n  const handleToggleAccountTypeHamanasu = () => {\r\n    const text = 'hamanasu';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Hamanasu');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeApi = () => {\r\n    const text = 'api';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Api');\r\n  };\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\")\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  // const isAccountType = () => {\r\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  // };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\")\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeHamanasu}\r\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeBooking}\r\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Booking</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeSales}\r\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Sales</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeAdmin}\r\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Admin</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeApi}\r\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>API</Text>\r\n                            </Button>\r\n                          </Flex>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n    setSelectedVehicleData,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { AES } from 'crypto-js';\r\nimport { CRYPTO_KEY } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams } from 'react-router-dom';\r\n\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst encryptData = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst decryptData = (ciphertext) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n\r\n        const bytes = AES.decrypt(ciphertext, secretKey);\r\n        return bytes.toString(enc.Utf8);\r\n    } catch (error) {\r\n        console.error(\"Error decrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the decryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n\r\n                    <View\r\n                        style={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: '#e0e0e0',\r\n                            position: 'absolute',\r\n                            right: -20,\r\n                            top: -20,\r\n                            padding: 10,\r\n                            alignSelf: 'center',\r\n                        }}\r\n\r\n                    />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        textInputRef.current.value = item.value;\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            // console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', borderWidth: 0, borderColor: '#D9D9D9', borderRadius: 0, backgroundColor: 'white', }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor={'#9B9E9F'}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ outlineStyle: 'none', width: '100%', height: 80, alignSelf: 'center', padding: 10 }}\r\n                    />\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 20,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst CancelledView = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            position: 'absolute',\r\n            borderRadius: 40,\r\n            borderWidth: 0, // Border width\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            opacity: 0.5,\r\n            // Centering the view within its parent\r\n            top: 38,\r\n            left: 17,\r\n        }}>\r\n\r\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverOpenNewTabIn = () => {\r\n        setIsHovered(true)\r\n        setIsOpenNewTabHovered(true)\r\n    };\r\n\r\n    const hoverOpenNewTabOut = () => {\r\n        setIsOpenNewTabHovered(false)\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    const handlePressNewTab = () => {\r\n        onPressNewTab()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                {item.isCancelled && <CancelledView />}\r\n\r\n                <View style={{ width: '20%', justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n\r\n                    {isHovered && (\r\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverOpenNewTabIn}\r\n                                onHoverOut={hoverOpenNewTabOut}\r\n                                onPress={handlePressNewTab}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: -22,\r\n                                    top: -22,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                navigate(`/top/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(setCarImageUrl(''));\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n                const decodedChatId = decodeURIComponent(chatId);\r\n                const decryptedChatId = decryptData(decodedChatId).toString();\r\n                let parts = decryptedChatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n\r\n                // console.log(decryptedChatId);\r\n\r\n                if (!emailPart) {\r\n                    console.error(\"Invalid email part:\", emailPart);\r\n                    return;\r\n                }\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                // console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\r\n\r\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedVehicleData(data ? data : {}));\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n                            console.log(data)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n                            console.log(data)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => {\r\n\r\n                        unsubscribe()\r\n                        unsubscribeVehicle()\r\n                    };\r\n                }\r\n\r\n\r\n\r\n\r\n            }, 1);\r\n        }\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            const decryptedChatId = decryptData(chatId).toString();\r\n\r\n            setTimeout(() => {\r\n                // console.log(decryptedChatId)\r\n                dispatch(setActiveChatId(decryptedChatId));\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        if (chatId !== activeChatId) {\r\n            const encryptedChatId = encryptData(chatId);\r\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n            navigate(`/top/chat-messages/${encodedChatId}`);\r\n            // console.log(encodedChatId)\r\n            // console.log(decodeURIComponent(encodedChatId))\r\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n            // // Assuming chatId is already properly encoded and needs no further encoding\r\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\r\n            // // Construct the URL for hash-based routing\r\n            // const baseUrl = window.location.origin + window.location.pathname;\r\n            // const fullPath = `${baseUrl}#${path}`;\r\n            // window.open(fullPath, '_blank');\r\n\r\n            dispatch(setActiveChatId(chatId));\r\n\r\n            globalCustomerId = customerId;\r\n            globalChatId = chatId;\r\n\r\n        }\r\n    };\r\n\r\n    const handleChatPressNewTab = async (customerId, chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\r\n        // console.log(encodedChatId)\r\n        // console.log(decodeURIComponent(encodedChatId))\r\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n        // Assuming chatId is already properly encoded and needs no further encoding\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n\r\n        // dispatch(setActiveChatId(chatId));\r\n\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginVertical: 10, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <Select\r\n                    selectedValue={selectedBank}\r\n                    onValueChange={handleValueChange}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    width={300}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    {Object.keys(bankAccountsData).map((bankName) => (\r\n                        <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                    ))}\r\n                </Select>\r\n\r\n                <ModalAddBank />\r\n\r\n            </View>\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection);\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(value), 0);\r\n\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightInput.current?.value;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? 300 : 0;\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? 50 : 0;\r\n        freightInput.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation;\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    ).toFixed(2);\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ).toFixed(2));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n                <Select\r\n                    selectedValue={selectedIncoterms}\r\n                    onValueChange={(value) => setSelectedIncoterms(value)}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Country\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                    <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                    <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                </Select>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                    {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                        ? Number(selectedChatData.currency.usdToJpy).toFixed(2) : '0.00'}\r\n                </Text>\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, marginTop: 10, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFobPriceInputChangeText}\r\n                    ref={fobPriceInput}\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='FOB Price'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2 }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleFreightInputChangeText}\r\n                    ref={freightInput}\r\n                    defaultValue={freightCalculation}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder='Freight'\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInsuranceInputChangeText}\r\n                    ref={insuranceInput}\r\n                    defaultValue={50}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Insurance`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>$</Text>\r\n                <TextInput\r\n                    onChangeText={handleInspectionInputChangeText}\r\n                    ref={inspectionInput}\r\n                    placeholderTextColor='#9B9E9F'\r\n                    placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n            </View>\r\n\r\n\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n                <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                    style={{ width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`$${totalAmountCalculated}`}</Text>\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                    <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 3, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst ConfirmPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue;\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: $${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = invoiceData.paymentDetails.totalAmount ? invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1') - totalValue : '';\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const newPayments = [\r\n            { value: inputAmountRef.current.value, date: formattedTime },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: inputAmountRef.current.value, date: formattedTime, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = numericInputAmount.toLocaleString();\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedTime);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n\r\n                        if (overBalance > 0) {\r\n                            await overBalanceMessage(selectedCustomerData.overBalance ? selectedCustomerData.overBalance + overBalance : '');\r\n                            await delay(10); //10ms delay\r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(overBalance),\r\n                            });\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(invoiceData.paymentDetails.totalAmount.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : invoiceData.paymentDetails.totalAmount;\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWefight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"300\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>${displayedAmount}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>{`$${invoiceData.paymentDetails.totalAmount}`}</Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>$</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    carData: selectedChatData.carData,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, alignItems: 'center' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, lineHeight: 14, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, lineHeight: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, lineHeight: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, lineHeight: 14, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n        const convertImageToBase64 = async (url) => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const blob = await response.blob();\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.onloadend = () => resolve(reader.result);\r\n                    reader.onerror = reject;\r\n                    reader.readAsDataURL(blob);\r\n                });\r\n            } catch (error) {\r\n                console.error('Fetch error:', error.message);\r\n                return null;\r\n            }\r\n        };\r\n        convertImageToBase64(globalImageUrl)\r\n            .then(base64String => {\r\n                setVehicleImageUri(base64String);\r\n            });\r\n        // Trigger image capture when invoiceRef changes\r\n        captureImageAsync();\r\n\r\n        if (screenWidth < 960) {\r\n            const captureImageAsync = async () => {\r\n                try {\r\n                    if (invoiceRef.current) {\r\n                        // Adjust the scale to control the captured image resolution\r\n                        const scale = 0.85; // Experiment with different scale values\r\n                        const width = 2480 * scale;\r\n                        const height = 3508 * scale;\r\n\r\n                        const imageUri = await captureRef(invoiceRef, {\r\n                            format: 'jpg',\r\n                            quality: 1, // Adjust quality if needed\r\n                            result: 'base64',\r\n                            width: width,\r\n                            height: height,\r\n                        });\r\n                        setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n                        const trueCount = countTrueValuesInCarData(invoiceData);\r\n                        setFeaturesTrueCount(trueCount);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error capturing view:\", error);\r\n                }\r\n            };\r\n\r\n            const convertImageToBase64 = async (url) => {\r\n                try {\r\n                    const response = await fetch(url);\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    const blob = await response.blob();\r\n                    return new Promise((resolve, reject) => {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () => resolve(reader.result);\r\n                        reader.onerror = reject;\r\n                        reader.readAsDataURL(blob);\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Fetch error:', error.message);\r\n                    return null;\r\n                }\r\n            };\r\n            convertImageToBase64(globalImageUrl)\r\n                .then(base64String => {\r\n                    setVehicleImageUri(base64String);\r\n                });\r\n            // Trigger image capture when invoiceRef changes\r\n            captureImageAsync();\r\n        }\r\n\r\n    }, [invoiceRef.current, vehicleImageUri]);\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>{!selectedChatData.isCancelled && <Pressable\r\n                onPress={handlePreviewInvoiceModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverPreviewIn}\r\n                onHoverOut={hoverPreviewOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                }}>\r\n\r\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                    </Text>\r\n                    :\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice`}\r\n                    </Text>}\r\n            </Pressable>}\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri && vehicleImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri && vehicleImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: -380, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 480 : 720, maxWidth: screenWidth < 960 ? 320 : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri && vehicleImageUri ? (\r\n                                    <NativeImage\r\n                                        source={{ uri: capturedImageUri }}\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            width: screenWidth < 960 ? 320 : 595,\r\n                                            height: screenWidth < 960 ? 480 : 842,\r\n                                            resizeMode: 'stretch',\r\n                                            borderWidth: 1,\r\n                                            borderColor: '#DADDE1',\r\n                                        }}\r\n                                    />\r\n                                ) : (<Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />)}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {vehicleImageUri !== '' &&\r\n                                <View ref={invoiceRef} style={{ width: 2480, height: 3508, backgroundColor: 'white', zIndex: 1 }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <QRCode\r\n                                                value={invoiceData.cryptoNumber}\r\n                                                size={80 * widthScaleFactor}\r\n                                                color=\"black\"\r\n                                                backgroundColor=\"white\"\r\n                                            />\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        maxWidth: 300 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n\r\n                                    {/* <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 335 * heightScaleFactor }}>\r\n\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            {vehicleImageUri ? (\r\n                                                <NativeImage\r\n                                                    source={{ uri: vehicleImageUri }}\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        resizeMode: 'stretch',\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <View\r\n                                                    style={{\r\n                                                        width: 99 * widthScaleFactor,\r\n                                                        height: 70 * heightScaleFactor,\r\n                                                        backgroundColor: '#e0e0e0',\r\n                                                        marginRight: 12,\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            <View style={{ flex: 1, top: -2 * heightScaleFactor, marginLeft: 5 * widthScaleFactor, height: 59 * heightScaleFactor }}>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 14 * widthScaleFactor, lineHeight: 16 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.carName}`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Reference No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.referenceNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Year/Month: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.regYear}/${invoiceData.carData.regMonth}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Mileage: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km`}\r\n                                                    </Text>\r\n                                                </Text>\r\n\r\n                                                <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                    {`Chassis No.: `}\r\n                                                    <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                        {`${invoiceData.carData.chassisNumber}`}\r\n                                                    </Text>\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 410 * heightScaleFactor, flexDirection: 'row', width: 495 * widthScaleFactor, }}>\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Model Code: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.modelCode}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Fuel: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.fuel}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Transmission: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.transmission}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Steering: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.steering}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Displacement: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1 }}>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Doors: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.doors ? invoiceData.carData.doors : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Drive Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.driveType ? invoiceData.carData.driveType : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Exterior Color: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.exteriorColor}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Number of Seats: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.numberOfSeats ? invoiceData.carData.numberOfSeats : 'N/A'}`}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>\r\n                                                {`Body Type: `}\r\n                                                <Text style={{ fontWeight: 'normal', fontSize: 12 * widthScaleFactor }}>\r\n                                                    {`${invoiceData.carData.bodyType}`}\r\n                                                </Text>\r\n                                            </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 260 * widthScaleFactor, top: 484 * heightScaleFactor, width: 495 * widthScaleFactor, }}>\r\n                                        <Text style={{ fontWeight: 'bold', fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginBottom: 3 * heightScaleFactor, }}>\r\n                                            {`Features: `}\r\n                                        </Text>\r\n\r\n                                        <InvoiceFeatures widthScaleFactor={widthScaleFactor} heightScaleFactor={heightScaleFactor} />\r\n\r\n                                    </View> */}\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.fobPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`$${Math.round(Number(invoiceData.paymentDetails.freightPrice)).toLocaleString('en-US', { useGrouping: true })}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `$${Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + $${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `$${Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true }).split('.')[0]}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price =>\r\n                                                            `$${parseFloat(price).toLocaleString('en-US', {\r\n                                                                style: 'currency',\r\n                                                                currency: 'USD',\r\n                                                                minimumFractionDigits: 0,\r\n                                                                maximumFractionDigits: 0\r\n                                                            }).slice(1)}`\r\n                                                        ).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`$${invoiceData.paymentDetails.totalAmount}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>}\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ReopenTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const reopenTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been reopened by the seller.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been reopened by the seller.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleReopenTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': false // Update the specific field\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': false // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'Reserved', // Update the specific field\r\n                        'reservedTo': selectedCustomerData.textEmail,\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await reopenTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\r\n                    padding: 10,\r\n                }}>\r\n\r\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Reopen Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to reopen the transaction?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleReopenTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CancelTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const sendEmail = async (to, subject, htmlContent) => {\r\n        try {\r\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    to,\r\n                    subject,\r\n                    htmlContent,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Email sent successfully');\r\n            } else {\r\n                console.error('Failed to send email');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    const htmlContent = `<html><head>\r\n    <title>Transaction Cancellation Notice</title>\r\n    <style>\r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            background-color: #f4f4f4;\r\n            color: #333;\r\n            padding: 10px;\r\n            margin: 0;\r\n        }\r\n        .container {\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n            margin: 20px auto;\r\n            max-width: 600px;\r\n            padding: 20px;\r\n        }\r\n        .highlight-red {\r\n            color: #FF0000; /* Red */\r\n            font-weight: bold;\r\n        }\r\n        .highlight-bold {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            line-height: 1.6;\r\n            margin: 10px 0 20px;\r\n        }\r\n        .signature {\r\n            font-weight: bold;\r\n            margin-top: 40px;\r\n            text-align: left;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <p><strong>Dear Valued Customer,</strong></p>\r\n\r\n        <p>I hope this message finds you well.</p>\r\n        \r\n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\r\n\r\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\r\n\r\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\r\n\r\n        <p>Please reach out if you have any questions or require assistance.</p>\r\n\r\n        <p>Thank you for your understanding.</p>\r\n        \r\n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\r\n    </div>\r\n\r\n</body></html>`;\r\n\r\n    const cancelTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been cancelled.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been cancelled.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleCancelTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': true // Update the specific field\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': true // Update the specific field\r\n                });\r\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'On-Sale', // Update the specific field\r\n                        'reservedTo': ''\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await cancelTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\r\n                }}\r\n            >\r\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\r\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\r\n            </Pressable>\r\n\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Cancel Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to cancel the transation?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleCancelTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                        <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <ConfirmPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\r\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\r\n    return (\r\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\r\n            displayedTransactions.map((transaction, index) => {\r\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\r\n\r\n                return (\r\n                    <Pressable\r\n                        key={index}\r\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\r\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\r\n                        onMouseLeave={() => setIsHovered(false)}\r\n                        style={{\r\n                            marginBottom: 15,\r\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\r\n                            borderRadius: 10,\r\n                            shadowColor: '#000',\r\n                            shadowOffset: { width: 0, height: 2 },\r\n                            shadowOpacity: 0.1,\r\n                            shadowRadius: 2,\r\n                            elevation: 3,\r\n                            padding: 5,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#eee',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <FastImage\r\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\r\n                                style={{\r\n                                    width: 60,\r\n                                    height: 60,\r\n                                    borderRadius: 30,\r\n                                    alignSelf: 'center',\r\n                                    margin: 10,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#0A78BE' }} selectable={false}>\r\n                                    {transaction.carName}\r\n                                </Text>\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#333' }} selectable={false}>{transaction.referenceNumber}</Text>\r\n                            </Text>\r\n                        </View>\r\n                    </Pressable>\r\n                );\r\n            })\r\n        ) : (\r\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\r\n        )\r\n    );\r\n};\r\n\r\nconst TransactionHistoryModal = () => {\r\n\r\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n    const navigate = useNavigate();\r\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const hoverStyle = isHovered ? {\r\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\r\n        // Any other style changes on hover\r\n    } : {};\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = selectedCustomerData.transactions.slice(\r\n            displayedTransactions.length,\r\n            displayedTransactions.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handleTransactionHistoryModalOpen = () => {\r\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n        setTransactionHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handleTransactionHistoryModalClose = () => {\r\n        setTransactionHistoryVisible(false);\r\n    };\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    const handleChatPress = (chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/top/chat-messages/${encodedChatId}`);\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\r\n                <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Transactions`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Transactions History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n\r\n                            <TransactionList\r\n                                displayedTransactions={displayedTransactions}\r\n                                handleChatPress={handleChatPress}\r\n                                selectedCustomerData={selectedCustomerData}\r\n                            />\r\n\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: 440,\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: 14, color: '#6F6F6F', textAlign: 'center' }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: 440,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US')}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US') : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <TransactionHistoryModal />\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n    const dispatch = useDispatch();\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n        dispatch(setChatMessageBoxLoading(false));\r\n\r\n    }, [activeChatId]);\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 10,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`$${Number(totalPriceCalculation).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(fobPriceDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${Number(freightCalculation).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\r\n                null :\r\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                        <>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </>\r\n                    }\r\n\r\n                    {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n\r\n                        (\r\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n                                {\r\n                                    selectedChatData.isCancelled == true && (\r\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\r\n                                            <View style={{ paddingLeft: 10, }}>\r\n                                                <ReopenTransaction />\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                }\r\n                                <View style={{ paddingLeft: 10, }}>\r\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Input Payment'}\r\n                                        title={'Input Payment'}\r\n                                        colorHoverOut={'#FF0000'}\r\n                                        colorHoverIn={'#800101'}\r\n                                        transactionValue={3}\r\n                                        buttonValue={4}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    <PreviewInvoice />\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                            {`$${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                        </Text>\r\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                        </Text>\r\n                                    </View>}\r\n                                </View>\r\n\r\n                                <View style={{ paddingLeft: 10, }}>\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Issue Proforma Invoice'}\r\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                        colorHoverIn={'#0f7534'}\r\n                                        colorHoverOut={'#16A34A'}\r\n                                        transactionValue={2}\r\n                                        buttonValue={2}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\r\n\r\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\r\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                                    {\r\n                                                        invoiceData.bankInformations.dueDate\r\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                                year: 'numeric',\r\n                                                                month: 'long',\r\n                                                                day: 'numeric',\r\n                                                            })\r\n                                                            : 'Invalid Date'\r\n                                                    }\r\n                                                </Text>\r\n                                            </>}\r\n                                    </View>}\r\n\r\n                                </View>\r\n                            </View>)\r\n                    }\r\n                </View>)\r\n\r\n            }\r\n\r\n\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                {item === 'RMJ-Bot' ?\r\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\r\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\r\n                                                <Text style={{ flex: 1, color: '#555' }}>{email === item ? 'You' : item}</Text>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' && <iframe\r\n                                src={selectedFileUrl}\r\n                                style={{ width: '100%', height: '700px' }}\r\n                                title=\"PDF Viewer\"\r\n                                onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                            />}\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [selectedChatData, chatMessagesData, animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                            fontSize: 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                        fontSize: 16,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                    fontSize: 16,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                            fontSize: 16,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Display read status text outside of the message bubble */}\r\n                            {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                            {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                    </View>\r\n                                </Tooltip>\r\n                            )}\r\n                            {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                <View style={{\r\n                                    alignSelf: 'flex-end',\r\n                                    marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onHoverIn={() => setIsEyeHovered(true)}\r\n                                        onHoverOut={() => setIsEyeHovered(false)}\r\n                                        onPress={handleReadByListModalOpen}\r\n                                    >\r\n                                        <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                    </Pressable>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={100}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\nconst ReservedStatusViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: '#FFFFCC',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CancelledViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'red',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n        // navigate(`/devadmin/chat-messages/#`);\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#0642f4'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={0}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        {/* {screenWidth <= 960 && <MobileViewDrawer\r\n                            selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                        <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                            <View style={{ flex: 1, margin: 0, }}>\r\n\r\n                                <View style={{\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#f5f5f5',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                    borderTopLeftRadius: 5,\r\n                                    borderTopRightRadius: 5,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: 380, minWidth: 380, borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', borderBottomLeftRadius: 5, }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', }}>\r\n                                                {/* Chat Message Header */}\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', borderBottomRightRadius: 5, paddingBottom: 5, }}>\r\n\r\n                                                <View style={{ flex: 1, }}>\r\n\r\n                                                    {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                        selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                        ? <ReservedStatusViewForHeader /> :\r\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n\r\n                                                    }\r\n\r\n\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    )}\r\n\r\n\r\n\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n\r\n                        </View>\r\n\r\n\r\n                        {/* </Box> */}\r\n\r\n                        {/* </Box> */}\r\n                    </View>\r\n\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n\r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </NativeBaseProvider>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/top/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/top/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/top/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/top/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/top/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/top/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/top/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    w={'full'}\r\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    LOGS\r\n                                                </Button>\r\n                                            }\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\r\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\r\n                                                    />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>}\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0} w={'full'}\r\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome name=\"automobile\" size={15}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n                                                                <FontAwesome\r\n                                                                    name=\"plus\"\r\n                                                                    size={10}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >UPDATE / ADD NEW VEHICLE</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome\r\n                                                                    name=\"automobile\"\r\n                                                                    size={15}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n\r\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                                >VEHICLE LIST</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                            />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\r\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\r\n\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>}\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\");\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <>\r\n\r\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n          {/* Header */}\r\n          <Box\r\n            px=\"3\"\r\n            bgColor='#0642f4'\r\n            height={54}\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex={999}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            borderBottomWidth={0}\r\n            borderBottomColor={'cyan.500'}\r\n          >\r\n\r\n\r\n            <SideDrawer\r\n              selectedScreen={selectedScreen} />\r\n\r\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n            {screenWidth <= 960 && <MobileViewDrawer\r\n              selectedScreen={selectedScreen} />}\r\n\r\n            <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n            <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n          </Box>\r\n\r\n          {/* Content */}\r\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n            {/* Main Content */}\r\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n            {/* Main Content Content */}\r\n\r\n\r\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                <View style={{ flex: 1, }}>\r\n                  <VehicleListTable />\r\n\r\n\r\n                </View>\r\n              </ScrollView>\r\n              <SCC_Modals />\r\n              <EditVehicleModal />\r\n              <FobPriceHistory />\r\n              {/* <SuccessModal /> */}\r\n\r\n            </View>\r\n\r\n\r\n            {/* </Box> */}\r\n\r\n            {/* </Box> */}\r\n          </View>\r\n\r\n        </View>\r\n        <LoadingModal />\r\n\r\n      </>\r\n\r\n\r\n\r\n\r\n\r\n    </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedVehicleDataSlice = createSlice({\r\n  name: 'selectedVehicleData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedVehicleData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginAccountTypeSlice = createSlice({\r\n  name: 'loginAccountType',\r\n  initialState: '',\r\n  reducers: {\r\n    setLoginAccountType: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================    \r\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginAccountType: loginAccountTypeSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [104], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","data","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","_ref2","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","Routes","Route","path","element","Navigate","to","replace","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","forEach","document","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","_ref5","searchData","_ref6","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_x4","_ref9","accountDocSnapshot","_x5","validateEmail","test","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","index","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","response","launchImageLibrary","didCancel","assets","newImages","promises","asset","fetch","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","onChange","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","createElement","getContext","src","URL","createObjectURL","onload","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","globalSelectedPDFUrl","globalSelectedFileType","encryptData","secretKey","AES","encrypt","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","View","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","numberOfLines","ellipsizeMode","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","FlatList","borderBottomLeftRadius","FileDisplay","file","onRemove","cover","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","accept","onchange","files","alert","reader","FileReader","target","result","focus","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","event","File","lastModified","Date","now","addMessage","_textInputRef$current3","handleSendMessage","onKeyPress","nativeEvent","key","shiftKey","preventDefault","CancelledView","ChatListItem","_ref20","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref25","fullPath","location","origin","pathname","open","_ref26","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","_ref27","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","subscribeToBankAccounts","_ref34","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","total","round","_fobPriceInput$curren2","_freightInput$current2","_insuranceInput$curre2","freightCalculation","m3","fobPriceDollars","currency","usdToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","ConfirmPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","fullPaymentMessage","_ref41","messageType","overBalanceMessage","_ref42","paymentMessage","_ref43","transactionDate","confirmPayment","amountNeeded","totalValue","docRefCustomer","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmount","numericInputAmount","formattedInputAmount","ms","overBalance","increment","payments","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","ampm","getMinutes","payment","displayedAmount","fontWefight","Progress","shadow","max","_filledTrack","underline","selectable","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","stringify","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","minimumFractionDigits","maximumFractionDigits","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","PreviewInvoice","previewInvoiceVisible","isPreviewHovered","setIsPreviewHovered","invoiceRef","capturedImageUri","setCapturedImageUri","vehicleImageUri","setVehicleImageUri","setFeaturesTrueCount","rerenderState","setRerenderState","countTrueValuesInCarData","count","field","captureImageAsync","captureRef","quality","trueCount","convertImageToBase64","_ref50","ok","onloadend","base64String","captureImage","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","issuingDateString","dueDateString","issuingDateObject","dueDateObject","setPreviewInvoiceVisible","write","QRCode","useGrouping","price","ReopenTransaction","isModalVisible","setIsModalVisible","isYesHovered","setIsYesHovered","isNoHovered","setIsNoHovered","handleModalClose","reopenTransactionMessage","_ref56","handleReopenTransaction","CancelTransaction","sendEmail","_ref58","subject","htmlContent","method","headers","body","JSON","_x14","cancelTransactionMessage","_ref59","handleCancelTransaction","_ref60","formattedTimeEmail","ExtendDueDateButton","setIsConfirmHovered","handleConfirm","_ref61","confirmExtendDueDate","extendDueDateMessage","TransactionModal","transactionModalVisible","TransactionButton","buttonValue","transactionValue","colorHoverIn","colorHoverOut","TransactionList","_ref67","displayedTransactions","isArray","transactions","transaction","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","transactionHistoryVisible","setTransactionHistoryVisible","setDisplayedTransactions","loadingMore","setLoadingMore","_useState213","_useState214","onScroll","_ref69","_ref68","layoutMeasurement","contentOffset","contentSize","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState215","_useState216","paymentHistoryVisible","setPaymentHistoryVisible","_useState217","_useState218","displayedPayments","setDisplayedPayments","_useState219","_useState220","_ref71","_ref70","CustomerProfileModal","_useState221","_useState222","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState223","_useState224","reRenderKey","setReRenderKey","freightPriceYen","paddingRight","reservedTo","FontAwesome5","ReadByListModal","_ref72","userEmail","handleReadByListModalClose","readByListModalVisible","ImagePreviewModal","_ref73","isVisible","HoverablePressable","_ref74","_useState225","printComponent","_useState226","isHoveredDownload","setIsHoveredDownload","_useState227","_useState228","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState229","_useState230","iframeKey","setIframeKey","_useState231","_useState232","setLoading","handleIframeLoad","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","printWindow","print","onLoad","ChatMessageBox","_ref76","loadMoreMessagesLoading","noMoreMessagesData","_useState233","_useState234","isEyeHovered","setIsEyeHovered","flatListRef","_useState235","_useState236","hoveredImageIndex","setHoveredImageIndex","_useState237","_useState238","selectedImageIndex","setSelectedImageIndex","_useState239","_useState240","isPreviewVisible","setIsPreviewVisible","handleImageMessageMouseLeave","_useState241","_useState242","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref77","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref78","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","flexWrap","getFileIcon","iconSize","lowerFileName","endsWith","_ref79","isLastMessage","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState243","_useState244","chatMessageBoxLoading","chatListSearchText","_useState245","_useState246","_useState247","_useState248","activeButton","setActiveButton","_useState249","_useState250","setActiveButtonValue","_useState251","_useState252","activeFilterButton","setActiveFilterButton","_useState253","_useState254","setUnreadButtonValue","_useState255","_useState256","readButtonValue","setReadButtonValue","_useState257","_useState258","_useState259","_useState260","unreadCount","setUnreadCount","fetchIpAndCountry","_ref80","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref81","_x15","_ref82","_useState261","_useState262","borderTopLeftRadius","borderTopRightRadius","horizontal","minWidth","prevState","borderBottomRightRadius","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","_ref35","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","MobileViewDrawer","keyboardShouldPersistTaps","NamePopover","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","easing","Easing","inOut","ease","onPressOut","transform","translateX","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","setFobPrice","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","carImageUrlSlice","createSlice","initialState","reducers","action","payload","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}