{"version":3,"file":"static/js/main.a7e15ade.js","mappings":"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","sources":["components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdmin.js","components/Admin.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        navigation.navigate('Checkpoint');\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  const handleReset = () => {\r\n    navigation.navigate('ResetPassword');\r\n  };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function DevAdmin() {\r\n\r\n  const Drawer = createDrawerNavigator();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"LOGS\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    <Drawer.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        drawerStyle: { backgroundColor: '#7B9CFF' },\r\n        drawerContentOptions: {\r\n          activeTintColor: '#7B9CFF',\r\n          inactiveTintColor: '#7B9CFF',\r\n          activeLabelStyle: { color: '#7B9CFF' },\r\n          inactiveLabelStyle: { color: '#7B9CFF' },\r\n        },\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"CHAT MESSAGES\"\r\n        children={ChatMessagesComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"FREIGHT\"\r\n        children={FreightComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"ADD NEW VEHICLE\"\r\n        children={AddVehicleComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"LOGS\"\r\n        children={LogsComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"VEHICLE LIST\"\r\n        children={VehicleListComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"ACCOUNT LIST\"\r\n        children={AccountListComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"ADD C-HUB ACCOUNT\"\r\n        children={AddAccountComponent}\r\n        options={{ unmountOnBlur: true }}\r\n      />\r\n    </Drawer.Navigator>\r\n\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { Input, Icon, Stack, Pressable, Center, NativeBaseProvider, Button, Box, HStack, Image } from \"native-base\";\r\nimport { signOut  } from 'firebase/auth';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getDoc, auth } from '../firebasecontrol'\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from '@react-navigation/core'\r\n\r\n\r\n\r\nexport default function SuperAdmin() {\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const navigation = useNavigation()\r\n  \r\n  // const logo = require('./assets/RMJ C-Hub 制御ハブ.png');\r\n  const handleSignOut = () => {\r\n    signOut(auth).then(() => {\r\n        navigation.navigate('Login');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <Center flex={1}>\r\n\r\n          <Center px=\"3\"  >\r\n\r\n\r\n            <Button onPress={handleSignOut}>Signout</Button>\r\n\r\n            {/* <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1,}} />\r\n            </Box> */}\r\n            \r\n\r\n          </Center>\r\n\r\n        </Center>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      \r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n          \r\n          if(data.active === true){\r\n            setType(fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n              navigation.replace(fieldType);\r\n            // }, delay);\r\n          }\r\n          else{\r\n            signOut(auth)\r\n            .then(() => {\r\n              navigation.navigate('Login');\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error signing out:', error);\r\n            });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n    \r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport {\n  Input,\n  Icon,\n  Stack,\n  Pressable,\n  Center,\n  NativeBaseProvider,\n  Button,\n  Box,\n  HStack,\n  Image,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Spinner,\n  Heading,\n  Collapse,\n  useToast,\n  PresenceTransition\n} from \"native-base\";\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginPage from './components/LoginPage';\nimport DevAdmin from './components/DevAdmin';\nimport Admin from './components/Admin';\nimport Checkpoint from './components/Checkpoint';\nimport ResetPassword from './components/ResetPassword';\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\nimport './style.css';\nimport { Provider } from 'react-redux';\nimport store from './components/DevAdminComponents/redux/store';\nconst StackNavigator = createNativeStackNavigator();\n\nconst { width, height } = Dimensions.get('window');\nconst windowWidth = Dimensions.get('window').width;\n\n\n\nexport default function App() {\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState(null);\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n  useEffect(() => {\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\n\n    return subscriber;\n  }, [])\n\n  if (initializing) {\n    return null; // or a loading screen if needed\n  }\n\n  return (\n\n    <Provider store={store}>\n        <NativeBaseProvider>\n          {/* <LoginPage/> */}\n          <NavigationContainer>\n            <StackNavigator.Navigator options={{ headerShown: false }}>\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} />\n              <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin}/>\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\n              <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\n              {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\n          (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\n          (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\n          <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\n        )} */}\n            </StackNavigator.Navigator>\n          </NavigationContainer>\n        </NativeBaseProvider>\n    </Provider>\n\n  );\n}\n\n\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        // setIsSelectedLogs(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"LOGS\");\r\n    }, []);\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        // setIsSelectedAddAccount(true);\r\n\r\n        // setIsSelectedLogs(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n\r\n        navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n        // setIsSelectedAccountList(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelected3(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ACCOUNT LIST\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n        // setIsSelected3(true);\r\n\r\n        // setIsSelectedAddAccount(false);\r\n        // setIsSelectedAccountList(false);\r\n        // setIsSelected4(false);\r\n        // setIsSelectedLogs(false);\r\n        navigation.navigate(\"ADD NEW VEHICLE\");\r\n    }, []);\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigation.navigate(\"VEHICLE LIST\");\r\n    }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigation.navigate('AccountList')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n  const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n  const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n  const [accountType3, setAccountType3] = useState(false);\r\n  const [accountType4, setAccountType4] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n  const handleToggleAccountTypeSpAd = () => {\r\n    const text = 'superadmin';\r\n    setAccountTypeSpAd(true);\r\n\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Super Admin');\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      isAccountType() === false\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAd = () => {\r\n    const text = 'admin';\r\n    setAccountTypeAd(true);\r\n    setAccountTypeSpAd(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeDevAd = () => {\r\n    const text = 'devadmin';\r\n    setAccountTypeDevAd(true);\r\n\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType3(false);\r\n    setAccountType4(false);\r\n    setTypeOfAccountDisplay('Developer Admin');\r\n\r\n    setTypeOfAccount(text);\r\n\r\n  };\r\n\r\n  const handleToggleAccountType3 = () => {\r\n    const text = 'staff';\r\n    setAccountType3(true);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n    setAccountType4(false);\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Staff');\r\n  };\r\n\r\n  const handleToggleAccountType4 = () => {\r\n    const text = 'booking';\r\n    setAccountType4(true);\r\n    setAccountType3(false);\r\n    setAccountTypeDevAd(false);\r\n    setAccountTypeAd(false);\r\n    setAccountTypeSpAd(false);\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  const isAccountType = () => {\r\n    return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={isAccountType() ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <HStack space={1} justifyContent=\"center\" >\r\n                            <Button _hover={{ bgColor: accountType4 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType4} bgColor={accountType4 ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n                            <Button _hover={{ bgColor: accountType3 ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountType3} bgColor={accountType3 ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeAd} bgColor={accountTypeAd ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n                            <Button _hover={{ bgColor: accountTypeSpAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeSpAd} bgColor={accountTypeSpAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n\r\n                          </HStack>\r\n                          <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                            <Button _hover={{ bgColor: accountTypeDevAd ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                              base: 90,\r\n                              md: 90,\r\n                              sm: 90,\r\n                            }} onPress={handleToggleAccountTypeDevAd} bgColor={accountTypeDevAd ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                          </HStack>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  const navigation = useNavigation();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n  }, []);\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\" ||\r\n      stockStatusVariable.text == \"\";\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputWeight.current?.value == 0 ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (stockStatusVariable.text == \"\") {\r\n        selectStockStatusBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockStatusError('danger.400');\r\n      }\r\n\r\n      if (inputWeight.current?.value == \"\" || inputWeight.current?.value == 0) {\r\n        inputWeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setWeightError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n\r\n\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />}\r\n\r\n\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen}\r\n          />\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider >\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme  } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n  } from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{flex: 1, margin: 5, borderRadius: 5,}}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.navigate(\"Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        navigation.navigate('Login');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    navigation.navigate('Login');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n\r\n            } else {\r\n                // console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            navigation.navigate('Login');\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#7b9cff'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={2}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />}\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","\r\nimport { React, useCallback } from 'react';\r\nimport { Button } from 'native-base';\r\nimport { View, Text, ScrollView, TouchableOpacity, TouchableWithoutFeedback, Dimensions } from 'react-native';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Entypo from 'react-native-vector-icons/Entypo';\r\nimport Fontisto from 'react-native-vector-icons/Fontisto';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\nconst handleToggleLogs = (navigation) => {\r\n\r\n    navigation.navigate(\"LOGS\");\r\n};\r\n\r\nconst handleToggleAddAccount = (navigation) => {\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n};\r\n\r\nconst handleToggleAccountList = (navigation) => {\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n};\r\n\r\nconst handleToggleAddVehicle = (navigation) => {\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n};\r\n\r\n\r\nconst handleVehicleList = (navigation) => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n};\r\n\r\nconst handleFreight = (navigation) => {\r\n    navigation.navigate(\"FREIGHT\");\r\n};\r\n\r\n\r\nconst handleChatMessages = (navigation) => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n};\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n    const navigation = useNavigation();\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={{ width: 255, display: screenWidth <= 960 ? 'none' : 'flex', backgroundColor: '#7b9cff', borderRightWidth: 2, borderColor: 'cyan' }}>\r\n            {/* Sidebar Content */}\r\n            <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', height: '100%' }}>\r\n                <ScrollView style={{ width: 245 }}>\r\n                    <View style={{ height: 20 }}>\r\n                        {/* Sidebar Content Items */}\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'LOGS' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0}\r\n                            w={'full'}\r\n                            onPress={() => handleToggleLogs(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />}\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            LOGS\r\n                        </Button>\r\n\r\n                        {/* ACCOUNT MANAGEMENT */}\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0} w={'full'}\r\n                            onPress={() => handleToggleAddAccount(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={<MaterialIcons name=\"person-add\" size={20} color=\"white\" />}\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >ADD C-HUB ACCOUNT</Button>\r\n\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0}\r\n                            onPress={() => handleToggleAccountList(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={\r\n                                <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n\r\n                            }\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >ACCOUNT LIST</Button>\r\n                        {/* VEHICLE INFORMATION INPUT */}\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0} w={'full'}\r\n                            onPress={() => handleToggleAddVehicle(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={\r\n                                <>\r\n                                    <View>\r\n                                        <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                                        <FontAwesome\r\n                                            name=\"plus\"\r\n                                            size={10}\r\n                                            color=\"white\"\r\n                                            style={{\r\n                                                position: 'absolute', // Position it absolutely...\r\n                                                top: -3, // ...at the top...\r\n                                                left: -5 // ...and left.\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >UPDATE / ADD NEW VEHICLE</Button>\r\n\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0}\r\n                            onPress={() => handleVehicleList(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={\r\n                                <>\r\n                                    <View>\r\n                                        <FontAwesome\r\n                                            name=\"automobile\"\r\n                                            size={15}\r\n                                            color=\"white\" />\r\n\r\n                                        <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                                            style={{\r\n                                                position: 'absolute', // Position it absolutely...\r\n                                                top: -3, // ...at the top...\r\n                                                left: -5 // ...and left.\r\n                                            }}\r\n                                        />\r\n\r\n                                    </View>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                        >VEHICLE LIST</Button>\r\n\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0}\r\n                            onPress={() => handleFreight(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={\r\n                                <>\r\n                                    <View>\r\n                                        <MaterialIcons\r\n                                            name=\"public\"\r\n                                            size={20}\r\n                                            color=\"white\" />\r\n\r\n                                        <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                                            style={{\r\n                                                position: 'absolute', // Position it absolutely...\r\n                                                top: -3, // ...at the top...\r\n                                                left: -5 // ...and left.\r\n                                            }}\r\n                                        />\r\n\r\n                                    </View>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                        >FREIGHT</Button>\r\n\r\n                        <Button\r\n                            borderRadius={0}\r\n                            borderTopWidth={1}\r\n                            borderBottomWidth={1}\r\n                            borderColor={'white'}\r\n                            _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#5a7bc9', }}\r\n                            marginTop={0}\r\n                            onPress={() => handleChatMessages(navigation)}\r\n                            colorScheme={undefined}\r\n                            bgColor={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff'}\r\n                            leftIcon={\r\n                                <>\r\n                                    <View>\r\n                                        <Entypo\r\n                                            name=\"chat\"\r\n                                            size={20}\r\n                                            color=\"white\" />\r\n\r\n                                    </View>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                        >CHAT MESSAGES</Button>\r\n                    </View>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                </ScrollView>\r\n                <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                    {/* Footer Content */}\r\n                    {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                </View>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        navigation.navigate(\"Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            navigation.navigate('Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          navigation.navigate('Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n\r\n      } else {\r\n        // console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      navigation.navigate('Login');\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#7B9CFF'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    // <NativeBaseProvider>\r\n    <>\r\n\r\n      <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#7b9cff'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={2}\r\n          borderBottomColor={'cyan.500'}\r\n        >\r\n\r\n          <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n\r\n          {screenWidth <= 960 && <MobileViewDrawer\r\n            selectedScreen={selectedScreen} />}\r\n\r\n\r\n          <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image} />\r\n          </Box>\r\n          <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n          {/* Sidebar */}\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          {/* Main Content */}\r\n          {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n          {/* Main Content Content */}\r\n\r\n\r\n          {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n          <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n            <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n              <View style={{ flex: 1, }}>\r\n                <VehicleListTable />\r\n\r\n\r\n              </View>\r\n            </ScrollView>\r\n            <SCC_Modals />\r\n            <EditVehicleModal />\r\n            <FobPriceHistory />\r\n            {/* <SuccessModal /> */}\r\n\r\n          </View>\r\n\r\n\r\n          {/* </Box> */}\r\n\r\n          {/* </Box> */}\r\n        </View>\r\n\r\n      </View>\r\n      <LoadingModal />\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n    // </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================    \r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"73\":\"776162c7\",\"160\":\"cc4b1f1c\",\"162\":\"da88e0a0\",\"245\":\"704124dc\",\"379\":\"c10ffe6d\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [238], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigation","useNavigation","useEffect","auth","onAuthStateChanged","user","replace","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","navigate","catch","errorCode","code","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","createNativeStackNavigator","getFirestore","DevAdmin","Drawer","createDrawerNavigator","Navigator","screenOptions","headerShown","drawerStyle","drawerContentOptions","activeTintColor","inactiveTintColor","activeLabelStyle","inactiveLabelStyle","Screen","LazyScreen","options","unmountOnBlur","SuperAdmin","signOut","firestore","getEmailOfCurrentUser","currentUser","Checkpoint","dispatch","useDispatch","useSelector","state","loginEmail","loginName","setType","handleDocumentChange","snapshot","exists","data","active","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginName","Math","floor","random","ResetPassword","handleReset","sendPasswordResetEmail","ResetPasswordSuccess","StackNavigator","App","initializing","setInitializing","setUser","Provider","store","NavigationContainer","component","Admin","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","forEach","document","push","id","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","_ref2","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","_ref5","searchData","_ref6","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","_ref7","map","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","_ref8","collectionPath","documentRef","documentSnapshot","getDoc","pass","_x4","_ref9","accountDocSnapshot","_x5","validateEmail","test","showDrawerIcon","useBreakpointValue","handleEdit","find","item","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","_ref10","logsCollectionRef","addDoc","_x6","handleEnable","_ref11","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","_x7","deleteDocument","_ref12","customId","deleteDoc","_x8","_x9","handleDelete","_ref13","deleteUser","_x10","handleDisable","_ref14","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","marginTop","FastImage","priority","high","stretch","MobileViewDrawer","marginLeft","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","SideDrawer","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","accountTypeSpAd","accountTypeDevAd","accountTypeAd","accountType3","accountType4","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","isAccountType","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","Object","keys","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","flexDir","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","title","dataName","databaseInit","projectExtensionFirestore","index","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","path","response","launchImageLibrary","didCancel","assets","newImages","promises","asset","fetch","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","renderItem","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","keyExtractor","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","mileage","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","toString","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","memo","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","onChange","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref56","imagename","img","createElement","getContext","src","URL","createObjectURL","onload","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","resolve","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputWeight$current3","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputWeight$current4","_inputWeight$current5","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref61","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current6","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref65","_useState211","_useState212","projectControlAuth","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref62","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref63","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","NamePopover","View","LogsTable","setSearchText","searchInputRef","logsData","setLogsData","handleNextPage","handlePreviousPage","TextInput","_searchInputRef$curre","returnKeyType","autoCapitalize","selectable","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","usdToJpy","JPY","JpyToUsd","yenToDollar","dollarToYen","usdToEur","EUR","eurToUsd","usdToGbp","GBP","gbpToUsd","usdToAud","AUD","audToUsd","usdToCad","CAD","cadToUsd","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","Date","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","jpyToEur","eurToJpy","jpyToGbp","gbpToJpy","jpyToAud","audToJpy","jpyToCad","cadToJpy","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","setIsOpen","handleOpen","handleClose","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","Animated","Value","timing","toValue","easing","Easing","inOut","ease","useNativeDriver","start","TouchableHighlight","onPressOut","underlayColor","transform","translateX","interpolate","inputRange","outputRange","borderRightWidth","marginVertical","marginHorizontal","paddingLeft","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","toast","useToast","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","render","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","_ref20","_ref25","_ref26","SCC_Modals","_ref27","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","_ref33","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","_ref34","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","textDecorationLine","FobPriceInput","_ref35","setFobPrice","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","field","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","_ref42","_ref43","sanitizedSearchQuery","ids","counts","count","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","_ref50","_x13","setViewImagesModalVisible","_x14","setViewImagesData","_x16","_x15","handleSearchEnter","vehicleProductsRef","_ref55","_x17","underline","VehicleList","_projectControlAuth$c","_x18","_ref57","keyboardShouldPersistTaps","UsePagination","selectedCustomerDataSlice","createSlice","initialState","reducers","setSelectedCustomerData","action","payload","previewInvoiceVisibleSlice","setPreviewInvoiceVisible","transactionModalVisibleSlice","setTransactionModalVisible","invoiceDataSlice","setInvoiceData","deleteMessageTemplateVisibleSlice","setDeleteMessageTemplateVisible","loadMoreMessagesLoadingSlice","setLoadMoreMessagesLoading","noMoreMessagesDataSlice","setNoMoreMessagesData","readByListModalVisibleSlice","setReadByListModalVisible","selectedChatDataSlice","setSelectedChatData","chatMessageBoxLoadingSlice","setChatMessageBoxLoading","chatMessagesDataSlice","setChatMessagesData","chatListSearchTextSlice","setChatListSearchText","activeChatIdSlice","setActiveChatId","loadMoreLoadingSlice","setLoadMoreLoading","noMoreDataSlice","setNoMoreData","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","setChatListData","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","setCountryPortsData","addPortsForCountriesModalVisibleSlice","setAddPortsForCountriesModalVisible","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","setDeletePortModalVisible","deleteCountryModalVisibleSlice","setDeleteCountryModalVisible","addPortModalVisibleSlice","setAddPortModalVisible","addCountryModalVisibleSlice","setAddCountryModalVisible","selectedButtonSlice","setSelectedButton","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","selectedCustomerData","previewInvoiceVisible","invoiceData","transactionModalVisible","deleteMessageTemplateVisible","loadMoreMessagesLoading","noMoreMessagesData","readByListModalVisible","selectedChatData","chatMessageBoxLoading","chatMessagesData","chatListSearchText","activeChatId","loadMoreLoading","noMoreData","chatListLastVisible","chatListData","chatListImageUrl","deletePortModalVisible","deleteCountryModalVisible","countryPortsData","addPortsForCountriesModalVisible","inspectionIsRequiredData","methodData","freightPortsData","inspectionNameData","addCountryModalVisible","addPortModalVisible","freightCountriesData","selectedButton","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","queryRef","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","chatsData","_x19","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","key","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","clearTimeout","doneFns","parentNode","removeChild","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}