{"version":3,"file":"static/js/main.7662acfd.js","mappings":"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","sources":["assets/chat_step|sync|/^/chat_step_.*_off/.png$","assets/chat_step|sync|/^/chat_step_.*_on/.png$","components/LoginPage.js","components/DevAdminComponents/Lazy Screen/LazyScreen.js","components/DevAdminComponents/ParseCSV.js","components/Top.js","components/Checkpoint.js","components/ResetPassword.js","components/ResetPasswordSuccess.js","App.js","components/DevAdminComponents/AccountList.js","components/DevAdminComponents/AddAccount.js","components/DevAdminComponents/AddVehicle.js","components/DevAdminComponents/ChatMessages.js","components/DevAdminComponents/Freight.js","components/DevAdminComponents/Header/StickyHeader.js","components/DevAdminComponents/Logs.js","components/DevAdminComponents/QrCodeScanner/QrCodeScanner.js","components/DevAdminComponents/SideDrawer/MobileViewDrawer.js","components/DevAdminComponents/SideDrawer/SideDrawer.js","components/DevAdminComponents/VehicleList.js","components/DevAdminComponents/VehicleListComponent/UsePagination.js","components/DevAdminComponents/redux/store.js","crossFirebase.js","firebasecontrol.js","firebasecontrolCreateUser.js","webpack://web/./components/style.css?30b9","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./chat_step_1_off.png\": 29413,\n\t\"./chat_step_2_off.png\": 35290,\n\t\"./chat_step_3_off.png\": 38715,\n\t\"./chat_step_4_off.png\": 65256,\n\t\"./chat_step_5_off.png\": 58038,\n\t\"./chat_step_6_off.png\": 49232,\n\t\"./chat_step_7_off.png\": 88618\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66516;","var map = {\n\t\"./chat_step_1_on.png\": 40027,\n\t\"./chat_step_2_on.png\": 22558,\n\t\"./chat_step_3_on.png\": 80851,\n\t\"./chat_step_4_on.png\": 14740,\n\t\"./chat_step_5_on.png\": 80904,\n\t\"./chat_step_6_on.png\": 81151,\n\t\"./chat_step_7_on.png\": 30443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82049;","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition,\r\n  Item,\r\n  Label\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth, updateDoc } from '../firebasecontrol';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // const navigation = useNavigation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // navigation.replace(\"Checkpoint\")\r\n        navigate('/Checkpoint');\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n      <PresenceTransition visible={errorShow} initial={{\r\n        opacity: 0,\r\n        scale: 0,\r\n      }} animate={{\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n          duration: 200\r\n        }\r\n      }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n        <Alert maxW=\"400\" status=\"error\">\r\n          <VStack space={1} flexShrink={1} w=\"100%\">\r\n            <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                <Alert.Icon />\r\n                <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                  {errorTitle}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n            <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n              {errorMessage}\r\n            </Box>\r\n          </VStack>\r\n        </Alert>\r\n        {/* </Collapse> */}\r\n      </PresenceTransition>\r\n\r\n    </Box>;\r\n\r\n  };\r\n\r\n  const updateFieldData = async (documentId, fieldName, newValue) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    try {\r\n      await updateDoc(userRef, {\r\n        [fieldName]: newValue\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating field data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignIn = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setTimeout(() => {\r\n      // Reset loading and disabled state\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n    }, 2000); // Replace with your actual async operation\r\n    setErrorShow(false);\r\n    signInWithEmailAndPassword(auth, email.trim(), password)\r\n      .then((re) => {\r\n        const documentId = email;\r\n        const fieldName = 'pass';\r\n        const newValue = password;\r\n\r\n        updateFieldData(documentId, fieldName, newValue);\r\n        // navigation.navigate('Checkpoint');\r\n        navigate('/Checkpoint');\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n        setErrorShow(true);\r\n        if (errorCode === 'auth/user-not-found') {\r\n          console.log('Please use a valid email or check for misspellings.☹️');\r\n          setErrorTitle('Email do not exist!');\r\n          setErrorMessage('Please use an existing email or check for misspellings.☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/wrong-password') {\r\n          console.log('Password is incorrect, please try again. ☹️');\r\n          setErrorTitle('Incorrect password');\r\n          setErrorMessage('Password is incorrect, please try again. ☹️');\r\n          <ErrorLoginShow />\r\n        } else if (errorCode === 'auth/missing-password') {\r\n          console.log('Please enter a password. ☹️');\r\n          setErrorTitle('Password is empty!');\r\n          setErrorMessage('Please enter a password. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/invalid-email') {\r\n          console.log('Email is invalid. ☹️');\r\n          setErrorTitle('Invalid email!');\r\n          setErrorMessage('Please enter a valid email. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n        else if (errorCode === 'auth/user-disabled') {\r\n          console.log('User is disabled. ☹️');\r\n          setErrorTitle('Account is disabled!');\r\n          setErrorMessage('Please contact the administrator. ☹️');\r\n          <ErrorLoginShow />\r\n        }\r\n      })\r\n  };\r\n\r\n  const handleChange = text => setEmail(text);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (email.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [email])\r\n\r\n  const handleEmailOnChangeText = (text) => {\r\n    setEmail(text)\r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handlePasswordOnChangeText = text => setPassword(text);\r\n\r\n  useEffect(() => {\r\n    if (password.length > 1) {\r\n      setErrorShow(false)\r\n    }\r\n  }, [password])\r\n\r\n\r\n  // const handleReset = () => {\r\n  //   navigation.navigate('ResetPassword');\r\n  // };\r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n        <ErrorLoginShow />\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={email} onSubmitEditing={handleSignIn} onChangeText={handleChange} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n              <Input w={{\r\n                base: \"90%\",\r\n                md: \"90%\",\r\n                sm: \"90%\",\r\n              }} value={password} onSubmitEditing={handleSignIn} onChangeText={handlePasswordOnChangeText} fontSize='16' type={show ? \"text\" : \"password\"} InputRightElement={<Pressable onPress={() => setShow(!show)}>\r\n                <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n              </Pressable>} placeholder=\"Password\" placeholderTextColor='white' color='white' />\r\n              <HStack space={1} justifyContent=\"center\">\r\n                {/* <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleReset}><Text style={{ color: 'white', }}>Reset Password</Text></Button> */}\r\n                <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                  base: 130,\r\n                  md: 130,\r\n                  sm: 130,\r\n                }} onPress={handleSignIn} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Login</Text>}</Button>\r\n\r\n              </HStack>\r\n\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport { Box, Center, Stack, HStack, Spinner, Image } from 'native-base';\r\nconst logo = require('../../../assets/RMJ C-Hub 制御ハブ.png');\r\n// Create a loading component to display while the screen is loading\r\nconst Loading = () => (\r\n\r\n\r\n  <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n    <Center flex={1}>\r\n      <Center px=\"3\">\r\n        <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n          <Image source={{\r\n            uri: logo\r\n          }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n        </Box>\r\n        {/* <LoginForm /> */}\r\n\r\n        <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n          <HStack space={1} justifyContent=\"center\">\r\n            <Spinner color='white' size='lg' />\r\n          </HStack>\r\n        </Stack>\r\n\r\n      </Center>\r\n\r\n\r\n    </Center>\r\n\r\n\r\n  </Box>\r\n);\r\n\r\nconst LazyScreen = (props) => {\r\n  // Dynamically import the component using React.lazy\r\n  const LazyComponent = lazy(props.importFunc);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default LazyScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, View, Text, FlatList } from 'react-native';\r\nimport Papa from 'papaparse';\r\nimport Encoding from 'encoding-japanese';\r\n\r\n\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"仕入No.\": 2024030011,\r\n        \"排気量\": 1400,\r\n    },\r\n    // {\r\n    //     \"仕入No.\": 2024030011,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"ベルタ\",\r\n    //     \"グレード\": \"1.3G 1.3G\",\r\n    //     \"色\": \"Silver\",\r\n    //     \"型式\": \"DBA-SCP92\",\r\n    //     \"年式\": \"H18/09\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1300,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"SCP92-1022093\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Power Steering・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Alloy Wheels・Power Door Locks・Power Mirrors・No accidents・Non-smoker\",\r\n    //     \"車輌用途\": null,\r\n    //     \"車検\": null,\r\n    //     \"走行距離\": 57817,\r\n    //     \"長さ\": 4300,\r\n    //     \"幅\": 1690,\r\n    //     \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"TAA兵庫\",\r\n    //     \"仕入担当\": \"北村祐亮\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 235400,\r\n    //     \"仕入価格(税抜)\": 214000,\r\n    //     \"経費計\": 15950,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 228500,\r\n    //     \"消費税額\": 22850, \r\n    //     \"仕入合計金額\": 251350,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10280,\r\n    //     \"展示場所\": \"輸出(神戸）\",\r\n    //     \"販売担当\": \"y.kitamura\",\r\n    // },\r\n    // {\r\n    //     \"仕入No.\": 2024030019,\r\n    //     \"状況\": \"在庫\",\r\n    //     \"車名\": \"カローラアクシオ\",\r\n    //     \"グレード\": \"G 1.5 G\",\r\n    //     \"色\": \"Gold\",\r\n    //     \"型式\": \"DBA-NZE141\",\r\n    //     \"年式\": \"H23/07\",\r\n    //     \"ボディ形状\": \"ｾﾀﾞﾝ\",\r\n    //     \"排気量\": 1500,\r\n    //     \"ミッション\": null,\r\n    //     \"エンジン区分\": \"ガソリン\",\r\n    //     \"車台番号\": \"NZE141-3003061\",\r\n    //     \"装備\": \"Anti-Lock Brakes・Driver Airbag・Passenger Airbag・A/C:front・Navigation System・Power Steering・Remote Keyless Entry・Power Windows・Rear Window Defroster・AM/FM Radio・AM/FM Stereo・CD Player・Premium Sound・Power Door Locks・Power Mirrors・No accidents・One owner・Non-smoker\", \"車輌用途\": null, \"車検\": null, \"走行距離\": 9851, \"長さ\": 4410, \"幅\": 1695, \"高さ \": 1460,\r\n    //     \"仕入日\": \"04/03/2024\",\r\n    //     \"仕入区分\": \"ＡＡ\",\r\n    //     \"仕入先\": \"JU東京\",\r\n    //     \"仕入担当\": \"森川\",\r\n    //     \"仕入店舗\": \"書類未入庫\",\r\n    //     \"仕入価格(税込)\": 396000,\r\n    //     \"仕入価格(税抜)\": 360000,\r\n    //     \"経費計\": 19635,\r\n    //     \"加修費計\": 0,\r\n    //     \"輸出検査料\": 0,\r\n    //     \"課税仕入額\": 377850,\r\n    //     \"消費税額\": 37785,\r\n    //     \"仕入合計金額\": 415635,\r\n    //     \"自動車税\": 0,\r\n    //     \"リサイクル料\": 10620,\r\n    //     \"展示場所\": \"輸出（横浜）\",\r\n    //     \"販売担当\": \"y.kitamura\"\r\n    // }\r\n]\r\n\r\n\r\n\r\n\r\nconst ParseCSV = () => {\r\n    const [csvData, setCsvData] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const handleFileChange = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const codes = new Uint8Array(e.target.result);\r\n            // Convert from SHIFT_JIS to UNICODE\r\n            const unicodeString = Encoding.codeToString(Encoding.convert(codes, 'UNICODE', 'SJIS'));\r\n            // Parse CSV using PapaParse\r\n            Papa.parse(unicodeString, {\r\n                header: true,\r\n                dynamicTyping: true,\r\n                complete: async function (results) {\r\n                    console.log('Parsed results:', results);\r\n                    setCsvData(results.data);\r\n\r\n                    // Iterate over each row and add to the server\r\n                    results.data.forEach(async (row) => {\r\n                        try {\r\n                            const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                            const response = await fetch('http://192.168.24.126:7000/addVehicleData', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    'username': 'rmj-marc',\r\n                                    'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    documentId: documentId,\r\n                                    documentData: row,\r\n                                }) // Include documentId in the request body\r\n                            });\r\n                            if (response.ok) {\r\n                                console.log('Data added successfully:', row);\r\n                            } else {\r\n                                console.error('Failed to add data:', response.status);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error adding data:', error);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n    const convertToFirestoreDocument = (row) => {\r\n        // Define the mapping of CSV keys to Firestore keys\r\n        const mapping = {\r\n            '仕入No.': 'documentId',\r\n            '状況': 'status',\r\n            '車名': 'carName',\r\n            'グレード': 'grade',\r\n            '色': 'color',\r\n            '型式': 'model',\r\n            '年式': 'year',\r\n            'ボディ形状': 'bodyShape',\r\n            '排気量': 'displacement',\r\n            'ミッション': 'transmission',\r\n            'エンジン区分': 'engineType',\r\n            '車台番号': 'chassisNumber',\r\n            '装備': 'equipment',\r\n            '車輌用途': 'vehiclePurpose',\r\n            '車検': 'inspection',\r\n            '走行距離': 'mileage',\r\n            '長さ': 'length',\r\n            '幅': 'width',\r\n            '高さ ': 'height',\r\n            '仕入日': 'purchaseDate',\r\n            '仕入区分': 'purchaseCategory',\r\n            '仕入先': 'purchaseSource',\r\n            '仕入担当': 'purchaseContact',\r\n            '仕入店舗': 'purchaseStore',\r\n            '仕入価格(税込)': 'purchasePriceInclusiveTax',\r\n            '仕入価格(税抜)': 'purchasePriceExclusiveTax',\r\n            '経費計': 'expenseTotal',\r\n            '加修費計': 'repairCostTotal',\r\n            '輸出検査料': 'exportInspectionFee',\r\n            '課税仕入額': 'taxablePurchaseAmount',\r\n            '消費税額': 'consumptionTaxAmount',\r\n            '仕入合計金額': 'totalPurchaseAmount',\r\n            '自動車税': 'automobileTax',\r\n            'リサイクル料': 'recycleFee',\r\n            '展示場所': 'exhibitionPlace',\r\n            '販売担当': 'salesContact'\r\n        };\r\n        // Create the Firestore document object\r\n        const firestoreDocument = {};\r\n        for (const [csvKey, firestoreKey] of Object.entries(mapping)) {\r\n            if (row[csvKey]) {\r\n                // Special handling for numeric values\r\n                if (csvKey === '仕入No.') {\r\n                    firestoreDocument[firestoreKey] = parseInt(row[csvKey]);\r\n                } else if (csvKey === '車検') {\r\n                    // Handle 'null' values for Firestore\r\n                    firestoreDocument[firestoreKey] = row[csvKey] === 'null' ? null : row[csvKey];\r\n                } else {\r\n                    firestoreDocument[firestoreKey] = row[csvKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        return firestoreDocument;\r\n    };\r\n\r\n    const handlePressUpdate = async () => {\r\n\r\n        data.forEach(async (row) => {\r\n            try {\r\n                const documentId = row['仕入No.']; // Get the value of 仕入No. field\r\n                const response = await fetch('http://192.168.24.126:7000/updateVehicleData', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'username': 'rmj-marc',\r\n                        'accessKey': 'U2FsdGVkX1+ZE9ufgN17Tr4SbuH1B3ehEDMHs4hn6pY=',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        documentId: documentId,\r\n                        documentData: row,\r\n                    }) // Include documentId in the request body\r\n                });\r\n                if (response.ok) {\r\n                    console.log('Data updated successfully:', row);\r\n                } else {\r\n                    console.error('Failed to update data:', response.status);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating data:', error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    // useEffect(async () => {\r\n    //     try {\r\n    //         await fetch('http://localhost:7000');\r\n    //         // await fetch('http://rmj-api.duckdns.org:7000');\r\n    //         // const jsonData = await response.json();\r\n    //         // setData(jsonData);\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching data: ', error);\r\n    //     }\r\n    // }, []);\r\n\r\n\r\n    const sendData = async () => {\r\n        // const response = await fetch('http://rmj-api.duckdns.org:7000', {\r\n        const response = await fetch('http://localhost:7000/', {\r\n            method: 'POST',\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                // \"tokenkey\": \"0iXRkSCDfNwO\",\r\n                action_cd: \"update\",\r\n                stock_id: \"179924\",\r\n                status: \"Sold\",\r\n                reference_no: \"Y2023080140A-21\",\r\n                m_as_maker_id: \"59\",\r\n                m_as_model_id: \"1343\",\r\n                grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\r\n                model_code: \"GH-UF16\",\r\n                frame_number: \"WBAUF12060PZ31920\",\r\n                model_number: \"15016\",\r\n                devision_number: \"0001\",\r\n                registration_year: \"2006\",\r\n                registration_month: \"08\",\r\n                manufacture_year: \"\",\r\n                manufacture_month: \"\",\r\n                m_as_bodytype_id: \"5\",\r\n                m_bodystyle_sub_id: \"\",\r\n                length: \"4240\",\r\n                width: \"1750\",\r\n                height: \"1430\",\r\n                displacement: \"1600\",\r\n                mileage_odometer_cd: \"0\",\r\n                mileage: \"73255\",\r\n                m_as_fueltype_id: \"1\",\r\n                m_as_transmission_id: \"1\",\r\n                m_as_steering_id: \"2\",\r\n                m_as_drivetype_id: \"2\",\r\n                number_of_passengers: \"5\",\r\n                door_cnt: \"5\",\r\n                exterior_color_cd: \"22\",\r\n                interior_color_cd: \"\",\r\n                option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\r\n                condition_cd: \"0\",\r\n                accident_flg: \"0\",\r\n                sales_person_charge_id: \"42\",\r\n                storage_yard_cd: \"4\",\r\n                site_sales_pr_text: \"\",\r\n                fob_ask_flg: \"0\",\r\n                fob_regular_price: \"120000\",\r\n                fob_price: \"120000\",\r\n                display_site_cds: \"[RMJ,RMZ]\",\r\n                tcv_flg: \"1\",\r\n                m_tcv_maker_id: \"23\",\r\n                m_tcv_model_id: \"5355\",\r\n                memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\r\n                stock_no: \"2023080140\",\r\n                stock_price: \"60000\",\r\n                car_condition_file: \"179924-vehicle_state.jpg\"\r\n            })\r\n        });\r\n\r\n        if (response.ok) {\r\n            let responseData;\r\n            responseData = await response.json();\r\n            console.log('Success:', responseData);\r\n\r\n        } else {\r\n            console.log('HTTP-Error:', response.status);\r\n            try {\r\n                const errorResponse = await response.text();\r\n                console.log('Error response:', errorResponse);\r\n            } catch (error) {\r\n                console.log('Error reading error response:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const YOUR_SERVER_ENDPOINT = 'http://rmj-api.duckdns.org:7000';\r\n\r\n    const callApiR02 = async (json_data, msg, exec_time) => {\r\n        try {\r\n            const data_post = JSON.parse(json_data); // Assuming json_data is a valid JSON string\r\n\r\n            const response = await fetch(YOUR_SERVER_ENDPOINT, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                data: json_data, // sending raw JSON string\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json(); // Assuming the server responds with JSON\r\n\r\n            // Check if 'ret_text' is undefined before calling replace()\r\n            let ret_text = data.ret_text ? data.ret_text.replace(/\\n/g, '\\n') : 'No return text provided';\r\n            let ret = data.ret === true ? 'Success\\n' : 'Error\\n';\r\n\r\n            return ret + ret_text;\r\n\r\n        } catch (error) {\r\n            console.error('API call failed:', error);\r\n            return 'Error: ' + error.message; // In a real app, you might want to update state with this message\r\n        }\r\n    };\r\n\r\n    const jsonData = JSON.stringify({\r\n        // \"tokenkey\": \"0iXRkSCDfNwO\",\r\n        action_cd: \"update\",\r\n        stock_id: \"179924\",\r\n        status: \"Sold\",\r\n        reference_no: \"Y2023080140A-21\",\r\n        m_as_maker_id: \"59\",\r\n        m_as_model_id: \"1343\",\r\n        grade_name: \"116i 右ﾊﾝﾄﾞﾙ\",\r\n        model_code: \"GH-UF16\",\r\n        frame_number: \"WBAUF12060PZ31920\",\r\n        model_number: \"15016\",\r\n        devision_number: \"0001\",\r\n        registration_year: \"2006\",\r\n        registration_month: \"08\",\r\n        manufacture_year: \"\",\r\n        manufacture_month: \"\",\r\n        m_as_bodytype_id: \"5\",\r\n        m_bodystyle_sub_id: \"\",\r\n        length: \"4240\",\r\n        width: \"1750\",\r\n        height: \"1430\",\r\n        displacement: \"1600\",\r\n        mileage_odometer_cd: \"0\",\r\n        mileage: \"73255\",\r\n        m_as_fueltype_id: \"1\",\r\n        m_as_transmission_id: \"1\",\r\n        m_as_steering_id: \"2\",\r\n        m_as_drivetype_id: \"2\",\r\n        number_of_passengers: \"5\",\r\n        door_cnt: \"5\",\r\n        exterior_color_cd: \"22\",\r\n        interior_color_cd: \"\",\r\n        option_cds: \"[1,2,3,4,6,9,10,11,18,19,20,21,22,23,25,26,30,31,32,41]\",\r\n        condition_cd: \"0\",\r\n        accident_flg: \"0\",\r\n        sales_person_charge_id: \"42\",\r\n        storage_yard_cd: \"4\",\r\n        site_sales_pr_text: \"\",\r\n        fob_ask_flg: \"0\",\r\n        fob_regular_price: \"120000\",\r\n        fob_price: \"120000\",\r\n        display_site_cds: \"[RMJ,RMZ]\",\r\n        tcv_flg: \"1\",\r\n        m_tcv_maker_id: \"23\",\r\n        m_tcv_model_id: \"5355\",\r\n        memo: \"取・ﾅﾋﾞ取・ﾘﾓｺﾝ・ＳＤ　仕⼊れ︓￥60000\",\r\n        stock_no: \"2023080140\",\r\n        stock_price: \"60000\",\r\n        car_condition_file: \"179924-vehicle_state.jpg\"\r\n    })\r\n\r\n    const handleCallApi = async () => {\r\n        const result = await callApiR02(jsonData, '...', '...');\r\n    }\r\n\r\n    const appendDataToCSV = async () => {\r\n        try {\r\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-sales-info', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: 'jackall',\r\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\r\n                    data: { id: '2023090267', stock_system_id: '177521' }, // Adjust based on your CSV structure\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Success', 'Data appended successfully to CSV.');\r\n            } else {\r\n                console.log('Error', 'Failed to append data to CSV.');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log('Error', 'An error occurred.');\r\n        }\r\n    };\r\n\r\n\r\n    const appendClientsDataToCSV = async () => {\r\n        try {\r\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-clients', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: 'jackall',\r\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\r\n                    data: { id: '24000001', client_name: 'Marc Van' }, // Adjust based on your CSV structure\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Success', 'Data appended successfully to CSV.');\r\n            } else {\r\n                console.log('Error', 'Failed to append data to CSV.');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log('Error', 'An error occurred.');\r\n        }\r\n    };\r\n    const handleClearCsv = async () => {\r\n        try {\r\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/reset-csv-sales-info', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: 'jackall',\r\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c='\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Success', 'CSV contents have been cleared.');\r\n            } else {\r\n                console.log('Error', 'Failed to clear CSV contents.');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log('Error', 'An error occurred.');\r\n        }\r\n    };\r\n\r\n    const handleClearClientsCsv = async () => {\r\n        try {\r\n            const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/reset-csv-clients', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: 'jackall',\r\n                    password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c='\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Success', 'CSV contents have been cleared.');\r\n            } else {\r\n                console.log('Error', 'Failed to clear CSV contents.');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.log('Error', 'An error occurred.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileChange}\r\n                style={{ marginBottom: 20 }}\r\n            />\r\n\r\n            <View>\r\n                {csvData.map((row, index) => (\r\n                    <Text key={index}>\r\n                        {JSON.stringify(row)}\r\n                    </Text>\r\n                ))}\r\n            </View>\r\n\r\n            <Button\r\n                style={{ width: 100 }}\r\n                // onPress={handlePressUpdate}\r\n                onPress={sendData}\r\n            // onPress={handleCallApi}\r\n            >\r\n\r\n            </Button>\r\n\r\n            <Button title=\"Append Data to CSV\" onPress={appendDataToCSV} />\r\n\r\n            <Button title=\"Append Clients Data to CSV\" onPress={appendClientsDataToCSV} />\r\n\r\n\r\n\r\n            <Button title=\"Reset CSV\" onPress={handleClearCsv}/>\r\n\r\n            <Button title=\"Reset Clients CSV\" onPress={handleClearClientsCsv}/>\r\n\r\n            <View>\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({ item }) => (\r\n                        <View>\r\n                            <Text>{item.columnName}</Text> {/* Replace columnName with actual data column name */}\r\n                        </View>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ParseCSV;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './style.css';\r\nimport { debounce } from 'lodash';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport LazyScreen from './DevAdminComponents/Lazy Screen/LazyScreen';\r\n\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nimport AddAccount from './DevAdminComponents/AddAccount';\r\nimport Logs from './DevAdminComponents/Logs';\r\nimport AccountList from './DevAdminComponents/AccountList';\r\nimport AddVehicle from './DevAdminComponents/AddVehicle';\r\nimport VehicleList from './DevAdminComponents/VehicleList';\r\nimport Freight from './DevAdminComponents/Freight';\r\nimport ChatMessages from './DevAdminComponents/ChatMessages';\r\nimport ParseCSV from './DevAdminComponents/ParseCSV';\r\nimport { setLoginAccountType, setLoginName } from './DevAdminComponents/redux/store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function Top({ navigation }) {\r\n  const [drawerVisible, setDrawerVisible] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n  const Drawer = createDrawerNavigator();\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const ChatMessagesComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n  );\r\n\r\n  const LogsComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n  );\r\n\r\n  const FreightComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n  );\r\n\r\n  const VehicleListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n  );\r\n\r\n  const AccountListComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n  );\r\n\r\n  const AddVehicleComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n  );\r\n\r\n  const AddAccountComponent = () => (\r\n    <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = navigation.addListener('state', () => {\r\n  //     // Close the drawer on navigation change\r\n  //     setDrawerVisible(false);\r\n  //   });\r\n\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    // Initially hide the drawer\r\n    setDrawerVisible(false);\r\n  }, []);\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      onSnapshot(accountDocRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const data = docSnapshot.data();\r\n          const fieldType = data.type;\r\n          const fieldName = data.name;\r\n\r\n          if (data.active === true) {\r\n            setType(fieldType);\r\n            dispatch(setLoginAccountType(fieldType));\r\n            // console.log('Account Type: ', fieldType);\r\n            dispatch(setLoginName(fieldName));\r\n            const delay = getRandomDelay();\r\n            // setTimeout(() => {\r\n            // navigation.replace(fieldType);\r\n            // navigate(`/top`)\r\n            // }, delay);\r\n          }\r\n          else {\r\n            signOut(auth)\r\n              .then(() => {\r\n                // navigation.navigate('Login');\r\n                navigate('/Login');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error signing out:', error);\r\n              });\r\n          }\r\n        } else {\r\n          // Handle the case where the document does not exist\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  const ProtectedRoute = ({ loginAccountType, allowedAccountTypes, redirectTo, children }) => {\r\n    return allowedAccountTypes.includes(loginAccountType) ? children : <Navigate to={redirectTo} replace />;\r\n  };\r\n\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n\r\n\r\n    // <Drawer.Navigator\r\n    //   // useLegacyImplementation\r\n    //   screenOptions={{\r\n    //     headerShown: false,\r\n    //     drawerStyle: { backgroundColor: '#7B9CFF' },\r\n    //     drawerContentOptions: {\r\n    //       activeTintColor: '#7B9CFF',\r\n    //       inactiveTintColor: '#7B9CFF',\r\n    //       activeLabelStyle: { color: '#7B9CFF' },\r\n    //       inactiveLabelStyle: { color: '#7B9CFF' },\r\n    //     },\r\n    //   }}\r\n    // >\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"CHAT MESSAGES\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/ChatMessages')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // <Drawer.Screen\r\n    //   name=\"LOGS\"\r\n    //   component={() => (\r\n    //     <LazyScreen importFunc={() => import('./DevAdminComponents/Logs')} />\r\n    //   )}\r\n    //   options={{ unmountOnBlur: true }}\r\n    // />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"FREIGHT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/Freight')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"VEHICLE LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/VehicleList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ACCOUNT LIST\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AccountList')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD NEW VEHICLE\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddVehicle')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    //   <Drawer.Screen\r\n    //     name=\"ADD C-HUB ACCOUNT\"\r\n    //     component={() => (\r\n    //       <LazyScreen importFunc={() => import('./DevAdminComponents/AddAccount')} />\r\n    //     )}\r\n    //     options={{ unmountOnBlur: true }}\r\n    //   />\r\n    // </Drawer.Navigator>\r\n\r\n    // <StackNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n    //   <StackNavigator.Screen name=\"CHAT MESSAGES\" component={ChatMessagesComponent} />\r\n    //   <StackNavigator.Screen name=\"FREIGHT\" component={FreightComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD NEW VEHICLE\" component={AddVehicleComponent} />\r\n    //   <StackNavigator.Screen name=\"LOGS\" component={LogsComponent} />\r\n    //   <StackNavigator.Screen name=\"VEHICLE LIST\" component={VehicleListComponent} />\r\n    //   <StackNavigator.Screen name=\"ACCOUNT LIST\" component={AccountListComponent} />\r\n    //   <StackNavigator.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccountComponent} />\r\n\r\n    // </StackNavigator.Navigator>\r\n    <NativeBaseProvider>\r\n      <Routes>\r\n        <Route path=\"*\" element={<Navigate to=\"chat-messages\" replace />} />\r\n        <Route path=\"parse-csv\" element={<ParseCSV />} />\r\n        <Route path=\"chat-messages\" element={<ChatMessages />} />\r\n        <Route path=\"chat-messages/:chatId\" element={<ChatMessages />} />\r\n        <Route path=\"freight\" element={<FreightComponent />} />\r\n        <Route path=\"add-new-vehicle\" element={<AddVehicleComponent />} />\r\n        <Route path=\"logs\" element={<LogsComponent />} />\r\n        <Route path=\"vehicle-list\" element={<VehicleListComponent />} />\r\n        <Route path=\"account-list\" element={<AccountListComponent />} />\r\n        <Route path=\"add-c-hub-account\" element={<AddAccountComponent />} />\r\n        {/* Add additional nested routes as needed */}\r\n      </Routes>\r\n    </NativeBaseProvider>\r\n    // <Drawer.Navigator useLegacyImplementation screenOptions={{\r\n    //   headerShown: false,\r\n    //   drawerStyle: { backgroundColor: '#D0DCFF' },\r\n    //   drawerContentOptions: {\r\n    //     activeTintColor: 'white',\r\n    //     inactiveTintColor: 'white',\r\n    //     activeLabelStyle: { color: 'white' },\r\n    //     inactiveLabelStyle: { color: 'white' }\r\n    //   }\r\n    // }} >  \r\n    //        <Drawer.Screen name=\"ADD NEW VEHICLE\" component={AddVehicle} />\r\n    //   <Drawer.Screen name=\"VEHICLE LIST\" component={VehicleList} />\r\n\r\n    //   <Drawer.Screen name=\"ACCOUNT LIST\" component={AccountList} />\r\n    //   <Drawer.Screen name=\"LOGS\" component={Logs} />\r\n    //   <Drawer.Screen name=\"ADD C-HUB ACCOUNT\" component={AddAccount} />\r\n\r\n\r\n    // </Drawer.Navigator>\r\n\r\n\r\n    //  <NativeBaseProvider>\r\n    //       <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AccountList\" component={AccountList} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"Logs\" component={Logs} />\r\n    //         <StackNavigator.Screen options={{ headerShown: false }} name=\"AddAccount\" component={AddAccount} />\r\n\r\n    //       </StackNavigator.Navigator>\r\n\r\n    //     </NativeBaseProvider>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot } from '../firebasecontrol'\r\nimport { signOut, onAuthStateChanged, reload, getAuth } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setLoginAccountType,\r\n  // setModelData,\r\n  setLoginEmail,\r\n  setLoginName\r\n} from './DevAdminComponents/redux/store'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Checkpoint() {\r\n  const dispatch = useDispatch();\r\n  const loginEmail = useSelector((state) => state.loginEmail);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [emailCredential, setEmailCredential] = React.useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  // const navigation = useNavigation()\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // const handleDocumentChange = (snapshot) => {\r\n  //   if (!snapshot.exists()) {\r\n  //     signOut(auth)\r\n  //       .then(() => {\r\n  //         navigation.navigate('Login');\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error('Error signing out:', error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate('/Login');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate('/Login');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomDelay = () => {\r\n    const minDelay = 100; // Minimum delay in milliseconds\r\n    const maxDelay = 200; // Maximum delay in milliseconds\r\n    return Math.floor(Math.random() * (maxDelay - minDelay + 1) + minDelay);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n\r\n      // if (loginAccountType !== '') {\r\n      const delay = getRandomDelay();\r\n      setTimeout(() => {\r\n        // navigation.replace(fieldType);\r\n        navigate(`/top`)\r\n      }, delay);\r\n      // navigate(`/top`)\r\n      // }\r\n      // else {\r\n      //   onSnapshot(accountDocRef, (docSnapshot) => {\r\n      //     if (docSnapshot.exists()) {\r\n      //       const data = docSnapshot.data();\r\n      //       const fieldType = data.type;\r\n      //       const fieldName = data.name;\r\n\r\n      //       if (data.active === true) {\r\n      //         setType(fieldType);\r\n      //         dispatch(setLoginAccountType(fieldType));\r\n      //         dispatch(setLoginName(fieldName));\r\n      //         const delay = getRandomDelay();\r\n      //         // setTimeout(() => {\r\n      //         // navigation.replace(fieldType);\r\n      //         navigate(`/top`)\r\n      //         // }, delay);\r\n      //       }\r\n      //       else {\r\n      //         signOut(auth)\r\n      //           .then(() => {\r\n      //             // navigation.navigate('Login');\r\n      //             navigate('/Login');\r\n      //           })\r\n      //           .catch((error) => {\r\n      //             console.error('Error signing out:', error);\r\n      //           });\r\n      //       }\r\n      //     } else {\r\n      //       // Handle the case where the document does not exist\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n\r\n  };\r\n\r\n  // const getFieldValueByEmail = (email, navigation) => {\r\n\r\n\r\n  //   try {\r\n  //     const accountDocRef = doc(firestore, 'accounts', email);\r\n  //     const unsubscribe = onSnapshot(accountDocRef, (accountDocSnapshot) => {\r\n  //       if (accountDocSnapshot.exists()) {\r\n  //         const data = accountDocSnapshot.data();\r\n  //         const fieldType = data.type;\r\n  //         const fieldName = data.name;\r\n\r\n  //         if (data.active === true) {\r\n  //           dispatch(setLoginName(fieldName));\r\n  //           const delay = getRandomDelay();\r\n  //           setTimeout(() => {\r\n  //             navigation.replace(fieldType);\r\n  //           }, delay);\r\n  //         } else {\r\n  //           signOut(auth)\r\n  //             .then(() => {\r\n  //               navigation.navigate('Login');\r\n  //             })\r\n  //             .catch((error) => {\r\n  //               console.error('Error signing out:', error);\r\n  //             });\r\n  //         }\r\n  //       } else {\r\n  //         console.log('Document does not exist');\r\n  //       }\r\n  //     });\r\n\r\n  //     // Return the unsubscribe function to stop listening when necessary\r\n  //     return unsubscribe;\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching field value:', error);\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n              <HStack space={1} justifyContent=\"center\">\r\n                <Spinner color='white' size='lg' />\r\n              </HStack>\r\n            </Stack>\r\n\r\n          </Center>\r\n\r\n\r\n        </Center>\r\n\r\n\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail, confirmPasswordReset  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(false);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"error\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    {errorTitle}\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                {errorMessage}\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n\r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n   const handleEmailOnChangeText = (text) => {\r\n    setEmail(text) \r\n    setErrorShow(false)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsLoading(true);\r\n    setIsDisabled(true);\r\n    setErrorShow(false);\r\n    sendPasswordResetEmail(auth, email)\r\n    .then((re)=> {\r\n      console.log(re);\r\n      navigation.navigate('ResetPasswordSuccess');\r\n    \r\n    })\r\n    .catch((error) =>{\r\n      setIsLoading(false);\r\n      setIsDisabled(false);\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(error);\r\n      setErrorShow(true);\r\n      if (errorCode === 'auth/missing-email') {\r\n        console.log('Please enter an email.☹️');\r\n        setErrorTitle('Email is empty!');\r\n        setErrorMessage('Please enter an email.☹️');\r\n        <ErrorLoginShow/>\r\n      }\r\n      else if (errorCode === 'auth/invalid-email') {\r\n        console.log('Email is invalid. ☹️');\r\n        setErrorTitle('Invalid email!');\r\n        setErrorMessage('Please enter a valid email. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n      else if (errorCode === 'auth/user-not-found') {\r\n        console.log('Please use an existing email. ☹️');\r\n        setErrorTitle('User not found!');\r\n        setErrorMessage('Please use an existing email. ☹️');\r\n         <ErrorLoginShow/>\r\n      }       else if (errorCode === 'auth/too-many-requests') {\r\n        console.log('Too many requests detected, please try again later. ☹️');\r\n        setErrorTitle('Too many requests!');\r\n        setErrorMessage('Too many requests detected, please try again later. ☹️');\r\n         <ErrorLoginShow/>\r\n      } \r\n    })\r\n  };\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n    <Input w={{\r\n      base: \"90%\",\r\n      md: \"90%\",\r\n      sm: \"90%\", \r\n    }} value={email} onSubmitEditing={handleReset} onChangeText={handleEmailOnChangeText} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' color='white' />\r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: 'danger.900', }} _pressed={{ bgColor: 'danger.900', }} _focus={{ bgColor: 'danger.900', }} bgColor='danger.600' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReset} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16}  />:<Text style={{color: 'white',}}>Reset Password</Text>}</Button>\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { \r\n  Input,\r\n  Icon, \r\n  Stack, \r\n  Pressable, \r\n  Center, \r\n  NativeBaseProvider, \r\n  Button, \r\n  Box, \r\n  HStack, \r\n  Image, \r\n  VStack, \r\n  Alert, \r\n  IconButton, \r\n  CloseIcon, \r\n  Spinner, \r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition \r\n} from \"native-base\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, getAuth, auth } from '../firebasecontrol'\r\nimport { signInWithEmailAndPassword, signOut, sendPasswordResetEmail  } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function ResetPasswordSuccess() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailCredential, setEmailCredential] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [errorShow, setErrorShow] = React.useState(true);\r\n  const [resetShow, setResetShow] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const logo = require('../assets/RMJ C-Hub 制御ハブ.png');\r\n\r\n  const navigation = useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Checkpoint\")\r\n      }\r\n      \r\n    })\r\n\r\n    return unsubscribe\r\n  }, []) \r\n\r\n\r\n  const ErrorLoginShow = () => {\r\n    return <Box w=\"100%\" alignItems=\"center\">\r\n            <PresenceTransition visible={errorShow} initial={{\r\n            opacity: 0,\r\n            scale: 0,\r\n          }} animate={{\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n              duration: 200\r\n            }\r\n          }} >\r\n        {/* <Collapse isOpen={errorShow}> */}\r\n          <Alert maxW=\"400\" status=\"Success\">\r\n            <VStack space={1} flexShrink={1} w=\"100%\">\r\n              <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <HStack flexShrink={1} space={2} alignItems=\"center\">\r\n                  <Alert.Icon />\r\n                  <Text fontSize=\"md\" fontWeight=\"medium\" _dark={{\r\n                  color: \"coolGray.800\"\r\n                }}>\r\n                    Success!\r\n                  </Text>\r\n                </HStack>\r\n              </HStack>\r\n              <Box pl=\"6\" _dark={{\r\n              _text: {\r\n                color: \"coolGray.600\"\r\n              }\r\n            }}>\r\n                Password reset link has been sent to your email! 😊\r\n              </Box>\r\n            </VStack>\r\n          </Alert>\r\n        {/* </Collapse> */}\r\n        </PresenceTransition>\r\n \r\n      </Box>;\r\n  \r\n};\r\n\r\n\r\n  \r\n  const handleReturnLogin = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor='#7b9cff' w='100%' h='100%'>\r\n      <ErrorLoginShow/>\r\n        <Center flex={1}>\r\n          <Center px=\"3\">\r\n            <Box w={[300, 400, 550]} h={[94, 125, 172]}>\r\n              <Image source={{\r\n                uri: logo\r\n              }} resizeMode='stretch' alt=\"Real Motor Japan Control Hub\" style={{ flex: 1, }} />\r\n            </Box>\r\n            {/* <LoginForm /> */}\r\n            <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n\r\n   \r\n\r\n    <HStack space={1} justifyContent=\"center\">\r\n      <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n        base: 130,\r\n        md: 130,\r\n        sm: 130,\r\n      }} onPress={handleReturnLogin}><Text style={{color: 'white',}}>Return to Login</Text></Button>\r\n\r\n    </HStack>\r\n\r\n  </Stack>\r\n\r\n          </Center>  \r\n\r\n          \r\n        </Center>\r\n\r\n   \r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect, StrictMode } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Alert,\r\n  IconButton,\r\n  CloseIcon,\r\n  Spinner,\r\n  Heading,\r\n  Collapse,\r\n  useToast,\r\n  PresenceTransition\r\n} from \"native-base\";\r\nimport { getAuth, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, } from './firebasecontrol'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginPage from './components/LoginPage';\r\nimport Top from './components/Top';\r\nimport Admin from './components/Top';\r\nimport Checkpoint from './components/Checkpoint';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordSuccess from './components/ResetPasswordSuccess';\r\nimport './style.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/DevAdminComponents/redux/store';\r\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst StackNavigator = createNativeStackNavigator();\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth.onAuthStateChanged(onAuthStateChanged)\r\n\r\n    return subscriber;\r\n  }, [])\r\n\r\n\r\n  if (initializing) {\r\n    return null; // or a loading screen if needed\r\n  }\r\n\r\n\r\n  const config = {\r\n    screens: {\r\n      Login: 'login',\r\n      Checkpoint: 'checkpoint',\r\n      devadmin: {\r\n        path: 'devadmin',\r\n        screens: {\r\n          'CHAT MESSAGES': 'ChatMessages/:chatId',\r\n          'FREIGHT': 'Freight',\r\n          'ADD NEW VEHICLE': 'AddNewVehicle',\r\n          'LOGS': 'Logs',\r\n          'VEHICLE LIST': 'VehicleList',\r\n          'ACCOUNT LIST': 'AccountList',\r\n          'ADD C-HUB ACCOUNT': 'AddCHubAccount',\r\n        },\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: ['https://lontokkayo.github.io/samplecontrolhub/'],\r\n    config,\r\n  };\r\n\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n  body, html {\r\n    overscroll-behavior-x: none;\r\n    overscroll-behavior-y: none;\r\n  }\r\n`;\r\n\r\n  document.head.append(style);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/Login\" element={<LoginPage />} />\r\n          <Route path=\"/Login/*\" element={<LoginPage />} />\r\n          <Route path=\"/Checkpoint\" element={<Checkpoint />} />\r\n          {/* Corrected path for Admin if needed */}\r\n          <Route path=\"/top/*\" element={<Top />} />\r\n          {/* Define other routes */}\r\n        </Routes>\r\n      </Router>\r\n    </Provider>\r\n    // <Router>\r\n    //   <Provider store={store}>\r\n    //     <NativeBaseProvider>\r\n    //       {/* <LoginPage/> */}\r\n    //       <NavigationContainer linking={linking}>\r\n    //         <StackNavigator.Navigator options={{ headerShown: false }}>\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Login\" component={LoginPage} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, }} name=\"Checkpoint\" component={Checkpoint} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false, unmountOnBlur: true }} name=\"devadmin\" component={DevAdmin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPassword\" component={ResetPassword} />\r\n    //           <StackNavigator.Screen options={{ headerShown: false }} name=\"ResetPasswordSuccess\" component={ResetPasswordSuccess} />\r\n    //           {/* {user ? (<StackNavigator.Screen options={{ headerShown: false }} name=\"Checkpoint\" component={Checkpoint} /> ) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"superadmin\" component={SuperAdmin} />) : user ?\r\n    //       (<StackNavigator.Screen options={{ headerShown: false }} name=\"admin\" component={Admin} />) :  (\r\n    //       <StackNavigator.Screen  options={{ headerShown: false }} name=\"Login\" component={LoginPage} />\r\n    //     )} */}\r\n    //         </StackNavigator.Navigator>\r\n    //       </NavigationContainer>\r\n    //     </NativeBaseProvider>\r\n    //   </Provider>\r\n    // </Router>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Alert } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail, deleteUser, signInWithEmailAndPassword, updateEmail, updatePassword } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, deleteDoc, limit } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { color } from 'react-native-reanimated';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAccountListData, setLoadingModalVisible, setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { collectionGroup, endBefore, limitToLast, startAfter, where } from 'firebase/firestore';\r\nimport { projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ACCOUNT LIST'\r\n\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AccountList() {\r\n    const dispatch = useDispatch();\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [showModal, setShowModal] = useState('');\r\n    const [type, setType] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [show, setShow] = React.useState(false);\r\n    const [show2, setShow2] = React.useState(false);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(true);\r\n    const [isSelected3, setIsSelected3] = useState(false);\r\n    const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n    const [accountTypeSpAd, setAccountTypeSpAd] = useState(false);\r\n    const [accountTypeDevAd, setAccountTypeDevAd] = useState(false);\r\n    const [accountTypeAd, setAccountTypeAd] = useState(false);\r\n    const [accountType3, setAccountType3] = useState(false);\r\n    const [accountType4, setAccountType4] = useState(false);\r\n\r\n    const [inputName, setInputName] = useState('');\r\n    const [isInputNameBlank, setIsInputNameBlank] = useState(false);\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPassword, setInputPassword] = useState('');\r\n    const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n    const [showSuccessModal, setShowSuccessModal] = React.useState(false);\r\n    const [showDisableModal, setShowDisableModal] = React.useState(false);\r\n    const [showEnableModal, setShowEnableModal] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [showSaveSuccessModal, setShowSaveSuccessModal] = React.useState(false);\r\n    const inputRefs = useRef([]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n    const [time, setTime] = useState('');\r\n    const [selectedType, setSelectedType] = useState('');\r\n    const [selectedTypeDisplay, setSelectedTypeDisplay] = useState('');\r\n    const [selectedItemType, setSelectedItemType] = useState('');\r\n    const [isEmailDuplicate, setIsEmailDuplicate] = useState('');\r\n    const [authEmail, setAuthEmail] = useState('');\r\n    const [authPassword, setAuthPassword] = useState('');\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n    const inputEmailRef = useRef(null);\r\n    const inputNameRef = useRef(null);\r\n    const inputPassRef = useRef(null);\r\n\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [13, 25, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const [documentListener, setDocumentListener] = useState(false);\r\n\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const ref0 = useRef(null);\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n    const ref3 = useRef(null);\r\n    const searchInputRef = useRef(null);\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'accounts'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setAccountListData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const accountListDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            accountListDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setAccountListData(accountListDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const accountListDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                accountListDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setAccountListData(accountListDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'accounts'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'accounts'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleToggleAccountTypeAd = useCallback(() => {\r\n        const text = 'admin';\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Admin');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeDevAd = useCallback(() => {\r\n        const text = 'devadmin';\r\n\r\n        setSelectedTypeDisplay('Developer Admin');\r\n\r\n        setSelectedType(text);\r\n        setSelectedItemType(text);\r\n\r\n    }, []);\r\n\r\n    const handleToggleAccountType3 = useCallback(() => {\r\n        const text = 'staff';\r\n\r\n        setSelectedType(text);\r\n\r\n        setSelectedTypeDisplay('Staff');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountType4 = useCallback(() => {\r\n        const text = 'booking';\r\n\r\n\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Booking');\r\n        setSelectedItemType(text);\r\n    }, []);\r\n\r\n    const handleToggleAccountTypeSpAd = useCallback(() => {\r\n        const text = 'superadmin';\r\n\r\n        setSelectedItemType(text);\r\n        setSelectedType(text);\r\n        setSelectedTypeDisplay('Super Admin');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // console.log(selectedType);\r\n        // console.log(selectedTypeDisplay);\r\n\r\n    }, [selectedType, selectedTypeDisplay])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')); // Replace 'your-collection' with the actual collection name and 'timestamp' with the timestamp field in your documents\r\n                const querySnapshot = await getDocs(q);\r\n                const docs = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                setData(docs);\r\n                setFilteredData(docs);\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        const unsubscribe = onSnapshot(query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc')), (snapshot) => {\r\n            const updatedData = snapshot.docs.map((doc) => doc.data());\r\n            setData(updatedData);\r\n            setFilteredData(updatedData);\r\n        });\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    }, [typeOfAccount]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const firebaseFirestore = getFirestore();\r\n\r\n\r\n\r\n\r\n    // const handleUpdate = async () => {\r\n    //     setIsDisabled(true);\r\n    //     setIsLoading(true);\r\n\r\n    //     if (\r\n    //         validateEmail() === false ||\r\n    //         inputName === ''\r\n    //     ) {\r\n    //         setTimeout(() => {\r\n    //             // Reset loading and disabled state\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }, 500);\r\n    //     } else {\r\n    //         try {\r\n    //             const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n    //             if (signInMethods.length > 0) {\r\n    //                 // Email already exists\r\n    //                 setIsEmailDuplicate(true);\r\n    //                 setEmailError(false);\r\n    //                 validateEmail(false);\r\n    //                 setIsLoading(false);\r\n    //                 setIsDisabled(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             await createUserWithEmailAndPassword(authForCreateUser, inputEmail, inputPassword)\r\n    //                 .then((userCredential) => {\r\n\r\n    //                     const user = userCredential.user;\r\n    //                     try {\r\n    //                         const customID = inputEmail; // Replace 'your-custom-id' with your desired custom ID\r\n    //                         const docRef = doc(db, 'accounts', selectedItem.email); // Replace 'myCollection' with the name of your desired collection\r\n    //                         updateDoc(docRef, {\r\n    //                             // Specify the data you want to add to the document\r\n    //                             email: inputEmail,\r\n    //                             name: inputName,\r\n    //                             pass: inputPassword,\r\n    //                             type: typeOfAccount,\r\n    //                             // ...\r\n    //                         });\r\n\r\n    //                         addLogToCollection(logData);\r\n    //                         // console.log(logData);\r\n    //                         setIsLoading(false);\r\n    //                         setIsDisabled(false);\r\n    //                         handleClear();\r\n    //                         setShowModal(true);\r\n\r\n    //                         // console.log('Document added with custom ID: ', customID);\r\n    //                     } catch (error) {\r\n    //                         console.error('Error adding document: ', error);\r\n    //                     }\r\n\r\n\r\n    //                     // Reset loading and disabled state\r\n\r\n\r\n\r\n    //                 })\r\n    //                 .catch((error) => {\r\n    //                     // console.log('An error occurred during sign-up. Please try again later.');\r\n    //                     console.log(error);\r\n    //                     setIsLoading(false);\r\n    //                     setIsDisabled(false);\r\n    //                 });\r\n    //         } catch (error) {\r\n    //             const errorCode = error.code;\r\n    //             const errorMessage = error.message;\r\n    //             console.log('An error occurred while checking the email existence. Please try again later.');\r\n    //             // console.log(errorCode, errorMessage);\r\n    //             setIsLoading(false);\r\n    //             setIsDisabled(false);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const handleClear = useCallback(() => {\r\n        const text = '';\r\n\r\n        ref0.current.value = \"\";\r\n        ref1.current.value = \"\";\r\n        ref2.current.value = \"\";\r\n        ref3.current.value = \"\";\r\n        setAccountTypeAd(false);\r\n        setAccountTypeSpAd(false);\r\n        setAccountTypeDevAd(false);\r\n        setAccountType3(false);\r\n        setAccountType4(false);\r\n        setEmailError(false);\r\n        setIsEmailDuplicate(false);\r\n\r\n\r\n        setInputConfirmPassword('');\r\n        setInputEmail('');\r\n        setInputName('');\r\n        setInputPassword('');\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    // const handleToggleLogs = useCallback(() => {\r\n    //     // setIsSelectedLogs(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"LOGS\");\r\n    // }, []);\r\n    // const handleToggleAddAccount = useCallback(() => {\r\n    //     // setIsSelectedAddAccount(true);\r\n\r\n    //     // setIsSelectedLogs(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n\r\n    //     navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n    // }, []);\r\n\r\n    // const handleToggleAccountList = useCallback(() => {\r\n    //     // setIsSelectedAccountList(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelected3(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ACCOUNT LIST\");\r\n    // }, []);\r\n\r\n    // const handleToggleAddVehicle = useCallback(() => {\r\n    //     // setIsSelected3(true);\r\n\r\n    //     // setIsSelectedAddAccount(false);\r\n    //     // setIsSelectedAccountList(false);\r\n    //     // setIsSelected4(false);\r\n    //     // setIsSelectedLogs(false);\r\n    //     navigation.navigate(\"ADD NEW VEHICLE\");\r\n    // }, []);\r\n\r\n    // const handleVehicleList = useCallback(() => {\r\n    //     navigation.navigate(\"VEHICLE LIST\");\r\n    // }, []);\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n\r\n\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\")\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\")\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n        const unsubscribe = onSnapshot(userRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const name = doc.data().name;\r\n                const type = doc.data().type;\r\n                setName(name);\r\n                setType(type);\r\n                // Perform any necessary actions with the name value\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        });\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmailFromDocument('accounts', auth.currentUser?.email);\r\n        // console.log(authEmail, authPassword)\r\n    }, [authEmail, authPassword]);\r\n\r\n    const getEmailFromDocument = async (collectionPath, documentId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, documentId);\r\n\r\n        try {\r\n            const documentSnapshot = await getDoc(documentRef);\r\n            if (documentSnapshot.exists()) {\r\n                const email = documentSnapshot.data().email;\r\n                const pass = documentSnapshot.data().pass;\r\n\r\n                setAuthEmail(email);\r\n                setAuthPassword(pass);\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error retrieving email:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const validateEmail = () => {\r\n        // Regular expression for email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = emailRegex.test(inputEmail);\r\n\r\n        return isValid;\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const handleScreenResize = () => {\r\n    //         const screenWidth = Dimensions.get('window').width;\r\n    //         setIsMobileView(screenWidth < 1200);\r\n    //     };\r\n\r\n    //     // Initial check on component mount\r\n    //     handleScreenResize();\r\n\r\n    //     // Listen for screen dimension changes\r\n    //     Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //     // Cleanup event listener on component unmount\r\n    //     return () => {\r\n    //         Dimensions.removeEventListener('change', handleScreenResize);\r\n    //     };\r\n    // }, []);\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleEdit = useCallback((id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputPassword(selectedItem.pass);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setModalVisible(true);\r\n        setSelectedItemType(selectedItem.type);\r\n        setSelectedType(selectedItem.type);\r\n        setSelectedTypeDisplay(selectedItem.typeDisplay);\r\n        setIsEmailDuplicate(false);\r\n        // console.log(selectedItem);\r\n\r\n        if (inputEmailRef.current) {\r\n            inputEmailRef.current.setNativeProps({ text: selectedItem.email });\r\n        }\r\n\r\n        if (inputNameRef.current) {\r\n            inputNameRef.current.setNativeProps({ text: selectedItem.name });\r\n        }\r\n        if (inputPassRef.current) {\r\n            inputPassRef.current.setNativeProps({ text: selectedItem.pass });\r\n        }\r\n    }, [data]);\r\n\r\n\r\n\r\n    const handleInputEmailChange = debounce((value) => {\r\n        setInputEmail(value);\r\n    }, 50);\r\n\r\n    const handleInputNameChange = debounce((value) => {\r\n        setInputName(value);\r\n    }, 50);\r\n\r\n    const handleInputPassChange = debounce((value) => {\r\n        setInputPassword(value);\r\n    }, 50);\r\n\r\n\r\n    const handleOpenDisableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDisableModal(true);\r\n    };\r\n\r\n    const handleOpenEnableModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowEnableModal(true);\r\n    };\r\n\r\n    const handleOpenDeleteModal = (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleCloseDisableModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n    const handleOpenSaveSuccessModal = () => {\r\n        setShowDisableModal(false);\r\n    };\r\n\r\n\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const handleCloseEnableModal = () => {\r\n        setShowEnableModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [selectedItem]);\r\n    const addLogToCollection = async (data) => {\r\n        try {\r\n            const firestore = getFirestore();\r\n            const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n            // Add a new document to the \"logs\" collection\r\n            await addDoc(logsCollectionRef, data);\r\n\r\n        } catch (error) {\r\n            console.error('Error adding document:', error);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchTime = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    //             const { datetime } = response.data;\r\n    //             const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    //             setTime(formattedTime);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching time:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     const interval = setInterval(() => {\r\n    //         if (isIntervalActive) {\r\n    //             fetchTime();\r\n    //         }\r\n    //     }, 1000);\r\n\r\n    //     return () => {\r\n    //         clearInterval(interval);\r\n    //     };\r\n    // }, [isIntervalActive]);\r\n\r\n    const openSuccessModal = () => {\r\n        setShowSuccessModal(true);\r\n\r\n    };\r\n\r\n    const closeSuccessModal = () => {\r\n        setShowSuccessModal(false);\r\n        setIsDisabled(false);\r\n        setIsYesLoading(false);\r\n    };\r\n\r\n\r\n    // async function disableUserByUid(uid) {\r\n    //     try {\r\n    //         await updateDisabled(auth, uid, true);\r\n    //         console.log('User account disabled successfully');\r\n    //     } catch (error) {\r\n    //         console.error('Error disabling user account:', error);\r\n    //     }\r\n    // }\r\n\r\n    const handleEnable = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: true,\r\n            };\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n\r\n            const logData = {\r\n                message: `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Enabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been enabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Enabled'.toLowerCase(),\r\n                    'Enabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseEnableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const deleteDocument = async (collectionPath, customId) => {\r\n        const firestore = getFirestore();\r\n        const documentRef = doc(firestore, collectionPath, customId);\r\n\r\n        try {\r\n            await deleteDoc(documentRef);\r\n            console.log('Document deleted successfully.');\r\n        } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n\r\n\r\n        try {\r\n\r\n            const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n            const user = userCredential.user;\r\n\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            await deleteUser(user);\r\n            const logData = {\r\n                message: `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Deleted: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been deleted by \"${name}\".`.toLowerCase(),\r\n                    'Account Deleted'.toLowerCase(),\r\n                    'Deleted'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n            addLogToCollection(logData);\r\n\r\n\r\n            console.log('Account deleted successfully');\r\n\r\n            const signInCredential = await signInWithEmailAndPassword(\r\n                auth,\r\n                authEmail,\r\n                authPassword\r\n            );\r\n            const signedInUser = signInCredential.user;\r\n            signedInUser\r\n            deleteDocument('accounts', selectedItem.email);\r\n            // setData(updatedData);\r\n            // const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            navigate('/account-list')\r\n            // console.log('Field updated successfully.');\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n\r\n            handleCloseDeleteModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleDisable = useCallback(async (id) => {\r\n        setIsDisabled(true);\r\n        setIsYesLoading(true);\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setSelectedItem(selectedItem);\r\n        setInputName(selectedItem.name);\r\n        setInputEmail(selectedItem.email);\r\n        setTypeOfAccountDisplay(selectedItem.typeDisplay);\r\n        setTypeOfAccount(selectedItem.type);\r\n\r\n        try {\r\n            const itemDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n            const updates = {\r\n                active: false,\r\n            };\r\n\r\n            await updateDoc(itemDocRef, updates);\r\n\r\n            const updatedData = data.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: false };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            setData(updatedData);\r\n            const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n            setFilteredData(filteredData);\r\n            // console.log('Field updated successfully.');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n            setTime(formattedTime);\r\n\r\n            const logData = {\r\n                message: `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`,\r\n                timestamp: formattedTime,\r\n                colorScheme: false,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `Account Disabled: The account \"${selectedItem.email}\" of \"${selectedItem.name}\" has been disabled by \"${name}\".`.toLowerCase(),\r\n                    'Account Disabled'.toLowerCase(),\r\n                    'Disabled'.toLowerCase(),\r\n                    selectedItem.email.toLowerCase(),\r\n                    selectedItem.name.toLowerCase(),\r\n                    name.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n\r\n            };\r\n            addLogToCollection(logData);\r\n            setIsDisabled(false);\r\n            setIsYesLoading(false);\r\n            handleCloseDisableModal();\r\n        } catch (error) {\r\n            console.error('Error updating field:', error);\r\n            setIsDisabled(false);\r\n            setIsSaveLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    // Apply search filter to the data\r\n    const applySearchFilter = (data, searchInputValue) => {\r\n        if (!searchInputValue) {\r\n            return data;\r\n        }\r\n        const filteredData = data.filter((item) =>\r\n            item.email.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.name.toLowerCase().includes(searchInputValue.toLowerCase()) ||\r\n            item.typeDisplay.toLowerCase().includes(searchInputValue.toLowerCase())\r\n        );\r\n        return filteredData;\r\n    };\r\n\r\n\r\n\r\n    const handleSave = async (id) => {\r\n        const selectedItem = data.find((item) => item.id === id);\r\n        setIsDisabled(true);\r\n        setIsSaveLoading(true);\r\n        if (\r\n            isPasswordLengthLabel() === false ||\r\n            validateEmail() === false ||\r\n            inputName === ''\r\n        ) {\r\n            setTimeout(() => {\r\n                // Reset loading and disabled state\r\n                setIsLoading(false);\r\n                setIsDisabled(false);\r\n            }, 500);\r\n        } else {\r\n\r\n            if (inputEmail === selectedItem.email && inputPassword === selectedItem.pass) {\r\n\r\n\r\n                const documentRef = doc(db, 'accounts', selectedItem.id);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                const updatedFields = {\r\n                    name: inputName,\r\n                    type: selectedType,\r\n                    typeDisplay: selectedTypeDisplay,\r\n                    lastUpdatedDate: formattedTime,\r\n                    // Add more fields as needed\r\n\r\n                };\r\n\r\n                try {\r\n\r\n                    await updateDoc(documentRef, updatedFields);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Updated: The name \"${selectedItem.name}\" of \"${selectedItem.email}\" has been changed to  \"${inputName}\", updated by \"${name}\".`.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            inputName.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    }\r\n\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInput.current?.value); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Field updated successfully.');\r\n                    // console.log('Document successfully updated!');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error updating document:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail === selectedItem.email && inputPassword !== selectedItem.pass) {\r\n\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime();\r\n\r\n                try {\r\n                    await updatePassword(user, inputPassword);\r\n\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime();\r\n                    // console.log('Password changed successfully');\r\n                    const userDocRef = doc(firestore, 'accounts', selectedItem.email);\r\n\r\n\r\n                    const updatedFields = {\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        dateOfCreation: selectedItem.dateOfCreation,\r\n                        lastUpdatedDate: formattedTime,\r\n                        pass: inputPassword,\r\n                        active: true,\r\n\r\n                        // Add more fields as needed\r\n                    };\r\n                    // Perform setDoc operation\r\n                    await setDoc(userDocRef, updatedFields);\r\n\r\n                    const signInCredential = await signInWithEmailAndPassword(\r\n                        auth,\r\n                        authEmail,\r\n                        authPassword\r\n                    );\r\n\r\n                    const signedInUser = signInCredential.user;\r\n                    signedInUser\r\n\r\n\r\n                    // console.log(authEmail, authPassword);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n\r\n                    setTime(formattedTime);\r\n\r\n                    const logData = {\r\n                        message: `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Password Changed: The password of \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed by \"${name}\".`.toLowerCase(),\r\n                            'Password Changed'.toLowerCase(),\r\n                            'Password'.toLowerCase(),\r\n                            selectedItem.email.toLowerCase(),\r\n                            selectedItem.name.toLowerCase(),\r\n                            name.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n\r\n                    const updatedItem = {\r\n                        ...selectedItem,\r\n                        email: inputEmail,\r\n                        name: inputName,\r\n                        type: selectedType,\r\n                        typeDisplay: selectedTypeDisplay,\r\n                        lastUpdatedDate: formattedTime,\r\n                    };\r\n\r\n                    const updatedData = data.map((item) => {\r\n                        if (item.id === id) {\r\n                            item.name = inputName;\r\n                            item.type = selectedType;\r\n                            item.typeDisplay = selectedTypeDisplay;\r\n                            item.lastUpdatedDate = formattedTime;\r\n                            item.pass = inputPassword;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setData(updatedData);\r\n                    const filteredData = applySearchFilter(updatedData, searchInputValue); // Apply search filter to updated data\r\n                    setFilteredData(filteredData);\r\n                    // console.log('Document set successfully');\r\n                    handleCloseModal();\r\n                    setShowSuccessModal(true);\r\n                } catch (error) {\r\n                    console.error('Error:', error);\r\n                }\r\n\r\n            }\r\n\r\n            else if (inputEmail !== selectedItem.email) {\r\n                const userCredential = await signInWithEmailAndPassword(auth, selectedItem.email, selectedItem.pass);\r\n                const user = userCredential.user;\r\n\r\n\r\n                // updateEmail(user, inputEmail)\r\n                //     .then(async () => {\r\n                //         // Email change successful\r\n                //         setIsDisabled(false);\r\n                //         setIsSaveLoading(false);\r\n                //         const documentRef = doc(db, 'accounts', selectedItem.email);\r\n\r\n                const oldDocumentRef = doc(db, 'accounts', selectedItem.email);\r\n                const newDocumentRef = doc(db, 'accounts', inputEmail);\r\n\r\n                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                const { datetime } = response.data;\r\n                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                setTime(formattedTime);\r\n\r\n                try {\r\n                    // Get the data from the old document\r\n                    const documentSnapshot = await getDoc(oldDocumentRef);\r\n                    if (documentSnapshot.exists()) {\r\n                        const documentData = documentSnapshot.data();\r\n\r\n                        // Merge the updated fields with the existing document data\r\n\r\n                        // Create the new document with the desired ID and copy the merged data\r\n\r\n                        const updatedFields = {\r\n                            email: inputEmail,\r\n                            name: inputName,\r\n                            type: selectedType,\r\n                            typeDisplay: selectedTypeDisplay,\r\n                            dateOfCreation: selectedItem.dateOfCreation,\r\n                            lastUpdatedDate: formattedTime,\r\n                            pass: inputPassword,\r\n                            active: true,\r\n\r\n                            // Add more fields as needed\r\n                        };\r\n\r\n                        await setDoc(newDocumentRef, updatedFields);\r\n                        await deleteDoc(oldDocumentRef);\r\n                        // Optionally, delete the old document\r\n\r\n                        try {\r\n                            const userCredential = await createUserWithEmailAndPassword(auth, inputEmail, inputPassword);\r\n                            // console.log('User created successfully:', userCredential.user);\r\n\r\n                            setIsDisabled(false);\r\n                            setIsSaveLoading(false);\r\n\r\n                            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                            const { datetime } = response.data;\r\n                            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                            const year = moment(datetime).format('YYYY');\r\n                            const month = moment(datetime).format('MM');\r\n                            const monthWithDay = moment(datetime).format('MM/DD');\r\n                            const date = moment(datetime).format('YYYY/MM/DD');\r\n                            const day = moment(datetime).format('DD');\r\n                            const time = moment(datetime).format('HH:mm');\r\n                            const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                            setTime(formattedTime);\r\n\r\n                            const logData = {\r\n                                message: `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`,\r\n                                timestamp: formattedTime,\r\n                                colorScheme: true,\r\n                                keywords: [\r\n                                    formattedTime.toLowerCase(),\r\n                                    `Updated: The email \"${selectedItem.email}\" of \"${selectedItem.name}\" has been changed to  \"${inputEmail}\", updated by \"${name}\".`.toLowerCase(),\r\n                                    'Updated'.toLowerCase(),\r\n                                    'Email'.toLowerCase(),\r\n                                    selectedItem.email.toLowerCase(),\r\n                                    selectedItem.name.toLowerCase(),\r\n                                    inputEmail.toLowerCase(),\r\n                                    monthWithDay.toLowerCase(),\r\n                                    name.toLowerCase(),\r\n                                    year.toLowerCase(),\r\n                                    month.toLowerCase(),\r\n                                    day.toLowerCase(),\r\n                                    date.toLowerCase(),\r\n                                    time.toLowerCase(),\r\n                                    timeWithMinutesSeconds.toLowerCase(),\r\n                                ],\r\n                            }\r\n                            try {\r\n                                await deleteUser(user);\r\n                                // console.log('User authentication record deleted successfully.');\r\n\r\n\r\n\r\n                                setIsDisabled(false);\r\n                                setIsSaveLoading(false);\r\n\r\n                                const signInCredential = await signInWithEmailAndPassword(\r\n                                    auth,\r\n                                    authEmail,\r\n                                    authPassword\r\n                                );\r\n\r\n                                const signedInUser = signInCredential.user;\r\n                                signedInUser\r\n\r\n                                const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                                const { datetime } = response.data;\r\n                                const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                                setTime(formattedTime);\r\n\r\n                                const updatedItem = {\r\n                                    ...selectedItem,\r\n                                    email: inputEmail,\r\n                                    name: inputName,\r\n                                    type: selectedType,\r\n                                    typeDisplay: selectedTypeDisplay,\r\n                                    lastUpdatedDate: formattedTime,\r\n                                };\r\n\r\n                                const updatedData = data.map((item) =>\r\n                                    item.id === id ? updatedItem : item\r\n                                );\r\n                                setData(updatedData);\r\n                                const filteredData = applySearchFilter(updatedData, searchInputValue);\r\n                                setFilteredData(filteredData);\r\n                                // console.log(authEmail, authPassword);\r\n\r\n\r\n                            } catch (error) {\r\n                                console.error('Error deleting user authentication record:', error);\r\n                            }\r\n\r\n                            addLogToCollection(logData);\r\n                            handleCloseModal();\r\n                            setShowSuccessModal(true);\r\n\r\n                            // console.log('Document ID successfully changed!');\r\n                        } catch (error) {\r\n                            console.error('Error creating user:', error);\r\n                        }\r\n                    } else {\r\n                        console.error('Old document does not exist!');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error('Error changing document ID:', error);\r\n                    setIsDisabled(false);\r\n                    setIsSaveLoading(false);\r\n                }\r\n\r\n\r\n                // })\r\n                // .catch((error) => {\r\n                //     console.error('Error changing email:', error);\r\n                // });\r\n            }\r\n\r\n\r\n\r\n\r\n            else {\r\n                try {\r\n                    const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail);\r\n                    if (signInMethods.length > 0) {\r\n                        // Email already exists                        \r\n                        setIsDisabled(false);\r\n                        setIsSaveLoading(false);\r\n                        setIsEmailDuplicate(true);\r\n                        setEmailError(false);\r\n                        validateEmail(false);\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    const errorCode = error.code;\r\n                    const errorMessage = error.message;\r\n                    console.log('An error occurred while checking the email existence. Please try again later.');\r\n                    // console.log(errorCode, errorMessage);\r\n                    setIsLoading(false);\r\n                    setIsDisabled(false);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n    const handleChangeEmailText = (text) => {\r\n        setInputEmail(text);\r\n    };\r\n\r\n\r\n\r\n    const isPasswordLengthLabel = () => {\r\n        return inputPassword.length >= 6;\r\n    };\r\n    // const handlePasswordChange = _.debounce((value) => {\r\n    //     setInputPassword(value);\r\n    // }, 50);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'accounts'), orderBy('dateOfCreation', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter(\r\n            (item) =>\r\n                item.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.typeDisplay.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce((text) => {\r\n        setSearchQuery(text);\r\n    }, 300);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    const showPopover = () => {\r\n        setShowNamePopover(true);\r\n    };\r\n\r\n    // Function to hide the Popover\r\n    const hidePopover = () => {\r\n        setShowNamePopover(false);\r\n    };\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n\r\n                >\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    />} */}\r\n\r\n\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: logo2,\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n                    {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                        <Flex direction=\"row-reverse\">\r\n                            <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                    <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                                </Text>;\r\n                            }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                                    <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                                        <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </Popover.Body>\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        </Flex>\r\n                    </Box> */}\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n                    {/* Sidebar */}\r\n                    {/* <SideDrawer\r\n                        selectedScreen={selectedScreen}\r\n                    /> */}\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0}>\r\n                        {/* Main Content Content */}\r\n                        <Input ref={searchInput} onChangeText={handleSearch} placeholder=\"Search\" bgColor={'white'} />\r\n                        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n                            <Box height={'100%'}>\r\n\r\n                                <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                                    <Box borderWidth={1} borderColor=\"gray.200\" borderRadius={4} overflow=\"hidden\" display={['none', 'none', 'none', '', '', '']}>\r\n                                        <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor={'#0642F4'} >\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Email</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Name</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Type of Account</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Date of Creation</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Last Updated</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Status</Text>\r\n                                            </Box>\r\n                                            <Box flex={1} padding={2}>\r\n                                                <Text fontWeight=\"bold\" color={'white'} >Operate</Text>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <PresenceTransition visible={true} initial={{\r\n                                        opacity: 0\r\n                                    }} animate={{\r\n                                        opacity: 1,\r\n                                        transition: {\r\n                                            duration: 250\r\n                                        }\r\n                                    }}>\r\n                                        {paginatedData.map((item) => (\r\n                                            <Box key={item.id} margin={[2, 2, 2, 0, 0, 0]} flexDirection={['column', 'column', 'column', 'row', 'row', 'row']} bgColor={item.active ? 'blue.200' : 'amber.500'} borderColor={'gray.200'} borderWidth={[2, 2, 2, 1, 1, 1]} paddingBottom={1} marginRight={0}>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Email</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.email}</Text>\r\n\r\n\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Name</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.name}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}  > Type of Account</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.typeDisplay}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Date of Creation</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.dateOfCreation}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Last Updated</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.lastUpdatedDate}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]} > Status</Text>\r\n                                                        </Box>\r\n                                                        <Text flex={[5, 5, 5, 0, 0, 0]} borderBottomWidth={[1, 1, 1, 0, 0, 0]} borderBottomColor={'blueGray.400'}>{item.active ? 'Enabled' : 'Disabled'}</Text>\r\n                                                    </Box>\r\n\r\n                                                </Box>\r\n                                                <Box flex={1} padding={[0, 0, 0, 2, 2, 2]}>\r\n                                                    <Box flexDirection={['row', 'row', 'row', '', '', '']}>\r\n                                                        <Box display={['block', 'block', 'block', 'none', 'none', 'none']} flex={2} borderColor=\"gray.200\" bgColor={'#7b9cff'} marginRight={0}>\r\n                                                            <Text fontWeight=\"bold\" color={'white'} fontSize={[12, 14, 14, 0, 0, 0]}> Operate</Text>\r\n                                                        </Box>\r\n                                                        <HStack space={1} flex={[5, 5, 5, 1, 1, 1]}>\r\n                                                            <Button\r\n                                                                onPress={() => handleEdit(item.id)}\r\n                                                                flex={[1, 1, 1, 2, 2, 2]}\r\n                                                                padding={1}\r\n                                                                justifyContent='center'\r\n                                                                alignItems='center'\r\n                                                                flexDirection='row'>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Edit</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"edit\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                            {item.active ? (\r\n                                                                <Button onPress={() => handleOpenDisableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'amber'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Disable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"block\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            ) : (\r\n                                                                <Button onPress={() => handleOpenEnableModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'success'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                    <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Enable</Text>\r\n                                                                    <Icon as={<MaterialIcons name={\"check-circle\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                                </Button>\r\n                                                            )}\r\n                                                            <Button onPress={() => handleOpenDeleteModal(item.id)} flex={[1, 1, 1, 2, 2, 2]} padding={1} colorScheme={'error'} _text={{ fontSize: [0, 0, 0, 0, 12, 14], }}>\r\n                                                                <Text textAlign={'center'} fontSize={[0, 0, 0, 0, 12, 14]} color={'white'}>Delete</Text>\r\n                                                                <Icon as={<MaterialIcons name={\"delete\"} />} color={'white'} size={[5, 5, 5, 5, 0]} />\r\n                                                            </Button>\r\n                                                        </HStack>\r\n                                                    </Box>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n\r\n                                        ))}\r\n                                    </PresenceTransition>\r\n                                    <DataTable.Pagination\r\n                                        page={page}\r\n                                        numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                        onPageChange={(page) => setPage(page)}\r\n                                        label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                        optionsPerPage={optionsPerPage}\r\n                                        itemsPerPage={itemsPerPage}\r\n                                        setItemsPerPage={setItemsPerPage}\r\n                                        showFastPagination\r\n                                        optionsLabel={'Rows per page'}\r\n                                    />\r\n                                </DataTable>\r\n                            </Box>\r\n                            <Modal isOpen={modalVisible} onClose={handleCloseModal}>\r\n                                <Modal.Content>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header borderBottomWidth={0}>Edit Acccount</Modal.Header>\r\n                                    <Modal.Body>\r\n\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <VStack><Text>Email: </Text> <Input color={!isEmailDuplicate ? 'black' : 'red.500'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputEmail} ref={inputEmailRef} onChangeText={handleInputEmailChange} /></VStack>\r\n                                                {!validateEmail() && (\r\n                                                    <Text color={'#D22730'} bold>Invalid Email!</Text>\r\n                                                )}\r\n                                                {isEmailDuplicate && (\r\n                                                    <Text color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Name: </Text> <Input borderBottomColor={inputName !== '' ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputName} ref={inputNameRef} onChangeText={handleInputNameChange} /></VStack>\r\n                                                {inputName === '' && (\r\n                                                    <Text color={'#D22730'} bold>Empty Name!</Text>\r\n                                                )}\r\n                                                <VStack><Text>Password: </Text>\r\n                                                    <Input borderBottomColor={isPasswordLengthLabel() ? 'green.300' : 'red.500'} borderBottomWidth={2} defaultValue={inputPassword} ref={inputPassRef} onChangeText={handleInputPassChange} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                                                        <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" />\r\n                                                    </Pressable>} />\r\n                                                </VStack>\r\n\r\n                                                <VStack><Text>Type of Account:</Text>\r\n                                                    <HStack space={1} justifyContent=\"center\" >\r\n                                                        <Button _hover={{ bgColor: 'booking' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType4} bgColor={'booking' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Booking</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'staff' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountType3} bgColor={'staff' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Staff</Text></Button>\r\n\r\n                                                        <Button _hover={{ bgColor: 'admin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeAd} bgColor={'admin' === selectedItemType ? '#0642F4' : '#CED5EA'}  ><Text style={{ color: 'white', }}>Admin</Text></Button>\r\n\r\n\r\n\r\n                                                    </HStack>\r\n                                                    <HStack space={1} justifyContent=\"center\" marginTop={1}>\r\n                                                        <Button _hover={{ bgColor: 'superadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeSpAd} bgColor={'superadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Super Admin</Text></Button>\r\n                                                        <Button _hover={{ bgColor: 'devadmin' === selectedItemType ? '#0642F4' : 'blueGray.400', }} size=\"sm\" borderWidth='1' borderColor='white' w={{\r\n                                                            base: 90,\r\n                                                            md: 90,\r\n                                                            sm: 90,\r\n                                                        }} onPress={handleToggleAccountTypeDevAd} bgColor={'devadmin' === selectedItemType ? '#0642F4' : '#CED5EA'} ><Text style={{ color: 'white', }}>Dev Admin</Text></Button>\r\n                                                    </HStack>\r\n                                                </VStack>\r\n\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseModal} flex={1} padding={1} margin={1}>Close</Button>\r\n                                        <Button onPress={() => handleSave(selectedItem.id)} disabled={isDisabled} flex={1} padding={1} colorScheme={'success'} margin={1}>{isSaveLoading ? <Spinner color=\"white\" size={21} /> : 'Save'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDisableModal} onClose={handleCloseDisableModal}>\r\n                                <Modal.Content bgColor={'amber.500'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'amber.500'} borderBottomWidth={0} _text={{ color: 'white', }}>Disable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'amber.500'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text color={'white'}>Email: {selectedItem.email}</Text>\r\n                                                <Text color={'white'}>Name: {selectedItem.name}</Text>\r\n                                                <Text color={'white'}>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'amber.500'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDisable(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={showDeleteModal} onClose={handleCloseDeleteModal}>\r\n                                <Modal.Content bgColor={'error.300'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'error.300'} borderBottomWidth={0} >Delete Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'error.300'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text >Email: {selectedItem.email}</Text>\r\n                                                <Text >Name: {selectedItem.name}</Text>\r\n                                                <Text >Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'error.300'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseDisableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleDelete(selectedItem.id)} colorScheme={'error'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal isOpen={showEnableModal} onClose={handleCloseEnableModal}>\r\n                                <Modal.Content bgColor={'success.200'}>\r\n                                    <Modal.CloseButton />\r\n                                    <Modal.Header bgColor={'success.200'} borderBottomWidth={0}>Enable Account?</Modal.Header>\r\n                                    <Modal.Body bgColor={'success.200'}>\r\n                                        {selectedItem && (\r\n                                            <VStack>\r\n                                                <Text>Email: {selectedItem.email}</Text>\r\n                                                <Text>Name: {selectedItem.name}</Text>\r\n                                                <Text>Type of Account: {selectedItem.typeDisplay}</Text>\r\n                                                {/* Add additional input fields or form components to edit the data */}\r\n                                            </VStack>\r\n                                        )}\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'success.200'} borderTopWidth={0}>\r\n                                        <Button onPress={handleCloseEnableModal} flex={1} padding={1} margin={1}>No</Button>\r\n                                        <Button onPress={() => handleEnable(selectedItem.id)} colorScheme={'success'} flex={1} padding={1} margin={1} disabled={isDisabled}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                                        {/* Add a save button or other action button to update the data */}\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                            <Modal isOpen={showSuccessModal} onClose={() => setShowSuccessModal(false)} size=\"lg\"  >\r\n                                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                                    <Modal.Body >\r\n                                        <Text color=\"white\" textAlign={'center'}>The account update was successful.</Text>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowSuccessModal(false)}>\r\n                                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal.Content>\r\n                            </Modal>\r\n                        </ScrollView>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput } from 'react-native';\r\nimport {\r\n  Input,\r\n  Icon,\r\n  Stack,\r\n  Pressable,\r\n  Center,\r\n  PresenceTransition,\r\n  NativeBaseProvider,\r\n  Button,\r\n  Box,\r\n  HStack,\r\n  Image,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Title,\r\n  Content,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  ScrollView,\r\n  SectionList,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Modal,\r\n  Divider,\r\n  Popover\r\n} from \"native-base\";\r\nimport {\r\n  FontAwesome,\r\n  Entypo,\r\n  MaterialIcons,\r\n  Ionicons,\r\n  Fontisto,\r\n  EvilIcons,\r\n  AntDesign,\r\n  MaterialCommunityIcons,\r\n  Feather,\r\n  FontAwesome5Brands,\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc } from '../../firebasecontrol'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'ADD C-HUB ACCOUNT'\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddAccount() {\r\n  const dispatch = useDispatch();\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [show, setShow] = React.useState(false);\r\n  const [show2, setShow2] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [isSelectedLogs, setIsSelectedLogs] = useState(false);\r\n  const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(true);\r\n  const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n  const [isSelected3, setIsSelected3] = useState(false);\r\n  const [isSelected4, setIsSelected4] = useState(false);\r\n\r\n  const [accountTypeAdmin, setAccountTypeAdmin] = useState(false);\r\n  const [accountTypeBooking, setAccountTypeBooking] = useState(false);\r\n  const [accountTypeSales, setAccountTypeSales] = useState(false);\r\n  const [accountTypeHamanasu, setAccountTypeHamanasu] = useState(false);\r\n  const [accountTypeApi, setAccountTypeApi] = useState(false);\r\n\r\n\r\n  const [nameVerify, setNameVerify] = useState(false);\r\n  const [emailVerify, setEmailVerify] = useState(false);\r\n  const [passwordVerify, setPasswordVerify] = useState(false);\r\n  const [confirmPasswordVerify, setConfirmPasswordVerify] = useState(false);\r\n  const [accountTypeVerify, setAccountTypeVerify] = useState(false);\r\n  const [isEmailDuplicate, setIsEmailDuplicate] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  // const [inputName, setInputName] = useState('');\r\n  // const [inputEmail, setInputEmail] = useState('');\r\n  // const [inputPassword, setInputPassword] = useState('');\r\n  // const [inputConfirmPassword, setInputConfirmPassword] = useState('');\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n  const [typeOfAccountDisplay, setTypeOfAccountDisplay] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const inputRefs = useRef([]);\r\n\r\n\r\n  const inputName = useRef(null);\r\n  const inputEmail = useRef(null);\r\n  const inputPassword = useRef(null);\r\n  const inputConfirmPassword = useRef(null);\r\n\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n  const [passwordMatchLabel, setPasswordMatchLabel] = useState(true);\r\n  const [passwordLengthLabel, setPasswordLengthLabel] = useState(false);\r\n  const [isNameEmpty, setIsNameEmpty] = useState(true);\r\n\r\n  const [formattedTime, setFormattedTime] = useState('');\r\n\r\n  const [time, setTime] = useState('');\r\n  const fetchTimeRef = useRef();\r\n  const [isIntervalActive, setIsIntervalActive] = useState(true);\r\n\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isSelectedLogs, isSelectedAddAccount, isSelectedAccountList]);\r\n\r\n\r\n\r\n\r\n  const SuccessModal = () => {\r\n    return <Center>\r\n      <Modal isOpen={showModal} onClose={closeModal} size=\"lg\"  >\r\n        <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n          <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n          <Modal.Body >\r\n\r\n            <Text textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n            <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={closeModal} _text={{ color: 'black', }}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n  }, [typeOfAccount]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\")\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const firebaseFirestore = getFirestore();\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const firestore = getFirestore();\r\n      const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n  //   const interval = setInterval(fetchTime, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   const fetchTime = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n  //       const { datetime } = response.data;\r\n  //       const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n  //       setTime(formattedTime);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching time:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   const interval = setInterval(() => {\r\n  //     if (isIntervalActive) {\r\n  //       fetchTime();\r\n  //     }\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //   };\r\n  // }, [isIntervalActive]);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsIntervalActive(false); // Pause the interval when the modal is opened\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setIsIntervalActive(true); // Resume the interval when the modal is closed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleAddAccount = async () => {\r\n    setIsDisabled(true);\r\n    setIsLoading(true);\r\n    if (\r\n      passwordLengthLabel === false ||\r\n      passwordMatch === false ||\r\n      passwordMatchLabel === false ||\r\n      validateEmail() === false ||\r\n      isNameEmpty === true ||\r\n      typeOfAccount === ''\r\n    ) {\r\n      setTimeout(() => {\r\n        // Reset loading and disabled state\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        const signInMethods = await fetchSignInMethodsForEmail(auth, inputEmail.current?.value);\r\n        if (signInMethods.length > 0) {\r\n          // Email already exists\r\n          setIsEmailDuplicate(true);\r\n          setEmailError(false);\r\n          validateEmail(false);\r\n          setIsLoading(false);\r\n          setIsDisabled(false);\r\n          return;\r\n        }\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        await createUserWithEmailAndPassword(authForCreateUser, inputEmail.current.value, inputPassword.current.value)\r\n          .then((userCredential) => {\r\n\r\n            const user = userCredential.user;\r\n\r\n\r\n\r\n            try {\r\n\r\n              // setTime(formattedTime);\r\n\r\n              const customID = inputEmail.current.value; // Replace 'your-custom-id' with your desired custom ID\r\n              const docRef = doc(db, 'accounts', customID); // Replace 'myCollection' with the name of your desired collection\r\n              const logData = {\r\n                message: `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`,\r\n                timestamp: formattedTime,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  `Account Added: \"${name}\" added an account for \"${inputName.current?.value}\" with \"${typeOfAccountDisplay}\" privilege.`.toLowerCase(),\r\n                  'Account Added'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputName.current.value.toLowerCase(),\r\n                  typeOfAccountDisplay.toLowerCase(),\r\n                  name.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n                colorScheme: true,\r\n              };\r\n\r\n              setDoc(docRef, {\r\n                // Specify the data you want to add to the document\r\n                email: inputEmail.current?.value,\r\n                name: inputName.current?.value,\r\n                pass: inputPassword.current?.value,\r\n                type: typeOfAccount,\r\n                typeDisplay: typeOfAccountDisplay,\r\n                dateOfCreation: formattedTime,\r\n                lastUpdatedDate: formattedTime,\r\n                active: true,\r\n                // ...\r\n              });\r\n\r\n              addLogToCollection(logData);\r\n              console.log(logData);\r\n              console.log(formattedTime);\r\n              setIsLoading(false);\r\n              setIsDisabled(false);\r\n              handleClear();\r\n              openModal();\r\n\r\n              console.log('Document added with custom ID: ', customID);\r\n            } catch (error) {\r\n              console.error('Error adding document: ', error);\r\n            }\r\n\r\n\r\n\r\n\r\n            // Reset loading and disabled state\r\n\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('An error occurred during sign-up. Please try again later.');\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            setIsDisabled(false);\r\n          });\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log('An error occurred while checking the email existence. Please try again later.');\r\n        // console.log(errorCode, errorMessage);\r\n        setIsLoading(false);\r\n        setIsDisabled(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    const text = '';\r\n\r\n    inputName.current.value = \"\";\r\n    inputEmail.current.value = \"\";\r\n    inputPassword.current.value = \"\";\r\n    inputConfirmPassword.current.value = \"\";\r\n\r\n    setEmailError(false);\r\n    setIsEmailDuplicate(false);\r\n    setIsNameEmpty(true);\r\n\r\n    setPasswordLengthLabel(false);\r\n    setPasswordMatch(false);\r\n    setPasswordMatchLabel(true);\r\n\r\n    setTypeOfAccount('');\r\n    setTypeOfAccountDisplay('');\r\n    // setInputConfirmPassword('');\r\n    // setInputEmail('');\r\n    // setInputName('');\r\n    // setInputPassword('');\r\n\r\n\r\n  };\r\n\r\n  const registerInputRef = (index) => (ref) => {\r\n    inputRefs.current[index] = ref;\r\n  };\r\n\r\n  const handleToggleAccountTypeAdmin = () => {\r\n    const text = 'admin';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Admin');\r\n  };\r\n\r\n  const handleToggleAccountTypeBooking = () => {\r\n    const text = 'booking';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Booking');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeSales = () => {\r\n    const text = 'sales';\r\n\r\n\r\n    setTypeOfAccount(text);\r\n\r\n    setTypeOfAccountDisplay('Sales');\r\n  };\r\n\r\n  const handleToggleAccountTypeHamanasu = () => {\r\n    const text = 'hamanasu';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Hamanasu');\r\n  };\r\n\r\n\r\n  const handleToggleAccountTypeApi = () => {\r\n    const text = 'api';\r\n\r\n\r\n\r\n    setTypeOfAccount(text);\r\n    setTypeOfAccountDisplay('Api');\r\n  };\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(auth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\")\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(auth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\")\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = auth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n  const listenForNameChange = (documentId) => {\r\n    const userRef = doc(db, 'accounts', documentId);\r\n\r\n    const unsubscribe = onSnapshot(userRef, (doc) => {\r\n      if (doc.exists()) {\r\n        const name = doc.data().name;\r\n        const type = doc.data().type;\r\n        setName(name);\r\n        setType(type);\r\n        // Perform any necessary actions with the name value\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    });\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePasswordChange = () => {\r\n    // const inputPasswordValue = inputPassword.current?.value;\r\n    // const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    // const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    // setPasswordMatch(\r\n    //   inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    // );\r\n    // setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    // setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n    handlePasswordStatus();\r\n  };\r\n\r\n  const handleConfirmPasswordChange = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n  };\r\n\r\n\r\n  const handlePasswordStatus = () => {\r\n    const inputPasswordValue = inputPassword.current?.value;\r\n    const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n    const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n    setPasswordMatch(\r\n      inputPasswordValue === inputConfirmPasswordValue && inputPasswordValueLength >= 6\r\n    );\r\n    setPasswordMatchLabel(inputPasswordValue === inputConfirmPasswordValue);\r\n    setPasswordLengthLabel(inputPasswordValueLength >= 6);\r\n\r\n  };\r\n\r\n  // const isPasswordMatch = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputConfirmPasswordValue = inputConfirmPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n\r\n  //   return (\r\n  //     inputPasswordValue === inputConfirmPasswordValue &&\r\n  //     inputPasswordValueLength >= 6\r\n  //   );\r\n  // };\r\n\r\n  // const isAccountType = () => {\r\n  //   return accountTypeDevAd || accountTypeSpAd || accountTypeAd || accountType3 || accountType4 === true;\r\n  // };\r\n\r\n  // const isPasswordMatchLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPassword.current?.value === inputConfirmPassword.current?.value;\r\n  // };\r\n\r\n  // const isPasswordLengthLabel = () => {\r\n  //   const inputPasswordValue = inputPassword.current?.value;\r\n  //   const inputPasswordValueLength = inputPasswordValue ? inputPasswordValue.length : 0;\r\n  //   return inputPasswordValueLength >= 6;\r\n  // };\r\n\r\n\r\n  const handleEmailChange = () => {\r\n    setIsEmailDuplicate(false);\r\n    handleEmailSubmit();\r\n  };\r\n\r\n  const handleNameChange = () => {\r\n    setIsNameEmpty(inputName.current?.value === '')\r\n  };\r\n\r\n\r\n  const validateEmail = () => {\r\n    const emailValue = inputEmail.current?.value;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const isValid = emailRegex.test(emailValue);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleEmailSubmit = (value) => {\r\n    setEmailError(validateEmail(value));\r\n\r\n    if (emailError) {\r\n      // console.log(emailError);\r\n      // setEmailError(validateEmail());\r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(auth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\")\r\n      setEmail('');\r\n      setName('');\r\n    }).catch((error) => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  const sidebarListData = [{\r\n    title: \"VEHICLE INFORMATION INPUT\",\r\n    data: [\"Add New Vehicle\", \"Vehicle List\",]\r\n  },];\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(true);\r\n  };\r\n\r\n  // Function to hide the Popover\r\n  const hidePopover = () => {\r\n    setShowNamePopover(false);\r\n  };\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SuccessModal />\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'}\r\n\r\n        >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n\r\n              {/* <AddAccount/> */}\r\n\r\n              <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" >\r\n\r\n\r\n                <Box bgColor='#A6BCFE' w='100%' h='100%' margin={1}>\r\n                  <Center flex={1}>\r\n                    <Center px=\"3\">\r\n\r\n\r\n                      <Stack space={4} w=\"100%\" alignItems=\"center\">\r\n                        <Text marginTop={5} marginBottom={1} fontSize={[12, 14, 16]} color={'white'} bold={'center'}>ADD ACCOUNT FOR REAL MOTOR JAPAN CONTROL HUB</Text>\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputName} onSubmitEditing={handleAddAccount} onChangeText={handleNameChange} borderColor={'white'} borderBottomColor={!isNameEmpty ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<AntDesign name=\"idcard\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Name\" placeholderTextColor='white' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputEmail} onChangeText={handleEmailChange} onSubmitEditing={handleAddAccount} color={!isEmailDuplicate ? 'white' : 'red.500'} borderColor={'white'} borderBottomColor={validateEmail() ? 'green.300' : 'red.500'} borderBottomWidth={2} fontSize='16' InputLeftElement={<Icon as={<MaterialIcons name=\"person\" />} size={5} ml=\"2\" color=\"white\" />} placeholder=\"Email\" placeholderTextColor='white' />\r\n\r\n\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordLengthLabel ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handlePasswordChange} fontSize='16' borderColor={'white'} type={show ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow(!show)} >\r\n                          <Icon as={<MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Password\" placeholderTextColor='gray' color='white' />\r\n                        <Input w={{\r\n                          base: \"90%\",\r\n                          md: \"90%\",\r\n                          sm: \"90%\",\r\n                        }} ref={inputConfirmPassword} onSubmitEditing={handleAddAccount} borderBottomColor={passwordMatch ? 'green.300' : 'red.500'} borderBottomWidth={2} onChangeText={handleConfirmPasswordChange} fontSize='16' borderColor={'white'} type={show2 ? \"text\" : \"password\"} InputLeftElement={<Icon as={<FontAwesome name={show2 ? \"unlock-alt\" : \"lock\"} />} size={5} ml=\"2\" color=\"white\" />} InputRightElement={<Pressable onPress={() => setShow2(!show2)}>\r\n                          <Icon as={<MaterialIcons name={show2 ? \"visibility\" : \"visibility-off\"} />} size={5} mr=\"2\" color=\"white\" />\r\n                        </Pressable>} placeholder=\"Confirm Password\" placeholderTextColor='white' color='white' />\r\n                        {!validateEmail() && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Invalid Email!</Text>\r\n                        )}\r\n                        {isEmailDuplicate && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Email already in use! Please use a different email!</Text>\r\n                        )}\r\n                        {!passwordLengthLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Password must be at least 6 characters or above!</Text>\r\n                        )}\r\n                        {!passwordMatchLabel && (\r\n                          <Text fontSize={[12, 14, 16]} color={'#D22730'} bold>Passwords do not match!</Text>\r\n                        )}\r\n\r\n                        <Text fontSize={16} color={'white'} bold>ACCOUNT TYPE:                                                             </Text>\r\n                        <Box borderColor={typeOfAccount !== '' ? 'green.300' : 'red.500'} borderWidth={2}>\r\n                          <Flex wrap=\"wrap\" flexDir={'row'} justifyContent=\"center\" space={1}>\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'hamanasu' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeHamanasu}\r\n                              bgColor={typeOfAccount == 'hamanasu' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Hamanasu</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'booking' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeBooking}\r\n                              bgColor={typeOfAccount == 'booking' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Booking</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'sales' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeSales}\r\n                              bgColor={typeOfAccount == 'sales' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Sales</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'admin' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeAdmin}\r\n                              bgColor={typeOfAccount == 'admin' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>Admin</Text>\r\n                            </Button>\r\n\r\n                            <Button\r\n                              margin={1}\r\n                              _hover={{ bgColor: typeOfAccount == 'api' ? '#0642F4' : 'blueGray.400' }}\r\n                              size=\"sm\"\r\n                              borderWidth='1'\r\n                              borderColor='white'\r\n                              w={{ base: 90, md: 90, sm: 90 }}\r\n                              onPress={handleToggleAccountTypeApi}\r\n                              bgColor={typeOfAccount == 'api' ? '#0642F4' : '#CED5EA'}\r\n                            >\r\n                              <Text style={{ color: 'white', }}>API</Text>\r\n                            </Button>\r\n                          </Flex>\r\n                        </Box>\r\n                        <HStack space={1} justifyContent=\"center\" marginBottom={5}>\r\n                          <Button _hover={{ bgColor: '#D9D9D9', }} _pressed={{ bgColor: '#D9D9D9', }} _focus={{ bgColor: '#D9D9D9', }} bgColor='warmGray.200' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleClear} ><Text style={{ color: 'gray', }}>Clear</Text></Button>\r\n                          <Button _hover={{ bgColor: '#537EFC', }} _pressed={{ bgColor: '#537EFC', }} _focus={{ bgColor: '#537EFC', }} bgColor='#7b9cff' size=\"lg\" borderWidth='1' borderColor='white' w={{\r\n                            base: 130,\r\n                            md: 130,\r\n                            sm: 130,\r\n                          }} onPress={handleAddAccount} disabled={isDisabled}>{isLoading ? <Spinner color=\"white\" size={16} /> : <Text style={{ color: 'white', }}>Add Acccount</Text>}</Button>\r\n\r\n                        </HStack>\r\n\r\n\r\n                      </Stack>\r\n\r\n                    </Center>\r\n\r\n\r\n                  </Center>\r\n\r\n\r\n                </Box>\r\n\r\n              </Box>\r\n\r\n            </ScrollView>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","/* The above code is a JavaScript code snippet that imports various components and libraries from the\r\nNativeBase framework and React Native for building mobile applications. It also includes imports for\r\nicons from different icon libraries like AntDesign, FontAwesome, Ionicons, etc. Additionally, it\r\nimports functions and utilities from Firebase for authentication, Firestore database operations, and\r\nstorage. */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  Select,\r\n  CheckIcon,\r\n  ScrollView,\r\n  PresenceTransition,\r\n  Drawer,\r\n  InputLeftAddon,\r\n  Heading,\r\n  FormControl,\r\n  WarningOutlineIcon\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useCallback, useMemo, useLayoutEffect } from 'react';\r\nimport { Dimensions, TouchableOpacity, StyleSheet, Platform, View } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject, } from 'firebase/storage';\r\nimport { DragSortableView } from \"react-native-drag-sort\";\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { cloneDeep } from 'lodash';\r\nimport ImageMarker, { Position } from \"react-native-image-marker\";\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n\r\n\r\nimport {\r\n  // setModelData,\r\n  setMakeData,\r\n  setIsLoading,\r\n  setSelectedImages,\r\n  setIsAddPhotoVisible,\r\n  setAddAnotherImages,\r\n  setLoginName,\r\n  setDeleteImageVisible,\r\n  setExpenseNameData,\r\n  setPaidToData,\r\n  setCurrentDate,\r\n  setSupplyChainsCostsData,\r\n  setSelectedExpenseName,\r\n  setSelectedPaidTo,\r\n  setLoadingModalVisible,\r\n  setIsSuccessModalOpen,\r\n  setIsUpdateSuccessModalOpen\r\n\r\n} from './redux/store'\r\n\r\n\r\nimport \"setimmediate\";\r\n\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css'; // Import a CSS effect for the lazy loading transition\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\n\r\nimport { AutocompleteDropdown, AutocompleteDropdownContextProvider } from 'react-native-autocomplete-dropdown';\r\nimport { nanoid } from 'nanoid';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n\r\nconst childrenWidth = 76;\r\nconst childrenHeight = 76;\r\nconst marginChildrenTop = 7;\r\nconst marginChildrenBottom = 0;\r\n\r\nlet globalJpyToUsd = '';\r\nlet globalUsdToJpy = '';\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedPaidTo = '';\r\nlet globalModelDataVariable = [];\r\nlet globalMakeDataVariable = [];\r\nlet globalRegYearDataVariable = [];\r\nlet globalPortDataVariable = [];\r\nlet globalSalesDataVariable = [];\r\nlet globalBuyerDataVariable = [];\r\nlet globalTransmissionDataVariable = [];\r\nlet globalExteriorColorDataVariable = [];\r\nlet globalFuelDataVariable = [];\r\nlet globalDriveTypeDataVariable = [];\r\nlet globalBodyTypeDataVariable = [];\r\nlet globalSelectedImages = [];\r\nlet globalVehicleFolderName = '';\r\nlet selectedScreen = 'ADD NEW VEHICLE'\r\nlet globalReferenceNumber = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalFobPrice = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst UpdateSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isUpdateSuccessModalOpen = useSelector((state) => state.isUpdateSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isUpdateSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UploadSuccessModal = ({ onClose, bodyText, headerText }) => {\r\n\r\n  const isSuccessModalOpen = useSelector((state) => state.isSuccessModalOpen);\r\n\r\n  return (\r\n    <Modal isOpen={isSuccessModalOpen} onClose={onClose} >\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text textAlign={'center'} color={'#102A43'} bold>\r\n            😊😎 Success! 😎😊\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          justifyContent={'center'}\r\n          alignItems={'center'}\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              {headerText}\r\n              {/* Vehicle Added! */}\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              {bodyText}\r\n              {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n\r\n    <Box\r\n      position=\"absolute\"\r\n      top={0}\r\n      bottom={0}\r\n      left={0}\r\n      right={0}\r\n      backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n      flex={1}\r\n      display={loadingModalVisible ? '' : 'none'}\r\n    >\r\n      {/* Content within the modal */}\r\n      <Center flex={1}>\r\n        <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner size=\"lg\" color=\"white\" />\r\n          <Text color={'white'} selectable={false}>Loading, please wait!</Text>\r\n        </Box>\r\n      </Center>\r\n    </Box>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Pressable onPress={handleModalCalendarOpen} flex={3}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </Pressable>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SupplyChainsCosts = ({\r\n  handleAddExpenseNameTextChange,\r\n  textAreaAddExpenseName,\r\n  inputExpenseAmount,\r\n  handleInputExpenseAmountChange,\r\n  handleAddPaidToTextChange,\r\n  paidToData,\r\n  inputCarNotes,\r\n\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const [sccData, setSccData] = useState([]);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const [supplyChainsCostsModalVisible, setSupplyChainsCostsModalVisible] = useState(false);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n  };\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n  };\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = supplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [supplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    setSupplyChainsCostsModalVisible(false);\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    setSupplyChainsCostsModalVisible(true);\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={3}\r\n        flex={1}\r\n        onPress={handleModalSupplyChainsCostsOpen}\r\n        variant={'outline'}\r\n        _text={{ color: 'black', }}\r\n        leftIcon={<MaterialIcons name=\"payments\" size={20} color=\"black\" />}>\r\n        <Text>Supply Chains Costs: ¥{totalAmount}</Text>\r\n      </Button>\r\n\r\n      <Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n        <Modal.Content bgColor={'white'} w={'50%'} h={'auto'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'}>\r\n            <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n\r\n\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Box height={'full'}>\r\n              <Box paddingBottom={5}>\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='ExpenseName'\r\n                      handleAddTextChange={handleAddExpenseNameTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Expense Name'\r\n                      dataName={'expenseName'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Expense Name\"\r\n                      data={expenseNameData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n                  </Box>\r\n\r\n                  <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n                  {/* <Select\r\n                    // ref={selectExpenseNameRef}\r\n                    key={`expenseName${resetKey}`}\r\n                    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    onValueChange={(value) => {\r\n                      globalSelectedExpenseName = value\r\n                    }}\r\n                    accessibilityLabel=\"Choose Expense Name\"\r\n                    placeholder=\"Choose Expense Name\"\r\n                    _selectedItem={{\r\n                      bg: \"teal.600\",\r\n                      endIcon: <CheckIcon size=\"5\" />\r\n                    }}>\r\n                    {expenseNameData.map((item) => (\r\n\r\n                      <Select.Item key={item} label={item} value={item} />\r\n\r\n                    ))}\r\n                  </Select> */}\r\n\r\n\r\n                </Box>\r\n\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1} >Amount</Text>\r\n                  </Box>\r\n                  <Input\r\n                    borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                    flex={3}\r\n                    ref={inputExpenseAmount}\r\n                    onChangeText={handleInputExpenseAmountChange}\r\n                    placeholder=\"Amount\"\r\n                    bgColor={'white'}\r\n                    placeholderTextColor={'muted.400'}\r\n                    InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                  </Box>\r\n\r\n                  <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n                </Box>\r\n\r\n                <Box flexDir={'row'} paddingBottom={1} >\r\n                  <Box bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                    <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n\r\n\r\n                    <SupplyChainsCostsSortAndAddModal\r\n                      docName='PaidTo'\r\n                      handleAddTextChange={handleAddPaidToTextChange}\r\n                      textAreaAdd={textAreaAddExpenseName}\r\n                      title='Paid To'\r\n                      dataName={'paidTo'}\r\n                      databaseInit={projectExtensionFirestore}\r\n                      headerText=\"Rearrange/Add Paid To\"\r\n                      data={paidToData}\r\n                      handleFirstModalClose={handleFirstModalClose}\r\n                      handleFirstModalOpen={handleFirstModalOpen}\r\n                    />\r\n\r\n                  </Box>\r\n\r\n                  <SelectPaidTo paidToIsError={paidToIsError} />\r\n                </Box>\r\n\r\n                <Button\r\n                  onPress={handleSave}\r\n                  colorScheme={'success'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                  margin={1}\r\n                  flex={1}\r\n                  width={'40%'}\r\n                  alignSelf={'center'}\r\n                  leftIcon={<MaterialIcons name='add' color='white' size={20} />}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Box flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </Box>\r\n                {supplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n\r\n                  return (\r\n                    <Box key={index} flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <Box flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleEditPress(expenseData)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'primary.700' : 'primary.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Edit</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n\r\n                        <Pressable flex={1} margin={1} onPress={() => handleDeleteItem(expenseData.expenseName)}>\r\n                          {({\r\n                            isHovered,\r\n                            isFocused,\r\n                            isPressed\r\n                          }) => {\r\n                            return <Box flex={1} bgColor={isHovered ? 'error.800' : 'error.500'} borderRadius={3}>\r\n                              <Text flex={1} textAlign={'center'} color={'white'}>Delete</Text>\r\n                            </Box>\r\n                          }}\r\n                        </Pressable>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n          </Modal.Body>\r\n\r\n\r\n          <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n            <Box flex={4} />\r\n            <Button\r\n              onPress={handleModalSupplyChainsCostsClose}\r\n              colorScheme={'gray'}\r\n              size={'sm'}\r\n              borderRadius={5}\r\n              margin={1}\r\n              flex={1}\r\n            >\r\n              Close\r\n            </Button>\r\n          </HStack>\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'amber.600'} bold>\r\n                Warning!\r\n              </Text>\r\n              <Text color={'amber.600'}>\r\n                Are you sure you want to clear?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        right={0}\r\n        bg=\"error.500\"\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        display={isAddPhotoVisible ? 'none' : 'block'}\r\n      >\r\n        <Pressable onPress={handleModalDeleteOpen} flex={1}>\r\n          <Icon as={<Ionicons name=\"trash-sharp\" />} size={5} color=\"white\" cursor={'pointer'} />\r\n        </Pressable>\r\n      </Box>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.500'} bold>\r\n                Alert!\r\n              </Text>\r\n              <Text color={'danger.500'}>\r\n                Are you sure you want to clear <Text color={'danger.500'} bold>{selectedImages.length} </Text>selected image(s)?\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalDeleteClose} colorScheme={'warmGray'} flex={1} size={'sm'} borderRadius={5}>\r\n                No\r\n              </Button>\r\n              <Button onPress={handleClearImages} flex={1} size={'sm'} colorScheme={'error'} borderRadius={5}>\r\n                Clear Images\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"white\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"white\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'}>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SuccessFailModal = ({ isSuccessOpen, isFailedOpen, handleFailModalClose, inputStockIDNumber, handleSuccessModalClose }) => {\r\n  const okSuccessButtonRef = useRef(null);\r\n  const okFailButtonRef = useRef(null);\r\n\r\n  return (\r\n    <><Modal isOpen={isSuccessOpen} onClose={handleSuccessModalClose} initialFocusRef={okSuccessButtonRef} finalFocusRef={inputStockIDNumber}>\r\n      <Modal.Content bgColor={'green.100'}>\r\n        <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n          <Text color={'#102A43'} bold>\r\n            Success!\r\n          </Text>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          bgColor={'green.200'}\r\n          borderLeftWidth={4}\r\n          borderLeftColor={'green.600'}\r\n          margin={5}\r\n        >\r\n          <Box flex={1}>\r\n            <Text color={'green.600'} bold>\r\n              Success!\r\n            </Text>\r\n            <Text color={'green.600'}>\r\n              Stock ID Exist!\r\n            </Text>\r\n          </Box>\r\n        </Modal.Body>\r\n        <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n          <HStack space={5} flex={1}>\r\n            <Button ref={okSuccessButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleSuccessModalClose} _text={{ color: 'white' }}>\r\n              Ok\r\n            </Button>\r\n          </HStack>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n      <Modal isOpen={isFailedOpen} onClose={handleFailModalClose} initialFocusRef={okFailButtonRef} finalFocusRef={inputStockIDNumber} >\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Stock ID Do Not Exist!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button ref={okFailButtonRef} colorScheme={'primary'} flex=\"1\" onPress={handleFailModalClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal></>\r\n  );\r\n}\r\n\r\n\r\nconst StockIDAndMakeAndModel = ({\r\n  selectStockStatus,\r\n  handleSetBordersWhite,\r\n  inputFobUsd,\r\n  handleClearIfError,\r\n  monthNumbers,\r\n  steeringData,\r\n  selectPort,\r\n  selectSales,\r\n  selectBuyer,\r\n  inputRefNum,\r\n  inputChassis,\r\n  inputModelCode,\r\n  inputEngineCode,\r\n  inputEngineDis,\r\n  selectSteering,\r\n  inputMileage,\r\n  selectTransmission,\r\n  selectExteriorColor,\r\n  inputNumOfSeats,\r\n  inputDoors,\r\n  inputPurchasedPrice,\r\n  selectFuel,\r\n  inputDimensionLength,\r\n  inputDimensionWidth,\r\n  inputDimensionHeight,\r\n  inputDimensionCubicMeters,\r\n  selectDriveType,\r\n  inputWeight,\r\n  selectBodyType,\r\n  inputCarName,\r\n  inputCarDesc,\r\n  inputFobJpy,\r\n  selectRegYear,\r\n  selectRegMonth,\r\n  setRefNumFromSelects,\r\n  inputStockIDNumber,\r\n  stockIDNumError,\r\n  selectMakeForModelRef,\r\n  textAreaAddModel,\r\n  selectMakeForAddModelRef,\r\n  handleAddMakeTextChange,\r\n  textAreaAddMake,\r\n  makeError,\r\n  modelError,\r\n  selectMakeBoxRef,\r\n  selectMakeRef,\r\n  selectModelRef,\r\n  selectModelBoxRef,\r\n  setCarNameFromSelects,\r\n  setCarNameFromSelectsModel,\r\n  inputCarNotes,\r\n  inputCarMemo,\r\n  purchasedPriceError,\r\n  handleInputPurchasedPriceChange }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  // const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const makeData = useSelector((state) => state.makeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const portData = useSelector((state) => state.portData);\r\n  // const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  // const usdToJpy = useSelector((state) => state.usdToJpy);\r\n\r\n\r\n  const [modelData, setModelData] = useState([]);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isFailedOpen, setIsFailedOpen] = useState(false);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [model, setModel] = useState('');\r\n  const [key, setKey] = useState(0);\r\n  // useEffect(() => {\r\n\r\n  //   selectModelRef.current.selectIndex(modelData.indexOf(model));\r\n  //   console.log(model);\r\n  // }, [modelData]);\r\n\r\n  // const exportFunction = () => {\r\n  //   const clearModelData = () =>{\r\n  //       setModelData([]);\r\n  //   };\r\n\r\n  //   return clearModelData;\r\n  // }\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    // console.log(globalJpyToUsd);\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setDeleteImageVisible(false));\r\n        dispatch(setSelectedImages(urls));\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n        globalSelectedImages = urls;\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setDeleteImageVisible(true));\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        dispatch(setDeleteImageVisible(true));\r\n        globalSelectedImages = [];\r\n      }\r\n\r\n\r\n      console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleSearchPress = useCallback(async () => {\r\n\r\n\r\n    if (inputStockIDNumber.current?.value !== '') {\r\n      dispatch(setLoadingModalVisible(true));\r\n      setIsSearchLoading(true);\r\n      setIsSuccessOpen(false);\r\n      setIsFailedOpen(false);\r\n\r\n      const q = query(collection(projectExtensionFirestore, 'VehicleProducts'), where('stockID', '==', inputStockIDNumber.current?.value));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        console.log('No documents found');\r\n        // setIsLoading(false);\r\n        dispatch(setDeleteImageVisible(true));\r\n        setIsSearchLoading(false);\r\n        setIsFailedOpen(true);\r\n        dispatch(setIsAddPhotoVisible(true));\r\n        dispatch(setAddAnotherImages(false));\r\n        dispatch(setSelectedImages([]));\r\n        globalSelectedImages = [];\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n\r\n      else {\r\n\r\n        // dispatch(setSelectedImages([]));\r\n        // globalSelectedImages = [];\r\n\r\n        querySnapshot.forEach(async (item) => {\r\n          const data = item.data();\r\n          selectModelRef.current.reset();\r\n          // console.log(item.id, \" => \", item.data().make);\r\n          setIsSearchLoading(false);\r\n          // setIsSuccessOpen(true);\r\n\r\n          // fetchModelData();\r\n          // setModel(data.model);\r\n\r\n          // console.log(portData);    \r\n          async function fetchDataAndSelectIndex() {\r\n            try {\r\n              const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n              const docSnapshot = await getDoc(collectionRef);\r\n              if (docSnapshot.exists()) {\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching models data from Firebase: ', error);\r\n            }\r\n          }\r\n\r\n          try {\r\n            const collectionRef = doc(projectExtensionFirestore, 'Model', data.make);\r\n            const docSnapshot = await getDoc(collectionRef);\r\n            if (docSnapshot.exists()) {\r\n              const modelsDataFromFirebase = docSnapshot.data().model;\r\n              setModelData(modelsDataFromFirebase);\r\n              globalModelDataVariable = modelsDataFromFirebase;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching models data from Firebase: ', error);\r\n          }\r\n\r\n          handleSetBordersWhite();\r\n          fetchDataAndSelectIndex();\r\n          selectStockStatus.current.selectIndex(stockStatusData.indexOf(data.stockStatus));\r\n          selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(parseInt(data.regYear, 10)));\r\n          selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          selectPort.current.selectIndex(portData.findIndex(item => item.id === data.portID));\r\n          selectSales.current.selectIndex(salesData.findIndex(item => item.id === data.salesID));\r\n          selectBuyer.current.selectIndex(buyerData.findIndex(item => item.id === data.buyerID));\r\n          inputRefNum.current.setNativeProps({ text: data.referenceNumber || '' });\r\n          inputChassis.current.setNativeProps({ text: data.chassisNumber || '' });\r\n          inputModelCode.current.setNativeProps({ text: data.modelCode || '' });\r\n          inputEngineCode.current.setNativeProps({ text: data.engineCode || '' });\r\n          inputEngineDis.current.setNativeProps({ text: data.engineDisplacement ? data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          inputMileage.current.setNativeProps({ text: data.mileage ? data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats || '' });\r\n          inputDoors.current.setNativeProps({ text: data.doors || '' });\r\n          inputPurchasedPrice.current.setNativeProps({ text: data.purchasedPrice ? data.purchasedPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").toString() : '' });\r\n          selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          inputDimensionLength.current.setNativeProps({ text: data.dimensionLength ? data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth ? data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight ? data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters || '' });\r\n          selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          selectBodyType.current.selectIndex(bodyTypeData.findIndex(item => item.toLowerCase() === data.bodyType.toLowerCase()));\r\n          inputCarName.current.setNativeProps({ text: data.carName || '' });\r\n          inputCarDesc.current.setNativeProps({ text: data.carDescription || '' });\r\n          inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '' });\r\n          globalFobPrice = data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '';\r\n          handleInputFobJpyChange(data.fobPrice ? data.fobPrice : \"0\");\r\n          // selectMakeRef.current.selectIndex(makeData.indexOf(data.make));\r\n          // selectRegYear.current.selectIndex(globalRegYearDataVariable.indexOf(data.regYear));\r\n          // selectRegMonth.current.selectIndex(monthNumbers.indexOf(data.regMonth));\r\n          // selectPort.current.selectIndex(portData.findIndex(item => item.name === data.port));\r\n          // selectSales.current.selectIndex(salesData.findIndex(item => item.name === data.sales));\r\n          // selectBuyer.current.selectIndex(buyerData.findIndex(item => item.name === data.buyer));\r\n          // inputRefNum.current.setNativeProps({ text: data.referenceNumber });\r\n          // inputChassis.current.setNativeProps({ text: data.chassisNumber });\r\n          // inputModelCode.current.setNativeProps({ text: data.modelCode });\r\n          // inputEngineCode.current.setNativeProps({ text: data.engineCode });\r\n          // inputEngineDis.current.setNativeProps({ text: data.engineDisplacement.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectSteering.current.selectIndex(steeringData.indexOf(data.steering));\r\n          // inputMileage.current.setNativeProps({ text: data.mileage.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // selectTransmission.current.selectIndex(transmissionData.indexOf(data.transmission));\r\n          // selectExteriorColor.current.selectIndex(exteriorColorData.indexOf(data.exteriorColor));\r\n          // inputNumOfSeats.current.setNativeProps({ text: data.numberOfSeats });\r\n          // inputDoors.current.setNativeProps({ text: data.doors });\r\n          // selectFuel.current.selectIndex(fuelData.indexOf(data.fuel));\r\n          // inputDimensionLength.current.setNativeProps({ text: data.dimensionLength.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionWidth.current.setNativeProps({ text: data.dimensionWidth.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionHeight.current.setNativeProps({ text: data.dimensionHeight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") });\r\n          // inputDimensionCubicMeters.current.setNativeProps({ text: data.dimensionCubicMeters });\r\n          // selectDriveType.current.selectIndex(driveTypeData.indexOf(data.driveType));\r\n          // inputWeight.current.setNativeProps({ text: data.weight ? data.weight.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});          \r\n          // selectBodyType.current.selectIndex(bodyTypeData.indexOf(data.bodyType));\r\n          // inputCarName.current.setNativeProps({ text: data.carName });\r\n          // inputCarDesc.current.setNativeProps({ text: data.carDescription });\r\n          // inputFobJpy.current.setNativeProps({ text: data.fobPrice ? data.fobPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"0\",});\r\n          // handleInputFobJpyChange(data.fobPrice);\r\n\r\n          if (data.notes == undefined) {\r\n            inputCarNotes.current.setNativeProps({ text: '' });\r\n          }\r\n          else {\r\n            inputCarNotes.current.setNativeProps({ text: data.notes });\r\n          }\r\n\r\n          if (data.memo == undefined) {\r\n            inputCarMemo.current.setNativeProps({ text: '' });\r\n\r\n          }\r\n          else {\r\n            inputCarMemo.current.setNativeProps({ text: data.memo });\r\n\r\n          }\r\n\r\n          featuresState.SafetySystemAnBrSy = data.SafetySystemAnBrSy;\r\n          featuresState.SafetySystemDrAi = data.SafetySystemDrAi;\r\n          featuresState.SafetySystemPaAi = data.SafetySystemPaAi;\r\n          featuresState.SafetySystemSiAi = data.SafetySystemSiAi;\r\n          featuresState.ComfortAiCoFr = data.ComfortAiCoFr;\r\n          featuresState.ComfortAiCoRe = data.ComfortAiCoRe;\r\n          featuresState.ComfortAMFMRa = data.ComfortAMFMRa;\r\n          featuresState.ComfortAMFMSt = data.ComfortAMFMSt;\r\n          featuresState.ComfortCDPl = data.ComfortCDPl;\r\n          featuresState.ComfortCDCh = data.ComfortCDCh;\r\n          featuresState.ComfortCrSpCo = data.ComfortCrSpCo;\r\n          featuresState.ComfortDiSp = data.ComfortDiSp;\r\n          featuresState.ComfortDVDPl = data.ComfortDVDPl;\r\n          featuresState.ComfortHDD = data.ComfortHDD;\r\n          featuresState.ComfortNaSyGPS = data.ComfortNaSyGPS;\r\n          featuresState.ComfortPoSt = data.ComfortPoSt;\r\n          featuresState.ComfortPrAuSy = data.ComfortPrAuSy;\r\n          featuresState.ComfortReKeSy = data.ComfortReKeSy;\r\n          featuresState.ComfortTiStWh = data.ComfortTiStWh;\r\n          featuresState.InteriorLeSe = data.InteriorLeSe;\r\n          featuresState.InteriorPoDoLo = data.InteriorPoDoLo;\r\n          featuresState.InteriorPoMi = data.InteriorPoMi;\r\n          featuresState.InteriorPoSe = data.InteriorPoSe;\r\n          featuresState.InteriorPoWi = data.InteriorPoWi;\r\n          featuresState.InteriorReWiDe = data.InteriorReWiDe;\r\n          featuresState.InteriorReWiWi = data.InteriorReWiWi;\r\n          featuresState.InteriorThRoSe = data.InteriorThRoSe;\r\n          featuresState.InteriorTiGl = data.InteriorTiGl;\r\n          featuresState.ExteriorAlWh = data.ExteriorAlWh;\r\n          featuresState.ExteriorPoSlDo = data.ExteriorPoSlDo;\r\n          featuresState.ExteriorSuRo = data.ExteriorSuRo;\r\n          featuresState.SellingPointsCuWh = data.SellingPointsCuWh;\r\n          featuresState.SellingPointsFuLo = data.SellingPointsFuLo;\r\n          featuresState.SellingPointsMaHiAv = data.SellingPointsMaHiAv;\r\n          featuresState.SellingPointsBrNeTi = data.SellingPointsBrNeTi;\r\n          featuresState.SellingPointsNoAcHi = data.SellingPointsNoAcHi;\r\n          featuresState.SellingPointsNoSmPrOw = data.SellingPointsNoSmPrOw;\r\n          featuresState.SellingPointsOnOwHi = data.SellingPointsOnOwHi;\r\n          featuresState.SellingPointsPeRaTi = data.SellingPointsPeRaTi;\r\n          featuresState.SellingPointsReBo = data.SellingPointsReBo;\r\n          featuresState.SellingPointsTuEn = data.SellingPointsTuEn;\r\n          featuresState.SellingPointsUpAuSy = data.SellingPointsUpAuSy;\r\n\r\n          resetKey++;\r\n\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          makeVariable.text = data.make ? data.make : \"\";\r\n          modelVariable.text = data.model ? data.model : \"\";\r\n          regYearVariable.text = data.regYear ? data.regYear : \"\";\r\n          regMonthVariable.text = data.regMonth ? data.regMonth : \"\";\r\n          portVariable.text = data.port ? data.port : \"\";\r\n          salesVariable.text = data.sales ? data.sales : \"\";\r\n          buyerVariable.text = data.buyer ? data.buyer : \"\";\r\n          portVariable.id = data.portID ? data.portID : \"\";\r\n          salesVariable.id = data.salesID ? data.salesID : \"\";\r\n          buyerVariable.id = data.buyerID ? data.buyerID : \"\";\r\n          referenceNumberVariable.text = data.referenceNumber ? data.referenceNumber : \"\";\r\n          globalVehicleFolderName = data.stockID ? data.stockID : \"\";\r\n          steeringVariable.text = data.steering ? data.steering : \"\";\r\n          transmissionVariable.text = data.transmission ? data.transmission : \"\";\r\n          exteriorColorVariable.text = data.exteriorColor ? data.exteriorColor : \"\";\r\n          fuelVariable.text = data.fuel ? data.fuel : \"\";\r\n          driveTypeVariable.text = data.driveType ? data.driveType : \"\";\r\n          bodyTypeVariable.text = data.bodyType ? data.bodyType : \"\";\r\n          stockStatusVariable.text = data.stockStatus ? data.stockStatus : \"\";\r\n          globalSupplyChainCostsData = data.supplyChainsCostsData ? data.supplyChainsCostsData : [];\r\n          dispatch(setSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n\r\n          await getImages(globalVehicleFolderName);\r\n\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n          // const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), makeVariable.text), (snapshot) => {\r\n          //   setModelData(snapshot.data()?.model || []);\r\n          //   selectModelRef.current.selectIndex(modelData.indexOf(data.model));\r\n\r\n          //   return () => unsubscribe();\r\n          // });\r\n\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);;\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isFailedOpen == false) {\r\n  //     handleClearIfError();\r\n  //   }\r\n\r\n\r\n  // }, [isFailedOpen])\r\n  const handleFailModalClose = useCallback(() => {\r\n    setIsFailedOpen(false);\r\n\r\n    handleClearIfError();\r\n\r\n\r\n  }, []);\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    setIsSuccessOpen(false);\r\n\r\n    selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n    // console.log(globalModelDataVariable.indexOf(makeVariable.text));\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModelChange = useCallback(() => {\r\n    // console.log('Selected make:', value);\r\n    setCarNameFromSelectsModel();\r\n\r\n  }, []);\r\n\r\n\r\n  const handleMakeChange = useCallback(async (item) => {\r\n    setCarNameFromSelects();\r\n    // dispatch(setSelectedMake(item));\r\n    // fetchModelData();\r\n    //  dispatch(setIsLoading(true));\r\n    try {\r\n      if (makeVariable.text !== '') {\r\n\r\n        try {\r\n\r\n          const collectionRef = doc(projectExtensionFirestore, 'Model', item);\r\n\r\n          const docSnapshot = await getDoc(collectionRef);\r\n          if (docSnapshot.exists()) {\r\n            const modelsDataFromFirebase = docSnapshot.data().model;\r\n            setModelData(modelsDataFromFirebase);\r\n            globalModelDataVariable = modelsDataFromFirebase;\r\n            // console.log(globalModelVariable);\r\n\r\n            // modelKey++;\r\n            // console.log(modelKey);\r\n            // dispatch(setIsLoading(false));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching models data from Firebase: ', error);\r\n        }\r\n\r\n      }\r\n\r\n      else {\r\n        //  dispatch(setModelData([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models data from Firebase: ', error);\r\n    }\r\n\r\n  }, [projectExtensionFirestore, modelData, makeData]);\r\n\r\n  const handleInputStockIDNumberChange = useCallback((text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 10);\r\n    inputStockIDNumber.current.value = truncatedValue;\r\n    globalVehicleFolderName = truncatedValue;\r\n    setRefNumFromSelects();\r\n    // // Limit the numeric value to a maximum of 4 characters\r\n    // const truncatedValue = numericValue.slice(5);\r\n\r\n    // // Format the truncated numeric value with comma separator\r\n    // const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    // // Remove comma separator from the formatted value\r\n    // const valueWithoutCommas = formattedValue.replace(/,/g, '');\r\n\r\n    // inputStockIDNumber.current.value = valueWithoutCommas;\r\n  }, []);\r\n\r\n  const handleModelOnFocus = useCallback(() => {\r\n    // console.log(globalModelVariable.length);\r\n    const condition = makeVariable.text === '' && globalModelDataVariable.length > 0;\r\n\r\n    if (condition) {\r\n      globalModelDataVariable = [];\r\n      setModelData([]);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={handleSearchPress} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n          InputRightElement={\r\n            <Button isLoading={isSearchLoading} isLoadingText=\"Search\" size={'xs'} colorScheme={'primary'}\r\n              leftIcon={<Icon as={<MaterialIcons name=\"search\" />} size={5} color=\"white\" />}\r\n              onPress={() => {\r\n                handleSearchPress()\r\n                selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n              }}>Search</Button>\r\n          }\r\n        />\r\n        </Box>\r\n        <SuccessFailModal inputStockIDNumber={inputStockIDNumber} isSuccessOpen={isSuccessOpen} setIsSuccessOpen={setIsSuccessOpen} isFailedOpen={isFailedOpen} setIsFailedOpen={setIsFailedOpen} handleSuccessModalClose={handleSuccessModalClose} handleFailModalClose={handleFailModalClose} />\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n        <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Purchase Price</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n        <Box bgColor={'white'} flex={1} borderColor={purchasedPriceError} borderWidth={1}>\r\n          <Input keyboardType=\"numeric\" flex={1} ref={inputPurchasedPrice} onChangeText={handleInputPurchasedPriceChange} bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"Purchase Price\" placeholderTextColor={'muted.400'} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Make</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n          <SortAndAddModal docName='Make' handleAddTextChange={handleAddMakeTextChange} textAreaAdd={textAreaAddMake} title='Make' dataName={'make'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Make\" data={makeData} />\r\n        </Box>\r\n\r\n        <Box ref={selectMakeBoxRef} bgColor={'white'} flex={1} borderColor={makeError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n            ref={selectMakeRef}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            data={makeData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              makeVariable.text = selectedItem;\r\n              selectModelRef.current.reset();\r\n              modelVariable.text = '';\r\n              handleMakeChange(selectedItem);\r\n\r\n\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Make --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }} SelectDropdown\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Make\"\r\n            searchInputStyle={{ marginTop: 2, }}\r\n            disableAutoScroll\r\n            search />\r\n\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} >\r\n        <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Model</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n          <ModelSortAndAddModal\r\n            selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n            selectMakeForModelRef={selectMakeForModelRef}\r\n            textAreaAddModel={textAreaAddModel}\r\n            makeData={makeData} />\r\n        </Box>\r\n        <Box ref={selectModelBoxRef} bgColor={'white'} flex={1} borderColor={modelError} borderWidth={1}>\r\n\r\n\r\n          <SelectDropdown\r\n\r\n            onFocus={handleModelOnFocus}\r\n            ref={selectModelRef}\r\n            // disabled={makeVariable.text === '' ? true : false}\r\n            // key={`make${key}`}\r\n            buttonStyle={{\r\n              flex: 1,\r\n              width: '100%',\r\n              backgroundColor: 'white',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              padding: 4,\r\n            }}\r\n            buttonTextStyle={{\r\n              textAlign: 'left',\r\n              color: '#424242',\r\n              fontSize: 12,\r\n            }}\r\n            dropdownStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              borderColor: '#E0E0E0',\r\n              borderWidth: 1,\r\n              borderRadius: 4,\r\n              shadowColor: '#000000',\r\n              shadowOffset: { width: 0, height: 2 },\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 4,\r\n              elevation: 2,\r\n            }}\r\n            rowStyle={{\r\n              backgroundColor: '#FFFFFF',\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 15,\r\n            }}\r\n            rowTextStyle={{\r\n              color: '#424242',\r\n              fontSize: 16,\r\n            }}\r\n            // data={modelData.map((item) => item)}\r\n            data={modelData}\r\n            onSelect={useCallback((selectedItem) => {\r\n              modelVariable.text = selectedItem;\r\n              // console.log(modelVariable.text);\r\n\r\n\r\n              handleModelChange()\r\n            }, [])}\r\n            defaultButtonText=\"-- Choose Model --\"\r\n            buttonTextAfterSelection={(selectedItem) => {\r\n              return selectedItem;\r\n            }}\r\n            renderDropdownIcon={(isOpened) => {\r\n              return (\r\n                <Ionicons\r\n                  name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                  color={'#424242'}\r\n                  size={18}\r\n                />\r\n              );\r\n            }}\r\n            rowTextForSelection={(item) => {\r\n              return item;\r\n            }}\r\n            searchPlaceHolder=\"Search for Model\"\r\n            searchInputStyle={{ marginTop: 2, width: '100%', }}\r\n            disableAutoScroll\r\n            search\r\n\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    handleFirstModalOpen();\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        useRNModal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleSortModalOpen} >\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst PSBSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAddCode, textAreaAdd, handleAddTextChange, handleAddCodeTextChange, docName }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n          `${title} updated`.toLowerCase(),\r\n          `\"${title}\" updated`.toLowerCase(),\r\n          'updated'.toLowerCase(),\r\n          title.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n  }, []);\r\n\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    textAreaAdd.current.clear();\r\n    textAreaAddCode.current.clear();\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n\r\n  }, [])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, []);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataCode = textAreaAddCode.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n    const dataCodeArray = dataCode.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n    if (data !== '' && dataCode !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n\r\n        const dataToUpdate = dataArray.map((data, index) => ({\r\n          id: dataCodeArray[index],\r\n          name: data,\r\n        }));\r\n\r\n        const updateObject = {};\r\n        updateObject[dataName] = arrayUnion(...dataToUpdate);\r\n\r\n        await setDoc(modalDocRef, updateObject, { merge: true });\r\n        // const updateData = {\r\n        //   [dataName]: arrayUnion({ id: arrayUnion(...dataCodeArray), name: arrayUnion(...dataArray) })\r\n        // };\r\n\r\n        // await setDoc(modalDocRef, updateData, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n            `${title} added`.toLowerCase(),\r\n            `\"${title}\" added`.toLowerCase(),\r\n            'added'.toLowerCase(),\r\n            title.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen} focusable={false}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalSortOpen}\r\n        onClose={handleSortModalClose}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <Box w={'full'} flexDir={'column'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item.name}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAddCode}\r\n        size={'lg'}>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          {/* <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} w={'full'}> */}\r\n          <HStack space={5} flex={1} margin={2}>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Code</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAddCode}\r\n                multiline\r\n                onChangeText={handleAddCodeTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n            <VStack space={1} flex={1}>\r\n              <Text textAlign={'center'}>Name</Text>\r\n              <TextArea\r\n                flex={2}\r\n                textAlign={'center'}\r\n                w={'full'}\r\n                ref={textAreaAdd}\r\n                multiline\r\n                onChangeText={handleAddTextChange}\r\n                totalLines={8}\r\n                placeholder=\"Enter your data, separated by new lines\"\r\n              />\r\n            </VStack>\r\n          </HStack>\r\n          {/* </Modal.Body> */}\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleModalAddClose}\r\n                colorScheme={'muted'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onPress={handleAddSubmit}\r\n                isLoading={modalSaveLoading ? true : false}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}>\r\n                Add\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst ModelSortAndAddModal = ({ selectMakeForAddModelRef, selectMakeForModelRef, textAreaAddModel, makeData }) => {\r\n\r\n  const [modalAddModel, setModalAddModel] = useState(false);\r\n  const [modalSaveModel, setModalSaveModel] = useState(false);\r\n  const [modalModel, setModalModel] = useState(false);\r\n  const [modalAddModelSuccess, setModalAddModelSuccess] = useState(false);\r\n  const [keySelectMakeForModel, setKeySelectMakeForModel] = useState(1);\r\n  const [keySelectMakeForAddModel, setKeySelectMakeForAddModel] = useState(1);\r\n  const [modelSortData, setModelSortData] = useState([]);\r\n  const [isAddModelDisabled, setIsAddModelDisabled] = useState(false);\r\n  const [modalSaveModelLoading, setModalSaveModelLoading] = useState(false);\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n\r\n  const fetchModelSortData = async () => {\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n      const modelSortDocRef = doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value);\r\n      const modelSortDocSnap = await getDoc(modelSortDocRef);\r\n      if (modelSortDocSnap.exists()) {\r\n        setModelSortData(modelSortDocSnap.data()?.model || []);\r\n\r\n      }\r\n      else {\r\n        setModelSortData([]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n\r\n  //     const unsubscribe = onSnapshot(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), (snapshot) => {\r\n  //       setModelSortData(snapshot.data()?.model || []);\r\n  //       return () => unsubscribe();\r\n  //     });\r\n\r\n  //   }\r\n\r\n  // }, []);\r\n\r\n  const handleDeleteModelPress = useCallback(\r\n    (item) => {\r\n      setModelSortData((prevModelData) => {\r\n        const updatedModelData = prevModelData.filter((model) => model !== item);\r\n        return updatedModelData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveModel = useCallback(async () => {\r\n    setModalSaveModelLoading(true);\r\n    console.log(selectMakeForModelRef.current?.value);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      try {\r\n        await updateDoc(doc(collection(projectExtensionFirestore, 'Model'), selectMakeForModelRef.current?.value), { model: modelSortData });\r\n        setModalSaveModelLoading(false);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const logData = {\r\n          message: `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model updated: \"${nameVariable.text}\" updated the Model(s) for \"${selectMakeForModelRef.current?.value}\"`.toLowerCase(),\r\n            'Model Update'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Update'.toLowerCase(),\r\n            selectMakeForModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n\r\n        addLogToCollection(logData);\r\n\r\n        handleModalSaveModelClose();\r\n      } catch (error) {\r\n        console.error(error);\r\n        setModalSaveModelLoading(false);\r\n        handleModalSaveModelClose();\r\n      }\r\n\r\n    }\r\n    else {\r\n      setModalSaveModelLoading(false);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [projectExtensionFirestore, modelSortData]);\r\n\r\n  const handleAddModelTextChange = () => {\r\n    const newText = textAreaAddModel.current?.value?.toUpperCase();\r\n    textAreaAddModel.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleMakeForModelChange = useCallback(() => {\r\n    makeForAddModelVariable.text = selectMakeForAddModelRef.current?.value;\r\n    fetchModelSortData();\r\n\r\n    // console.log(selectMakeForModelRef.current?.value);\r\n  }, []);\r\n\r\n  const handleMakeForAddModelChange = useCallback(() => {\r\n    setIsAddModelDisabled(false);\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalModel(true);\r\n    fetchModelSortData();\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const handleModalModelClose = useCallback(() => {\r\n    setModalIsLoading(false);\r\n\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForModel(prevKey => prevKey + 1);\r\n    setModelSortData([]);\r\n  }, []);\r\n\r\n  const handleModalAddModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(true);\r\n    // handleModalModelClose();\r\n    setModalModel(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalAddModelClose = useCallback(() => {\r\n    handleModalModelOpen();\r\n    setModalAddModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setIsAddModelDisabled(true);\r\n    setIsLoading(false);\r\n    setKeySelectMakeForAddModel(prevKey => prevKey + 1);\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    setModalAddModel(false);\r\n    setModalModel(false);\r\n    textAreaAddModel.current.clear();\r\n    setModalAddModelSuccess(true);\r\n\r\n\r\n  }, []);\r\n\r\n  const handleModalAddModelSuccessClose = useCallback(() => {\r\n    setModalAddModelSuccess(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleModalSaveModelOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n\r\n    if (selectMakeForModelRef.current?.value !== '__NativebasePlaceholder__') {\r\n      setModalSaveModel(true);\r\n      // handleModalModelClose();\r\n      setModalModel(false);\r\n      setIsLoading(false);\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleModalSaveModelClose = useCallback(() => {\r\n    setModalSaveModel(false);\r\n    handleModalModelOpen();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleAddModelSubmit = async () => {\r\n    const data = textAreaAddModel.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n      setModalSaveLoading(true);\r\n      try {\r\n\r\n        const makeCollectionRef = collection(projectExtensionFirestore, 'Model');\r\n        const makeDocRef = doc(makeCollectionRef, selectMakeForAddModelRef.current?.value);\r\n        await setDoc(makeDocRef, { model: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            `Model Added: \"${nameVariable.text}\" added Model(s) for \"${selectMakeForAddModelRef.current?.value}\" .`.toLowerCase(),\r\n            'Model Added'.toLowerCase(),\r\n            'Model'.toLowerCase(),\r\n            'Added'.toLowerCase(),\r\n            selectMakeForAddModelRef.current.value.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        setModalSaveLoading(false);\r\n        addLogToCollection(logData);\r\n\r\n        handleModalAddModelSuccessOpen();\r\n\r\n        console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}>\r\n\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity focusable={false} onPress={handleModalModelOpen}>\r\n            <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) :\r\n          (<Spinner color=\"white\" />)\r\n        }\r\n\r\n      </Box>\r\n\r\n      <Modal\r\n        isOpen={modalModel}\r\n        onClose={handleModalModelClose} >\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Rearrange/Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Box w={'full'} flexDir={'column'} height={'f'}>\r\n              <Box alignItems={'flex-end'}>\r\n                <Pressable onPress={handleModalAddModelOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n              </Box>\r\n              <Box>\r\n                <Select key={keySelectMakeForModel} ref={selectMakeForModelRef} onValueChange={handleMakeForModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n                  bg: \"teal.600\",\r\n                  endIcon: <CheckIcon size=\"5\" />\r\n                }}>\r\n                  {makeData.map((item) => (\r\n\r\n                    <Select.Item key={item} label={item} value={item} />\r\n\r\n                  ))}\r\n                </Select>\r\n              </Box>\r\n              <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modelSortData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n\r\n                    <Box flex={1} bgColor={'rgba(16, 42, 67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                      <Pressable onPress={() => handleDeleteModelPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                      <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                      <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                    </Box>\r\n\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModelSortData(data), [])} />\r\n\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleModalSaveModelOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n\r\n\r\n\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddModel}\r\n        onClose={handleModalAddModelClose}\r\n        initialFocusRef={selectMakeForAddModelRef}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add Model</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n            <Select key={keySelectMakeForAddModel} ref={selectMakeForAddModelRef} onValueChange={handleMakeForAddModelChange} accessibilityLabel=\"Choose Make\" placeholder=\"Choose Make\" _selectedItem={{\r\n              bg: \"teal.600\",\r\n              endIcon: <CheckIcon size=\"5\" />\r\n            }}>\r\n              {makeData.map((item) => (\r\n\r\n                <Select.Item key={item} label={item} value={item} />\r\n\r\n              ))}\r\n            </Select>\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAddModel}\r\n              multiline\r\n              onChangeText={handleAddModelTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\"\r\n              isDisabled={isAddModelDisabled ? true : false}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddModelSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSaveModel}\r\n        onClose={handleModalSaveModelClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Model Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveModelClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSaveModel} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveModelLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalAddModelSuccess} onClose={handleModalAddModelSuccessClose} >\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Model Added!\r\n                {/* Vehicle Added! */}\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Model was successfully added! You can view it in the model list.\r\n                {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddModelSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst referenceNumberVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nconst makeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst makeForAddModelVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\n\r\nconst modelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regYearVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst regMonthVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst steeringVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst transmissionVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst exteriorColorVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst fuelVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst portVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst salesVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst buyerVariable = {\r\n  text: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst driveTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst bodyTypeVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst stockStatusVariable = {\r\n  text: \"\",\r\n};\r\n\r\n\r\nlet resetKey = 0;\r\nconst featuresState = {\r\n  SafetySystemAnBrSy: false,\r\n  SafetySystemDrAi: false,\r\n  SafetySystemPaAi: false,\r\n  SafetySystemSiAi: false,\r\n  ComfortAiCoFr: false,\r\n  ComfortAiCoRe: false,\r\n  ComfortAMFMRa: false,\r\n  ComfortAMFMSt: false,\r\n  ComfortCDPl: false,\r\n  ComfortCDCh: false,\r\n  ComfortCrSpCo: false,\r\n  ComfortDiSp: false,\r\n  ComfortDVDPl: false,\r\n  ComfortHDD: false,\r\n  ComfortNaSyGPS: false,\r\n  ComfortPoSt: false,\r\n  ComfortPrAuSy: false,\r\n  ComfortReKeSy: false,\r\n  ComfortTiStWh: false,\r\n  InteriorLeSe: false,\r\n  InteriorPoDoLo: false,\r\n  InteriorPoMi: false,\r\n  InteriorPoSe: false,\r\n  InteriorPoWi: false,\r\n  InteriorReWiDe: false,\r\n  InteriorReWiWi: false,\r\n  InteriorThRoSe: false,\r\n  InteriorTiGl: false,\r\n  ExteriorAlWh: false,\r\n  ExteriorPoSlDo: false,\r\n  ExteriorSuRo: false,\r\n  SellingPointsCuWh: false,\r\n  SellingPointsFuLo: false,\r\n  SellingPointsMaHiAv: false,\r\n  SellingPointsBrNeTi: false,\r\n  SellingPointsNoAcHi: false,\r\n  SellingPointsNoSmPrOw: false,\r\n  SellingPointsOnOwHi: false,\r\n  SellingPointsPeRaTi: false,\r\n  SellingPointsReBo: false,\r\n  SellingPointsTuEn: false,\r\n  SellingPointsUpAuSy: false,\r\n};\r\n\r\nconst CheckBoxButton = ({ label, onChange, variable }) => {\r\n  const [checked, setChecked] = useState(variable);\r\n\r\n  // useEffect(() => {console.log(checked)}, [checked])\r\n\r\n  const handlePress = () => {\r\n\r\n    setChecked(!checked);\r\n    onChange(!checked);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flex: 1, justifyContent: 'center', }}\r\n      onPress={handlePress}\r\n    >\r\n      <Box\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius={3}\r\n        bgColor={checked ? '#7b9cff' : 'white'}\r\n        margin={1}\r\n        overflow={'hidden'}\r\n        // h={50}\r\n        // w={180}\r\n        padding={2}\r\n        borderWidth={1}\r\n        borderColor={checked ? 'white' : 'muted.400'}\r\n      >\r\n        <Text\r\n          // fontSize={[9, 11, 12, 11, 12, 13]}\r\n          // maxW={[85, 100, 180, 100, 130, 180]}\r\n          textAlign={'center'}\r\n          noOfLines={3}\r\n          color={checked ? 'white' : 'muted.400'}\r\n        >\r\n          {label}\r\n        </Text>\r\n      </Box>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function AddVehicle() {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const [renderLoading, setRenderLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [type, setType] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n\r\n  const [name, setName] = useState(loginName);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dragSortableViewRef = useRef();\r\n\r\n  nameVariable.text = loginName;\r\n\r\n  const inputCarNotes = useRef(null);\r\n  const inputCarMemo = useRef(null);\r\n  const inputCarName = useRef(null);\r\n  const inputCarDesc = useRef(null);\r\n  const inputFobJpy = useRef(null);\r\n  const inputFobUsd = useRef(null);\r\n  const inputRegYear = useRef(null);\r\n  const selectRegYear = useRef(null);\r\n  const selectRegMonth = useRef(null);\r\n  const inputRegMonth = useRef(null);\r\n  const inputRefNum = useRef(null);\r\n  const inputStockIDNumber = useRef(null);\r\n  const inputChassis = useRef(null);\r\n  const inputModelCode = useRef(null);\r\n  const inputEngineCode = useRef(null);\r\n  const inputEngineDis = useRef(null);\r\n  const selectSteering = useRef(null);\r\n  const inputMileage = useRef(null);\r\n  const selectTransmission = useRef(null);\r\n  const selectExteriorColor = useRef(null);\r\n  const inputNumOfSeats = useRef(null);\r\n  const inputDoors = useRef(null);\r\n  const inputPurchasedPrice = useRef(null);\r\n  const inputFuel = useRef(null);\r\n  const selectFuel = useRef(null);\r\n  const selectPort = useRef(null);\r\n  const selectSales = useRef(null);\r\n  const selectBuyer = useRef(null);\r\n  const selectDriveType = useRef(null);\r\n  const inputDimensionLength = useRef(null);\r\n  const inputDimensionWidth = useRef(null);\r\n  const inputDimensionHeight = useRef(null);\r\n  const inputDimensionCubicMeters = useRef(null);\r\n  const inputDriveType = useRef(null);\r\n  const inputWeight = useRef(null);\r\n  const selectBodyType = useRef(null);\r\n  const selectStockStatus = useRef(null);\r\n  const textAreaAddMake = useRef(null);\r\n  const textAreaAddModel = useRef(null);\r\n  const textAreaAddTransmission = useRef(null);\r\n  const textAreaAddExteriorColor = useRef(null);\r\n  const textAreaAddFuel = useRef(null);\r\n  const textAreaAddPort = useRef(null);\r\n  const textAreaAddPortCode = useRef(null);\r\n  const textAreaAddSales = useRef(null);\r\n  const textAreaAddBuyer = useRef(null);\r\n  const textAreaAddSalesCode = useRef(null);\r\n  const textAreaAddBuyerCode = useRef(null);\r\n  const textAreaAddDriveType = useRef(null);\r\n  const textAreaAddBodyType = useRef(null);\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n\r\n  // const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  // const selectedImages = useSelector((state) => state.selectedImages);\r\n  const portData = useSelector((state) => state.portData);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const transmissionData = useSelector((state) => state.transmissionData);\r\n  const fuelData = useSelector((state) => state.fuelData);\r\n  const buyerData = useSelector((state) => state.buyerData);\r\n  const salesData = useSelector((state) => state.salesData);\r\n  const driveTypeData = useSelector((state) => state.driveTypeData);\r\n  const bodyTypeData = useSelector((state) => state.bodyTypeData);\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const exteriorColorData = useSelector((state) => state.exteriorColorData);\r\n  const jpyToUsd = useSelector((state) => state.jpyToUsd);\r\n  const currentYear = useSelector((state) => state.currentYear);\r\n\r\n  const minYear = 1970;\r\n  const years = Array.from({ length: currentYear - minYear + 1 }, (_, index) => currentYear - index);\r\n  globalRegYearDataVariable = years;\r\n\r\n\r\n\r\n\r\n  const steeringData = ['Left', 'Right'];\r\n\r\n\r\n  const selectMakeRef = useRef(null);\r\n  const selectModelRef = useRef(null);\r\n\r\n  const selectMakeForModelRef = useRef(null);\r\n  const selectMakeForAddModelRef = useRef(null);\r\n\r\n\r\n  const [isNoFeaturesSelected, setIsNoFeaturesSelected] = useState('white');\r\n\r\n\r\n  const [carNameError, setCarNameError] = useState('muted.500');\r\n  const [makeError, setMakeError] = useState('white');\r\n  const [modelError, setModelError] = useState('white');\r\n  const [regYearError, setRegYearError] = useState('white');\r\n  const [regMonthError, setRegMonthError] = useState('white');\r\n  const [refNumError, setRefNumError] = useState('white');\r\n  const [stockIDNumError, setStockIDNumError] = useState('white');\r\n  const [chassisError, setChassisError] = useState('white');\r\n  const [modelCodeError, setModelCodeError] = useState('white');\r\n  const [engineDisError, setEngineDisError] = useState('white');\r\n  const [steeringError, setSteeringError] = useState('white');\r\n  const [mileageError, setMileageError] = useState('white');\r\n  const [transmissionError, setTransmissionError] = useState('white');\r\n  const [exteriorColoError, setExteriorColoError] = useState('white');\r\n  const [numOfSeatsError, setNumOfSeatsError] = useState('white');\r\n  const [doorsError, setDoorsError] = useState('white');\r\n  const [purchasedPriceError, setPurchasedPriceError] = useState('white');\r\n  const [fuelError, setFuelError] = useState('white');\r\n  const [portError, setPortError] = useState('white');\r\n  const [buyerError, setBuyerError] = useState('white');\r\n  const [salesError, setSalesError] = useState('white');\r\n  const [dimensionLengthError, setDimensionLengthError] = useState('white');\r\n  const [dimensionWidthError, setDimensionWidthError] = useState('white');\r\n  const [dimensionHeightError, setDimensionHeightError] = useState('white');\r\n  const [driveTypeError, setDriveTypeError] = useState('white');\r\n  const [weightError, setWeightError] = useState('white');\r\n  const [bodyTypeError, setBodyTypeError] = useState('white');\r\n  const [stockStatusError, setStockStatusError] = useState('white');\r\n\r\n\r\n\r\n  const inputVehicleBoxRef = useRef(null);\r\n\r\n\r\n  const selectMakeBoxRef = useRef(null);\r\n  const selectModelBoxRef = useRef(null);\r\n  const selectRegYearBoxRef = useRef(null);\r\n  const selectRegMonthBoxRef = useRef(null);\r\n  const selectSteeringBoxRef = useRef(null);\r\n  const selectTransmissionBoxRef = useRef(null);\r\n  const selectExteriorColorBoxRef = useRef(null);\r\n  const selectFuelBoxRef = useRef(null);\r\n  const selectPortBoxRef = useRef(null);\r\n  const selectBuyerBoxRef = useRef(null);\r\n  const selectSalesBoxRef = useRef(null);\r\n  const selectDriveTypeBoxRef = useRef(null);\r\n  const selectBodyTypeBoxRef = useRef(null);\r\n  const selectStockStatusBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n\r\n    handleClearImages();\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    dispatch(setDeleteImageVisible(true));\r\n    portVariable.id = '';\r\n    portVariable.text = '';\r\n    salesVariable.id = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.id = '';\r\n    buyerVariable.text = '';\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    Object.keys(featuresState).forEach(property => {\r\n      featuresState[property] = false;\r\n    });\r\n\r\n    console.log('Sample');\r\n\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n    }\r\n  }, []);\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n  }, []);\r\n\r\n\r\n  const handleClearIfError = useCallback(() => {\r\n\r\n\r\n    handleClearToggleButton();\r\n    clearSelect();\r\n\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n  }, []);\r\n\r\n  // const uploadImages = useCallback(async () => {\r\n  //   const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n  //   const ImageFormat = { jpg: 'jpg' };\r\n\r\n  //   try {\r\n  //     // Get the names of the images to keep\r\n  //     const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n  //     // Delete existing files in the folder that do not match the names of the images to keep\r\n  //     const listResult = await listAll(storageRef);\r\n  //     await Promise.all(\r\n  //       listResult.items\r\n  //         .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n  //         .map((itemRef) => deleteObject(itemRef))\r\n  //     );\r\n\r\n  //     // Upload new images with or without watermarks based on the platform\r\n  //     function blobToArrayBuffer(blob) {\r\n  //       return new Promise((resolve, reject) => {\r\n  //         const reader = new FileReader();\r\n  //         reader.onload = () => resolve(reader.result);\r\n  //         reader.onerror = reject;\r\n  //         reader.readAsArrayBuffer(blob);\r\n  //       });\r\n  //     }\r\n\r\n  //     // ...\r\n\r\n  //     await Promise.all(\r\n  //       globalSelectedImages.map(async (asset, index) => {\r\n  //         const { uri } = asset;\r\n  //         const imageName = index.toString();\r\n\r\n  //         const response = await fetch(uri);\r\n  //         const blob = await response.blob();\r\n\r\n  //         const imageRef = ref(storage, `${globalVehicleFolderName}/${imageName}`);\r\n\r\n  //         // Define your watermark options\r\n  //         const watermarkOptions = {\r\n  //           text: 'Real Motor Japan',\r\n  //           color: '#FFFFFF', // Text color\r\n  //           fontSize: 20,\r\n  //           opacity: 50, // Set opacity if needed\r\n  //         };\r\n\r\n  //         // Convert the blob to an ArrayBuffer\r\n  //         const arrayBuffer = await blobToArrayBuffer(blob);\r\n\r\n  //         // Use watermark.js to add the watermark\r\n  //         const watermarkedArrayBuffer = await watermark([arrayBuffer, watermarkOptions])\r\n  //           .image(watermark.image.bottomCenter())\r\n  //           .then((img) => img.arrayBuffer());\r\n\r\n  //         // Convert the ArrayBuffer back to a Blob\r\n  //         const watermarkedBlob = new Blob([watermarkedArrayBuffer]);\r\n\r\n  //         await uploadBytes(imageRef, watermarkedBlob, { contentType: 'image/jpeg' });\r\n  //       })\r\n  //     );\r\n\r\n  //     console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n  //   } catch (error) {\r\n  //     console.error('Error uploading images:', error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalVehicleFolderName}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalVehicleFolderName}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n\r\n        })\r\n\r\n      );\r\n\r\n\r\n      console.log(`Images uploaded to folder ${globalVehicleFolderName}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUpload = useCallback(async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    setCarNameError('muted.500');\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setBuyerError('white');\r\n    setSalesError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    const selectIsEmpty = makeVariable.text == \"\" ||\r\n      modelVariable.text == \"\" ||\r\n      regYearVariable.text == \"\" ||\r\n      regMonthVariable.text == \"\" ||\r\n      steeringVariable.text == \"\" ||\r\n      transmissionVariable.text == \"\" ||\r\n      exteriorColorVariable.text == \"\" ||\r\n      fuelVariable.text == \"\" ||\r\n      portVariable.text == \"\" ||\r\n      buyerVariable.text == \"\" ||\r\n      salesVariable.text == \"\" ||\r\n      driveTypeVariable.text == \"\" ||\r\n      bodyTypeVariable.text == \"\"\r\n\r\n    const inputIsEmpty = inputStockIDNumber.current?.value == \"\" || inputRefNum.current?.value == \"\" ||\r\n      inputChassis.current?.value == \"\" ||\r\n      inputModelCode.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == \"\" ||\r\n      inputEngineDis.current?.value == 0 ||\r\n      inputMileage.current?.value == \"\" ||\r\n      inputMileage.current?.value == 0 ||\r\n      inputNumOfSeats.current?.value == \"\" ||\r\n      inputDoors.current?.value == \"\" ||\r\n      inputNumOfSeats.current?.value == 0 ||\r\n      inputDoors.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == 0 ||\r\n      inputPurchasedPrice.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == \"\" ||\r\n      inputDimensionWidth.current?.value == \"\" ||\r\n      inputDimensionHeight.current?.value == \"\" ||\r\n      inputDimensionCubicMeters.current?.value == \"\" ||\r\n      inputDimensionLength.current?.value == 0 ||\r\n      inputDimensionWidth.current?.value == 0 ||\r\n      inputDimensionHeight.current?.value == 0 ||\r\n      inputDimensionCubicMeters.current?.value == 0 ||\r\n      inputWeight.current?.value == \"\" ||\r\n      inputCarName.current?.value == \"\";\r\n\r\n    // const inputExceedLength = input;\r\n    const allValuesAreFalse = Object.values(featuresState).every((value) => value === false);\r\n\r\n    console.log(inputIsEmpty || selectIsEmpty);\r\n\r\n    if (inputIsEmpty || selectIsEmpty || allValuesAreFalse) {\r\n      dispatch(setLoadingModalVisible(false));\r\n      inputVehicleBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      if (allValuesAreFalse) {\r\n        // All features are false\r\n        console.log('All features are false');\r\n        setIsNoFeaturesSelected('danger.400');\r\n        // featureBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        // handleModalUploadClose();\r\n      } else {\r\n        // At least one feature is true\r\n        console.log('At least one feature is true.');\r\n        // handleModalUploadClose();\r\n      }\r\n\r\n      if (inputCarName.current?.value == \"\") {\r\n        inputCarName.current.scrollIntoView({ behavior: 'smooth' });\r\n        setCarNameError('danger.400');\r\n      }\r\n\r\n      if (bodyTypeVariable.text == \"\") {\r\n        selectBodyTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBodyTypeError('danger.400');\r\n      }\r\n\r\n      if (driveTypeVariable.text == \"\") {\r\n        selectDriveTypeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDriveTypeError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionHeight.current?.value == \"\" || inputDimensionHeight.current?.value == 0) {\r\n        inputDimensionHeight.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionHeightError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionWidth.current?.value == \"\" || inputDimensionWidth.current?.value == 0) {\r\n        inputDimensionWidth.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionWidthError('danger.400');\r\n      }\r\n\r\n      if (inputDimensionLength.current?.value == \"\" || inputDimensionLength.current?.value == 0) {\r\n        inputDimensionLength.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDimensionLengthError('danger.400');\r\n      }\r\n\r\n      if (fuelVariable.text == \"\") {\r\n        selectFuelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setFuelError('danger.400');\r\n      }\r\n\r\n      if (inputDoors.current?.value == \"\" || inputDoors.current?.value == 0) {\r\n        inputDoors.current.scrollIntoView({ behavior: 'smooth' });\r\n        setDoorsError('danger.400');\r\n      }\r\n      if (inputPurchasedPrice.current?.value == \"\" || inputPurchasedPrice.current?.value == 0) {\r\n        inputPurchasedPrice.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPurchasedPriceError('danger.400');\r\n      }\r\n\r\n      if (inputNumOfSeats.current?.value == \"\") {\r\n        inputNumOfSeats.current.scrollIntoView({ behavior: 'smooth' });\r\n        setNumOfSeatsError('danger.400');\r\n      }\r\n\r\n      if (exteriorColorVariable.text == \"\") {\r\n        selectExteriorColorBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setExteriorColoError('danger.400');\r\n      }\r\n\r\n      if (transmissionVariable.text == \"\") {\r\n        selectTransmissionBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setTransmissionError('danger.400');\r\n      }\r\n\r\n      if (inputMileage.current?.value == \"\" || inputMileage.current?.value == 0) {\r\n        inputMileage.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMileageError('danger.400');\r\n      }\r\n\r\n      if (steeringVariable.text == \"\") {\r\n        selectSteeringBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSteeringError('danger.400');\r\n      }\r\n\r\n      if (inputEngineDis.current?.value == \"\" || inputEngineDis.current?.value == 0) {\r\n        inputEngineDis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setEngineDisError('danger.400');\r\n      }\r\n\r\n      if (inputModelCode.current?.value == \"\") {\r\n        inputModelCode.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelCodeError('danger.400');\r\n      }\r\n\r\n      if (inputChassis.current?.value == \"\") {\r\n        inputChassis.current.scrollIntoView({ behavior: 'smooth' });\r\n        setChassisError('danger.400');\r\n      }\r\n\r\n      if (inputRefNum.current?.value == \"\") {\r\n        inputRefNum.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRefNumError('danger.400');\r\n      }\r\n      if (buyerVariable.text == \"\") {\r\n        selectBuyerBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setBuyerError('danger.400');\r\n      }\r\n\r\n      if (salesVariable.text == \"\") {\r\n        selectSalesBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setSalesError('danger.400');\r\n      }\r\n\r\n\r\n      if (portVariable.text == \"\") {\r\n        selectPortBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setPortError('danger.400');\r\n      }\r\n\r\n\r\n      if (regMonthVariable.text == \"\") {\r\n        selectRegMonthBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegMonthError('danger.400');\r\n      }\r\n\r\n      if (regYearVariable.text == \"\") {\r\n        selectRegYearBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setRegYearError('danger.400');\r\n      }\r\n\r\n      if (modelVariable.text == \"\") {\r\n        selectModelBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setModelError('danger.400');\r\n      }\r\n\r\n      if (makeVariable.text == \"\") {\r\n        selectMakeBoxRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        setMakeError('danger.400');\r\n      }\r\n\r\n      if (inputStockIDNumber.current?.value == \"\") {\r\n        inputStockIDNumber.current.scrollIntoView({ behavior: 'smooth' });\r\n        setStockIDNumError('danger.400');\r\n      }\r\n\r\n    }\r\n    else {\r\n      const stockCollectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const stockID = inputStockIDNumber.current?.value;\r\n      const docQuery = doc(stockCollectionRef, stockID);\r\n      const docSnap = await getDoc(docQuery);\r\n\r\n      dispatch(setLoadingModalVisible(true));\r\n      globalReferenceNumber = inputRefNum.current?.value;\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const timestampForID = moment(datetime).format('YYYYMMDDHHmmss');\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n      // console.log(`${timestampForID}${inputRefNum.current?.value}`);\r\n\r\n      const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n      const docRef = doc(collectionRef, inputStockIDNumber.current?.value);\r\n\r\n      const docData = docSnap.data();\r\n      // Your data object to be added\r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n\r\n\r\n\r\n      const keywordsData = [\r\n        inputRefNum.current?.value,\r\n        inputCarName.current?.value,\r\n        inputStockIDNumber.current?.value,\r\n        regYearVariable.text,\r\n        makeVariable.text,\r\n        modelVariable.text,\r\n        inputChassis.current?.value,\r\n        `${makeVariable.text} ${modelVariable.text}`,\r\n        `${regYearVariable.text} ${makeVariable.text}`,\r\n      ]\r\n      const fobHistoryData = {\r\n        date: formattedTime,\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n        changedBy: nameVariable.text,\r\n      };\r\n\r\n      let fobHistoryValue;\r\n      const inputFobValue = inputFobJpy.current?.value;\r\n      if (globalFobPrice !== inputFobValue && inputFobValue !== '') {\r\n        fobHistoryValue = arrayUnion(fobHistoryData);\r\n      }\r\n\r\n      const data = {\r\n        keywords: keywordsData,\r\n        imageCount: globalSelectedImages.length,\r\n        supplyChainsCostsData: globalSupplyChainCostsData,\r\n        ...(fobHistoryValue && { fobHistory: fobHistoryValue }),\r\n        // ...(docSnap.exists() || docData.inputStockIDNumber.current?.value.hasOwnProperty('dateAdded')\r\n        // ? { updatedDate: formattedTime }\r\n        // : { dateAdded: formattedTime }),\r\n        // dateAdded: formattedTime, \r\n        display: false,\r\n        photos: false,\r\n        stockID: inputStockIDNumber.current?.value,\r\n        make: makeVariable.text,\r\n        model: modelVariable.text,\r\n        regYear: regYearVariable.text,\r\n        regMonth: regMonthVariable.text,\r\n        referenceNumber: inputRefNum.current?.value,\r\n        chassisNumber: inputChassis.current?.value,\r\n        modelCode: inputModelCode.current?.value,\r\n        engineCode: inputEngineCode.current?.value,\r\n        engineDisplacement: inputEngineDis.current.value.replace(/,/g, ''),\r\n        steering: steeringVariable.text,\r\n        mileage: inputMileage.current.value.replace(/,/g, ''),\r\n        transmission: transmissionVariable.text,\r\n        exteriorColor: exteriorColorVariable.text,\r\n        numberOfSeats: inputNumOfSeats.current?.value,\r\n        doors: inputDoors.current?.value,\r\n        purchasedPrice: inputPurchasedPrice.current.value.replace(/,/g, ''),\r\n        fuel: fuelVariable.text,\r\n        port: portVariable.text,\r\n        sales: salesVariable.text,\r\n        buyer: buyerVariable.text,\r\n        portID: portVariable.id,\r\n        salesID: salesVariable.id,\r\n        buyerID: buyerVariable.id,\r\n        dimensionLength: inputDimensionLength.current.value.replace(/,/g, ''),\r\n        dimensionWidth: inputDimensionWidth.current.value.replace(/,/g, ''),\r\n        dimensionHeight: inputDimensionHeight.current.value.replace(/,/g, ''),\r\n        dimensionCubicMeters: inputDimensionCubicMeters.current.value.replace(/,/g, ''),\r\n        driveType: driveTypeVariable.text,\r\n        weight: inputWeight.current.value.replace(/,/g, ''),\r\n        bodyType: bodyTypeVariable.text,\r\n        stockStatus: stockStatusVariable.text,\r\n        carName: inputCarName.current?.value,\r\n        carDescription: inputCarDesc.current?.value,\r\n        notes: inputCarNotes.current?.value,\r\n        memo: inputCarMemo.current?.value,\r\n\r\n        comfort: {\r\n          ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n          ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n          ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n          ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n          ComfortCDPl: featuresState.ComfortCDPl,\r\n          ComfortCDCh: featuresState.ComfortCDCh,\r\n          ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n          ComfortDiSp: featuresState.ComfortDiSp,\r\n          ComfortDVDPl: featuresState.ComfortDVDPl,\r\n          ComfortHDD: featuresState.ComfortHDD,\r\n          ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n          ComfortPoSt: featuresState.ComfortPoSt,\r\n          ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n          ComfortReKeSy: featuresState.ComfortReKeSy,\r\n          ComfortTiStWh: featuresState.ComfortTiStWh,\r\n        },\r\n\r\n        ComfortAiCoFr: featuresState.ComfortAiCoFr,\r\n        ComfortAiCoRe: featuresState.ComfortAiCoRe,\r\n        ComfortAMFMRa: featuresState.ComfortAMFMRa,\r\n        ComfortAMFMSt: featuresState.ComfortAMFMSt,\r\n        ComfortCDPl: featuresState.ComfortCDPl,\r\n        ComfortCDCh: featuresState.ComfortCDCh,\r\n        ComfortCrSpCo: featuresState.ComfortCrSpCo,\r\n        ComfortDiSp: featuresState.ComfortDiSp,\r\n        ComfortDVDPl: featuresState.ComfortDVDPl,\r\n        ComfortHDD: featuresState.ComfortHDD,\r\n        ComfortNaSyGPS: featuresState.ComfortNaSyGPS,\r\n        ComfortPoSt: featuresState.ComfortPoSt,\r\n        ComfortPrAuSy: featuresState.ComfortPrAuSy,\r\n        ComfortReKeSy: featuresState.ComfortReKeSy,\r\n        ComfortTiStWh: featuresState.ComfortTiStWh,\r\n\r\n        fobPrice: inputFobJpy.current.value.replace(/,/g, ''),\r\n\r\n        safetySystem: {\r\n          SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n          SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n          SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n          SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        },\r\n\r\n        SafetySystemAnBrSy: featuresState.SafetySystemAnBrSy,\r\n        SafetySystemDrAi: featuresState.SafetySystemDrAi,\r\n        SafetySystemPaAi: featuresState.SafetySystemPaAi,\r\n        SafetySystemSiAi: featuresState.SafetySystemSiAi,\r\n\r\n        interior: {\r\n          InteriorLeSe: featuresState.InteriorLeSe,\r\n          InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n          InteriorPoMi: featuresState.InteriorPoMi,\r\n          InteriorPoSe: featuresState.InteriorPoSe,\r\n          InteriorPoWi: featuresState.InteriorPoWi,\r\n          InteriorReWiDe: featuresState.InteriorReWiDe,\r\n          InteriorReWiWi: featuresState.InteriorReWiWi,\r\n          InteriorThRoSe: featuresState.InteriorThRoSe,\r\n          InteriorTiGl: featuresState.InteriorTiGl,\r\n        },\r\n\r\n        InteriorLeSe: featuresState.InteriorLeSe,\r\n        InteriorPoDoLo: featuresState.InteriorPoDoLo,\r\n        InteriorPoMi: featuresState.InteriorPoMi,\r\n        InteriorPoSe: featuresState.InteriorPoSe,\r\n        InteriorPoWi: featuresState.InteriorPoWi,\r\n        InteriorReWiDe: featuresState.InteriorReWiDe,\r\n        InteriorReWiWi: featuresState.InteriorReWiWi,\r\n        InteriorThRoSe: featuresState.InteriorThRoSe,\r\n        InteriorTiGl: featuresState.InteriorTiGl,\r\n\r\n        exterior: {\r\n          ExteriorAlWh: featuresState.ExteriorAlWh,\r\n          ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n          ExteriorSuRo: featuresState.ExteriorSuRo,\r\n        },\r\n        ExteriorAlWh: featuresState.ExteriorAlWh,\r\n        ExteriorPoSlDo: featuresState.ExteriorPoSlDo,\r\n        ExteriorSuRo: featuresState.ExteriorSuRo,\r\n\r\n        sellingPoints: {\r\n          SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n          SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n          SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n          SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n          SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n          SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n          SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n          SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n          SellingPointsReBo: featuresState.SellingPointsReBo,\r\n          SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n          SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n        },\r\n\r\n        SellingPointsCuWh: featuresState.SellingPointsCuWh,\r\n        SellingPointsFuLo: featuresState.SellingPointsFuLo,\r\n        SellingPointsMaHiAv: featuresState.SellingPointsMaHiAv,\r\n        SellingPointsBrNeTi: featuresState.SellingPointsBrNeTi,\r\n        SellingPointsNoAcHi: featuresState.SellingPointsNoAcHi,\r\n        SellingPointsNoSmPrOw: featuresState.SellingPointsNoSmPrOw,\r\n        SellingPointsOnOwHi: featuresState.SellingPointsOnOwHi,\r\n        SellingPointsPeRaTi: featuresState.SellingPointsPeRaTi,\r\n        SellingPointsReBo: featuresState.SellingPointsReBo,\r\n        SellingPointsTuEn: featuresState.SellingPointsTuEn,\r\n        SellingPointsUpAuSy: featuresState.SellingPointsUpAuSy,\r\n\r\n\r\n        // Add more fields as needed\r\n      };\r\n\r\n      // Get a reference to the document with the given stock ID\r\n\r\n\r\n      // Get the document\r\n\r\n\r\n      // Check if the document exists\r\n      if (docSnap.exists()) {\r\n        updateDoc(docRef, data)\r\n          .then(async () => {\r\n            try {\r\n\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsUpdateSuccessModalOpen(true));\r\n\r\n              try {\r\n                // Check if the document exists\r\n                const docSnapshot = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                  const dataDoc = docSnap.data();\r\n                  if (dataDoc) {\r\n                    if ('dateAdded' in dataDoc) {\r\n                      // The document exists and has a 'dateAdded' field\r\n                      console.log('Date Update');\r\n                      // Update the 'updatedDate' field without removing 'dateAdded'\r\n                      const updates = {\r\n                        updatedDate: formattedTime, // Replace 'formattedTime' with the updated date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'updatedDate' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    } else {\r\n                      // The document exists, but it doesn't have a 'dateAdded' field\r\n                      console.log('Date Added');\r\n                      // Update the 'dateAdded' field without removing other fields\r\n                      const updates = {\r\n                        dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                      };\r\n\r\n                      // Use updateDoc to only update the 'dateAdded' field in the document\r\n                      await updateDoc(docRef, updates);\r\n                    }\r\n                  } else {\r\n                    // The document exists, but it doesn't have a 'dateAdded' field\r\n                    console.log('Date Added');\r\n                    // Update the 'dateAdded' field without removing other fields\r\n                    const updates = {\r\n                      dateAdded: formattedTime, // Replace 'formattedTime' with the date value\r\n                    };\r\n\r\n                    // Use updateDoc to only update the 'dateAdded' field in the document\r\n                    await updateDoc(docRef, updates);\r\n                  }\r\n                } else {\r\n                  // The document does not exist\r\n                  console.log('Date Added');\r\n                }\r\n              } catch (error) {\r\n                console.error('Error checking document:', error);\r\n              }\r\n\r\n              const logData = {\r\n                message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Updated: \"${nameVariable.text}\" updated \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Updated'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Updated'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n              dispatch(setLoadingModalVisible(false));\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document updated successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n              // Handle errors that may occur during the update process\r\n              console.error('Error updating document:', error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error updating document: ', error);\r\n          });\r\n      }\r\n      else {\r\n        const dataWithDateAdded = {\r\n          ...data,\r\n          dateAdded: formattedTime,\r\n        };\r\n\r\n        setDoc(docRef, dataWithDateAdded)\r\n          .then(async () => {\r\n\r\n            try {\r\n              await uploadImages();\r\n              dispatch(setLoadingModalVisible(false));\r\n              dispatch(setIsSuccessModalOpen(true));\r\n\r\n              // try {\r\n              //   // Check if the document exists\r\n              //   const docSnapshot = await getDoc(docRef);\r\n\r\n              //   if (docSnapshot.exists()) {\r\n              //     const data = docSnapshot.data();\r\n              //     if (data) {\r\n              //       if ('dateAdded' in data) {\r\n              //         // The document exists and has a 'dateAdded' field\r\n              //         console.log('Date Update');\r\n              //         // Update the 'updatedDate' field in the document\r\n              //         const updates = {\r\n              //           updatedDate: formattedTime, // Replace 'newFieldValue' with the updated date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'updatedDate' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       } else {\r\n              //         // The document exists, but it doesn't have a 'dateAdded' field\r\n              //         console.log('Date Added');\r\n              //         // Update the 'dateAdded' field in the document\r\n              //         const updates = {\r\n              //           dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //         };\r\n\r\n              //         // Use setDoc to update the 'dateAdded' field in the document\r\n              //         await setDoc(docRef, updates, { merge: true });\r\n              //       }\r\n              //     } else {\r\n              //       // The document exists, but it doesn't have a 'dateAdded' field\r\n              //       console.log('Date Added');\r\n              //       // Update the 'dateAdded' field in the document\r\n              //       const updates = {\r\n              //         dateAdded: formattedTime, // Replace 'newFieldValue' with the date value\r\n              //       };\r\n\r\n              //       // Use setDoc to update the 'dateAdded' field in the document\r\n              //       await setDoc(docRef, updates, { merge: true });\r\n              //     }\r\n              //   } else {\r\n              //     // The document does not exist\r\n              //     console.log('Date Added');\r\n              //   }\r\n              // } catch (error) {\r\n              //   console.error('Error checking document:', error);\r\n              // }\r\n\r\n              const logData = {\r\n                message: `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                  formattedTime.toLowerCase(),\r\n                  inputStockIDNumber.current.value.toLowerCase(),\r\n                  `Vehicle Added: \"${nameVariable.text}\" added \"${inputCarName.current?.value}\" with a reference number of \"${inputRefNum.current?.value}\"`.toLowerCase(),\r\n                  'Vehicle Added'.toLowerCase(),\r\n                  'Vehicle'.toLowerCase(),\r\n                  'Added'.toLowerCase(),\r\n                  inputCarName.current.value.toLowerCase(),\r\n                  inputRefNum.current.value.toLowerCase(),\r\n                  nameVariable.text.toLowerCase(),\r\n                  year.toLowerCase(),\r\n                  month.toLowerCase(),\r\n                  monthWithDay.toLowerCase(),\r\n                  date.toLowerCase(),\r\n                  day.toLowerCase(),\r\n                  time.toLowerCase(),\r\n                  timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n              };\r\n\r\n              handleClearImages();\r\n              addLogToCollection(logData);\r\n              handleClear();\r\n              console.log('Document added successfully!');\r\n              // console.log(`Folder Name ${globalVehicleFolderName}`);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n          })\r\n          .catch((error) => {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.error('Error adding document: ', error);\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const addLogToCollection = async (data) => {\r\n    try {\r\n      const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n      // Add a new document to the \"logs\" collection\r\n      await addDoc(logsCollectionRef, data);\r\n\r\n      console.log('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClearToggleButton = () => {\r\n    resetKey++;\r\n\r\n    featuresState.SafetySystemAnBrSy = false;\r\n    featuresState.SafetySystemDrAi = false;\r\n    featuresState.SafetySystemPaAi = false;\r\n    featuresState.SafetySystemSiAi = false;\r\n    featuresState.ComfortAiCoFr = false;\r\n    featuresState.ComfortAiCoRe = false;\r\n    featuresState.ComfortAMFMRa = false;\r\n    featuresState.ComfortAMFMSt = false;\r\n    featuresState.ComfortCDPl = false;\r\n    featuresState.ComfortCDCh = false;\r\n    featuresState.ComfortCrSpCo = false;\r\n    featuresState.ComfortDiSp = false;\r\n    featuresState.ComfortDVDPl = false;\r\n    featuresState.ComfortHDD = false;\r\n    featuresState.ComfortNaSyGPS = false;\r\n    featuresState.ComfortPoSt = false;\r\n    featuresState.ComfortPrAuSy = false;\r\n    featuresState.ComfortReKeSy = false;\r\n    featuresState.ComfortTiStWh = false;\r\n    featuresState.InteriorLeSe = false;\r\n    featuresState.InteriorPoDoLo = false;\r\n    featuresState.InteriorPoMi = false;\r\n    featuresState.InteriorPoSe = false;\r\n    featuresState.InteriorPoWi = false;\r\n    featuresState.InteriorReWiDe = false;\r\n    featuresState.InteriorReWiWi = false;\r\n    featuresState.InteriorThRoSe = false;\r\n    featuresState.InteriorTiGl = false;\r\n    featuresState.ExteriorAlWh = false;\r\n    featuresState.ExteriorPoSlDo = false;\r\n    featuresState.ExteriorSuRo = false;\r\n    featuresState.SellingPointsCuWh = false;\r\n    featuresState.SellingPointsFuLo = false;\r\n    featuresState.SellingPointsMaHiAv = false;\r\n    featuresState.SellingPointsBrNeTi = false;\r\n    featuresState.SellingPointsNoAcHi = false;\r\n    featuresState.SellingPointsNoSmPrOw = false;\r\n    featuresState.SellingPointsOnOwHi = false;\r\n    featuresState.SellingPointsPeRaTi = false;\r\n    featuresState.SellingPointsReBo = false;\r\n    featuresState.SellingPointsTuEn = false;\r\n    featuresState.SellingPointsUpAuSy = false;\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n\r\n    handleClearToggleButton();\r\n    handleClearImages();\r\n    clearSelect();\r\n\r\n\r\n    dispatch(setSupplyChainsCostsData([]));\r\n    globalSupplyChainCostsData = [];\r\n    globalSupplyChainCostsAmount = '';\r\n    globalFobPrice = '';\r\n\r\n    inputStockIDNumber.current?.clear();\r\n    inputCarName.current?.clear();\r\n    inputCarDesc.current?.clear();\r\n    inputFobJpy.current?.clear();\r\n    inputFobUsd.current?.clear();\r\n\r\n    inputRegYear.current?.clear();\r\n    inputRegMonth.current?.clear();\r\n    inputRefNum.current?.clear();\r\n    inputChassis.current?.clear();\r\n    inputModelCode.current?.clear();\r\n    inputEngineCode.current?.clear();\r\n    inputEngineDis.current?.clear();\r\n    inputMileage.current?.clear();\r\n    inputNumOfSeats.current?.clear();\r\n    inputDoors.current?.clear();\r\n    inputPurchasedPrice.current?.clear();\r\n    inputFuel.current?.clear();\r\n    inputDimensionLength.current?.clear();\r\n    inputDimensionWidth.current?.clear();\r\n    inputDimensionHeight.current?.clear();\r\n    inputDimensionCubicMeters.current.value = \"0.00\";\r\n    inputDriveType.current?.clear();\r\n    inputWeight.current?.clear();\r\n    inputCarNotes.current?.clear();\r\n    inputCarMemo.current?.clear();\r\n    makeVariable.text = '';\r\n    modelVariable.text = '';\r\n    regYearVariable.text = '';\r\n    regMonthVariable.text = '';\r\n    steeringVariable.text = '';\r\n    transmissionVariable.text = '';\r\n    exteriorColorVariable.text = '';\r\n    fuelVariable.text = '';\r\n    portVariable.text = '';\r\n    salesVariable.text = '';\r\n    buyerVariable.text = '';\r\n    portVariable.id = '';\r\n    salesVariable.id = '';\r\n    buyerVariable.id = '';\r\n    driveTypeVariable.text = '';\r\n    bodyTypeVariable.text = '';\r\n    stockStatusVariable.text = '';\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    // handleModalClearClose();\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  // const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"LOGS\");\r\n  // }, []);\r\n  // const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n  //   navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  // }, []);\r\n\r\n  // const handleToggleAccountList = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ACCOUNT LIST\");\r\n  // }, []);\r\n\r\n  // const handleToggleAddVehicle = useCallback(() => {\r\n\r\n  //   navigation.navigate(\"ADD NEW VEHICLE\");\r\n  // }, []);\r\n\r\n\r\n  // const handleVehicleList = useCallback(() => {\r\n  //   navigation.navigate(\"VEHICLE LIST\");\r\n  // }, []);\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n  const { width } = Dimensions.get('window');\r\n\r\n\r\n  const handleInputPurchasedPriceChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputPurchasedPrice.current.value = formattedValue;\r\n\r\n  };\r\n\r\n\r\n  const handleInputFobJpyChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Check if the numeric value starts with 0\r\n    if (numericValue.startsWith('0')) {\r\n      // Handle the case when the value starts with 0\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n      return;\r\n    }\r\n\r\n    // Truncate the numeric value to a maximum of 9 digits\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n    if (formattedValue !== '') {\r\n      const multipliedValue = parseFloat(truncatedValue) * jpyToUsd;\r\n\r\n      if (!isNaN(multipliedValue)) {\r\n        const formattedMultipliedValue = multipliedValue.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: formattedMultipliedValue });\r\n      } else {\r\n        // Handle the case when the multipliedValue is NaN\r\n        inputFobJpy.current.value = formattedValue;\r\n        inputFobUsd.current.setNativeProps({ text: '' });\r\n      }\r\n    } else {\r\n      // Handle the case when formattedValue is empty\r\n      inputFobJpy.current.value = '';\r\n      inputFobUsd.current.setNativeProps({ text: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInputFobJpyChange(inputFobJpy.current?.value);\r\n  }, [jpyToUsd]);\r\n\r\n\r\n\r\n  const handleAddMakeTextChange = () => {\r\n    const newText = textAreaAddMake.current?.value?.toUpperCase();\r\n    textAreaAddMake.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n\r\n  const handleAddTransmissionTextChange = () => {\r\n    const textAreaValue = textAreaAddTransmission.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddTransmission.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddFuelTextChange = () => {\r\n    const textAreaValue = textAreaAddFuel.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddFuel.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddPortTextChange = () => {\r\n    const textAreaValue = textAreaAddPort.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPort.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPortCodeTextChange = () => {\r\n    const newText = textAreaAddPortCode.current?.value?.toUpperCase();\r\n    textAreaAddPortCode.current?.setNativeProps({ text: newText });\r\n    // Remove any non-numeric characters\r\n  };\r\n\r\n  const handleAddSalesTextChange = () => {\r\n    const textAreaValue = textAreaAddSales.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddSales.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddSalesCodeTextChange = () => {\r\n    const newText = textAreaAddSalesCode.current?.value?.toUpperCase();\r\n    textAreaAddSalesCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleAddBuyerTextChange = () => {\r\n    const textAreaValue = textAreaAddBuyer.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBuyer.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBuyerCodeTextChange = (text) => {\r\n\r\n    const numericValue = text.replace(/[^0-9\\n]/g, '');\r\n\r\n    // Update the value of the textarea while preventing new lines\r\n    textAreaAddBuyerCode.current.value = numericValue;\r\n  };\r\n\r\n  const handleAddDriveTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddDriveType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddDriveType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddBodyTypeTextChange = () => {\r\n    const textAreaValue = textAreaAddBodyType.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddBodyType.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddExteriorColorTextChange = () => {\r\n    const textAreaValue = textAreaAddExteriorColor.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExteriorColor.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleInputRefNumChange = () => {\r\n    const newText = inputRefNum.current?.value?.toUpperCase();\r\n    inputRefNum.current?.setNativeProps({ text: newText });\r\n\r\n    setRefNumFromSelects();\r\n  };\r\n\r\n  const handleInputChassisChange = () => {\r\n    const newText = inputChassis.current?.value?.toUpperCase();\r\n    inputChassis.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleInputModelCodeChange = () => {\r\n    const newText = inputModelCode.current?.value?.toUpperCase();\r\n    inputModelCode.current?.setNativeProps({ text: newText });\r\n\r\n  };\r\n\r\n  const handleInputEngineCodeChange = () => {\r\n    const newText = inputEngineCode.current?.value?.toUpperCase();\r\n    inputEngineCode.current?.setNativeProps({ text: newText });\r\n  };\r\n\r\n  const handleInputEngineDisChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputEngineDis.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n  const handleInputMileageChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputMileage.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputNumOfSeatsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 3);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputNumOfSeats.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDoorsChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 2);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDoors.current.value = formattedValue;\r\n  };\r\n\r\n  const handleInputDimensionLengthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionLength.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n\r\n  const handleInputDimensionWidthChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionWidth.current.value = formattedValue;\r\n\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputDimensionHeightChange = (text) => {\r\n    // Remove any non-numeric characters and allow decimal points\r\n    const numericValue = text.replace(/[^0-9.]/g, '');\r\n\r\n    // Check if a dot already exists in the input\r\n    const dotIndex = numericValue.indexOf('.');\r\n    let truncatedValue;\r\n    if (dotIndex !== -1) {\r\n      // If a dot already exists, remove any additional dots\r\n      truncatedValue = numericValue.slice(0, dotIndex + 1) + numericValue.slice(dotIndex).replace(/\\./g, '');\r\n    } else {\r\n      truncatedValue = numericValue;\r\n    }\r\n\r\n    // Limit the numeric value to a maximum of 7 characters (4 digits, 1 decimal point, and 2 decimal places)\r\n    truncatedValue = truncatedValue.slice(0, 7);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    inputDimensionHeight.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n\r\n  };\r\n\r\n  const handleInputDimensionCubicMetersChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputDimensionCubicMeters.current.value = formattedValue;\r\n    calculateCubicMeters();\r\n  };\r\n\r\n  const handleInputWeightChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 5);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputWeight.current.value = formattedValue;\r\n  };\r\n\r\n  const monthNumbers = [\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    '10',\r\n    '11',\r\n    '12'\r\n  ];\r\n\r\n  const calculateCubicMeters = () => {\r\n    const length = parseFloat(inputDimensionLength.current?.value?.replace(/,/g, '')) || 0;\r\n    const width = parseFloat(inputDimensionWidth.current?.value?.replace(/,/g, '')) || 0;\r\n    const height = parseFloat(inputDimensionHeight.current?.value?.replace(/,/g, '')) || 0;\r\n\r\n    const result = (length * width * height) / 1000000;\r\n    const resultFormatted = result.toFixed(2);\r\n\r\n    // setCubicMeters(resultFormatted);\r\n    inputDimensionCubicMeters.current.setNativeProps({ text: resultFormatted });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   let makeValue = makeVariable.text;\r\n\r\n  //   if (makeValue !== '') {\r\n  //     setCarNameFromSelects();\r\n  //   }\r\n\r\n  // }, [modelData]);\r\n\r\n\r\n  const setRefNumFromSelects = () => {\r\n    let portValue = portVariable.id;\r\n    let stockIDValue = inputStockIDNumber.current?.value;\r\n    let salesValue = salesVariable.id;\r\n    let buyerValue = buyerVariable.id;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${portValue}${stockIDValue}${salesValue}-${buyerValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    // inputCarName.current.setNativeProps({ text: carName });\r\n    inputRefNum.current.setNativeProps({ text: carName });\r\n    referenceNumberVariable.text = carName;\r\n    // console.log(carName);\r\n  };\r\n\r\n\r\n  const setCarNameFromSelects = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n  };\r\n\r\n  const setCarNameFromSelectsModel = () => {\r\n    let regYearValue = regYearVariable.text;\r\n    let makeValue = makeVariable.text;\r\n    let modelValue = modelVariable.text;\r\n\r\n    // // Check and update regYearValue if it's \"__NativebasePlaceholder__\"\r\n    // if (regYearValue === \"__NativebasePlaceholder__\") {\r\n    //   regYearValue = \"\";\r\n    // }\r\n\r\n    // // Check and update makeValue if it's \"__NativebasePlaceholder__\"\r\n    // if (makeValue === '') {\r\n    //   makeValue = \"\";\r\n    // }\r\n\r\n    // // Check and update modelValue if it's \"__NativebasePlaceholder__\"\r\n    // if (modelValue === '') {\r\n    //   modelValue = \"\";\r\n    // }\r\n\r\n    // Concatenate the values to form the car name\r\n    const carName = `${regYearValue} ${makeValue} ${modelValue}`;\r\n    // Update the inputCarName ref value using setNativeProps\r\n    inputCarName.current.setNativeProps({ text: carName });\r\n\r\n\r\n  };\r\n  // const [selectedMake, setSelectedMake] = useState();\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, []);\r\n\r\n  const clearSelect = () => {\r\n    // setModelData([]);\r\n\r\n    // if (makeVariable.text !== '') {\r\n    //   dispatch(setModelData([]));\r\n    // }\r\n\r\n\r\n\r\n    selectMakeRef.current.reset();\r\n    selectModelRef.current.reset();\r\n    selectRegYear.current.reset();\r\n    selectRegMonth.current.reset();\r\n    selectSteering.current.reset();\r\n    selectTransmission.current.reset();\r\n    selectExteriorColor.current.reset();\r\n    selectFuel.current.reset();\r\n    selectPort.current.reset();\r\n    selectSales.current.reset();\r\n    selectBuyer.current.reset();\r\n    selectDriveType.current.reset();\r\n    selectBodyType.current.reset();\r\n    selectStockStatus.current.reset();\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n  const ClearModalButton = ({ handleClear }) => {\r\n    const [modalClearVisible, setModalClearVisible] = useState(false);\r\n\r\n    const handleModalClearOpen = useCallback(() => {\r\n      setModalClearVisible(true);\r\n\r\n\r\n      // selectMakeRef.current.selectIndex(makeData.indexOf('TOYOTA'));\r\n    }, []);\r\n\r\n    const handleModalClearClose = useCallback(() => {\r\n      setModalClearVisible(false);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          bgColor={'#D9D9D9'}\r\n          onPress={handleModalClearOpen}\r\n          _text={{ color: 'muted.500' }}\r\n          _hover={{ bgColor: '#f0eded' }}\r\n        >\r\n          Clear\r\n        </Button>\r\n\r\n        <Modal isOpen={modalClearVisible} onClose={handleModalClearClose}>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear all inputs? This action will clear all the fields and cannot be undone!\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalClearClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleModalClearClose();\r\n                    handleClear();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const SelectFeaturesButton = () => {\r\n    const [featuresModalVisible, setFeaturesModalVisible] = useState(false);\r\n    const [featuresClearModalVisible, setClearModalVisible] = useState(false);\r\n\r\n    const [key, setKey] = useState(resetKey);\r\n\r\n\r\n    const handleModalSelectFeaturesOpen = () => {\r\n      setFeaturesModalVisible(true);\r\n    };\r\n\r\n    const handleModalSelectFeaturesClose = () => {\r\n      setFeaturesModalVisible(false);\r\n    };\r\n\r\n    const handleClearModalOpen = () => {\r\n      setClearModalVisible(true);\r\n    };\r\n\r\n    const handleClearModalClose = () => {\r\n      setClearModalVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalSelectFeaturesOpen}\r\n          variant={'outline'}\r\n          _text={{ color: 'black', }}\r\n          leftIcon={<MaterialCommunityIcons name=\"car-info\" size={20} color=\"black\" />}>\r\n\r\n          Select Features\r\n        </Button>\r\n\r\n        <Modal\r\n          isOpen={featuresModalVisible}\r\n          onClose={handleModalSelectFeaturesClose} size={'full'} useRNModal>\r\n          <Modal.Content bgColor={'white'} w={'80%'} h={'80%'}>\r\n            <Modal.CloseButton />\r\n            {/* <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Features\r\n              </Text>\r\n            </Modal.Header> */}\r\n            {/* <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'white'}\r\n              flex={1}\r\n              h={'100%'}\r\n            > */}\r\n            <ScrollView flex={1} flexDirection={'column'} margin={10}>\r\n\r\n              {/* <Box bgColor={'#7b9cff'} borderColor={isNoFeaturesSelected} borderWidth={'1'} marginTop={1} ref={featureBoxRef}>\r\n                  <Text color={'white'} bold fontSize={20} width={'full'}> Features</Text>\r\n                </Box> */}\r\n\r\n              <Box>\r\n                <Text color={'black'} bold fontSize={16} width={'full'}> Safety System</Text>\r\n              </Box>\r\n\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SafetySystemAnBrSy} key={`SafetySystemAnBrSy-${resetKey}`} label=\"Anti-Lock Braking System (ABS)\" onChange={(checked) => featuresState.SafetySystemAnBrSy = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemDrAi} key={`SafetySystemDrAi-${resetKey}`} label=\"Driver Airbag\" onChange={(checked) => featuresState.SafetySystemDrAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemPaAi} key={`SafetySystemPaAi-${resetKey}`} label=\"Passenger Airbag\" onChange={(checked) => featuresState.SafetySystemPaAi = checked} />\r\n                <CheckBoxButton variable={featuresState.SafetySystemSiAi} key={`SafetySystemSiAi-${resetKey}`} label=\"Side Airbag\" onChange={(checked) => featuresState.SafetySystemSiAi = checked} />\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Comfort</Text>\r\n              </Box>\r\n\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoFr} key={`ComfortAiCoFr-${resetKey}`} label=\"Air Conditioner (Front)\" onChange={(checked) => featuresState.ComfortAiCoFr = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAiCoRe} key={`ComfortAiCoRe-${resetKey}`} label=\"Air Conditioner (Rear)\" onChange={(checked) => featuresState.ComfortAiCoRe = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMRa} key={`ComfortAMFMRa-${resetKey}`} label=\"AM/FM Radio\" onChange={(checked) => featuresState.ComfortAMFMRa = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortAMFMSt} key={`ComfortAMFMSt-${resetKey}`} label=\"AM/FM Stereo\" onChange={(checked) => featuresState.ComfortAMFMSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortCDPl} key={`ComfortCDPl-${resetKey}`} label=\"CD Player\" onChange={(checked) => featuresState.ComfortCDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCDCh} key={`ComfortCDCh-${resetKey}`} label=\"CD Changer\" onChange={(checked) => featuresState.ComfortCDCh = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortCrSpCo} key={`ComfortCrSpCo-${resetKey}`} label=\"Cruise Speed Control\" onChange={(checked) => featuresState.ComfortCrSpCo = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortDiSp} key={`ComfortDiSp-${resetKey}`} label=\"Digital Speedometer\" onChange={(checked) => featuresState.ComfortDiSp = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortDVDPl} key={`ComfortDVDPl-${resetKey}`} label=\"DVD Player\" onChange={(checked) => featuresState.ComfortDVDPl = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortHDD} key={`ComfortHDD-${resetKey}`} label=\"Hard Disk Drive\" onChange={(checked) => featuresState.ComfortHDD = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortNaSyGPS} key={`ComfortNaSyGPS-${resetKey}`} label=\"Navigation System (GPS)\" onChange={(checked) => featuresState.ComfortNaSyGPS = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortPoSt} key={`ComfortPoSt-${resetKey}`} label=\"Power Steering\" onChange={(checked) => featuresState.ComfortPoSt = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ComfortPrAuSy} key={`ComfortPrAuSy-${resetKey}`} label=\"Premium Audio System\" onChange={(checked) => featuresState.ComfortPrAuSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortReKeSy} key={`ComfortReKeSy-${resetKey}`} label=\"Remote Keyless System\" onChange={(checked) => featuresState.ComfortReKeSy = checked} />\r\n                <CheckBoxButton variable={featuresState.ComfortTiStWh} key={`ComfortTiStWh-${resetKey}`} label=\"Tilt Steering Wheel\" onChange={(checked) => featuresState.ComfortTiStWh = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n\r\n              <Box>\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Interior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorLeSe} key={`InteriorLeSe-${resetKey}`} label=\"Leather Seats\" onChange={(checked) => featuresState.InteriorLeSe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoDoLo} key={`InteriorPoDoLo-${resetKey}`} label=\"Power Door Locks\" onChange={(checked) => featuresState.InteriorPoDoLo = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoMi} key={`InteriorPoMi-${resetKey}`} label=\"Power Mirrors\" onChange={(checked) => featuresState.InteriorPoMi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorPoSe} key={`InteriorPoSe-${resetKey}`} label=\"Power Seats\" onChange={(checked) => featuresState.InteriorPoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorPoWi} key={`InteriorPoWi-${resetKey}`} label=\"Power Windows\" onChange={(checked) => featuresState.InteriorPoWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiDe} key={`InteriorReWiDe-${resetKey}`} label=\"Rear Window Defroster\" onChange={(checked) => featuresState.InteriorReWiDe = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorReWiWi} key={`InteriorReWiWi-${resetKey}`} label=\"Rear Window Wiper\" onChange={(checked) => featuresState.InteriorReWiWi = checked} />\r\n                <CheckBoxButton variable={featuresState.InteriorThRoSe} key={`InteriorThRoSe-${resetKey}`} label=\"Third Row Seats\" onChange={(checked) => featuresState.InteriorThRoSe = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.InteriorTiGl} key={`InteriorTiGl-${resetKey}`} label=\"Tinted Glasses\" onChange={(checked) => featuresState.InteriorTiGl = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Exterior</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.ExteriorAlWh} key={`ExteriorAlWh-${resetKey}`} label=\"Alloy Wheels\" onChange={(checked) => featuresState.ExteriorAlWh = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorPoSlDo} key={`ExteriorPoSlDo-${resetKey}`} label=\"Power Sliding Door\" onChange={(checked) => featuresState.ExteriorPoSlDo = checked} />\r\n                <CheckBoxButton variable={featuresState.ExteriorSuRo} key={`ExteriorSuRo-${resetKey}`} label=\"Sunroof\" onChange={(checked) => featuresState.ExteriorSuRo = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n\r\n              <Box >\r\n                <Text color={'black'} marginLeft={1} bold fontSize={16} width={'full'}>Selling Points</Text>\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsCuWh} key={`SellingPointsCuWh-${resetKey}`} label=\"Customized Wheels\" onChange={(checked) => featuresState.SellingPointsCuWh = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsFuLo} key={`SellingPointsFuLo-${resetKey}`} label=\"Fully Loaded\" onChange={(checked) => featuresState.SellingPointsFuLo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsMaHiAv} key={`SellingPointsMaHiAv-${resetKey}`} label=\"Maintenance History Available\" onChange={(checked) => featuresState.SellingPointsMaHiAv = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsBrNeTi} key={`SellingPointsBrNeTi-${resetKey}`} label=\"Brand New Tires\" onChange={(checked) => featuresState.SellingPointsBrNeTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoAcHi} key={`SellingPointsNoAcHi-${resetKey}`} label=\"No Accident History\" onChange={(checked) => featuresState.SellingPointsNoAcHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsNoSmPrOw} key={`SellingPointsNoSmPrOw-${resetKey}`} label=\"Non-Smoking Previous Owner\" onChange={(checked) => featuresState.SellingPointsNoSmPrOw = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsOnOwHi} key={`SellingPointsOnOwHi-${resetKey}`} label=\"One Owner History\" onChange={(checked) => featuresState.SellingPointsOnOwHi = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsPeRaTi} key={`SellingPointsPeRaTi-${resetKey}`} label=\"Performance-rated Tires\" onChange={(checked) => featuresState.SellingPointsPeRaTi = checked} />\r\n              </Box>\r\n              <Box flex={1} flexDir={'row'}>\r\n                <CheckBoxButton variable={featuresState.SellingPointsReBo} key={`SellingPointsReBo-${resetKey}`} label=\"Repainted Body\" onChange={(checked) => featuresState.SellingPointsReBo = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsTuEn} key={`SellingPointsTuEn-${resetKey}`} label=\"Turbo Engine\" onChange={(checked) => featuresState.SellingPointsTuEn = checked} />\r\n                <CheckBoxButton variable={featuresState.SellingPointsUpAuSy} key={`SellingPointsUpAuSy-${resetKey}`} label=\"Upgraded Audio System\" onChange={(checked) => featuresState.SellingPointsUpAuSy = checked} />\r\n                <TouchableOpacity pressDuration={0} style={{ flex: 1, justifyContent: 'center', }} disabled><Box justifyContent=\"center\" alignItems=\"center\" borderRadius={3} flex={1} disabled bgColor={'white'} margin={1}></Box></TouchableOpacity>\r\n              </Box>\r\n            </ScrollView>\r\n            <HStack space={5} width={'full'} justifyContent={'space-between'}>\r\n              <Button\r\n                onPress={() => {\r\n                  handleClearModalOpen();\r\n                }}\r\n                colorScheme={'gray'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Box flex={2} />\r\n              <Button\r\n                onPress={handleModalSelectFeaturesClose}\r\n                colorScheme={'primary'}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n                margin={1}\r\n                flex={1}\r\n              >\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n            {/* </Modal.Body> */}\r\n            {/* <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalSelectFeaturesClose}\r\n                  colorScheme={'warmGray'}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer> */}\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n        <Modal isOpen={featuresClearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n          <Modal.Content bgColor={'amber.100'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n              <Text color={'#102A43'} bold>\r\n                Clear\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'amber.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'amber.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'amber.600'} bold>\r\n                  Warning!\r\n                </Text>\r\n                <Text color={'amber.600'}>\r\n                  Are you sure you want to clear?\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleClearModalClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onPress={() => {\r\n                    handleClearToggleButton();\r\n                    setKey(resetKey++);\r\n                    handleClearModalClose();\r\n                  }}\r\n                  flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                  Clear\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n  const UploadModalButton = ({ handleUpload }) => {\r\n    const [modalUploadVisible, setModalUploadVisible] = useState(false);\r\n    const handleModalUploadOpen = () => {\r\n      setModalUploadVisible(true);\r\n    };\r\n\r\n    const handleModalUploadClose = () => {\r\n      setModalUploadVisible(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          borderRadius={3}\r\n          flex={1}\r\n          onPress={handleModalUploadOpen}\r\n          bgColor={'#7B9CFF'}\r\n          _hover={{ bgColor: '#517cfc', }}>\r\n          Upload/Save\r\n        </Button>\r\n\r\n        <Modal isOpen={modalUploadVisible} onClose={handleModalUploadClose}>\r\n          <Modal.Content bgColor={'white'}>\r\n            <Modal.CloseButton />\r\n            <Modal.Header borderBottomWidth={0} bgColor={'white'}>\r\n              <Text color={'#102A43'} bold>\r\n                Upload/Save\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'gray.300'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'black'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'black'} bold>\r\n                  Attention!\r\n                </Text>\r\n                <Text color={'black'}>\r\n                  Are you sure you want to upload/save? This action will upload a new vehicle to the list and can be edited later.\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'white'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button\r\n                  onPress={handleModalUploadClose}\r\n                  colorScheme={'warmGray'}\r\n                  flex={1}\r\n                  size={'sm'}\r\n                  borderRadius={5}\r\n                >\r\n                  No\r\n                </Button>\r\n                <Button isLoading={isLoading} onPress={async () => {\r\n                  await handleUpload();\r\n                  handleModalUploadClose()\r\n                }}\r\n                  flex={1} size={'sm'} colorScheme={'primary'} borderRadius={5}>\r\n                  Upload/Save\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const handleUpdateSuccessModalClose = useCallback(() => {\r\n    dispatch(setIsUpdateSuccessModalOpen(false));\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const handleSetBordersWhite = () => {\r\n\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n    setMakeError('white');\r\n    setModelError('white');\r\n    setRegYearError('white');\r\n    setRegMonthError('white');\r\n    setRefNumError('white');\r\n    setStockIDNumError('white');\r\n    setChassisError('white');\r\n    setModelCodeError('white');\r\n    setEngineDisError('white');\r\n    setSteeringError('white');\r\n    setMileageError('white');\r\n    setTransmissionError('white');\r\n    setExteriorColoError('white');\r\n    setNumOfSeatsError('white');\r\n    setDoorsError('white');\r\n    setPurchasedPriceError('white');\r\n    setFuelError('white');\r\n    setPortError('white');\r\n    setSalesError('white');\r\n    setBuyerError('white');\r\n    setDimensionLengthError('white');\r\n    setDimensionWidthError('white');\r\n    setDimensionHeightError('white');\r\n    setDriveTypeError('white');\r\n    setWeightError('white');\r\n    setBodyTypeError('white');\r\n    setStockStatusError('white');\r\n    setCarNameError('muted.500');\r\n\r\n    setIsNoFeaturesSelected('white');\r\n\r\n\r\n  };\r\n  return (\r\n\r\n\r\n\r\n    <NativeBaseProvider>\r\n\r\n      <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n        {/* Header */}\r\n        <Box\r\n          px=\"3\"\r\n          bgColor='#0642f4'\r\n          height={54}\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={999}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          borderBottomWidth={0}\r\n          borderBottomColor={'cyan.500'} >\r\n\r\n          <SideDrawer\r\n            selectedScreen={selectedScreen} />\r\n\r\n          <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          {/* {showDrawerIcon && <MobileViewDrawer\r\n            selectedScreen={selectedScreen}\r\n          />} */}\r\n          <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n            <FastImage\r\n              source={{\r\n                uri: logo2,\r\n                priority: FastImage.priority.high,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.stretch}\r\n              style={styles.image}\r\n            />\r\n          </Box>\r\n\r\n          <View style={{ alignItems: 'center', flex: 1 }}>\r\n            <QRCodeScanner />\r\n          </View>\r\n\r\n          <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n          {/* <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n            <Flex direction=\"row-reverse\">\r\n              <Popover isOpen={showNamePopover} trigger={triggerProps => {\r\n                return <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                  <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name}  <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                </Text>;\r\n              }} onClose={() => setShowNamePopover(!showNamePopover)} placement='bottom right' trapFocus={false}>\r\n                <Popover.Content backgroundColor={'#7B9CFF'}>\r\n                 \r\n                  <Popover.Body backgroundColor={'#7B9CFF'}>\r\n                    <Button _hover={{ bgColor: 'blueGray.500', }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                      Logout\r\n                    </Button>\r\n                  </Popover.Body>\r\n                </Popover.Content>\r\n              </Popover>\r\n            </Flex>\r\n          </Box> */}\r\n\r\n        </Box>\r\n\r\n        {/* Content */}\r\n        <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n          {/* Main Content */}\r\n\r\n          <Box flex={1} flexGrow={1} minHeight={0}>\r\n            {/* Main Content Content */}\r\n\r\n\r\n\r\n            <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n              <PresenceTransition visible={true} initial={{\r\n                opacity: 0,\r\n              }} animate={{\r\n                opacity: 1,\r\n                transition: {\r\n                  duration: 250\r\n                }\r\n              }}>\r\n\r\n\r\n                <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" flexDir={'column'}>\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n                  <Box bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} >\r\n\r\n\r\n                    <Box flexDir={['column', 'column', 'column', 'column', 'row', 'row']} height={'full'} flex={1} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                      <Box flexDir={'row'} flex={1}>\r\n                        <Box margin={2} flex={1} flexDir={['column']} >\r\n\r\n\r\n                          <Box borderColor={'white'} borderWidth={1} ref={inputVehicleBoxRef}>\r\n\r\n                            <Box flex={1} bgColor={'#7b9cff'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Text color={'white'} marginLeft={1} bold fontSize={20} width={'full'}>Input Vehicle Specification</Text>\r\n                            </Box>\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                            <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock ID Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                            <Box bgColor={'white'} flex={1} borderColor={stockIDNumError} borderWidth={1}><Input onSubmitEditing={() => buttonSearchRef.current?.handlePress()} defaultValue=\"\" ref={inputStockIDNumber} onChangeText={handleInputStockIDNumberChange} placeholder=\" Stock ID Number\"\r\n                              InputRightElement={\r\n                                <StockIDNumber />\r\n                              }\r\n                            />\r\n                            </Box>\r\n\r\n\r\n                          </Box> */}\r\n\r\n                            <StockIDAndMakeAndModel\r\n                              selectStockStatus={selectStockStatus}\r\n                              handleSetBordersWhite={handleSetBordersWhite}\r\n                              handleClearIfError={handleClearIfError}\r\n                              handleClearToggleButton={handleClearToggleButton}\r\n                              inputFobUsd={inputFobUsd}\r\n                              years={years}\r\n                              monthNumbers={monthNumbers}\r\n                              portData={portData}\r\n                              salesData={salesData}\r\n                              buyerData={buyerData}\r\n                              steeringData={steeringData}\r\n                              transmissionData={transmissionData}\r\n                              exteriorColorData={exteriorColorData}\r\n                              fuelData={fuelData}\r\n                              driveTypeData={driveTypeData}\r\n                              bodyTypeData={bodyTypeData}\r\n                              selectPort={selectPort}\r\n                              selectSales={selectSales}\r\n                              selectBuyer={selectBuyer}\r\n                              inputRefNum={inputRefNum}\r\n                              inputChassis={inputChassis}\r\n                              inputModelCode={inputModelCode}\r\n                              inputEngineCode={inputEngineCode}\r\n                              inputEngineDis={inputEngineDis}\r\n                              selectSteering={selectSteering}\r\n                              inputMileage={inputMileage}\r\n                              selectTransmission={selectTransmission}\r\n                              selectExteriorColor={selectExteriorColor}\r\n                              inputNumOfSeats={inputNumOfSeats}\r\n                              inputDoors={inputDoors}\r\n                              inputPurchasedPrice={inputPurchasedPrice}\r\n                              selectFuel={selectFuel}\r\n                              inputDimensionLength={inputDimensionLength}\r\n                              inputDimensionWidth={inputDimensionWidth}\r\n                              inputDimensionHeight={inputDimensionHeight}\r\n                              inputDimensionCubicMeters={inputDimensionCubicMeters}\r\n                              selectDriveType={selectDriveType}\r\n                              inputWeight={inputWeight}\r\n                              selectBodyType={selectBodyType}\r\n                              inputCarName={inputCarName}\r\n                              inputCarDesc={inputCarDesc}\r\n                              inputFobJpy={inputFobJpy}\r\n                              selectRegYear={selectRegYear}\r\n                              selectRegMonth={selectRegMonth}\r\n                              setRefNumFromSelects={setRefNumFromSelects}\r\n                              inputStockIDNumber={inputStockIDNumber}\r\n                              stockIDNumError={stockIDNumError}\r\n                              selectMakeForModelRef={selectMakeForModelRef}\r\n                              textAreaAddModel={textAreaAddModel}\r\n                              selectMakeForAddModelRef={selectMakeForAddModelRef}\r\n                              handleAddMakeTextChange={handleAddMakeTextChange}\r\n                              textAreaAddMake={textAreaAddMake}\r\n                              modelError={modelError}\r\n                              // makeData={makeData}\r\n                              makeError={makeError}\r\n                              selectMakeBoxRef={selectMakeBoxRef}\r\n                              selectMakeRef={selectMakeRef}\r\n                              selectModelRef={selectModelRef}\r\n                              selectModelBoxRef={selectModelBoxRef}\r\n                              setCarNameFromSelects={setCarNameFromSelects}\r\n                              setCarNameFromSelectsModel={setCarNameFromSelectsModel}\r\n                              inputCarNotes={inputCarNotes}\r\n                              inputCarMemo={inputCarMemo}\r\n                              purchasedPriceError={purchasedPriceError}\r\n                              handleInputPurchasedPriceChange={handleInputPurchasedPriceChange}\r\n                            />\r\n\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={2} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Year & Month</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box ref={selectRegYearBoxRef} bgColor={'white'} flex={1} borderColor={regYearError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegYear}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={years}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regYearVariable.text = selectedItem;\r\n                                    // console.log(regYearVariable.text);\r\n                                    setCarNameFromSelects()\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Year --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Year\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n\r\n                              </Box>\r\n                              <Box ref={selectRegMonthBoxRef} bgColor={'white'} flex={1} borderColor={regMonthError} borderWidth={1}>\r\n\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectRegMonth}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={monthNumbers}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    regMonthVariable.text = selectedItem;\r\n                                    // console.log(regMonthVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"--Choose Month--\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\"Month\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    outlineStyle: 'none',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Port</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Port'}\r\n                                  handleAddTextChange={handleAddPortTextChange}\r\n                                  handleAddCodeTextChange={handleAddPortCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddPortCode}\r\n                                  textAreaAdd={textAreaAddPort}\r\n                                  title='Port'\r\n                                  dataName={'port'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Port\"\r\n                                  data={portData} />\r\n                              </Box>\r\n                              <Box ref={selectPortBoxRef} bgColor={'white'} flex={1} borderColor={portError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectPort}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={portData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    portVariable.text = selectedItem.name;\r\n                                    portVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Port --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Port\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Sales In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalPortOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Sales'}\r\n                                  handleAddTextChange={handleAddSalesTextChange}\r\n                                  handleAddCodeTextChange={handleAddSalesCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddSalesCode}\r\n                                  textAreaAdd={textAreaAddSales}\r\n                                  title='Sales'\r\n                                  dataName={'sales'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Sales\"\r\n                                  data={salesData} />\r\n                              </Box>\r\n                              <Box ref={selectSalesBoxRef} bgColor={'white'} flex={1} borderColor={salesError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectSales}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={salesData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    salesVariable.text = selectedItem.name;\r\n                                    salesVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Sales --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Sales\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Buyer In Charge</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalBuyerOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <PSBSortAndAddModal\r\n                                  docName={'Buyer'}\r\n                                  handleAddTextChange={handleAddBuyerTextChange}\r\n                                  handleAddCodeTextChange={handleAddBuyerCodeTextChange}\r\n                                  textAreaAddCode={textAreaAddBuyerCode}\r\n                                  textAreaAdd={textAreaAddBuyer}\r\n                                  title='Buyer'\r\n                                  dataName={'buyer'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add buyer\"\r\n                                  data={buyerData} />\r\n                              </Box>\r\n                              <Box ref={selectBuyerBoxRef} bgColor={'white'} flex={1} borderColor={buyerError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBuyer}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={buyerData.map((item) => item)}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    buyerVariable.text = selectedItem.name;\r\n                                    buyerVariable.id = selectedItem.id;\r\n                                    setRefNumFromSelects();\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Buyer --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem.name;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item.name;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Buyer\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                            {/* <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                            <Box bgColor={'#8096D7'} flex={1} justifyContent=\"center\" alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Registration Month</Text></Box>\r\n                            <Box bgColor={'white'} flex={1}><Input placeholder=\"Registration Month\" /></Box>\r\n                          </Box> */}\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Reference Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={refNumError} borderWidth={1}><Input defaultValue=\"\" ref={inputRefNum} onChangeText={handleInputRefNumChange} placeholder=\" Reference Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Chassis / Frame Number</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={chassisError} borderWidth={1}><Input defaultValue=\"\" ref={inputChassis} onChangeText={handleInputChassisChange} placeholder=\" Chassis / Frame Number\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Model Code</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={modelCodeError} borderWidth={1}><Input defaultValue=\"\" ref={inputModelCode} onChangeText={handleInputModelCodeChange} placeholder=\" Model Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Code</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}><Input defaultValue=\"\" ref={inputEngineCode} onChangeText={handleInputEngineCodeChange} placeholder=\" Engine Code\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Engine Displacement</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={engineDisError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputEngineDis} onChangeText={handleInputEngineDisChange} flex={1} placeholder=\" Engine Displacement\" /><InputRightAddon children={\"cc\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'}><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Steering</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}></Box>\r\n                              </Box>\r\n                              <Box ref={selectSteeringBoxRef} bgColor={'white'} flex={1} borderColor={steeringError} borderWidth={1}>\r\n                                {/* <Select key={keySelectSteering} ref={selectSteering} accessibilityLabel=\"Choose Steering\" placeholder=\"Choose Steering\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                <Select.Item key={'Left'} label={'Left'} value={'Left'} />\r\n                                <Select.Item key={'Right'} label={'Right'} value={'Right'} />\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectSteering}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={steeringData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    steeringVariable.text = selectedItem;\r\n                                    // console.log(steeringVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Steering --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Steering\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} bgColor={'#8096D7'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Mileage</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={mileageError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputMileage} onChangeText={handleInputMileageChange} flex={1} placeholder=\" Mileage\" /><InputRightAddon children={\"km\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} flex={1} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Transmission</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalTransmissionOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal docName={'Transmission'} handleAddTextChange={handleAddTransmissionTextChange} textAreaAdd={textAreaAddTransmission} title='Transmission' dataName={'transmission'} databaseInit={projectExtensionFirestore} headerText=\"Rearrange/Add Transmission\" data={transmissionData} />\r\n                              </Box>\r\n                              <Box ref={selectTransmissionBoxRef} bgColor={'white'} flex={1} borderColor={transmissionError} borderWidth={1}>\r\n                                {/* <Select key={keySelectTransmission} accessibilityLabel=\"Choose Transmission\" placeholder=\"Choose Transmission\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {transmissionData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectTransmission}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={transmissionData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    transmissionVariable.text = selectedItem;\r\n                                    // console.log(transmissionVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Transmission --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Transmission\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Exterior Color</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalExteriorColorOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='ExteriorColor'\r\n                                  handleAddTextChange={handleAddExteriorColorTextChange}\r\n                                  textAreaAdd={textAreaAddExteriorColor}\r\n                                  title='Exterior Color'\r\n                                  dataName={'exteriorColor'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Transmission\"\r\n                                  data={transmissionData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectExteriorColorBoxRef} bgColor={'white'} flex={1} borderColor={exteriorColoError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectExteriorColor}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={exteriorColorData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    exteriorColorVariable.text = selectedItem;\r\n                                    // console.log(exteriorColorVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Exterior Color --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Exterior Color\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Number of Seats</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={numOfSeatsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputNumOfSeats} onChangeText={handleInputNumOfSeatsChange} placeholder=\" Number of Seats\" /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Doors</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={doorsError} borderWidth={1}><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDoors} onChangeText={handleInputDoorsChange} placeholder=\" Doors\" /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box alignSelf={'center'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Fuel</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1} ><TouchableOpacity onPress={handleModalFuelOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='Fuel'\r\n                                  handleAddTextChange={handleAddFuelTextChange}\r\n                                  textAreaAdd={textAreaAddFuel}\r\n                                  title='Fuel'\r\n                                  dataName={'fuel'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Fuel\"\r\n                                  data={fuelData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectFuelBoxRef} bgColor={'white'} flex={1} borderColor={fuelError} borderWidth={1}>\r\n                                {/* <Select key={keySelectFuel} accessibilityLabel=\"Choose Fuel\" placeholder=\"Choose Fuel\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {fuelData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectFuel}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={fuelData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    fuelVariable.text = selectedItem;\r\n                                    // console.log(fuelVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Fuel --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Fuel\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'}>\r\n                              <Box flexDir={'row'} bgColor={'#8096D7'} alignSelf={'center'} flex={[1, 1, 1, 1, 2, 2]} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Dimension</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionLengthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionLength} onChangeText={handleInputDimensionLengthChange} flex={1} placeholder=\"Length\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionWidthError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionWidth} onChangeText={handleInputDimensionWidthChange} flex={1} placeholder=\"Width\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={dimensionHeightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" keyboardType=\"numeric\" ref={inputDimensionHeight} onChangeText={handleInputDimensionHeightChange} flex={1} placeholder=\"Height\" /><InputRightAddon children={\"cm\"} /></InputGroup></Box>\r\n                              <Box bgColor={'white'} flex={1}><InputGroup><Input keyboardType=\"numeric\" ref={inputDimensionCubicMeters} defaultValue=\"0.00\" onChangeText={handleInputDimensionCubicMetersChange} bgColor={'muted.100'} disabled editable={false} flex={1} placeholder=\"Cubic Meters\" /><InputRightAddon children={\"m³\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Drive Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n                                {/* <Box flex={1} justifyContent=\"center\" alignItems={'flex-end'} marginRight={1}><TouchableOpacity onPress={handleModalDriveTypeOpen}><Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" /></TouchableOpacity></Box> */}\r\n                                <SortAndAddModal\r\n                                  docName='DriveType'\r\n                                  handleAddTextChange={handleAddDriveTypeTextChange}\r\n                                  textAreaAdd={textAreaAddDriveType}\r\n                                  title='Drive Type'\r\n                                  dataName={'driveType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Drive Type\"\r\n                                  data={driveTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectDriveTypeBoxRef} bgColor={'white'} flex={1} borderColor={driveTypeError} borderWidth={1}>\r\n                                {/* <Select key={keySelectDriveType} accessibilityLabel=\"Choose Drive Type\" placeholder=\"Choose Drive Type\" _selectedItem={{\r\n                                bg: \"teal.600\",\r\n                                endIcon: <CheckIcon size=\"5\" />\r\n                              }}>\r\n                                {driveTypeData.map((item, index) => (\r\n\r\n                                  <Select.Item key={item} label={item} value={item} />\r\n\r\n                                ))}\r\n                              </Select> */}\r\n                                <SelectDropdown\r\n                                  ref={selectDriveType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={driveTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    driveTypeVariable.text = selectedItem;\r\n                                    // console.log(driveTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Drive Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Drive Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Weight</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={weightError} borderWidth={1}><InputGroup><Input defaultValue=\"\" ref={inputWeight} keyboardType=\"numeric\" onChangeText={handleInputWeightChange} flex={1} placeholder=\" Weight\" /><InputRightAddon children={\"kg\"} /></InputGroup></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderBottomColor={'white'} borderBottomWidth={'0'}>\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Body Type</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text>\r\n\r\n                                <SortAndAddModal\r\n                                  docName='BodyType'\r\n                                  handleAddTextChange={handleAddBodyTypeTextChange}\r\n                                  textAreaAdd={textAreaAddBodyType}\r\n                                  title='Body Type'\r\n                                  dataName={'bodyType'}\r\n                                  databaseInit={projectExtensionFirestore}\r\n                                  headerText=\"Rearrange/Add Body Type\"\r\n                                  data={bodyTypeData}\r\n                                />\r\n                              </Box>\r\n                              <Box ref={selectBodyTypeBoxRef} bgColor={'white'} flex={1} borderColor={bodyTypeError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectBodyType}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={bodyTypeData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    bodyTypeVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Body Type --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Body Type\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Supply Chains Costs</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={'white'} borderWidth={1}>\r\n                                <SupplyChainsCosts\r\n                                  handleAddExpenseNameTextChange={handleAddExpenseNameTextChange}\r\n                                  textAreaAddExpenseName={textAreaAddExpenseName}\r\n                                  inputExpenseAmount={inputExpenseAmount}\r\n                                  handleInputExpenseAmountChange={handleInputExpenseAmountChange}\r\n                                  handleAddPaidToTextChange={handleAddPaidToTextChange}\r\n                                  paidToData={paidToData}\r\n                                  inputCarNotes={inputCarNotes}\r\n                                /></Box>\r\n                            </Box>\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box flexDir={'row'} alignSelf={'center'} flex={1} alignItems={'flex-start'}><Text color={'white'} fontSize={[14, 14, 12, 12, 16, 18]}> Select Features</Text><Text color={'#D96437'} fontSize={[14, 14, 12, 12, 16, 18]}> *</Text></Box>\r\n                              <Box bgColor={'white'} flex={1} borderColor={isNoFeaturesSelected} borderWidth={1}><SelectFeaturesButton /></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box flexDir={'row'} borderTopColor={'white'} borderTopWidth={'1'} bgColor={'#8096D7'} >\r\n                              <Box bgColor={'#8096D7'} flex={1} flexDir={'row'} ><Text color={'white'} alignSelf={'center'} fontSize={[14, 14, 12, 12, 16, 18]}> Stock Status</Text>\r\n\r\n                              </Box>\r\n                              <Box ref={selectStockStatusBoxRef} bgColor={'white'} flex={1} borderColor={stockStatusError} borderWidth={1}>\r\n\r\n                                <SelectDropdown\r\n                                  ref={selectStockStatus}\r\n                                  buttonStyle={{\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    padding: 4,\r\n                                  }}\r\n                                  buttonTextStyle={{\r\n                                    textAlign: 'left',\r\n                                    color: '#424242',\r\n                                    fontSize: 12,\r\n                                  }}\r\n                                  dropdownStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    borderColor: '#E0E0E0',\r\n                                    borderWidth: 1,\r\n                                    borderRadius: 4,\r\n                                    shadowColor: '#000000',\r\n                                    shadowOffset: { width: 0, height: 2 },\r\n                                    shadowOpacity: 0.1,\r\n                                    shadowRadius: 4,\r\n                                    elevation: 2,\r\n                                  }}\r\n                                  rowStyle={{\r\n                                    backgroundColor: '#FFFFFF',\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                  }}\r\n                                  rowTextStyle={{\r\n                                    color: '#424242',\r\n                                    fontSize: 16,\r\n                                  }}\r\n                                  data={stockStatusData}\r\n                                  onSelect={useCallback((selectedItem) => {\r\n                                    stockStatusVariable.text = selectedItem;\r\n                                    // console.log(bodyTypeVariable.text);\r\n\r\n                                  }, [])}\r\n                                  defaultButtonText=\"-- Choose Stock Status --\"\r\n                                  buttonTextAfterSelection={(selectedItem) => {\r\n                                    return selectedItem;\r\n                                  }}\r\n                                  renderDropdownIcon={(isOpened) => {\r\n                                    return (\r\n                                      <Ionicons\r\n                                        name={isOpened ? 'chevron-up' : 'chevron-down'}\r\n                                        color={'#424242'}\r\n                                        size={18}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                  rowTextForSelection={(item) => {\r\n                                    return item;\r\n                                  }}\r\n                                  searchPlaceHolder=\" Search for Stock Status\"\r\n                                  searchInputStyle={{\r\n                                    marginTop: 1,\r\n                                    flex: 1,\r\n                                    width: '100%',\r\n                                  }}\r\n                                  disableAutoScroll\r\n                                  search\r\n\r\n                                />\r\n                              </Box>\r\n                            </Box>\r\n\r\n\r\n\r\n                          </Box>\r\n\r\n\r\n                        </Box>\r\n\r\n                      </Box>\r\n\r\n                      <br /> <br /> <br /> <br />\r\n\r\n                      <Box flex={1} bgColor='#A6BCFE' w='100%' margin={1} flexDirection={'column'} paddingBottom={[10, 10, 10, 0, 0, 0]}>\r\n                        {/*=============================================================== Add Image(s)===============================================================*/}\r\n                        <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n                      </Box>\r\n\r\n                    </Box>\r\n\r\n                  </Box>\r\n\r\n                  <Box flex={1} margin={1} flexDirection={'column'} h={'full'} display={['none', 'none', 'none', 'none', 'flex', 'flex']}>\r\n                    <Box h={'full'} w={'full'}>\r\n\r\n                      <HStack flex={1}>\r\n                        <Input\r\n                          ref={inputCarName}\r\n                          borderColor={carNameError}\r\n                          placeholder=\"Car Name\" margin={1} bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} flex={1} />\r\n                        <HStack flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} children={\"Notes \"} />\r\n                            <Input flex={1} ref={inputCarNotes} borderColor={carNameError} placeholder=\"Note\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n                      <HStack flex={2}>\r\n                        <TextArea flex={1} ref={inputCarDesc} borderColor='muted.500' bgColor={'white'} placeholder=\"Car Description / Salespoint\" borderWidth={1} placeholderTextColor={'muted.400'} margin={1} />\r\n                        <HStack marginTop={1} flex={1}>\r\n                          <InputGroup flex={1}>\r\n                            <InputLeftAddon bgColor={'#7B9CFF'} borderWidth={1} borderColor={'white'} _text={{ color: 'white' }} color={'white'} children={\"Memo\"} />\r\n                            <Input multiline flex={1} ref={inputCarMemo} borderColor={carNameError} placeholder=\"Memo\" bgColor={'white'} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                          </InputGroup>\r\n                        </HStack>\r\n                      </HStack>\r\n\r\n\r\n                      <HStack>\r\n                        <Input keyboardType=\"numeric\" flex={1} ref={inputFobJpy} onChangeText={handleInputFobJpyChange} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"FOB Price\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                        <Input disabled ref={inputFobUsd} flex={1} borderColor='muted.500' bgColor={'white'} InputLeftElement={<Icon as={<FontAwesome name=\"dollar\" />} size={5} ml=\"2\" color=\"muted.400\" />} placeholder=\"0\" margin={1} borderWidth={1} placeholderTextColor={'muted.400'} />\r\n                      </HStack>\r\n\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Box w={'full'} flexDir={'row'} margin={1} paddingBottom={10} paddingTop={10} display={screenWidth < 1280 ? 'none' : 'flex'}>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#D9D9D9'} onPress={handleModalClearOpen} _text={{ color: 'muted.500', }} _hover={{ bgColor: '#f0eded', }}>Clear</Button> */}\r\n                    <ClearModalButton handleClear={handleClear} />\r\n                    <Button borderRadius={3} flex={1} bgColor={'#A6BCFE'} disabled></Button> <Button flex={1} bgColor={'#A6BCFE'} disabled></Button>\r\n                    {/* <Button borderRadius={3} flex={1} bgColor={'#7B9CFF'} _hover={{ bgColor: '#517cfc', }}>Upload</Button> */}\r\n                    <UploadModalButton handleUpload={handleUpload} />\r\n\r\n                  </Box>\r\n\r\n                </Box>\r\n              </PresenceTransition>\r\n            </ScrollView>\r\n\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <LoadingModal />\r\n      {/* <Box\r\n        position=\"absolute\"\r\n        top={0}\r\n        bottom={0}\r\n        left={0}\r\n        right={0}\r\n        backgroundColor=\"rgba(0, 0, 0, 0.5)\"\r\n        flex={1}\r\n        display={isLoading ? '' : 'none'}\r\n      >\r\n        <Center flex={1}>\r\n          <Box style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n            <Text color={'white'}>Loading, please wait!</Text>\r\n          </Box>\r\n        </Center>\r\n      </Box> */}\r\n\r\n      <UpdateSuccessModal onClose={handleUpdateSuccessModalClose} headerText={'Vehicle Updated!'} bodyText={'Vehicle was successfully updated!'} />\r\n      <UploadSuccessModal onClose={handleSuccessModalClose} headerText={'Vehicle Added!'} bodyText={'Vehicle was successfully added! You can view it in the vehicle list.'} />\r\n    </NativeBaseProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert,\r\n    Pressable as NativePressable,\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setChatListData,\r\n    setChatListImageUrl,\r\n    setChatListLastVisible,\r\n    setLoadMoreLoading,\r\n    setNoMoreData,\r\n    setActiveChatId,\r\n    setChatListSearchText,\r\n    setChatMessagesData,\r\n    setChatMessageBoxLoading,\r\n    setSelectedChatData,\r\n    setReadByListModalVisible,\r\n    setLoadMoreMessagesLoading,\r\n    setNoMoreMessagesData,\r\n    setDeleteMessageTemplateVisible,\r\n    setInvoiceData,\r\n    setTransactionModalVisible,\r\n    setPreviewInvoiceVisible,\r\n    setSelectedCustomerData,\r\n    setPdfViewerModalVisible,\r\n    setSelectedFileUrl,\r\n    setIsLoading,\r\n    setLoginName,\r\n    setCarImageUrl,\r\n    setSelectedVehicleData,\r\n    setMessageTextInputValue,\r\n    setCustomInvoiceVisible,\r\n    setMessageTextInputHeight,\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, toFinite } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport Hyperlink from 'react-native-hyperlink';\r\nimport { HmacSHA256, enc } from 'crypto-js';\r\nimport { AES } from 'crypto-js';\r\nimport { CRYPTO_KEY, CRYPTO_KEY_API } from '@env';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport QRCode from 'react-native-qrcode-svg';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HashRouter as Router, Route, Routes, useNavigate, Navigate, useParams, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\nconst valueCurrency = 0;\r\nconst valueInspectionPrice = 300;\r\nconst valueInsurancePrice = 50;\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'CHAT MESSAGES'\r\nlet globalLastVisible;\r\nlet globalMessagesLastVisible;\r\nlet globalSearchText = '';\r\nlet globalCustomerId = '';\r\nlet globalChatId = '';\r\nlet globalImageUrl = '';\r\nlet globalCustomerCarName = '';\r\nlet globalCustomerFirstName = '';\r\nlet globalCustomerLastName = '';\r\n\r\nlet globalAdditionalNameArray = [];\r\n\r\nlet globalAdditionalPriceArray = [];\r\n\r\nlet globalMessageTemplateSelectedTitle = '';\r\n\r\n// let userEmail = projectControlAuth.currentUser.email;\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nlet transactionModalTitle = '';\r\n\r\nlet transactionModalContentValue = 0;\r\n\r\nlet ip = '';\r\nlet ipCountry = '';\r\n\r\nlet globalInvoiceVariable = {\r\n    carData: {\r\n\r\n    },\r\n    selectedCurrencyExchange: '',\r\n    cfs: '',\r\n    placeOfDelivery: '',\r\n    departureCountry: '',\r\n    departurePort: '',\r\n    salesPerson: '',\r\n\r\n    discharge: {\r\n        port: '',\r\n        country: '',\r\n    },\r\n\r\n    consignee: {\r\n        sameAsBuyer: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    notifyParty: {\r\n        sameAsConsignee: null,\r\n        name: '',\r\n        address: '',\r\n        contactNumber: '',\r\n        fax: '',\r\n        email: '',\r\n    },\r\n\r\n    paymentDetails: {\r\n        incoterms: '',\r\n        inspectionIsChecked: null,\r\n        inspectionName: '',\r\n        warrantyIsCheck: null,\r\n        warrantyAmount: 0,\r\n        fobPrice: 0,\r\n        freightPrice: 0,\r\n        insurancePrice: 0,\r\n        inspectionPrice: 0,\r\n        totalAmount: 0,\r\n        additionalName: [],\r\n        additionalPrice: [],\r\n    },\r\n\r\n    bankInformations: {\r\n        dueDate: '',\r\n        issuingDate: '',\r\n        bankAccount: {\r\n\r\n        },\r\n        paymentTerms: '',\r\n        salesAgreement: '',\r\n    },\r\n\r\n}\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nlet globalSelectedPDFUrl = '';\r\nlet globalSelectedFileType = '';\r\n\r\n\r\nconst firestore = getFirestore();\r\n\r\n\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst encryptDataAPI = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY_API.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst encryptData = (data) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n        return AES.encrypt(data, secretKey).toString();\r\n    } catch (error) {\r\n        console.error(\"Error encrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the encryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\nconst decryptData = (ciphertext) => {\r\n    try {\r\n        const secretKey = CRYPTO_KEY.toString();\r\n\r\n        const bytes = AES.decrypt(ciphertext, secretKey);\r\n        return bytes.toString(enc.Utf8);\r\n    } catch (error) {\r\n        console.error(\"Error decrypting data:\", error);\r\n        // useNavigate(`/devadmin/chat-messages`);\r\n\r\n        // Handle the decryption error or return a fallback\r\n        return null; // or handle it in another appropriate way\r\n    }\r\n};\r\n\r\n\r\nconst TimelineStatus = ({ data }) => {\r\n\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n\r\n    const changeIndex = data.findIndex(item => selectedChatData.stepIndicator.value < item.value);\r\n\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingTop: 3, }}>\r\n            {/* Dots and individual line segments */}\r\n            {data.map((item, index) => (\r\n                <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                    {/* Dot */}\r\n                    <Tooltip label={item.title} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33' }}>\r\n                        <View style={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            borderRadius: 10,\r\n                            backgroundColor: selectedChatData.stepIndicator.value < item.value ? '#C1C1C1' : '#abf7c7',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {selectedChatData.stepIndicator.value < item.value ? (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_off.png`),\r\n                                        priority: FastImage.priority.normal,\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            ) : (\r\n                                <FastImage\r\n                                    source={{\r\n                                        uri: require(`../../assets/chat_step/chat_step_${item.value}_on.png`),\r\n                                        priority: FastImage.priority.normal\r\n                                    }}\r\n                                    style={{\r\n                                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                                        width: 15,\r\n                                        height: 15,\r\n                                        alignSelf: 'center',\r\n                                    }}\r\n                                    resizeMode={FastImage.resizeMode.stretch}\r\n                                />\r\n                            )}\r\n\r\n                        </View>\r\n                    </Tooltip>\r\n                    {/* Line Segment (except for the last dot) */}\r\n                    {index < data.length - 1 && (\r\n                        <View style={{\r\n                            height: 3,\r\n                            width: 20, // Adjust the width to match the space between the dots\r\n                            backgroundColor: selectedChatData.stepIndicator.value <= item.value ? '#C1C1C1' : '#abf7c7',\r\n                        }} />\r\n                    )}\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst statusData = [\r\n    { title: 'Negotiation', value: 1 },\r\n    { title: 'Issued Proforma Invoice', value: 2 },\r\n    { title: 'Order Item', value: 3 },\r\n    { title: 'Payment Confirmed', value: 4 },\r\n    { title: 'Shipping Schedule', value: 5 },\r\n    { title: 'Documents', value: 6 },\r\n    { title: 'Vehicle Received', value: 7 },\r\n    // Add more events as needed\r\n];\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n// const SkeletonChatListLayout = () => {\r\n//     return (\r\n//         <SkeletonPlaceholder>\r\n//             <SkeletonPlaceholder.Item flexDirection=\"row\" alignItems=\"center\" padding={12}>\r\n//                 {/* Placeholder for Image */}\r\n//                 <SkeletonPlaceholder.Item width={60} height={60} borderRadius={30} />\r\n\r\n//                 {/* Placeholder for Texts */}\r\n//                 <SkeletonPlaceholder.Item flex={1} marginLeft={20}>\r\n//                     {/* Date */}\r\n//                     <SkeletonPlaceholder.Item width={80} height={12} marginBottom={6} />\r\n//                     {/* Car Name */}\r\n//                     <SkeletonPlaceholder.Item width={120} height={14} marginBottom={6} />\r\n//                     {/* Text First and Last */}\r\n//                     <SkeletonPlaceholder.Item width={140} height={14} marginBottom={6} />\r\n//                     {/* Last Message */}\r\n//                     <SkeletonPlaceholder.Item width={160} height={12} marginBottom={6} />\r\n//                 </SkeletonPlaceholder.Item>\r\n//             </SkeletonPlaceholder.Item>\r\n//         </SkeletonPlaceholder>\r\n//     );\r\n// };\r\n\r\nconst HeaderButton = ({ title, onPress, isActive, headerCount }) => {\r\n    const activeStyle = isActive ? { backgroundColor: '#E1EDF7' } : {};\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    return (\r\n        <Pressable\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            focusable={false}\r\n            onPress={onPress}\r\n            style={{ backgroundColor: isHovered ? '#f2f2f2' : 'transparent', padding: 12, marginVertical: screenWidth > 1818 ? 10 : 2, borderWidth: 5, borderColor: 'transparent', marginLeft: 8, width: 195, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 5, ...activeStyle }}\r\n        >\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, alignSelf: 'center', textAlign: 'center', }}>{title}</Text>\r\n            {headerCount}\r\n\r\n        </Pressable>\r\n    );\r\n\r\n};\r\n\r\nconst FilterButton = ({ title, onPress, isActive, iconActive, iconNotActive }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    return (\r\n        <Pressable\r\n            focusable={false}\r\n            variant='ghost'\r\n            onPress={onPress}\r\n            onHoverIn={hoverIn}\r\n            onHoverOut={hoverOut}\r\n            style={{\r\n                padding: 5,\r\n                width: 100,\r\n                margin: 5,\r\n                flexDirection: 'row', // Align items in a row\r\n                alignItems: 'center', // Center items vertically\r\n                justifyContent: 'center',\r\n                borderRadius: 5,\r\n                backgroundColor: isActive ? '#E1EDF7' : (isHovered ? '#d7d7d9' : '#ECEDF0'),\r\n            }}\r\n        >\r\n            {isActive ? iconActive : iconNotActive}\r\n            <Text color={isActive ? '#0A78BE' : '#1C2B33'} fontSize={14} style={{ fontWeight: isActive ? 700 : 400, marginLeft: 5, }}>{title}</Text>\r\n\r\n\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst formatDate = (timestamp) => {\r\n    const currentDate = new Date();\r\n    const formattedTimestamp = timestamp.replace(' at ', 'T').replace(/\\//g, '-');\r\n    const givenDate = new Date(formattedTimestamp);\r\n\r\n    // Resetting the time part to compare dates only\r\n    const currentFormattedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    const givenFormattedDate = new Date(givenDate.getFullYear(), givenDate.getMonth(), givenDate.getDate());\r\n\r\n    // Check if the dates are the same\r\n    if (givenFormattedDate.getTime() === currentFormattedDate.getTime()) {\r\n        return \"This day\";\r\n    }\r\n\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const startOfWeek = new Date();\r\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the date is within this week\r\n    if (givenDate >= startOfWeek && givenDate < currentFormattedDate) {\r\n        return givenDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n    }\r\n\r\n    // Check if the date is within this year\r\n    const startOfYear = new Date(new Date().getFullYear(), 0, 1);\r\n    if (givenDate >= startOfYear) {\r\n        return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    }\r\n\r\n    // If the date is not within this year\r\n    return givenDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n};\r\n\r\nconst SkeletonChatListLayout = () => {\r\n\r\n    return (\r\n        <>\r\n            <View // Add a unique key here\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                {/* Skeleton for the image */}\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 12,\r\n                    }}\r\n                />\r\n                {/* Skeleton for the text */}\r\n                <View style={{ flex: 1 }}>\r\n                    {Array.from({ length: 3 }).map((_, subIndex) => (\r\n                        <View\r\n                            key={`text-${subIndex}`}  // Add a unique key here for each text line\r\n                            style={{\r\n                                height: 10,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginBottom: 6,\r\n                                width: '80%',\r\n                                borderRadius: 4,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    <View style={{\r\n                        position: 'absolute',\r\n                        right: 10, height: 10,\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginBottom: 6,\r\n                        width: '5%',\r\n                        borderRadius: 4,\r\n                    }} />\r\n\r\n                    <View\r\n                        style={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: '#e0e0e0',\r\n                            position: 'absolute',\r\n                            right: -20,\r\n                            top: -20,\r\n                            padding: 10,\r\n                            alignSelf: 'center',\r\n                        }}\r\n\r\n                    />\r\n                </View>\r\n            </View>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst DeleteMessageTemplateYesNo = ({ handleDeleteMessageTemplateClose }) => {\r\n\r\n    const deleteMessageTemplateVisible = useSelector((state) => state.deleteMessageTemplateVisible);\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n    const selectedTitle = globalMessageTemplateSelectedTitle;\r\n    const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n    const handleClose = () => {\r\n        handleDeleteMessageTemplateClose();\r\n\r\n    }\r\n\r\n\r\n    const deleteMessageTemplate = async (titleToDelete) => {\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n        setIsDeleteLoading(true);\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            if (docSnap.exists()) {\r\n                let messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                // Filter out the item with the specified title\r\n                const updatedTemplates = messageTemplates.filter(template => template.title !== titleToDelete);\r\n\r\n                // Update the document with the new array\r\n                await updateDoc(documentRef, { messageTemplate: updatedTemplates });\r\n\r\n                console.log('Item successfully deleted');\r\n                setIsDeleteLoading(false);\r\n                handleClose();\r\n            } else {\r\n                console.log('Document does not exist');\r\n                setIsDeleteLoading(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item: ', error);\r\n            setIsDeleteLoading(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={deleteMessageTemplateVisible}\r\n            onClose={handleClose}\r\n        >\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header >Delete Message Template?</Modal.Header>\r\n                <Modal.Body>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text style={{ fontWeight: 400, }}>Are you sure you want to delete the selected message template?</Text>\r\n                    </View>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"ghost\" space=\"2\">\r\n                        <Button style={{ width: 80, height: 36, }} onPress={handleClose} variant={'solid'} colorScheme={'warmGray'}>Cancel</Button>\r\n                        <Button isLoading={isDeleteLoading ? true : false} onPress={() => deleteMessageTemplate(selectedTitle)} style={{ padding: 16, height: 36, }} variant={'solid'} colorScheme={'error'}>Delete</Button>\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n};\r\n\r\nconst MessageTemplateItem = ({ setOriginalTitle, addVisible, titleInputRef, valueInputRef, setAddVisible, item, textInputRef, setPopoverOpen }) => {\r\n    const [isTemplateItemHovered, setIsTemplateItemHovered] = useState(false);\r\n    const [isTemplateMenuHovered, setIsTemplateMenuHovered] = useState(false);\r\n    const [isTemplateEditHovered, setIsTemplateEditHovered] = useState(false);\r\n    const [isTemplateDeleteHovered, setIsTemplateDeleteHovered] = useState(false);\r\n    const [templateMenuOpen, setTemplateMenuOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [addIsVisible, setIsAddVisible] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onPress = (item) => {\r\n        // textInputRef.current.value = item.value;\r\n        dispatch(setMessageTextInputValue(item.value));\r\n        setPopoverOpen(false);\r\n    };\r\n\r\n    const onEditPress = (item) => {\r\n\r\n        setAddVisible(true);\r\n        // setCurrentItem(item);\r\n        setIsAddVisible(true);\r\n        setTemplateMenuOpen(false);\r\n        titleInputRef.current.value = item.title;\r\n        valueInputRef.current.value = item.value;\r\n        setOriginalTitle(item.title);\r\n        textInputRef.current.focus();\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n\r\n    //     if (addIsVisible == true) {\r\n    //         console.log(addIsVisible);\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    //     if (titleInputRef.current && valueInputRef.current) {\r\n    //         titleInputRef.current.value = currentItem.title;\r\n    //         valueInputRef.current.value = currentItem.value;\r\n    //     }\r\n    // }, [currentItem]);\r\n\r\n    const handleDeletePress = (title) => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(true));\r\n        globalMessageTemplateSelectedTitle = title;\r\n    }\r\n\r\n\r\n    return (\r\n        <Pressable\r\n            onPress={() => onPress(item)}\r\n            onHoverIn={() => setIsTemplateItemHovered(true)}\r\n            onHoverOut={() => setIsTemplateItemHovered(false)}\r\n            style={{\r\n                padding: 10,\r\n                backgroundColor: isTemplateItemHovered ? '#f2f2f2' : 'transparent',\r\n                flex: 1,\r\n                borderRadius: 5,\r\n            }}>\r\n            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                <Text style={{ fontWeight: '700', flex: 1, }} numberOfLines={1} ellipsizeMode='tail'>{item.title}</Text>\r\n                <Popover\r\n                    isOpen={templateMenuOpen}\r\n                    onClose={() => setTemplateMenuOpen(false)}\r\n                    trigger={(triggerProps) => {\r\n                        return <Pressable\r\n                            {...triggerProps}\r\n                            onPress={() => setTemplateMenuOpen(true)}\r\n                            onHoverIn={() => setIsTemplateMenuHovered(true)}\r\n                            onHoverOut={() => setIsTemplateMenuHovered(false)}\r\n                            style={{ backgroundColor: isTemplateMenuHovered ? '#dedede' : 'transparent', padding: 5, justifyContent: 'center', borderRadius: 5, }}>\r\n                            <Entypo size={16} name='dots-three-horizontal' color='#171717' />\r\n                        </Pressable>\r\n                    }}\r\n\r\n                >\r\n                    <Popover.Content>\r\n\r\n                        <Pressable\r\n                            onPress={() => onEditPress(item)}\r\n                            onHoverIn={() => setIsTemplateEditHovered(true)}\r\n                            onHoverOut={() => setIsTemplateEditHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateEditHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Edit</Text>\r\n                        </Pressable>\r\n\r\n                        <Pressable\r\n                            onPress={() => handleDeletePress(item.title)}\r\n                            onHoverIn={() => setIsTemplateDeleteHovered(true)}\r\n                            onHoverOut={() => setIsTemplateDeleteHovered(false)} style={{ flex: 1, width: 50, backgroundColor: isTemplateDeleteHovered ? '#dedede' : 'white', padding: 5, }} focusable={false}>\r\n                            <Text>Delete</Text>\r\n                        </Pressable>\r\n\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </View>\r\n            <Text style={{ fontWeight: '400', fontSize: 12, }} numberOfLines={1} ellipsizeMode='tail'>{item.value}</Text>\r\n        </Pressable>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst MessageTemplate = ({ textInputRef }) => {\r\n    const dispatch = useDispatch();\r\n    const [isTemplateHovered, setIsTemplateHovered] = useState(false);\r\n    const [isAddHovered, setIsAddHovered] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [addVisible, setAddVisible] = useState(false);\r\n\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [isSaveHovered, setIsSaveHovered] = useState(false);\r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n\r\n\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const searchInputRef = useRef(null);\r\n    const titleInputRef = useRef(null);\r\n    const valueInputRef = useRef(null);\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    const data = [\r\n        { title: 'Message 1', value: 'Sample Message 1' },\r\n        { title: 'Message 2', value: 'Sample Message 2' },\r\n        { title: 'Message 3', value: 'Sample Message 3' },\r\n    ];\r\n\r\n\r\n\r\n    const saveMessageTemplate = async () => {\r\n        setSaveLoading(true);\r\n        const documentRef = doc(projectControlFirestore, 'MessageTemplate', email);\r\n\r\n        try {\r\n            // Fetch current data\r\n            const docSnap = await getDoc(documentRef);\r\n\r\n            let messageTemplates = [];\r\n            const newTitle = titleInputRef.current?.value;\r\n            const newValue = valueInputRef.current?.value;\r\n\r\n            if (newTitle && newValue) {\r\n                if (docSnap.exists()) {\r\n                    // Document exists, get the current templates\r\n                    messageTemplates = docSnap.data().messageTemplate || [];\r\n\r\n                    // Find index based on the original title\r\n                    const index = messageTemplates.findIndex(template => template.title === originalTitle);\r\n\r\n                    if (index !== -1) {\r\n                        // Update existing template\r\n                        messageTemplates[index] = { title: newTitle, value: newValue };\r\n                    } else {\r\n                        // Add new template if original title does not exist\r\n                        messageTemplates.push({ title: newTitle, value: newValue });\r\n                    }\r\n                } else {\r\n                    // Document does not exist, create a new array with the new template\r\n                    console.log('Creating a new document');\r\n                    messageTemplates = [{ title: newTitle, value: newValue }];\r\n                }\r\n\r\n                // Update or set the document\r\n                await setDoc(documentRef, { messageTemplate: messageTemplates }, { merge: true });\r\n\r\n                console.log('Document successfully updated or created');\r\n            } else {\r\n                console.log('Title or value is empty');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating or creating document: ', error);\r\n        } finally {\r\n            setSaveLoading(false);\r\n            handleCancelPressed();\r\n        }\r\n    };\r\n\r\n\r\n    const handleSearch = (text) => {\r\n        setSearchText(text);\r\n        const filtered = templateData.filter(item =>\r\n            item.title.toLowerCase().includes(text.toLowerCase()) ||\r\n            item.value.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setPopoverOpen(false);\r\n        setAddVisible(false);\r\n        setIsAddHovered(false);\r\n    };\r\n\r\n    const handleCancelPressed = () => {\r\n        setIsAddHovered(false);\r\n        setAddVisible(false);\r\n        setIsCancelHovered(false)\r\n        setIsSaveHovered(false)\r\n        titleInputRef.current.clear();\r\n        valueInputRef.current.clear();\r\n\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <MessageTemplateItem setOriginalTitle={setOriginalTitle} addVisible={addVisible} titleInputRef={titleInputRef} valueInputRef={valueInputRef} setAddVisible={setAddVisible} item={item} textInputRef={textInputRef} setPopoverOpen={setPopoverOpen} />;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectControlFirestore, \"MessageTemplate\", email);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                let arrayFieldData = docSnap.data().messageTemplate;\r\n\r\n                // Sort the array by title\r\n                arrayFieldData.sort((a, b) => {\r\n                    let titleA = a.title.toUpperCase(); // ignore upper and lowercase\r\n                    let titleB = b.title.toUpperCase(); // ignore upper and lowercase\r\n                    if (titleA < titleB) {\r\n                        return -1;\r\n                    }\r\n                    if (titleA > titleB) {\r\n                        return 1;\r\n                    }\r\n                    // titles must be equal\r\n                    return 0;\r\n                });\r\n\r\n                setTemplateData(arrayFieldData);\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document:\", error);\r\n        });\r\n\r\n        // Cleanup subscription on unmount\r\n        return () => unsubscribe();\r\n    }, [popoverOpen]);\r\n\r\n    const handleDeleteMessageTemplateClose = () => {\r\n\r\n        dispatch(setDeleteMessageTemplateVisible(false));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DeleteMessageTemplateYesNo handleDeleteMessageTemplateClose={handleDeleteMessageTemplateClose} />\r\n            <Popover\r\n                isOpen={popoverOpen}\r\n                onClose={handlePopoverClose}\r\n                // initialFocusRef={searchInputRef}\r\n                finalFocusRef={textInputRef}\r\n                placement={'top'}\r\n                trigger={(triggerProps) => {\r\n                    return <Pressable\r\n                        focusable={false}\r\n                        {...triggerProps}\r\n                        onPress={() => setPopoverOpen(true)}\r\n                        onHoverIn={() => setIsTemplateHovered(true)}\r\n                        onHoverOut={() => setIsTemplateHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                bottom: 0,\r\n                                right: 100,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                opacity: pressed ? 0.5 : 1\r\n                            }\r\n                        ]}\r\n\r\n                    >\r\n                        <Ionicons name=\"chatbox-ellipses-outline\" size={24} color={isTemplateHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n                    </Pressable>\r\n                }} >\r\n                <Popover.Content w={screenWidth < mobileViewBreakpoint ? 320 : 400} marginRight={10} >\r\n                    <Popover.Arrow />\r\n                    <View style={{ display: addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Create a message template</Text>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={250}>\r\n                            <Text style={{ fontWeight: 700, }}>Title</Text>\r\n                            <TextInput\r\n                                ref={titleInputRef}\r\n                                placeholder='Input Title'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n                            <br />\r\n                            <Text style={{ fontWeight: 700, }}>Message</Text>\r\n                            <TextInput\r\n                                multiline\r\n                                ref={valueInputRef}\r\n                                placeholder='Input Message'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 100, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5 }} />\r\n\r\n                        </Popover.Body>\r\n                        <Popover.Footer backgroundColor={'white'}>\r\n                            <View style={{ height: 30, flexDirection: 'row', justifyContent: 'center', }}>\r\n                                <Pressable\r\n                                    onHoverIn={() => setIsCancelHovered(true)}\r\n                                    onHoverOut={() => setIsCancelHovered(false)}\r\n                                    onPress={handleCancelPressed}\r\n                                    style={{ backgroundColor: isCancelHovered ? '#DADADA' : 'white', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    <Text style={{ textAlign: 'center', fontWeight: 500, }}>Cancel</Text>\r\n                                </Pressable>\r\n\r\n                                <Pressable\r\n                                    onPress={saveMessageTemplate}\r\n                                    onHoverIn={() => setIsSaveHovered(true)}\r\n                                    onHoverOut={() => setIsSaveHovered(false)}\r\n                                    style={{ backgroundColor: isSaveHovered ? '#107a37' : '#16A34A', width: 60, borderRadius: 5, padding: 5, borderWidth: 1, borderColor: '#DADDE1', marginHorizontal: 5, }}>\r\n                                    {saveLoading ?\r\n                                        (<Spinner\r\n                                            animating\r\n                                            size=\"sm\"\r\n                                            color={'white'}\r\n                                        />) :\r\n                                        (\r\n                                            <Text style={{ textAlign: 'center', color: 'white', fontWeight: 500, }}>Save</Text>\r\n                                        )}\r\n                                </Pressable>\r\n                            </View>\r\n                        </Popover.Footer>\r\n                    </View><View style={{ display: !addVisible ? 'flex' : 'none', }}><Popover.Header backgroundColor={'white'}>\r\n                        <View style={{ flexDirection: 'row', flex: 1 }}>\r\n                            <Text style={{ fontWeight: 700, fontSize: 16, flex: 1 }}>Message Template</Text>\r\n                            <Pressable focusable={false} onPress={() => setAddVisible(true)} onHoverIn={() => setIsAddHovered(true)} onHoverOut={() => setIsAddHovered(false)}>\r\n                                <Text style={{ fontWeight: 400, fontSize: 16, color: '#1B81C2', textDecorationLine: isAddHovered ? 'underline' : 'none' }}>+ ADD</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Popover.Header>\r\n                        <Popover.Body backgroundColor={'white'} height={300}>\r\n                            <TextInput\r\n                                ref={searchInputRef}\r\n                                focusable={false}\r\n                                placeholder='Search'\r\n                                placeholderTextColor='#9B9E9F'\r\n                                underlineColorAndroid=\"transparent\"\r\n                                style={{ height: 40, padding: 10, outlineStyle: 'none', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, marginBottom: 5, }}\r\n                                keyboardType='search'\r\n                                onChangeText={handleSearch}\r\n                                value={searchText} />\r\n                            {templateData.length > 0 || filteredData.length > 0 ? (\r\n                                <FlatList\r\n                                    style={{ height: 100, borderBottomLeftRadius: 5 }}\r\n                                    renderItem={renderItem}\r\n                                    keyExtractor={item => item.title.toString()}\r\n                                    data={searchText ? filteredData : templateData} />\r\n                            ) : (\r\n                                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>No message template found</Text>\r\n                            )}\r\n\r\n                        </Popover.Body>\r\n                    </View>\r\n                </Popover.Content>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst FileDisplay = ({ file, onRemove }) => {\r\n    const iconSize = 24;\r\n    if (!file) return null;  // Define the icon size\r\n\r\n\r\n\r\n\r\n    const getFileIcon = (type) => {\r\n        if (type.includes('pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#FF0000\" />; // Red for PDF\r\n        }\r\n        if (type.includes('msword') || type.includes('wordprocessingml')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#2B579A\" />; // Blue for Word\r\n        }\r\n        if (type.includes('vnd.ms-excel') || type.includes('spreadsheetml') || type === 'text/csv') {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#217346\" />; // Green for Excel and CSV\r\n        }\r\n        if (type.includes('rar') || type.includes('x-rar-compressed') || type.includes('x-compressed')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: 24,\r\n                    height: 24,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />; // Color of your choice for RAR files\r\n        }\r\n\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"black\" />; // Default color for others\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', margin: 5 }}>\r\n            {getFileIcon(file.type)}\r\n            <Text style={{ marginLeft: 10 }}>{file.name}</Text>\r\n            <Pressable onPress={onRemove}>\r\n                <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst MessageTextInput = ({ handleSendMessage, textInputRef }) => {\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n    const messageTextInputHeight = useSelector((state) => state.messageTextInputHeight)\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleContentOnChange = (event) => {\r\n        const target = event.target;\r\n        // Temporarily reset height to ensure scrollHeight reflects current content\r\n        target.style.height = '0px'; // Reset height to recalculate\r\n        const updatedHeight = Math.max(50, Math.min(200, target.scrollHeight));\r\n        target.style.height = `${updatedHeight}px`; // Set to new calculated height\r\n\r\n        dispatch(setMessageTextInputHeight(updatedHeight));\r\n\r\n    };\r\n\r\n    const handleContentSizeChange = (event) => {\r\n        const { width, height } = event.nativeEvent.contentSize;\r\n        const updatedHeight = Math.max(50, Math.min(200, height));\r\n        dispatch(setMessageTextInputHeight(updatedHeight)); // Set to new calculated height\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (text) => {\r\n        dispatch(setMessageTextInputValue(text));\r\n        // You can also call handleContentSizeChange manually here if needed\r\n    };\r\n\r\n    return (\r\n        <TextInput\r\n            ref={textInputRef}\r\n            value={messageTextInputValue} // Controlled component\r\n            multiline\r\n            placeholder='Send a message...'\r\n            placeholderTextColor='#9B9E9F'\r\n            onChangeText={handleInputChange} // Use onChangeText for React Native\r\n            onChange={handleContentOnChange}\r\n            onContentSizeChange={handleContentSizeChange}\r\n            onKeyPress={handleKeyPress}\r\n            style={{\r\n                outlineStyle: 'none',\r\n                width: '100%',\r\n                minHeight: 50,\r\n                maxHeight: 200,\r\n                height: messageTextInputHeight,\r\n                alignSelf: 'center',\r\n                padding: 10,\r\n                overflow: 'auto',\r\n                marginBottom: 25,\r\n                marginRight: 50,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst ChatInputText = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const [isSendHovered, setIsSendHovered] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFilePreview, setSelectedFilePreview] = useState(null);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [imageUri, setImageUri] = useState(null);\r\n    const [fileUri, setFileUri] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isSendImageHovered, setIsSendImageHovered] = useState(false);\r\n    const [isSendAttachmentHovered, setIsSendAttachmentHovered] = useState(false);\r\n    const [sendIsLoading, setSendIsLoading] = useState(false);\r\n    const textInputRef = useRef(null);\r\n    const [inputHeight, setInputHeight] = useState(50);\r\n\r\n    const [inputValue, setInputValue] = useState(''); // Add state for input value\r\n    const messageTextInputValue = useSelector((state) => state.messageTextInputValue)\r\n    const dispatch = useDispatch();\r\n\r\n    const removeImage = () => {\r\n        setImageUri(null);\r\n        setSelectedImage(null);\r\n        setFileName(null);\r\n\r\n    };\r\n\r\n    const removeFile = () => {\r\n        setSelectedFile(null);\r\n        setSelectedFilePreview(null);\r\n        setFileUri(null);\r\n        setFileName(null);\r\n\r\n\r\n    };\r\n\r\n    const selectFile = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = '.pdf, .doc, .docx, .xls, .xlsx, .rar'; // Acceptable file types\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n\r\n                    if (file) {\r\n                        if (![\r\n                            'application/pdf',\r\n                            'application/msword',\r\n                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n                            'application/vnd.ms-excel',\r\n                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                            'application/x-rar-compressed',\r\n                            'application/x-compressed',\r\n                            'text/csv'\r\n                        ].includes(file.type)) {\r\n                            alert('File type not allowed');\r\n                            reject('File type not allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            alert('File size should be less than 10MB');\r\n                            reject('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n                        removeImage();\r\n                        // Read the file as a Data URL and set it in the state\r\n                        const reader = new FileReader();\r\n                        reader.onload = (e) => {\r\n                            setFileUri(e.target.result);\r\n                            resolve(file);\r\n                            setSelectedFile(file);\r\n                            setSelectedFilePreview({ name: file.name, type: file.type });\r\n                            setFileName(file.name);\r\n                            textInputRef.current.focus();\r\n                        };\r\n                        reader.onerror = (e) => {\r\n                            reject(e);\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectImage = async () => {\r\n        const maxFileSize = 10 * 1024 * 1024; // 5MB in bytes\r\n\r\n        if (Platform.OS === 'web') {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const input = document.createElement('input');\r\n                input.type = 'file';\r\n                input.accept = 'image/*';\r\n                input.onchange = () => {\r\n                    const file = input.files[0];\r\n                    if (file) {\r\n\r\n                        if (!file.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (file.size > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('File size should be less than 10MB');\r\n\r\n                            return;\r\n                        }\r\n\r\n                        removeFile();\r\n                        const reader = new FileReader();\r\n                        reader.readAsDataURL(file);\r\n                        reader.onload = () => {\r\n                            resolve({ dataUrl: reader.result, name: file.name });\r\n                            setImageUri(reader.result); // Set imageUri here\r\n                            setFileName(file.name);\r\n                            // console.log(`File name: ${file.name}`);\r\n                        };\r\n                        setSelectedImage(file);\r\n                        reader.onerror = error => reject(error);\r\n                    }\r\n                };\r\n                input.click();\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                launchImageLibrary({ mediaType: 'photo' }, (response) => {\r\n                    if (response.didCancel) {\r\n                        reject('User cancelled image picker');\r\n                    } else if (response.errorCode) {\r\n                        reject(response.errorMessage);\r\n                    } else {\r\n                        const asset = response.assets[0];\r\n\r\n                        if (!asset.type.startsWith('image/')) {\r\n                            reject('Only image files are allowed');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        if (asset.fileSize > maxFileSize) {\r\n                            reject('File size should be less than 10MB');\r\n                            alert('Only image files are allowed');\r\n                            return;\r\n                        }\r\n\r\n                        const selectedImageUri = asset.uri;\r\n                        const fileName = asset.fileName || 'Unknown name';\r\n                        resolve({ uri: selectedImageUri, name: fileName });\r\n                        setImageUri(selectedImageUri); // Set imageUri here\r\n                        // console.log(`File name: ${fileName}`);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const resizeImage = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = (event) => {\r\n                const img = new Image();\r\n                img.src = event.target.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    // Set your desired image size here\r\n                    const maxWidth = 800; // Example value\r\n                    const maxHeight = 800; // Example value\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n\r\n                    if (width > height) {\r\n                        if (width > maxWidth) {\r\n                            height *= maxWidth / width;\r\n                            width = maxWidth;\r\n                        }\r\n                    } else {\r\n                        if (height > maxHeight) {\r\n                            width *= maxHeight / height;\r\n                            height = maxHeight;\r\n                        }\r\n                    }\r\n\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    canvas.toBlob((blob) => {\r\n                        resolve(new File([blob], file.name, {\r\n                            type: 'image/jpeg',\r\n                            lastModified: Date.now()\r\n                        }));\r\n                    }, 'image/jpeg', 0.7); // Adjust the quality (0.7 is a good balance between quality and file size)\r\n                };\r\n                img.onerror = error => reject(error);\r\n            };\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    const addFileMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        removeFile();\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (fileUri) { // Assuming you have a fileUri state for the selected file\r\n\r\n            try {\r\n\r\n                let fileUrl = null;\r\n                if (fileUri) {\r\n                    // Upload file and get URL\r\n                    const fileRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(fileRef, selectedFile);\r\n                    fileUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'attachment', // Set the file type\r\n                        url: fileUrl,\r\n                    } // Include file URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: `Sent an attachment`,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addImageMessage = async () => {\r\n        setSendIsLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeForFile = moment(datetime).format('MMDDYYYYHHmmss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const inputValue = textInputRef.current?.value;\r\n\r\n\r\n\r\n        const storage = getStorage(projectExtensionFirebase);\r\n\r\n        if (imageUri) { // Assuming imageFile holds the file to be uploaded\r\n\r\n            textInputRef.current.clear();\r\n            textInputRef.current.focus();\r\n            removeImage();\r\n\r\n            try {\r\n                let imageUrl = null;\r\n                if (imageUri) {\r\n                    // Upload image and get URL\r\n                    const resizedImage = await resizeImage(selectedImage);\r\n                    const imageRef = ref(storage, `ChatFiles/${selectedChatData.id}/C-HUB_${formattedTimeForFile}/${fileName}`);\r\n                    const uploadResult = await uploadBytes(imageRef, resizedImage);\r\n                    imageUrl = await getDownloadURL(uploadResult.ref);\r\n                }\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime,\r\n                    ip: ip,\r\n                    ipCountry: ipCountry,\r\n                    file: {\r\n                        name: fileName,\r\n                        type: 'image',\r\n                        url: imageUrl,\r\n                    } // Include image URL if available\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: 'Sent an image',\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const addMessage = async () => {\r\n        setSendIsLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        // const inputValue = textInputRef.current?.value;\r\n        const inputValue = messageTextInputValue;\r\n        dispatch(setMessageTextInputValue(''));\r\n        textInputRef.current.clear();\r\n        textInputRef.current.focus();\r\n        dispatch(setMessageTextInputHeight(50));\r\n\r\n        if (inputValue !== '') {\r\n            const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n            try {\r\n\r\n                // Adding the message to the 'messages' subcollection\r\n                await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                    text: inputValue.trim(),\r\n                    sender: email,\r\n                    timestamp: formattedTime, // Using the fetched timestamp\r\n                    ip: ip, // IP Address\r\n                    ipCountry: ipCountry // Country of the IP Address\r\n                });\r\n\r\n                // Updating the main chat document with the latest message details\r\n                await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                    lastMessageSender: email,\r\n                    lastMessage: inputValue,\r\n                    lastMessageDate: formattedTime,\r\n                    customerRead: false,\r\n                    read: true,\r\n                    readBy: [email],\r\n                });\r\n                setSendIsLoading(false);\r\n\r\n            } catch (e) {\r\n                console.error('Error adding document: ', e);\r\n            }\r\n        }\r\n        else {\r\n            setSendIsLoading(false);\r\n        }\r\n\r\n    };\r\n    const handleContentSizeChange = (event) => {\r\n        const { width, height } = event.nativeEvent.contentSize;\r\n        const updatedHeight = Math.max(50, Math.min(200, height));\r\n        setInputHeight(updatedHeight); // Set to new calculated height\r\n    };\r\n\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleKeyPress = (e) => {\r\n        // Define a breakpoint for mobile resolution, e.g., 768 pixels\r\n        const mobileBreakpoint = 768;\r\n\r\n        // Check if the screen width is less than or equal to the mobile breakpoint\r\n        if (screenWidth >= mobileBreakpoint) {\r\n            // Check if 'Enter' key is pressed\r\n            if (e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\r\n                e.preventDefault(); // Prevent the default behavior of adding a new line\r\n                handleSendMessage();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        textInputRef.current.focus();\r\n\r\n        if (imageUri !== null) {\r\n            addImageMessage();\r\n\r\n        }\r\n        if (fileUri !== null) {\r\n            addFileMessage();\r\n        }\r\n        else {\r\n            addMessage();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={{ width: '98%', flexDirection: 'row', backgroundColor: 'white', }}>\r\n\r\n            <View style={{ flexDirection: 'column', flex: 1, }}>\r\n\r\n                {fileUri &&\r\n                    (\r\n                        <FileDisplay file={selectedFilePreview} onRemove={removeFile} />\r\n                    )}\r\n\r\n                {imageUri && (\r\n                    <View style={{\r\n                        position: 'relative', // Make sure the parent View is positioned relative\r\n                        width: 70,\r\n                        height: 70,\r\n                        borderRadius: 5,\r\n                        overflow: 'hidden', // This ensures that nothing spills out of the container\r\n                        borderWidth: 1,\r\n                        borderColor: '#DADDE1',\r\n                        margin: 2,\r\n                    }}>\r\n                        <FastImage\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                        <Pressable\r\n                            onPress={removeImage}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                right: 0,\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.6)', // Semi-transparent background for better visibility\r\n                                borderRadius: 12 // Circular shape\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"close\" size={20} color=\"black\" />\r\n                        </Pressable>\r\n                    </View>\r\n\r\n                )}\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <View style={{ marginHorizontal: 5, marginTop: 5, }}>\r\n                        <FastImage\r\n                            source={{ uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FRMJ%20Round.jpg?alt=media&token=90d7f2fe-d9cd-4a6f-9a6b-bc39fe2b33b2', priority: FastImage.priority.high }}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 15,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.cover}\r\n                        />\r\n                    </View>\r\n                    {/* <TextInput\r\n                        ref={textInputRef}\r\n                        multiline\r\n                        placeholder='Send a message...'\r\n                        placeholderTextColor='#9B9E9F'\r\n                        onChange={handleContentSizeChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{\r\n                            outlineStyle: 'none',\r\n                            width: '100%',\r\n                            minHeight: 50, // Set your desired minHeight\r\n                            maxHeight: 200, // Set your desired maxHeight\r\n                            height: inputHeight, // Dynamic height\r\n                            alignSelf: 'center',\r\n                            padding: 10,\r\n                            overflow: 'auto',\r\n                            marginBottom: 25,\r\n                            marginRight: 50,\r\n                        }}\r\n                    /> */}\r\n\r\n                    <MessageTextInput handleSendMessage={handleSendMessage} textInputRef={textInputRef} />\r\n\r\n                    <Pressable\r\n                        focusable={false}\r\n                        onPress={() => sendIsLoading ? null : handleSendMessage()}\r\n                        onHoverIn={() => setIsSendHovered(true)}\r\n                        onHoverOut={() => setIsSendHovered(false)}\r\n                        style={({ pressed }) => [\r\n                            {\r\n                                padding: 10,\r\n                                top: 5,\r\n                                right: 10,\r\n                                position: 'absolute',\r\n                                borderRadius: 20,\r\n                                backgroundColor: isSendHovered ? '#e8f4ff' : 'transparent', // Change color on hover\r\n                                opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                            }\r\n                        ]}\r\n                    >\r\n                        {sendIsLoading ? <Spinner\r\n                            animating\r\n                            size=\"sm\"\r\n                            color={\"#95BCF9\"}\r\n                        /> :\r\n                            <MaterialIcons name=\"send\" size={24} color=\"#95BCF9\" />\r\n                        }\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendImageHovered(true)}\r\n                onHoverOut={() => setIsSendImageHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -10,\r\n                        right: 125,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectImage}\r\n            >\r\n                <Ionicons name=\"image-outline\" size={24} color={isSendImageHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <Pressable\r\n                onHoverIn={() => setIsSendAttachmentHovered(true)}\r\n                onHoverOut={() => setIsSendAttachmentHovered(false)}\r\n                style={({ pressed }) => [\r\n                    {\r\n                        padding: 10,\r\n                        bottom: -9,\r\n                        right: 155,\r\n                        position: 'absolute',\r\n                        borderRadius: 20,\r\n                        opacity: pressed ? 0.5 : 1 // Change opacity when pressed\r\n                    }\r\n                ]}\r\n                onPress={selectFile}\r\n            >\r\n                <MaterialIcons name=\"attach-file\" size={24} color={isSendAttachmentHovered ? \"#0A78BE\" : \"#C1C1C1\"} />\r\n            </Pressable>\r\n\r\n            <MessageTemplate textInputRef={textInputRef} />\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst CancelledView = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            position: 'absolute',\r\n            borderRadius: 40,\r\n            borderWidth: 0, // Border width\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            opacity: 0.5,\r\n            // Centering the view within its parent\r\n            top: 38,\r\n            left: 17,\r\n        }}>\r\n\r\n            <View style={{ backgroundColor: \"#FF0000\", width: 50, height: 6, borderRadius: 20, }} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nconst ChatListItem = ({ item, onPress, onPressNewTab, isActive, messageUnread, formattedDate, chatListData }) => {\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [chatListStepImageUrl, setChatListStepImageUrl] = useState(null);\r\n    const [textFirst, setTextFirst] = useState('');\r\n    const [textLast, setTextLast] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [isUnreadHovered, setIsUnreadHovered] = useState(false);\r\n    const [isOpenNewTabHovered, setIsOpenNewTabHovered] = useState(false);\r\n    const [isUnreadVisible, setIsUnreadVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [customerData, setCustomerData] = useState({});\r\n\r\n    const carName = item.carData && item.carData.carName ? item.carData.carName : (item.vehicle && item.vehicle.carName ? item.vehicle.carName : '');\r\n    const updateChatToUnread = async () => {\r\n        dispatch(setActiveChatId(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setSelectedChatData([]));\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", item.id);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                read: false,\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const hoverIn = () => {\r\n        setIsHovered(true)\r\n    };\r\n\r\n    const hoverOut = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const hoverOpenNewTabIn = () => {\r\n        setIsHovered(true)\r\n        setIsOpenNewTabHovered(true)\r\n    };\r\n\r\n    const hoverOpenNewTabOut = () => {\r\n        setIsOpenNewTabHovered(false)\r\n    };\r\n\r\n    const hoverUnreadIn = () => {\r\n        setIsHovered(true)\r\n        setIsUnreadHovered(true)\r\n    };\r\n\r\n    const hoverUnreadOut = () => {\r\n        setIsUnreadHovered(false)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // getChatListStepImageUrl();\r\n        const folderName = item.carData && item.carData.stockID ? item.carData.stockID : (item.vehicle && item.vehicle.carId ? item.vehicle.carId : '');\r\n        const storage = getStorage(projectExtensionFirebase);\r\n        const imageRef = ref(storage, `${folderName}/0`); // Ensure this path is correct\r\n\r\n        getDownloadURL(imageRef)\r\n            .then((url) => {\r\n                setImageUrl(url);\r\n            })\r\n            .catch((error) => {\r\n                if (error.code === 'storage/object-not-found') {\r\n                    // Handle the 'object not found' error.\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                } else {\r\n                    // Handle other errors differently\r\n\r\n                    setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                }\r\n            });\r\n\r\n        const collectionPath = 'accounts';\r\n        const docId = item.participants.customer; // Ensure this is a valid document ID\r\n\r\n        const docRef = doc(projectExtensionFirestore, collectionPath, docId);\r\n\r\n        const unsubscribe = onSnapshot(docRef, (doc) => {\r\n            if (doc.exists()) {\r\n                const data = doc.data();\r\n                setCustomerData(data ? data : {});\r\n                setTextFirst(data.textFirst ? data.textFirst : '');\r\n                setTextLast(data.textLast ? data.textLast : '');\r\n\r\n            } else {\r\n                console.log(\"Document not found\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching document: \", error);\r\n        });\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const loadingCondition = !imageUrl || imageUrl == null || imageUrl == '' || imageUrl == undefined || !item;\r\n\r\n    const chatStepIconOn = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_on.png`);\r\n    const chatStepIconOff = require(`../../assets/chat_step/chat_step_${item.stepIndicator.value}_off.png`);\r\n\r\n\r\n    const handlePress = () => {\r\n        onPress()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    const handlePressNewTab = () => {\r\n        onPressNewTab()\r\n\r\n        // dispatch(setSelectedCustomerData(customerData));\r\n        globalCustomerFirstName = textFirst ? textFirst : '';\r\n        globalCustomerLastName = textLast ? textLast : '';\r\n        globalImageUrl = imageUrl ? imageUrl : '';\r\n        dispatch(setCarImageUrl(imageUrl ? imageUrl : ''));\r\n\r\n        globalCustomerCarName = carName;\r\n        setIsHovered(false);\r\n        setIsUnreadHovered(false)\r\n\r\n\r\n    }\r\n\r\n    if (loadingCondition) {\r\n        return <SkeletonChatListLayout />\r\n    }\r\n    else {\r\n        return (\r\n            <Pressable\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                focusable={false}\r\n                style={{\r\n                    padding: 12,\r\n                    alignItems: 'flex-start', // Align items to the start of the button\r\n                    flexDirection: 'row',\r\n                    backgroundColor: isActive ? '#f2f2f2' : (isHovered ? '#f2f2f2' : 'white'),\r\n                    borderLeftColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderRightColor: isActive ? '#0A9FDC' : 'transparent',\r\n                    borderLeftWidth: 2,\r\n                    borderRightWidth: 2,\r\n\r\n                }}\r\n                onPress={handlePress}\r\n            >\r\n                {item.isCancelled && <CancelledView />}\r\n\r\n                <View style={{ paddingRight: 10, justifyContent: 'center', }}>\r\n                    {imageUrl ? (\r\n                        <FastImage\r\n                            source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <View\r\n                            style={{\r\n                                width: 60,\r\n                                height: 60,\r\n                                borderRadius: 30,\r\n                                backgroundColor: '#e0e0e0',\r\n                                marginRight: 12,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                    {!isHovered ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : (!item.read ? (<Text style={{ fontSize: 12, position: 'absolute', right: 10, color: messageUnread ? '#0A78BE' : '#90949C', fontWeight: messageUnread ? 700 : 400, }}>{formattedDate}</Text>) : null)}\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '70%', overflow: 'hidden', fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{carName}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 14, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#1C2B33' : '#586369', }}>{`${textFirst} ${textLast}`}</Text>\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{ fontSize: 12, width: '80%', overflow: 'hidden', flex: 1, fontWeight: messageUnread ? 700 : 400, color: messageUnread ? '#0A78BE' : '#90949c', }}>{item.lastMessageSender == item.participants.customer ? (item.lastMessage ? item.lastMessage : 'No message found') : (item.lastMessage ? `Sales: ${item.lastMessage}` : `Sales: No message found`)}</Text>\r\n                    {!item.read ? (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOn, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    ) : (\r\n                        <FastImage\r\n                            source={{ uri: chatStepIconOff, priority: FastImage.priority.normal }}\r\n                            style={{\r\n                                tintColor: 'rgba(128, 128, 128, 1)',\r\n                                width: 22,\r\n                                height: 20,\r\n                                position: 'absolute',\r\n                                right: 10,\r\n                                bottom: 0,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                        />\r\n                    )}\r\n\r\n                    <Text numberOfLines={1} ellipsizeMode='tail' style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 10,\r\n                        padding: 10,\r\n                        alignSelf: 'center',\r\n                        fontSize: 12,\r\n                        overflow: 'hidden',\r\n                        flex: 1,\r\n                        fontWeight: messageUnread ? 700 : 400,\r\n                        color: messageUnread ? '#FF0000' : '#90949c',\r\n                    }}>\r\n                        {item.invoiceNumber && item.stepIndicator.value > 2 ? item.invoiceNumber : ''}\r\n                    </Text>\r\n\r\n                    {isHovered && item.read && (\r\n                        <Tooltip label=\"Mark as unread\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverUnreadIn}\r\n                                onHoverOut={hoverUnreadOut}\r\n                                onPress={updateChatToUnread}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: -10,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"mark-as-unread\" size={22} color={isUnreadHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n\r\n                    {isHovered && (\r\n                        <Tooltip label=\"Open in new tab\" placement='right' openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                onHoverIn={hoverOpenNewTabIn}\r\n                                onHoverOut={hoverOpenNewTabOut}\r\n                                onPress={handlePressNewTab}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: -22,\r\n                                    top: -22,\r\n                                    padding: 10,\r\n                                    alignSelf: 'center',\r\n                                }}\r\n\r\n                            >\r\n                                <MaterialIcons name=\"open-in-new\" size={16} color={isOpenNewTabHovered ? \"#1B81C2\" : \"#BABABA\"} />\r\n                            </Pressable>\r\n                        </Tooltip>\r\n                    )}\r\n                </View>\r\n\r\n\r\n\r\n            </Pressable>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nconst ChatList = ({ unreadButtonValue, activeButtonValue, }) => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatListLastVisible = useSelector((state) => state.chatListLastVisible);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreLoading = useSelector((state) => state.loadMoreLoading);\r\n    const noMoreData = useSelector((state) => state.noMoreData);\r\n    const renderFooterRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateChatToRead = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        const user = projectControlAuth.currentUser\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        if (email !== '') {\r\n\r\n            try {\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n                dispatch(setActiveChatId(''));\r\n                navigate(`/top/chat-messages`);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fetchChatMessages = () => {\r\n        if (!activeChatId) {\r\n            // Handle the case where there's no active chat ID\r\n        }\r\n        else {\r\n            dispatch(setChatMessagesData([]));\r\n            dispatch(setChatMessageBoxLoading(true));\r\n            updateChatToRead();\r\n\r\n            try {\r\n                // References to the document and its 'messages' subcollection\r\n                let activeInvoiceNumer;\r\n                const docRef = doc(projectExtensionFirestore, 'chats', activeChatId);\r\n\r\n                const messagesRef = collection(docRef, 'messages');\r\n\r\n                // Query for the 'messages' subcollection\r\n                const messagesQuery = query(messagesRef, orderBy('timestamp', 'desc'), limit(10));\r\n\r\n                // Listen to the document\r\n                const unsubscribeDoc = onSnapshot(docRef, (docSnapshot) => {\r\n                    if (docSnapshot.exists()) {\r\n                        const data = docSnapshot.data();\r\n                        // Add the document ID to the data\r\n                        const dataWithId = {\r\n                            ...data,\r\n                            id: docSnapshot.id\r\n                        };\r\n                        // Dispatch any action you need with the document data\r\n                        dispatch(setSelectedChatData(dataWithId));\r\n\r\n                        // Define and listen to the invoice document only after the chat document is confirmed to exist\r\n                        if (dataWithId.invoiceNumber || dataWithId.invoiceNumber == '') {\r\n                            const invoiceDocRef = doc(projectExtensionFirestore, 'IssuedInvoice', dataWithId.invoiceNumber);\r\n                            const unsubscribeInvoice = onSnapshot(invoiceDocRef, (invoiceDocSnapshot) => {\r\n                                if (invoiceDocSnapshot.exists()) {\r\n                                    const invoiceData = invoiceDocSnapshot.data();\r\n                                    // Add the document ID to the data\r\n                                    const invoiceDataWithId = {\r\n                                        ...invoiceData,\r\n                                        id: invoiceDocSnapshot.id\r\n                                    };\r\n                                    // Dispatch any action you need with the invoice document data\r\n                                    dispatch(setInvoiceData(invoiceDataWithId ? invoiceDataWithId : {}));\r\n\r\n                                } else {\r\n                                    // Handle the case where the invoice document does not exist\r\n                                    console.log('No Invoice Yet');\r\n                                    dispatch(setInvoiceData({}));\r\n                                }\r\n                            });\r\n\r\n                            // Cleanup function for the invoice listener\r\n                            return () => {\r\n                                unsubscribeInvoice();\r\n\r\n                            };\r\n                        } else {\r\n                            dispatch(setInvoiceData({}));\r\n                            console.log('No Invoice Yet');\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n                const unsubscribeMessages = onSnapshot(messagesQuery, (querySnapshot) => {\r\n                    let messages = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        const data = doc.data();\r\n                        const timestamp = data.timestamp ? data.timestamp.toString() : null;\r\n                        messages.push({ id: doc.id, ...data, timestamp });\r\n                    });\r\n\r\n                    dispatch(setChatMessagesData(messages));\r\n                    dispatch(setChatMessageBoxLoading(false));\r\n                    globalMessagesLastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n                });\r\n\r\n                // Return a cleanup function\r\n                return () => {\r\n                    unsubscribeDoc();\r\n                    unsubscribeMessages();\r\n                    // if (activeInvoiceNumer && activeInvoiceNumer !== '') {\r\n                    //     unsubscribeInvoice();\r\n                    // }\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error setting up real-time messages: \", error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        dispatch(setLoadMoreLoading(true));\r\n\r\n        let nextQuery;\r\n        if (!globalLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            console.log(\"No more data to load or globalLastVisible is undefined\");\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n\r\n            if (chatListData.length >= 10) {\r\n                if (unreadButtonValue == true) {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('read', '==', false),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('read', '==', false),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (activeButtonValue == 0) {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    else {\r\n                        if (globalSearchText === '') {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n\r\n\r\n\r\n                        }\r\n\r\n                        else {\r\n                            dispatch(setLoadMoreLoading(true));\r\n                            dispatch(setNoMoreData(false));\r\n                            nextQuery = query(\r\n                                collection(projectExtensionFirestore, 'chats'),\r\n                                where('stepIndicator.value', '==', activeButtonValue),\r\n                                where('keywords', 'array-contains', globalSearchText.toUpperCase()),\r\n                                orderBy('lastMessageDate', 'desc'),\r\n                                startAfter(globalLastVisible),\r\n                                limit(10)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                dispatch(setNoMoreData(true));\r\n                dispatch(setLoadMoreLoading(false));\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        if (chatListData.length < 10) {\r\n            setTimeout(() => {\r\n                dispatch(setLoadMoreLoading(false));\r\n                dispatch(setNoMoreData(true));\r\n            }, 0);\r\n        }\r\n\r\n        else {\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreLoading(false));\r\n                            dispatch(setNoMoreData(true));\r\n                            globalLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatListData([...chatListData, ...chatsData]));\r\n                        dispatch(setLoadMoreLoading(false));\r\n                        globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(setCarImageUrl(''));\r\n        dispatch(setMessageTextInputValue(''));\r\n\r\n        if (chatId) {\r\n\r\n            setTimeout(() => {\r\n                const decodedChatId = decodeURIComponent(chatId);\r\n                const decryptedChatId = decryptData(decodedChatId).toString();\r\n                let parts = decryptedChatId.split('_');\r\n                let stockIdPart = parts[1];\r\n                let emailPart = parts[parts.length - 1];\r\n\r\n                globalCustomerId = emailPart;\r\n                // console.log(decryptedChatId);\r\n\r\n                if (!emailPart) {\r\n                    console.error(\"Invalid email part:\", emailPart);\r\n                    return;\r\n                }\r\n                const folderName = selectedChatData.carData && selectedChatData.carData.stockID ? selectedChatData.carData.stockID : (selectedChatData.vehicle && selectedChatData.vehicle.carId ? selectedChatData.vehicle.carId : '');\r\n                const storage = getStorage(projectExtensionFirebase);\r\n                const imageRef = ref(storage, `${stockIdPart}/0`); // Ensure this path is correct\r\n\r\n                // console.log('Folder Name: ', folderName)\r\n                getDownloadURL(imageRef)\r\n                    .then((url) => {\r\n                        setImageUrl(url);\r\n                        globalImageUrl = url;\r\n                        dispatch(setCarImageUrl(url));\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.code === 'storage/object-not-found') {\r\n                            // Handle the 'object not found' error.\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n                        } else {\r\n                            // Handle other errors differently\r\n\r\n                            setImageUrl('https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FNo%20Car%20Image%20Found.png?alt=media&token=de86488c-73a6-4c04-811c-bc508a11123a');\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                if (selectedChatData) {\r\n                    const collectionPath = 'accounts';\r\n                    const docId = selectedChatData.participants?.customer; // Ensure this is a valid document ID\r\n\r\n                    const docRef = doc(projectExtensionFirestore, collectionPath, emailPart);\r\n\r\n                    const docRefVehicle = doc(projectExtensionFirestore, 'VehicleProducts', stockIdPart);\r\n\r\n                    const unsubscribeVehicle = onSnapshot(docRefVehicle, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedVehicleData(data ? data : {}));\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n                        if (doc.exists()) {\r\n                            const data = doc.data();\r\n                            dispatch(setSelectedCustomerData(data ? data : {}));\r\n                            globalCustomerFirstName = data.textFirst ? data.textFirst : '';\r\n                            globalCustomerLastName = data.textLast ? data.textLast : '';\r\n                            // console.log(`Name: ${data.textFirst} ${data.textLast}`)\r\n\r\n\r\n                            // globalCustomerCarName = carName;\r\n                            // setTextFirst(data.textFirst ? data.textFirst : '');\r\n                            // setTextLast(data.textLast ? data.textLast : '');\r\n\r\n\r\n                        } else {\r\n                            console.log(\"Document not found\");\r\n                        }\r\n                    }, (error) => {\r\n                        console.error(\"Error fetching document: \", error);\r\n                    });\r\n\r\n                    // Clean up function to unsubscribe from the listener when the component unmounts\r\n                    return () => {\r\n\r\n                        unsubscribe()\r\n                        unsubscribeVehicle()\r\n                    };\r\n                }\r\n\r\n\r\n\r\n\r\n            }, 1);\r\n        }\r\n\r\n        const unsubscribe = fetchChatMessages();\r\n\r\n\r\n        return () => {\r\n            if (unsubscribe) {\r\n\r\n                unsubscribe(); // Unsubscribe when the component unmounts\r\n            }\r\n        };\r\n\r\n    }, [activeChatId]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (chatId) {\r\n            const decryptedChatId = decryptData(chatId).toString();\r\n\r\n            setTimeout(() => {\r\n                // console.log(decryptedChatId)\r\n                dispatch(setActiveChatId(decryptedChatId));\r\n\r\n            }, 1);\r\n\r\n\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleChatPress = async (customerId, chatId) => {\r\n        if (chatId !== activeChatId) {\r\n            const encryptedChatId = encryptData(chatId);\r\n            const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n            navigate(`/top/chat-messages/${encodedChatId}`);\r\n            // console.log(encodedChatId)\r\n            // console.log(decodeURIComponent(encodedChatId))\r\n            // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n            // // Assuming chatId is already properly encoded and needs no further encoding\r\n            // const path = `/devadmin/chat-messages/${encodedChatId}`;\r\n            // // Construct the URL for hash-based routing\r\n            // const baseUrl = window.location.origin + window.location.pathname;\r\n            // const fullPath = `${baseUrl}#${path}`;\r\n            // window.open(fullPath, '_blank');\r\n\r\n            dispatch(setActiveChatId(chatId));\r\n\r\n            globalCustomerId = customerId;\r\n            globalChatId = chatId;\r\n\r\n        }\r\n    };\r\n\r\n    const handleChatPressNewTab = async (customerId, chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/devadmin/chat-messages/${encodedChatId}`);\r\n        // console.log(encodedChatId)\r\n        // console.log(decodeURIComponent(encodedChatId))\r\n        // console.log(decryptData(decodeURIComponent(encodedChatId)))\r\n\r\n        // Assuming chatId is already properly encoded and needs no further encoding\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n\r\n        // dispatch(setActiveChatId(chatId));\r\n\r\n        globalCustomerId = customerId;\r\n        globalChatId = chatId;\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveChatId(''));\r\n    }, [unreadButtonValue])\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreData && (\r\n                    <View style={{ paddingVertical: 20, borderTopWidth: 1, borderColor: \"#DADDE1\", height: 60, }}>\r\n                        {loadMoreLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n\r\n        const isActive = item.id === activeChatId;\r\n        const messageUnread = !item.read;\r\n        const formattedDate = formatDate(item.lastMessageDate);\r\n\r\n        return (\r\n            <ChatListItem\r\n                onPressNewTab={() => handleChatPressNewTab(item.participants.customer, item.id)}\r\n                chatListData={chatListData}\r\n                item={item}\r\n                onPress={() => handleChatPress(item.participants.customer, item.id)}\r\n                isActive={isActive}\r\n                messageUnread={messageUnread}\r\n                formattedDate={formattedDate}\r\n            />\r\n        );\r\n\r\n    };\r\n\r\n    if (chatListData.length < 1) {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, alignSelf: 'center', }}>{unreadButtonValue ? 'No unread messages to show' : 'No messages to show'}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100, borderBottomLeftRadius: 5, }}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    data={chatListData}\r\n                    initialNumToRender={1}\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={21}\r\n                    onEndReachedThreshold={0.05}\r\n                    removeClippedSubviews={true}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMore}  // Implement this function\r\n                />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst SearchChat = ({ lastVisible, setLastVisible, unreadButtonValue, activeButtonValue }) => {\r\n\r\n    const searchInputRef = useRef(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [clearVisible, setClearVisible] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const searchData = async ({ }) => {\r\n        let q;\r\n\r\n        const searchValue = searchInputRef.current?.value;\r\n        if (unreadButtonValue == true) {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('read', '==', false),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('read', '==', false),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            if (activeButtonValue == 0) {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (searchValue === '') {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'chats'),\r\n                        where('stepIndicator.value', '==', activeButtonValue),\r\n                        where('keywords', 'array-contains', searchValue.toUpperCase()),\r\n                        orderBy('lastMessageDate', 'desc'),\r\n                        limit(10)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                const chatsData = [];\r\n                snapshot.forEach((doc) => {\r\n                    chatsData.push({\r\n                        id: doc.id,\r\n                        ...doc.data(),\r\n                    });\r\n                });\r\n                dispatch(setChatListData(chatsData));\r\n                globalLastVisible = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n\r\n            });\r\n\r\n            // Return the unsubscribe function to stop listening when necessary\r\n            return () => {\r\n                if (unsubscribe) {\r\n                    unsubscribe();\r\n                }\r\n            };\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error fetching data from Firebase:', error);\r\n        }\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n\r\n    //     searchData();\r\n\r\n    // }, [searchText])\r\n\r\n    useEffect(() => {\r\n        setSearchText('');\r\n        dispatch(setChatListSearchText(''));\r\n        globalSearchText = '';\r\n        searchInputRef.current.value = '';\r\n        setClearVisible(false);\r\n\r\n    }, [activeButtonValue, unreadButtonValue])\r\n\r\n    const handleSearchEnter = () => {\r\n        // setSortField('dateAdded');\r\n        // setIsSortActive(false)\r\n        if (searchInputRef.current?.value !== '') {\r\n            dispatch(setChatListSearchText(searchInputRef.current.value.trim()));\r\n            setSearchText(searchInputRef.current.value.trim());\r\n            globalSearchText = searchInputRef.current.value.trim();\r\n        }\r\n        else {\r\n            setSearchText('');\r\n            globalSearchText = '';\r\n            if (searchText == '') {\r\n                dispatch(setChatListSearchText(''));\r\n                searchData();\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        searchInputRef.current.clear();\r\n        setClearVisible(false);\r\n        if (searchText !== '') {\r\n            setSearchText(''); // Clear the text\r\n            dispatch(setChatListSearchText(''));\r\n            dispatch(setActiveChatId(''));\r\n            globalSearchText = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', width: '100%', alignSelf: 'center', borderWidth: 1, borderColor: '#D9D9D9', borderRadius: 5, margin: 10 }}>\r\n            <TextInput\r\n                ref={searchInputRef}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                placeholderTextColor='#9B9E9F'\r\n                underlineColorAndroid=\"transparent\"\r\n                style={{ flex: 1, height: 40, padding: 10, outlineStyle: 'none' }}\r\n                onChangeText={() => setClearVisible(true)}\r\n                keyboardType='search'\r\n            />\r\n            {clearVisible ? (\r\n                <Pressable\r\n                    focusable={false}\r\n                    onPress={handleClearText}\r\n                    style={({ pressed, hovered }) => [\r\n                        {\r\n                            borderRadius: 10,\r\n                            marginRight: 10,\r\n                            opacity: pressed ? 0.5 : 1, // Change opacity when pressed\r\n                            // Add hover effect\r\n                            backgroundColor: hovered ? '#ddd' : 'transparent',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <MaterialIcons name=\"close\" size={20} color=\"#000\" />\r\n                </Pressable>\r\n            ) : null}\r\n        </View>);\r\n}\r\n\r\nconst timelineData = [\r\n    { key: '1', title: 'Event 1', description: 'Description 1' },\r\n    { key: '2', title: 'Event 2', description: 'Description 2' },\r\n    // ... more events\r\n];\r\n\r\n// const TimelineItem = ({ title, description }) => (\r\n//     <View style={{ alignItems: 'center', marginRight: 20 }}>\r\n//         <View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'blue', marginBottom: 5 }} />\r\n//         <Text style={{ fontWeight: 'bold' }}>{title}</Text>\r\n//         <Text style={{ textAlign: 'center' }}>{description}</Text>\r\n//     </View>\r\n// );\r\n\r\n// const HorizontalTimeline = () => (\r\n//     <FlatList\r\n//         data={timelineData}\r\n//         renderItem={({ item }) => <TimelineItem title={item.title} description={item.description} />}\r\n//         horizontal\r\n//         showsHorizontalScrollIndicator={false}\r\n//         style={{ flexDirection: 'row', padding: 10 }}\r\n//     />\r\n// );\r\n\r\nconst ModalAddBank = () => {\r\n    const [modalAddBankVisible, setModalAddBankVisible] = useState(false);\r\n    const [isCancelHovered, setCancelHovered] = useState(false);\r\n    const [isAddHovered, setAddHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleModalAddBankOpen = () => {\r\n        setModalAddBankVisible(true);\r\n    };\r\n\r\n    const handleModalAddBankClose = () => {\r\n        setModalAddBankVisible(false);\r\n    };\r\n\r\n    const bankNameRef = useRef(null);\r\n    const branchNameRef = useRef(null);\r\n    const swiftcodeRef = useRef(null);\r\n    const addressRef = useRef(null);\r\n    const accountHolderRef = useRef(null);\r\n    const accountNumberRef = useRef(null);\r\n\r\n\r\n\r\n    const addBankAccount = async () => {\r\n        const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n        const bankNameValue = bankNameRef.current?.value;\r\n        const branchNameValue = branchNameRef.current?.value;\r\n        const swiftcodeValue = swiftcodeRef.current?.value;\r\n        const addressValue = addressRef.current?.value;\r\n        const accountHolderValue = accountHolderRef.current?.value;\r\n        const accountNumberValue = accountNumberRef.current?.value;\r\n\r\n        const elementToAdd = {\r\n            bankName: bankNameValue,\r\n            branchName: branchNameValue,\r\n            swiftCode: swiftcodeValue,\r\n            address: addressValue,\r\n            accountHolder: accountHolderValue,\r\n            accountNumberValue: accountNumberValue,\r\n        }\r\n\r\n        try {\r\n            await updateDoc(docRef, {\r\n                [bankNameValue]: elementToAdd,\r\n            });\r\n            console.log(\"Element added to the array field\");\r\n            handleModalAddBankClose();\r\n        } catch (error) {\r\n            console.error(\"Error adding element to the array\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pressable onPress={handleModalAddBankOpen} style={{ alignSelf: 'center', marginHorizontal: 5, marginTop: 3, }}>\r\n                <FontAwesome name={'plus-circle'} size={25} color='#16A34A' />\r\n            </Pressable>\r\n\r\n            <Modal isOpen={modalAddBankVisible} onClose={handleModalAddBankClose} useRNModal>\r\n                <Modal.Content>\r\n                    <Modal.Header>Add Bank Account</Modal.Header>\r\n                    <Modal.Body>\r\n                        <View style={{ height: '100%', flex: 1, }}>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Bank Name:</Text>\r\n                                <TextInput\r\n                                    ref={bankNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Bank Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Branch Name:</Text>\r\n                                <TextInput\r\n                                    ref={branchNameRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Branch Name'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>SWIFTCODE:</Text>\r\n                                <TextInput\r\n                                    ref={swiftcodeRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='SWIFTCODE'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Address:</Text>\r\n                                <TextInput\r\n                                    ref={addressRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Address'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Holder:</Text>\r\n                                <TextInput\r\n                                    ref={accountHolderRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Holder'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                <Text style={{ width: '35%', fontWeight: 700, margin: 3, }}>Account Number:</Text>\r\n                                <TextInput\r\n                                    ref={accountNumberRef}\r\n                                    placeholderTextColor='#9B9E9F'\r\n                                    placeholder='Account Number'\r\n                                    style={{ width: '60%', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', }}>\r\n                            <Pressable\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isCancelHovered ? '#686868' : '#525252' }}\r\n                                onHoverIn={() => setCancelHovered(true)}\r\n                                onHoverOut={() => setCancelHovered(false)}\r\n                                onPress={handleModalAddBankClose}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <Pressable\r\n                                onPress={addBankAccount}\r\n                                style={{ width: 100, padding: 5, borderRadius: 3, backgroundColor: isAddHovered ? '#1B8B5A' : '#16A34A' }}\r\n                                onHoverIn={() => setAddHovered(true)}\r\n                                onHoverOut={() => setAddHovered(false)}\r\n                            >\r\n                                <Text style={{ fontWeight: 500, textAlign: 'center', color: 'white', }}>Add</Text>\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst BankInformation = () => {\r\n\r\n    let invoiceSelectedDueDate = '';\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [bankAccountsData, setBankAccountsData] = useState({});\r\n    const [selectedBank, setSelectedBank] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.bankAccount.bankName ? invoiceData.bankInformations.bankAccount.bankName : \"SUMITOMO MITSUI BANKING CORPORATION\");\r\n    let selectedBankData = {};\r\n\r\n    const paymentTermsRef = useRef(null);\r\n    const salesAgreementRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const subscribeToBankAccounts = () => {\r\n            const docRef = doc(projectExtensionFirestore, 'DataForInvoice', 'BankAccounts');\r\n\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const bankAccounts = {};\r\n\r\n                    // Assuming each entry in your document is a bank account\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.bankName) {\r\n                            bankAccounts[value.bankName] = value;\r\n                        }\r\n                    });\r\n\r\n                    // console.log(bankAccounts);\r\n                    setBankAccountsData(bankAccounts);\r\n                    globalInvoiceVariable.bankInformations.bankAccount = bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"];\r\n                    // Use state or context to store selected bank data if needed\r\n                    // setSelectedBank(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                    // console.log(bankAccounts[\"SUMITOMO MITSUI BANKING CORPORATION\"]);\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n            }, (error) => {\r\n                console.error(\"Error fetching document\", error);\r\n            });\r\n\r\n            return unsubscribe; // Return the unsubscribe function to call it later to stop listening\r\n        };\r\n\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate);\r\n            globalInvoiceVariable.bankInformations.dueDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.dueDate ? invoiceData.bankInformations.dueDate : adjustedDate;\r\n            globalInvoiceVariable.bankInformations.paymentTerms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : paymentTermsRef.current?.value;\r\n            // globalInvoiceVariable.bankInformations.salesAgreement = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : salesAgreementRef.current?.value;\r\n            globalInvoiceVariable.bankInformations.issuingDate = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.issuingDate ? invoiceData.bankInformations.issuingDate : currentDate;\r\n\r\n        }\r\n\r\n        const unsubscribe = subscribeToBankAccounts();\r\n    }, [currentDate]);\r\n\r\n\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <TextInput value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    const handleValueChange = (selectedBankName) => {\r\n        const selectedBankObj = bankAccountsData[selectedBankName];\r\n        setSelectedBank(selectedBankName);\r\n        globalInvoiceVariable.bankInformations.bankAccount = selectedBankObj;\r\n        // console.log(selectedBankObj);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Due Date:</Text>\r\n                <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, marginVertical: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Bank Account: </Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedBank}\r\n                        onValueChange={handleValueChange}\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        {Object.keys(bankAccountsData).map((bankName) => (\r\n                            <Select.Item key={bankName} label={bankName} value={bankName} />\r\n                        ))}\r\n                    </Select>\r\n\r\n                    <ModalAddBank />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Payment Terms:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.paymentTerms = value;\r\n                }} ref={paymentTermsRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.paymentTerms ? invoiceData.bankInformations.paymentTerms : \"Full payment via Telegraphic Transfer (T/T) required before the due date.\"} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 4, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '20%', fontWeight: 700, margin: 3, }}>Sales Agreement:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.bankInformations.salesAgreement = value;\r\n                }} ref={salesAgreementRef} multiline defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.bankInformations.salesAgreement ? invoiceData.bankInformations.salesAgreement : `Payment Information:\r\nThe customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.\r\nNo warranty service is provided on used vehicles.\r\n\r\nConditions for order cancellation:\r\n(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.\r\n(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.\r\n\r\nIntermediary Banking Information:\r\nBank Name: SUMITOMO MITSUI BANKING CORPORATION (THE NEW YORK AUTHORITY).\r\nSwift code: SMBCUS33\r\nAddress: 277 Park Avenue\r\nCity: New York, NY\r\nPostal Code: 10172\r\nCountry: United States\r\n`}\r\n                    placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ width: '60%', height: 100, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View> */}\r\n        </>\r\n    );\r\n}\r\n\r\nconst PaymentDetails = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const fobPriceInput = useRef(null);\r\n    const freightInput = useRef(null);\r\n    const inspectionInput = useRef(null);\r\n    const insuranceInput = useRef(null);\r\n\r\n    const [totalAmountCalculated, setTotalAmountCalculated] = useState('0');\r\n    const [selectedIncoterms, setSelectedIncoterms] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms :\r\n        selectedChatData.insurance ? 'CIF' : 'C&F');\r\n\r\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD');\r\n\r\n\r\n    const [inspectionIsChecked, setInspectionIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : (invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.inspectionIsChecked : selectedChatData.inspection));\r\n    const [inspectionName, setInspectionName] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : selectedChatData.inspectionName);\r\n\r\n    const [warrantyIsChecked, setWarrantyIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : selectedChatData.warranty);\r\n\r\n    const warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : 150;\r\n    const insurancePrice = 50;\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const additionalPriceRef = useRef(null);\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const CurrencySign = () => {\r\n        switch (selectedCurrencyExchange) {\r\n            case 'USD':\r\n                return '$';\r\n\r\n            case 'EURO':\r\n                return '€';\r\n\r\n            case 'AUD':\r\n                return 'A$';\r\n\r\n            case 'GBP':\r\n                return '£';\r\n\r\n            case 'CAD':\r\n                return 'C$';\r\n        }\r\n    }\r\n\r\n\r\n    const convertedCurrency = (baseValue) => {\r\n\r\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n            if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n                return `${Number(baseValue)}`\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(euroValue)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(audValue)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(gbpValue)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(cadValue)}`;\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (selectedChatData.selectedCurrencyExchange == 'None' || !selectedChatData.selectedCurrencyExchange || selectedChatData.selectedCurrencyExchange == 'USD') {\r\n                return `${Number(baseValue)}`\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n                const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(euroValue)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n                const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(audValue)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n                const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(gbpValue)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n                const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\r\n                return `${(cadValue)}`;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const calculateTotalAmount = () => {\r\n        const fobPrice = safelyParseNumber(fobPriceInput.current?.value);\r\n        const freight = safelyParseNumber(freightInput.current?.value);\r\n        const inspection = safelyParseNumber(inspectionInput.current?.value);\r\n        const insurance = safelyParseNumber(insuranceInput.current?.value);\r\n\r\n        const additionalPricesTotal = globalAdditionalPriceArray.reduce((sum, value) => sum + safelyParseNumber(convertedCurrency(value)), 0);\r\n\r\n        const incotermsCondition = globalInvoiceVariable.paymentDetails.incoterms == 'CIF' ? insurance : 0;\r\n        // const total = Math.round(fobPrice + freight + inspection + (warrantyIsChecked ? warrantyPrice : 0) + insurance + additionalPricesTotal).toLocaleString();\r\n        const total = Math.round(fobPrice + freight + inspection + incotermsCondition + additionalPricesTotal).toLocaleString();\r\n        setTotalAmountCalculated(total);\r\n        globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n        additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice\r\n            ? invoiceData.paymentDetails.additionalPrice.map(price => Number(convertedCurrency(price)).toFixed(2)).join('\\n')\r\n            : '';\r\n\r\n        globalInvoiceVariable.selectedCurrencyExchange = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.selectedCurrencyExchange !== 'None' && invoiceData.selectedCurrencyExchange ? invoiceData.selectedCurrencyExchange : 'None';\r\n\r\n        globalInvoiceVariable.paymentDetails.incoterms = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.incoterms ? invoiceData.paymentDetails.incoterms : selectedIncoterms;\r\n        globalInvoiceVariable.paymentDetails.inspectionIsChecked = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionIsChecked : inspectionIsChecked;\r\n        globalInvoiceVariable.paymentDetails.inspectionName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionName ? invoiceData.paymentDetails.inspectionName : inspectionName;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? valueInspectionPrice : 0);\r\n        globalInvoiceVariable.paymentDetails.warrantyIsCheck = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyIsCheck ? invoiceData.paymentDetails.warrantyIsCheck : warrantyIsChecked;\r\n        // globalInvoiceVariable.paymentDetails.warrantyPrice = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.warrantyPrice ? invoiceData.paymentDetails.warrantyPrice : warrantyIsChecked ? warrantyPrice : 0;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.fobPrice ? invoiceData.paymentDetails.fobPrice : fobPriceDollars);\r\n        globalInvoiceVariable.paymentDetails.freightPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : freightCalculation);\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? insuranceInput.current?.value : 0);\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : []);\r\n        globalInvoiceVariable.paymentDetails.additionalName = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName : [];\r\n        globalAdditionalPriceArray = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice : [];\r\n\r\n        calculateTotalAmount();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        inspectionInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.inspectionPrice && invoiceData.paymentDetails.inspectionPrice == true ? invoiceData.paymentDetails.inspectionPrice : inspectionIsChecked ? valueInspectionPrice : 0)).toFixed(2);\r\n        calculateTotalAmount();\r\n\r\n    }, [inspectionIsChecked]);\r\n\r\n    useEffect(() => {\r\n\r\n        insuranceInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.insurancePrice && invoiceData.paymentDetails.incoterms == 'CIF' ? invoiceData.paymentDetails.insurancePrice : selectedIncoterms == 'CIF' ? valueInsurancePrice : 0)).toFixed(2);\r\n        freightInput.current.value = Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.freightPrice ? invoiceData.paymentDetails.freightPrice : selectedIncoterms == 'FOB' ? 0 : freightCalculation)).toFixed(2);\r\n\r\n        calculateTotalAmount();\r\n\r\n    }, [selectedIncoterms]);\r\n\r\n    useEffect(() => {\r\n        calculateTotalAmount();\r\n\r\n    }, [warrantyIsChecked]);\r\n\r\n    const freightCalculation = (\r\n        (selectedChatData.m3 ? selectedChatData.m3 :\r\n            (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n                selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice)\r\n    );\r\n\r\n    const totalPriceCalculation = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))) +\r\n        parseFloat(freightCalculation)\r\n    ).toFixed(2);\r\n\r\n    const fobPriceDollars = (\r\n        (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n            (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n                selectedChatData.carData.fobPrice : 0) *\r\n            (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n                (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                    selectedChatData.currency.jpyToUsd : 0))\r\n        ));\r\n\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        globalAdditionalPriceArray = filteredLines;\r\n        globalInvoiceVariable.paymentDetails.additionalPrice = filteredLines;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        globalInvoiceVariable.paymentDetails.additionalName = lines;\r\n    };\r\n\r\n\r\n    const handleFobPriceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        fobPriceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.fobPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleFreightInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        freightInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.freightPrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInspectionInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        inspectionInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.inspectionPrice = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    const handleInsuranceInputChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\r\n        insuranceInput.current.value = filteredText;\r\n        globalInvoiceVariable.paymentDetails.insurancePrice = filteredText;\r\n        calculateTotalAmount();\r\n    };\r\n\r\n\r\n    const SelectedCurrencyRate = () => {\r\n\r\n        if (selectedChatData.selectedCurrencyExchange == 'None' || !selectedChatData.selectedCurrencyExchange || selectedChatData.selectedCurrencyExchange == 'USD') {\r\n            return `JPY to USD ${Number(selectedChatData.currency.jpyToUsd).toFixed(6)}\\nUSD to JPY ${Number(selectedChatData.currency.usdToJpy).toFixed(2)}`\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n            return `JPY to EURO ${Number(selectedChatData.currency.jpyToEur).toFixed(6)}\\nUSD to EURO ${Number(selectedChatData.currency.usdToEur).toFixed(2)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n            return `JPY to AUD ${Number(selectedChatData.currency.jpyToAud).toFixed(6)}\\nUSD to AUD ${Number(selectedChatData.currency.usdToAud).toFixed(2)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n            return `JPY to GBP ${Number(selectedChatData.currency.jpyToGbp).toFixed(6)}\\nUSD to GBP ${Number(selectedChatData.currency.usdToGbp).toFixed(2)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n            return `JPY to CAD${Number(selectedChatData.currency.cadToJpy).toFixed(6)}\\nUSD to CAD ${Number(selectedChatData.currency.usdToCad).toFixed(2)}`;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#16A34A', }}>Payment Details</Text>\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Incoterms:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Select\r\n                        selectedValue={selectedIncoterms}\r\n                        onValueChange={(value) => {\r\n                            setSelectedIncoterms(value);\r\n                            globalInvoiceVariable.paymentDetails.incoterms = value;\r\n                            if (value == 'CIF') {\r\n                                globalInvoiceVariable.paymentDetails.insurancePrice = convertedCurrency(insurancePrice);\r\n                            }\r\n                        }\r\n                        }\r\n                        bgColor={'#FAFAFA'}\r\n                        accessibilityLabel=\"Choose Country\"\r\n                        placeholder=\"---\"\r\n                        _selectedItem={{\r\n                            bg: \"teal.600\",\r\n                            endIcon: <CheckIcon />,\r\n                        }}\r\n                        height={9}\r\n                        style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                    >\r\n                        <Select.Item key={'C&F'} label={'C&F'} value={'C&F'} />\r\n                        <Select.Item key={'CIF'} label={'CIF'} value={'CIF'} />\r\n                        <Select.Item key={'FOB'} label={'FOB'} value={'FOB'} />\r\n                    </Select>\r\n                    <Text style={{ fontWeight: 700, margin: 3, }}>Rate: </Text>\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>\r\n                        {selectedChatData.currency && selectedChatData.currency.usdToJpy\r\n                            ? SelectedCurrencyRate() : '0.00'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row', marginLeft: 2, marginTop: 10, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <Checkbox\r\n                    isChecked={inspectionIsChecked}\r\n                    onChange={value => {\r\n                        setInspectionIsChecked(value)\r\n                        globalInvoiceVariable.paymentDetails.inspectionIsChecked = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n            </View>\r\n\r\n            {/* <View style={{ flex: 1, flexDirection: 'row', margin: 2, }}>\r\n                <Text style={{ width: '15%', fontWeight: 700, margin: 3, }}>Warranty:</Text>\r\n                <Checkbox\r\n                    isChecked={warrantyIsChecked}\r\n                    onChange={value => setWarrantyIsChecked(value)}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                />\r\n                <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>${warrantyPrice}</Text>\r\n            </View> */}\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>FOB Price:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>{CurrencySign()}</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFobPriceInputChangeText}\r\n                        ref={fobPriceInput}\r\n                        defaultValue={Number(convertedCurrency(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.paymentDetails.fobPrice : selectedIncoterms == 'FOB' ? 0 : fobPriceDollars)).toFixed(2)}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='FOB Price'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2 }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Freight:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1 }}>{CurrencySign()}</Text>\r\n                    <TextInput\r\n                        onChangeText={handleFreightInputChangeText}\r\n                        ref={freightInput}\r\n                        defaultValue={Number(convertedCurrency(freightCalculation)).toFixed(2)}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Freight'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                    {/* <MaterialCommunityIcons name='swap-horizontal' size={18} color={'gray'} />\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, flex: 1, }}>$</Text> */}\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: selectedIncoterms == 'CIF' ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Insurance:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>{CurrencySign()}</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInsuranceInputChangeText}\r\n                        ref={insuranceInput}\r\n                        defaultValue={convertedCurrency(insurancePrice)}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Insurance`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ marginLeft: 2, display: inspectionIsChecked ? 'flex' : 'none' }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Inspection:</Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <Text style={{ fontWeight: 700, margin: 1, paddingTop: 1, }}>{CurrencySign()}</Text>\r\n                    <TextInput\r\n                        onChangeText={handleInspectionInputChangeText}\r\n                        ref={inspectionInput}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder={`Inspection [${selectedChatData.inspectionName}]`}\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n                    <Text style={{ fontWeight: 700, margin: 3, color: '#16A34A', }}>{`[${selectedChatData.inspectionName}]`}</Text>\r\n                </View>\r\n\r\n            </View>\r\n\r\n\r\n            <View style={{ marginLeft: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Additional:</Text>\r\n\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        flexDirection: 'row',\r\n                    }}\r\n                >\r\n                    <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    <TextInput ref={additionalPriceRef} onChangeText={handleAdditionalPriceTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Price'\r\n                        style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginBottom: 4, }} />\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignItems: 'center', }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Total Amount:</Text>\r\n                <Text style={{ fontWeight: 700, fontSize: 18, margin: 3, color: '#FF0000', }}>{`${CurrencySign()}${totalAmountCalculated}`}</Text>\r\n\r\n                {/* <MaterialCommunityIcons name='swap-horizontal' size={30} color={'gray'} />\r\n\r\n\r\n                <Select\r\n                    selectedValue={selectedCurrencyExchange}\r\n                    onValueChange={(value) => {\r\n\r\n                        setSelectedCurrencyExchange(value)\r\n                        globalInvoiceVariable.selectedCurrencyExchange = value;\r\n                    }}\r\n                    bgColor={'#FAFAFA'}\r\n                    accessibilityLabel=\"Choose Currency\"\r\n                    placeholder=\"---\"\r\n                    _selectedItem={{\r\n                        bg: \"teal.600\",\r\n                        endIcon: <CheckIcon />,\r\n                    }}\r\n                    height={9}\r\n                    style={{ flex: 1, marginLeft: 10, marginRight: 10, paddingLeft: 1, }}\r\n                >\r\n                    <Select.Item key={'$ USD'} label={'$ USD'} value={'USD'} />\r\n                    <Select.Item key={'€ EURO'} label={'€ EURO'} value={'EURO'} />\r\n                    <Select.Item key={'A$ AUD'} label={'A$ AUD'} value={'AUD'} />\r\n                    <Select.Item key={'£ GBP'} label={'£ GBP'} value={'GBP'} />\r\n                    <Select.Item key={'C$ CAD'} label={'C$ CAD'} value={'CAD'} />\r\n                </Select> */}\r\n\r\n            </View>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst SelectPortOfDischarge = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [countriesDischarge, setCountriesDischarge] = useState([]);\r\n    const [portsData, setPortsData] = useState({});\r\n    const [nearestPorts, setNearestPorts] = useState([]);\r\n    const [selectedPortCountry, setSelectedPortCountry] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.country : selectedChatData.country);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.discharge.port : selectedChatData.port);\r\n\r\n        const fetchPorts = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    const sortedPorts = Object.keys(data)\r\n                        .map(portName => ({\r\n                            name: portName.replace(/_/g, '.'), // Replace '_' with '.'\r\n                            ...data[portName]\r\n                        }))\r\n                        .sort((a, b) => a.sortOrder - b.sortOrder);\r\n                    setNearestPorts(sortedPorts);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPortsData = async () => {\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setPortsData(data);\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n\r\n        fetchPorts();\r\n        fetchPortsData();\r\n        // fetchCountries();\r\n\r\n        globalInvoiceVariable.discharge.port = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.port ? invoiceData.discharge.port : selectedPort;\r\n        globalInvoiceVariable.discharge.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.discharge.country ? invoiceData.discharge.country : selectedPortCountry;\r\n\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // When selectedCountry changes, update nearestPorts\r\n        const selectedCountryData = countriesDischarge.find(country => country.name === selectedCountry);\r\n        if (selectedCountryData && selectedCountryData.nearestPorts) {\r\n            setNearestPorts(selectedCountryData.nearestPorts);\r\n        } else {\r\n            setNearestPorts([]); // Reset to empty if no ports or country not found\r\n        }\r\n    }, [selectedCountry, countriesDischarge]);\r\n\r\n\r\n    useEffect(() => {\r\n        const portData = portsData[selectedPort];\r\n        if (portData && portData.country) {\r\n            setSelectedPortCountry(portData.country);\r\n            // console.log('Nagoya Price ', portData.nagoyaPrice);\r\n            globalInvoiceVariable.discharge.country = portData.country;\r\n        } else {\r\n            setSelectedPortCountry(''); // Reset selected country if port not found or has no country\r\n            console.log('Not found');\r\n        }\r\n    }, [selectedPort, portsData]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Select\r\n                selectedValue={selectedCountry}\r\n                onValueChange={(value) => {\r\n                    setSelectedCountry(value)\r\n                    globalInvoiceVariable.discharge.country = value;\r\n\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"Choose Country\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {countriesDischarge.map((country) => (\r\n                    <Select.Item key={country.name} label={country.name} value={country.name} />\r\n                ))}\r\n            </Select> */}\r\n            <Select\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value)\r\n                    globalInvoiceVariable.discharge.port = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                accessibilityLabel=\"Choose Port\"\r\n                placeholder=\"Select port\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />,\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}\r\n            >\r\n                {nearestPorts.map((port, index) => (\r\n                    <Select.Item key={index} label={port.name} value={port.name} />\r\n                ))}\r\n            </Select>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst SelectSalesPerson = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [selectedSales, setSelectedSales] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : ''));\r\n    const salesData = useSelector((state) => state.salesData);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.salesPerson = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.salesPerson ? invoiceData.salesPerson : (selectedChatData.carData && selectedChatData.carData.sales ? selectedChatData.carData.sales : '');\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            selectedValue={selectedSales}\r\n            onValueChange={(value) => {\r\n                setSelectedSales(value);\r\n                globalInvoiceVariable.salesPerson = value;\r\n            }}\r\n            bgColor={'#FAFAFA'}\r\n            accessibilityLabel=\"---\"\r\n            placeholder=\"---\"\r\n            _selectedItem={{\r\n                bg: \"teal.600\",\r\n                endIcon: <CheckIcon />\r\n            }}\r\n            style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1 }}>\r\n            {salesData.map((item) => (\r\n                <Select.Item key={item.id} label={item.name} value={item.name} />\r\n            ))}\r\n        </Select>\r\n    );\r\n}\r\n\r\nconst SelectPortOfDeparture = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const portData = useSelector((state) => state.portData);\r\n    const salesData = useSelector((state) => state.salesData);\r\n    const [selectedPort, setSelectedPort] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : ''));\r\n\r\n        globalInvoiceVariable.departurePort = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departurePort ? invoiceData.departurePort : (selectedChatData.carData && selectedChatData.carData.port ? selectedChatData.carData.port : '');\r\n        globalInvoiceVariable.departureCountry = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.departureCountry ? invoiceData.departureCountry : 'Japan';\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                flexDirection: 'row',\r\n            }}\r\n        >\r\n            <Select\r\n                focusable={false}\r\n                selectedValue='Japan'\r\n                onValueChange={(value) => {\r\n                    globalInvoiceVariable.departureCountry = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none', }}>\r\n                <Select.Item key={'Japan'} label={'Japan'} value={'Japan'} />\r\n            </Select>\r\n\r\n            <Select\r\n                focusable={false}\r\n                selectedValue={selectedPort}\r\n                onValueChange={(value) => {\r\n                    setSelectedPort(value);\r\n                    globalInvoiceVariable.departurePort = value;\r\n                }}\r\n                bgColor={'#FAFAFA'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n                style={{ marginLeft: 10, marginRight: 10, paddingLeft: 1, outlineStyle: 'none' }}>\r\n                {portData.map((item) => (\r\n                    <Select.Item key={item.id} label={item.name} value={item.name} />\r\n                ))}\r\n            </Select>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst NotifyPartyInput = ({ accountData, setAccountData }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : true);\r\n\r\n    const notifyPartyName = useRef(null);\r\n    const notifyPartyAddress = useRef(null);\r\n    const notifyPartyCity = useRef(null);\r\n    const notifyPartyCountry = useRef(null);\r\n    const notifyPartyContactNumber = useRef(null);\r\n    const notifyPartyFax = useRef(null);\r\n    const notifyPartyEmail = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        notifyPartyName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : '';\r\n        notifyPartyAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : '';\r\n        notifyPartyCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : '';\r\n        notifyPartyCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : '';\r\n        notifyPartyContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : '';\r\n        notifyPartyFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : '';\r\n        notifyPartyEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : '';\r\n\r\n        globalInvoiceVariable.notifyParty.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.name ? invoiceData.notifyParty.name : notifyPartyName.current?.value;\r\n        globalInvoiceVariable.notifyParty.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.address ? invoiceData.notifyParty.address : notifyPartyAddress.current?.value;\r\n        globalInvoiceVariable.notifyParty.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.city ? invoiceData.notifyParty.city : notifyPartyCity.current?.value;\r\n        globalInvoiceVariable.notifyParty.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.country ? invoiceData.notifyParty.country : notifyPartyCountry.current?.value;\r\n        globalInvoiceVariable.notifyParty.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.contactNumber ? invoiceData.notifyParty.contactNumber : notifyPartyContactNumber.current?.value;\r\n        globalInvoiceVariable.notifyParty.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.fax ? invoiceData.notifyParty.fax : notifyPartyFax.current?.value;\r\n        globalInvoiceVariable.notifyParty.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.email ? invoiceData.notifyParty.email : notifyPartyEmail.current?.value;\r\n        globalInvoiceVariable.notifyParty.sameAsConsignee = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.notifyParty.sameAsConsignee ? invoiceData.notifyParty.sameAsConsignee : isChecked;\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#FF0000', }}>Notify Party</Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        setIsChecked(value)\r\n                        globalInvoiceVariable.notifyParty.sameAsConsignee = value;\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as consignee\r\n                </Checkbox>\r\n            </View>\r\n\r\n            <View style={{ display: isChecked ? 'none' : 'flex', }}>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.name = value;\r\n                    }}\r\n                        ref={notifyPartyName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.address = value;\r\n                    }} ref={notifyPartyAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.city = value;\r\n                    }} ref={notifyPartyCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.country = value;\r\n                    }} ref={notifyPartyCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.contactNumber = value;\r\n                    }} ref={notifyPartyContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.fax = value;\r\n                    }} ref={notifyPartyFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n                <View style={{ margin: 2, }}>\r\n                    <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                    <TextInput onChangeText={(value) => {\r\n                        globalInvoiceVariable.notifyParty.email = value;\r\n                    }} ref={notifyPartyEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                        style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', }} />{/* Horizontal Line */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ConsigneeInput = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.sameAsBuyer : true);\r\n    const [accountData, setAccountData] = useState({});\r\n\r\n    const consigneeName = useRef(null);\r\n    const consigneeAddress = useRef(null);\r\n    const consigneeCity = useRef(null);\r\n    const consigneeCountry = useRef(null);\r\n    const consigneeContactNumber = useRef(null);\r\n    const consigneeFax = useRef(null);\r\n    const consigneeEmail = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAccountData = async () => {\r\n            if (!selectedChatData.participants && selectedChatData.participants.customer) return; // Make sure there's a selected email\r\n            const docRef = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    setAccountData(docSnap.data());\r\n                    // console.log(docSnap.data());\r\n                    consigneeName.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    consigneeAddress.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    consigneeCity.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    consigneeCountry.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    consigneeContactNumber.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    consigneeFax.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    consigneeEmail.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n\r\n\r\n                    globalInvoiceVariable.consignee.name = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.name ? invoiceData.consignee.name : `${data.textFirst ? data.textFirst : ''} ${data.textLast ? data.textLast : ''}`;\r\n                    globalInvoiceVariable.consignee.address = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.address ? invoiceData.consignee.address : `${data.textStreet ? data.textStreet : ''} ${data.textZip ? data.textZip : ''}`;\r\n                    globalInvoiceVariable.consignee.city = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.city ? invoiceData.consignee.city : `${data.city ? data.city : ''}`;\r\n                    globalInvoiceVariable.consignee.country = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.country ? invoiceData.consignee.country : `${data.country ? data.country : ''}`;\r\n                    globalInvoiceVariable.consignee.contactNumber = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.contactNumber ? invoiceData.consignee.contactNumber : `${data.textPhoneNumber ? data.textPhoneNumber : ''}`;\r\n                    globalInvoiceVariable.consignee.fax = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.fax ? invoiceData.consignee.fax : `${data.fax ? data.fax : ''}`;\r\n                    globalInvoiceVariable.consignee.email = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.email ? invoiceData.consignee.email : `${data.textEmail ? data.textEmail : ''}`;\r\n                    globalInvoiceVariable.consignee.sameAsBuyer = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.consignee.sameAsBuyer ? invoiceData.consignee.sameAsBuyer : isChecked;\r\n\r\n                    // console.log(accountData.length);\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setAccountData(null);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        };\r\n        fetchAccountData();\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isChecked) {\r\n            consigneeName.current.value = `${accountData.textFirst ? accountData.textFirst : ''} ${accountData.textLast ? accountData.textLast : ''}`;\r\n            consigneeAddress.current.value = `${accountData.textStreet ? accountData.textStreet : ''} ${accountData.textZip ? accountData.textZip : ''}`;\r\n            consigneeCity.current.value = `${accountData.city ? accountData.city : ''}`;\r\n            consigneeCountry.current.value = `${accountData.country ? accountData.country : ''}`;\r\n            consigneeContactNumber.current.value = `${accountData.textPhoneNumber ? accountData.textPhoneNumber : ''}`;\r\n            consigneeFax.current.value = `${accountData.fax ? accountData.fax : ''}`;\r\n            consigneeEmail.current.value = `${accountData.textEmail ? accountData.textEmail : ''}`;\r\n        }\r\n\r\n        // console.log(globalInvoiceVariable);\r\n\r\n\r\n    }, [isChecked])\r\n\r\n\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, flexDirection: 'row', margin: 2, alignSelf: 'center', }}>\r\n                <Text style={{ fontWeight: 700, fontSize: 16, margin: 3, color: '#0A78BE', }}>Consignee</Text>\r\n            </View>\r\n            <View style={{ flexDirection: 'row', margin: 5, }}>\r\n                <Checkbox\r\n                    isChecked={isChecked}\r\n                    onChange={value => {\r\n                        globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        setIsChecked(value)\r\n                    }}\r\n                    style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                    size=\"sm\"\r\n                    _text={{ fontWeight: 700 }}\r\n                >\r\n                    Same as buyer\r\n                </Checkbox>\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Name:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.name = value;\r\n                }} ref={consigneeName} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Address:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.address = value;\r\n                }} ref={consigneeAddress} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Address'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>City:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.city = value;\r\n                }} ref={consigneeCity} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='City'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Country:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.country = value;\r\n                }} ref={consigneeCountry} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Country'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Contact Number:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.contactNumber = value;\r\n                }} ref={consigneeContactNumber} disabled={isChecked} multiline placeholderTextColor='#9B9E9F' placeholder='Contact Number'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>FAX:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.fax = value;\r\n                }} ref={consigneeFax} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='FAX'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Email:</Text>\r\n                <TextInput onChangeText={(value) => {\r\n                    globalInvoiceVariable.consignee.email = value;\r\n                }} ref={consigneeEmail} disabled={isChecked} placeholderTextColor='#9B9E9F' placeholder='Email'\r\n                    style={{ backgroundColor: isChecked ? '#F1F1F1' : 'default', height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n            </View>\r\n\r\n            <NotifyPartyInput accountData={accountData} setAccountData={setAccountData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst InvoiceFeatures = ({ widthScaleFactor, heightScaleFactor }) => {\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    return (\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', width: 495 * widthScaleFactor, }}>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemAnBrSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Anti-Lock Braking System (ABS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemDrAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Driver Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemPaAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Passenger Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SafetySystemSiAi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Side Airbag</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoFr ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Front)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAiCoRe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Air Conditioner (Rear)</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMRa ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Radio</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortAMFMSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>AM/FM Stereo</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Player</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCDCh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>CD Changer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortCrSpCo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Cruis Speed Control</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDiSp ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}> Digital Speedometer</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortDVDPl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>DVD Player</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortHDD ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Hard Disk Drive</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortNaSyGPS ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Navigation System (GPS)</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPoSt ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Steering</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortPrAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Premium Audio System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortReKeSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Remote Keyless System</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ComfortTiStWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tilt Steering Wheel</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorLeSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Leather Seats</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoDoLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Door Locks</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoMi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Mirrors</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorPoWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Windows</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiDe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Defroster</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorReWiWi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Rear Window Wiper</Text>\r\n            </View>\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorThRoSe ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Third Row Seats</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.InteriorTiGl ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Tinted Glasses</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorAlWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Alloy Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorPoSlDo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Power Sliding Door</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.ExteriorSuRo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Sunroof</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsCuWh ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Customized Wheels</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsFuLo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Fully Loaded</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsMaHiAv ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Maintenance History Available</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsBrNeTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Brand New Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoAcHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>No Accident History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsNoSmPrOw ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Non-Smoking Previous Owner</Text>\r\n            </View>\r\n\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsOnOwHi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>One Owner History</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsPeRaTi ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Performance-rated Tires</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsReBo ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Repainted Body</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsTuEn ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Turbo Engine</Text>\r\n            </View>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    display: invoiceData.carData.SellingPointsUpAuSy ? 'flex' : 'none',\r\n                    borderRadius: 5 * widthScaleFactor,\r\n                    width: 64 * widthScaleFactor,\r\n                    height: 25 * heightScaleFactor,\r\n                    backgroundColor: '#7B9CFF',\r\n                    marginRight: 5 * widthScaleFactor,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 5 * heightScaleFactor,\r\n                }}>\r\n                <Text style={{ color: 'white', textAlign: 'center', fontWeight: 700, fontSize: 7 * widthScaleFactor, }}>Upgraded Audio System</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst createHmacSha256Hash = (data, secretKey) => {\r\n    const hash = HmacSHA256(data, secretKey);\r\n    return enc.Hex.stringify(hash);\r\n};\r\n\r\n\r\nconst appendSalesInfoDataToCSV = async ({\r\n    id,\r\n    stock_system_id,\r\n    sales_date,\r\n    fob,\r\n    freight,\r\n    insurance,\r\n    inspection,\r\n    cost_name1,\r\n    cost1,\r\n    cost_name2,\r\n    cost2,\r\n    cost_name3,\r\n    cost3,\r\n    cost_name4,\r\n    cost4,\r\n    cost_name5,\r\n    cost5,\r\n    coupon_discount,\r\n    price_discount,\r\n    subtotal,\r\n    clients,\r\n}) => {\r\n    try {\r\n        const response = await fetch('https://rmj-api.duckdns.org/modifyCsv/append-csv-sales-info', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: 'jackall',\r\n                password: 'U2FsdGVkX18WCFA/fjC/fB6DMhtOOIL/xeVF2tD2b7c=',\r\n                data: {\r\n                    id: id,\r\n                    stock_system_id: stock_system_id,\r\n                    sales_date: sales_date,\r\n                    fob: fob,\r\n                    freight: freight,\r\n                    insurance: insurance,\r\n                    inspection: inspection,\r\n                    cost_name1: cost_name1,\r\n                    cost1: cost1,\r\n                    cost_name2: cost_name2,\r\n                    cost2: cost2,\r\n                    cost_name3: cost_name3,\r\n                    cost3: cost3,\r\n                    cost_name4: cost_name4,\r\n                    cost4: cost4,\r\n                    cost_name5: cost_name5,\r\n                    cost5: cost5,\r\n                    coupon_discount: coupon_discount,\r\n                    price_discount: price_discount,\r\n                    subtotal: subtotal,\r\n                    clients: clients,\r\n                }, // Adjust based on your CSV structure\r\n            }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            console.log('Success', 'Data appended successfully to CSV.');\r\n        } else {\r\n            console.log('Error', 'Failed to append data to CSV.');\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        console.log('Error', 'An error occurred.');\r\n    }\r\n};\r\n\r\n\r\n\r\nconst InputPaymentModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n\r\n\r\n    const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const totalAmountString = invoiceData.paymentDetails.totalAmount;\r\n    const totalAmountNumber = parseFloat(totalAmountString.replace(/,/g, ''));\r\n\r\n    const inputAmountRef = useRef(null);\r\n\r\n    const handleHistoryModalOpen = () => {\r\n        setHistoryModalVisible(true);\r\n\r\n        // console.log(selectedChatData.payments);\r\n    }\r\n\r\n    const handleHistoryModalClose = () => {\r\n        setHistoryModalVisible(false);\r\n\r\n    }\r\n\r\n    const handleInputAmountChangeText = (text) => {\r\n        // Remove characters that are not digits, dot, or minus, and ensure minus is only at the start\r\n        const filteredText = text\r\n            .replace(/[^0-9.-]/g, '')  // Remove characters that are not digits, dot, or minus\r\n            .replace(/(.)\\-/g, '$1')   // Remove minus if not at the start\r\n            .replace(/^-(?=\\-)/, '')   // Remove extra minus at the start\r\n            .replace(/(\\..*)\\./g, '$1'); // Allow only one dot\r\n\r\n        // Update the input field\r\n        inputAmountRef.current.value = filteredText;\r\n    };\r\n\r\n\r\n    const convertedCurrency = (baseValue) => {\r\n        const numberFormatOptions = {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n            useGrouping: true\r\n        };\r\n        if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\r\n            return `${Number(baseValue).toLocaleString('en-US', numberFormatOptions)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToEur)).toLocaleString('en-US', numberFormatOptions)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToAud)).toLocaleString('en-US', numberFormatOptions)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToGbp)).toLocaleString('en-US', numberFormatOptions)}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n            return `${(Number(baseValue) * Number(selectedChatData.currency.usdToCad)).toLocaleString('en-US', numberFormatOptions)}`;\r\n        }\r\n    }\r\n\r\n\r\n    const totalValue = selectedChatData.payments\r\n        ? selectedChatData.payments.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return Number(sum + (isNaN(value) ? 0 : value));\r\n        }, 0)\r\n        : 0;\r\n\r\n    const totalPriceCalculated = () => {\r\n        // Safely access deeply nested properties using optional chaining and provide default values\r\n        const additionalPrices = invoiceData?.paymentDetails?.additionalPrice || [];\r\n        const fobPrice = Number(invoiceData?.paymentDetails?.fobPrice || 0);\r\n        const freightPrice = Number(invoiceData?.paymentDetails?.freightPrice || 0);\r\n        const inspectionPrice = invoiceData?.paymentDetails?.inspectionIsChecked ? Number(invoiceData.paymentDetails.inspectionPrice || 0) : 0;\r\n        const usdToEur = Number(invoiceData?.currency?.usdToEur || 1);\r\n        const usdToJpy = Number(invoiceData?.currency?.usdToJpy || 1);\r\n        const jpyToAud = Number(invoiceData?.currency?.jpyToAud || 1);\r\n        const jpyToGbp = Number(invoiceData?.currency?.jpyToGbp || 1);\r\n        const cadToJpy = Number(invoiceData?.currency?.cadToJpy || 1);\r\n\r\n\r\n\r\n        const totalAdditionalPrice = additionalPrices.reduce((total, price) => {\r\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const baseTotal = fobPrice + freightPrice + inspectionPrice + totalAdditionalPrice + (invoiceData?.paymentDetails?.incoterms == 'CIF' ? Number(invoiceData.paymentDetails.insurancePrice) : 0);\r\n\r\n        // Calculating total in different currencies\r\n        const totalUsd = baseTotal;\r\n        const totalEur = baseTotal * usdToEur;\r\n        const totalAud = baseTotal * usdToJpy * jpyToAud;\r\n        const totalGbp = baseTotal * usdToJpy * jpyToGbp;\r\n        const totalCad = baseTotal * usdToJpy * cadToJpy;\r\n\r\n        switch (invoiceData?.selectedCurrencyExchange) {\r\n            case 'EURO':\r\n                return `${Math.round(Number(totalEur))}`;\r\n            case 'AUD':\r\n                return `${Math.round(Number(totalAud))}`;\r\n            case 'GBP':\r\n                return `${Math.round(Number(totalGbp))}`;\r\n            case 'CAD':\r\n                return `${Math.round(Number(totalCad))}`;\r\n            case 'None':\r\n            case 'USD':\r\n            default:\r\n                return `${Math.round(Number(totalUsd))}`;\r\n        }\r\n    }\r\n\r\n    const handleCompletePaymentPress = () => {\r\n        const filteredText = totalPriceCalculated().replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1').replace(/,/g, '') - convertedCurrency(Number(totalValue)).replace(/,/g, '');\r\n        inputAmountRef.current.value = filteredText;\r\n    }\r\n\r\n\r\n\r\n    const parseDollars = (baseValue) => {\r\n\r\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n            if (invoiceData.selectedCurrencyExchange == 'None' || invoiceData.selectedCurrencyExchange == 'USD' || !invoiceData.selectedCurrencyExchange) {\r\n                return `${Number(baseValue).toFixed(2)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.eurToUsd)).toFixed(2)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.audToUsd)).toFixed(2)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.gbpToUsd)).toFixed(2)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.cadToUsd)).toFixed(2)}`;\r\n            }\r\n        } else {\r\n            if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\r\n                return `${Number(baseValue).toFixed(2)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.eurToUsd)).toFixed(2)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.audToUsd)).toFixed(2)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.gbpToUsd)).toFixed(2)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.cadToUsd)).toFixed(2)}`;\r\n            }\r\n        }\r\n        // Fallback in case no conditions are met\r\n        return `${Number(baseValue).toFixed(2)}`;\r\n    };\r\n\r\n\r\n    const CurrencySymbol = () => {\r\n        switch (selectedChatData.selectedCurrencyExchange) {\r\n            case 'USD':\r\n                return '$';\r\n            case 'EURO':\r\n                return '€';\r\n            case 'AUD':\r\n                return 'A$';\r\n            case 'GBP':\r\n                return '£';\r\n            case 'CAD':\r\n                return 'C$';\r\n            default:\r\n                return '$';\r\n        }\r\n    }\r\n\r\n\r\n    const fullPaymentMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n\r\nThank you for settling your account promptly.\r\n\r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Full Payment Received\r\n\r\nDear Customer,\r\n\r\nI hope this message finds you well. \r\n\r\nWe are writing to confirm that we have received your full payment. \r\n                \r\nThank you for settling your account promptly.\r\n                \r\nShould you have any further questions or require assistance, please feel free to contact us.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const overBalanceMessage = async (amount) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Dear Customer,\r\n\r\nGood day! \r\n\r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                \r\nYou have an extra overbalance in your account.\r\n\r\nAmount: $${amount}\r\n                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                \r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `Dear Customer,\r\n\r\nGood day! \r\n                \r\nWe're writing to inform you about your account with us at Real Motor Japan.\r\n                                \r\nYou have an extra overbalance in your account.\r\n                \r\nAmount: $${amount}\r\n                                \r\nFeel free to contact us if you have any questions. We're here to help.\r\n                                \r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const paymentMessage = async (amount, transactionDate) => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: ${CurrencySymbol()}${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'InputPayment',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `🌟 Payment Confirmation Alert 🌟\r\n\r\nDear Customer! 👋\r\n\r\nWe're thrilled to inform you that your recent payment has been successfully reflected in our bank account.\r\n\r\nYour prompt and efficient transaction is greatly appreciated! 🎉\r\n\r\n🔍 Payment Details:\r\n\r\nAmount: ${CurrencySymbol()}${amount}\r\nTransaction Date: ${transactionDate}\r\n\r\nYour account and services are now fully up-to-date. If you have any further questions or require assistance, feel free to reach out.\r\n\r\nThank you for your continued trust in us.\r\nLooking forward to serving you more in the future! 😊\r\n\r\nBest regards,\r\nReal Motor Japan`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const confirmPayment = async () => {\r\n        setIsConfirmLoading(true);\r\n\r\n        const amountNeeded = Number(invoiceData.paymentDetails.totalAmount ? Number(totalPriceCalculated().replace(/,/g, '')).toFixed(2) - convertedCurrency(Number(totalValue)).replace(/,/g, '') : 0);\r\n        const docRef = doc(projectExtensionFirestore, 'chats', selectedChatData.id);\r\n        const docRefCustomer = doc(projectExtensionFirestore, 'accounts', selectedChatData.participants.customer);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedDate = moment(datetime).format('DD MMMM YYYY');\r\n        const formattedSalesDate = moment(datetime).format('YYYY/MM/DD');\r\n\r\n        const newPayments = [\r\n            { value: parseDollars(inputAmountRef.current.value), date: formattedDate },\r\n        ];\r\n\r\n        const newPaymentsAccount = [\r\n            { value: parseDollars(inputAmountRef.current.value), date: formattedDate, vehicleRef: selectedChatData.carData.referenceNumber, vehicleName: selectedChatData.carData.carName, },\r\n        ];\r\n\r\n        const inputAmountFormatOptions = {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n            useGrouping: true\r\n        };\r\n\r\n        const inputAmount = inputAmountRef.current.value;\r\n        const numericInputAmount = Number(inputAmount);\r\n        const formattedInputAmount = Number(numericInputAmount).toLocaleString('en-US', inputAmountFormatOptions);\r\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n        if (inputAmount === '' || inputAmount === '0') {\r\n            setIsConfirmLoading(false);\r\n            return;\r\n        }\r\n\r\n\r\n        const prepareSalesData = () => {\r\n            // Initial data from the function call\r\n            let salesData = {\r\n                id: selectedChatData.carData.stockID,\r\n                stock_system_id: selectedChatData.carData.jackall_id,\r\n                sales_date: formattedSalesDate,\r\n                fob: invoiceData.paymentDetails.fobPrice,\r\n                freight: invoiceData.paymentDetails.freightPrice,\r\n                insurance: 0,\r\n                inspection: invoiceData.paymentDetails.inspectionIsChecked ? invoiceData.paymentDetails.inspectionPrice : 0,\r\n                coupon_discount: 0,\r\n                price_discount: 0,\r\n                subtotal: parseFloat(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')),\r\n                clients: selectedCustomerData.j_id\r\n            };\r\n\r\n            // Map additional names and prices to cost_name and cost fields\r\n            invoiceData.paymentDetails.additionalName.forEach((name, index) => {\r\n                const price = invoiceData.paymentDetails.additionalPrice[index] || 0;\r\n                salesData[`cost_name${index + 1}`] = name;\r\n                salesData[`cost${index + 1}`] = price;\r\n            });\r\n\r\n            // Fill remaining cost_name and cost fields with default values if they haven't been set\r\n            for (let i = invoiceData.paymentDetails.additionalName.length + 1; i <= 5; i++) {\r\n                salesData[`cost_name${i}`] = 0;\r\n                salesData[`cost${i}`] = 0;\r\n            }\r\n\r\n            return salesData;\r\n        };\r\n\r\n        const salesDataToSubmit = prepareSalesData();\r\n\r\n        try {\r\n            if (!inputAmount.startsWith('-')) {\r\n                // First, execute paymentMessage\r\n                await paymentMessage(formattedInputAmount, formattedDate);\r\n                await delay(10); //10ms delay\r\n\r\n                if (numericInputAmount >= amountNeeded) {\r\n                    // Once paymentMessage is successful, execute fullPaymentMessage\r\n                    await fullPaymentMessage();\r\n                    await appendSalesInfoDataToCSV(salesDataToSubmit);\r\n                    await delay(10); //10ms delay\r\n\r\n                    if (numericInputAmount > amountNeeded) {\r\n                        // Calculate overbalance and execute overBalanceMessage\r\n                        const overBalance = numericInputAmount - amountNeeded;\r\n                        const formattedOverbalanceAmount = Number(Number(selectedCustomerData.overBalance) + Number(parseDollars(overBalance))).toLocaleString('en-US', inputAmountFormatOptions);\r\n                        if (overBalance > 0) {\r\n\r\n                            // Call the function to handle the message with the formatted total                            \r\n                            await updateDoc(docRefCustomer, {\r\n                                overBalance: increment(parseDollars(overBalance)),\r\n                            });\r\n                            await delay(10); //10ms delay\r\n                            await overBalanceMessage(formattedOverbalanceAmount);\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    // Update step indicator for successful payment\r\n                    await updateDoc(docRef, {\r\n                        'stepIndicator.value': 4,\r\n                        'stepIndicator.status': 'Payment Confirmed',\r\n                    });\r\n\r\n                } else {\r\n                    // Handle the case where the payment is less than the amount needed\r\n                    console.log('Partial payment received');\r\n                }\r\n\r\n                // Update payments and payments history\r\n\r\n                await updateDoc(docRef, {\r\n                    payments: arrayUnion(...newPayments)\r\n                });\r\n\r\n                await updateDoc(docRefCustomer, {\r\n                    paymentsHistory: arrayUnion(...newPaymentsAccount)\r\n                });\r\n\r\n            } else {\r\n                console.error('Negative value entered');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error processing payment: ', error);\r\n        } finally {\r\n            setIsConfirmLoading(false);\r\n            dispatch(setTransactionModalVisible(false));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        // return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n        return `${year} ${month} ${day}`;\r\n    }\r\n\r\n    const PaymentHistoryModal = ({ historyModalVisible, handleHistoryModalClose, payments }) => {\r\n        // Create a copy of payments and sort it by date in descending order\r\n        const sortedPayments = [...payments].sort((a, b) => {\r\n            const dateA = a.date;\r\n            const dateB = b.date;\r\n            return dateB - dateA; // Sorts in descending order\r\n        });\r\n\r\n        // console.log(sortedPayments);\r\n\r\n        return (\r\n            <Modal isOpen={historyModalVisible} onClose={handleHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500, }}>\r\n                            {\r\n                                sortedPayments.length > 0 ?\r\n                                    sortedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                        </ScrollView>\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const isTotalValueGreater = Number(totalValue) < Number(totalPriceCalculated().replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\r\n    const displayedAmount = isTotalValueGreater ? Number(totalValue).toLocaleString() : totalPriceCalculated();\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1, }}>\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Total Paid:</Text>\r\n\r\n                <Progress w=\"90%\" shadow={2} value={Number(totalValue)} max={totalAmountNumber} _filledTrack={{\r\n                    bg: \"lime.500\"\r\n                }} />\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, color: '#FF0000', }}>{`${CurrencySymbol()}${convertedCurrency((displayedAmount).replace(/,/g, ''))}`}\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#8D7777', }}> out of </Text>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }}>\r\n                        {`${CurrencySymbol()}${Number(totalPriceCalculated()).toLocaleString('en-US', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2\r\n                        })}`}\r\n                    </Text>\r\n                </Text>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, }}>\r\n\r\n                <Pressable\r\n                    onPress={handleHistoryModalOpen}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#0A78BE', }} underline selectable={false}>Payments History</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ marginLeft: 5, marginTop: 5, }}>\r\n\r\n                <Text style={{ fontWeight: 700, fontSize: 14, }}>Input Amount:</Text>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', }}>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 18, }}>{CurrencySymbol()}</Text>\r\n\r\n                    <TextInput\r\n                        ref={inputAmountRef}\r\n                        placeholderTextColor='#9B9E9F' placeholder='Input Amount'\r\n                        style={{ height: 35, width: 300, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        onChangeText={handleInputAmountChangeText}\r\n                    />\r\n\r\n                </View>\r\n\r\n                <Pressable\r\n                    onPress={handleCompletePaymentPress}\r\n                    style={{ width: 'fit-content', }}>\r\n                    <Text style={{ fontWeight: 700, fontSize: 14, color: '#16A34A', }} underline selectable={false}>Complete Payment</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable\r\n                            onPress={() => confirmPayment()}\r\n                        >\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n\r\n            <PaymentHistoryModal\r\n                historyModalVisible={historyModalVisible}\r\n                handleHistoryModalClose={handleHistoryModalClose}\r\n                payments={selectedChatData.payments ? selectedChatData.payments : []} />\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst IssueProformaInvoiceModalContent = () => {\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    const cfsInputRef = useRef(null);\r\n    const placeOfDeliveryInputRef = useRef(null);\r\n    const secretKey = CRYPTO_KEY.toString();\r\n\r\n\r\n    const invoiceMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: 'Issued Invoice',\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                messageType: 'IssuedInvoice',\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: 'Issued Invoice',\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n\r\n    const parseDollars = (baseValue) => {\r\n\r\n        if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n            if (invoiceData.selectedCurrencyExchange == 'None' || invoiceData.selectedCurrencyExchange == 'USD' || !invoiceData.selectedCurrencyExchange) {\r\n                return `${Number(baseValue).toFixed(6)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.eurToUsd)).toFixed(6)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.audToUsd)).toFixed(6)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.gbpToUsd)).toFixed(6)}`;\r\n            }\r\n            if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n                return `${(Number(baseValue) * Number(invoiceData.currency.cadToUsd)).toFixed(6)}`;\r\n            }\r\n        } else {\r\n            if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\r\n                return `${Number(baseValue).toFixed(6)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.eurToUsd)).toFixed(6)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.audToUsd)).toFixed(6)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.gbpToUsd)).toFixed(6)}`;\r\n            }\r\n            if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n                return `${(Number(baseValue) * Number(selectedChatData.currency.cadToUsd)).toFixed(6)}`;\r\n            }\r\n        }\r\n        // Fallback in case no conditions are met\r\n        return `${Number(baseValue).toFixed(6)}`;\r\n    };\r\n\r\n\r\n\r\n    const confirmInvoice = async () => {\r\n        setIsConfirmLoading(true);\r\n        const year = currentDate.split('-')[0]; // Split the date and get the year\r\n        const yearSuffix = year.slice(-2); // Get last 2 digits of the year\r\n        const collectionRef = collection(projectExtensionFirestore, \"IssuedInvoice\");\r\n\r\n        try {\r\n            // Retrieve all documents for the current yearF\r\n            const querySnapshot = await getDocs(collectionRef);\r\n            let maxNumber = 0;\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const docName = doc.id;\r\n                if (docName.startsWith(yearSuffix)) {\r\n                    const number = parseInt(docName.substring(2), 10);\r\n                    if (number > maxNumber) {\r\n                        maxNumber = number;\r\n                    }\r\n                }\r\n            });\r\n\r\n            const nextNumber = maxNumber + 1;\r\n            const docName = `${yearSuffix}${nextNumber}`;\r\n            const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", docName);\r\n            const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n\r\n            const hashedData = createHmacSha256Hash(docName, secretKey);\r\n\r\n            // Create a new document with the globalInvoiceVariable object\r\n            if (selectedChatData.invoiceNumber) {\r\n                const updateDocRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n\r\n                await setDoc(updateDocRef, {\r\n                    ...globalInvoiceVariable,\r\n                    paymentDetails: {\r\n                        ...globalInvoiceVariable.paymentDetails,\r\n                        fobPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.fobPrice)),\r\n                        freightPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.freightPrice)),\r\n                        inspectionPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.inspectionPrice)),\r\n                        insurancePrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.insurancePrice)),\r\n                        totalAmount: (parseDollars(Number(globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, '')))).toLocaleString('en-US', { useGrouping: true }),\r\n                    },\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    carData: selectedChatData.carData,\r\n                    currency: selectedChatData.currency,\r\n                    selectedCurrencyExchange: selectedChatData.selectedCurrencyExchange,\r\n                }, { merge: true });\r\n\r\n                if (selectedChatData.stepIndicator.value == 1) {\r\n                    await updateDoc(docRefChatId, {\r\n                        'stepIndicator.status': 'Issue Proforma Invoice',\r\n                        'stepIndicator.value': 2,\r\n                        // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                    });\r\n                }\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n            }\r\n\r\n            else {\r\n\r\n                await setDoc(docRef, {\r\n                    ...globalInvoiceVariable,\r\n                    paymentDetails: {\r\n                        ...globalInvoiceVariable.paymentDetails,\r\n                        fobPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.fobPrice)),\r\n                        freightPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.freightPrice)),\r\n                        inspectionPrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.inspectionPrice)),\r\n                        insurancePrice: parseDollars(Number(globalInvoiceVariable.paymentDetails.insurancePrice)),\r\n                        totalAmount: (parseDollars(Number(globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, '')))).toLocaleString('en-US', { useGrouping: true }),\r\n                    },\r\n                    isCancelled: false,\r\n                    customerEmail: selectedCustomerData.textEmail,\r\n                    chatId: selectedChatData.id,\r\n                    cryptoNumber: hashedData,\r\n                    carData: selectedChatData.carData,\r\n                    currency: selectedChatData.currency,\r\n                    selectedCurrencyExchange: selectedChatData.selectedCurrencyExchange,\r\n\r\n                });\r\n\r\n                await updateDoc(docRefChatId, {\r\n                    keywords: arrayUnion(docName),\r\n                    invoiceNumber: docName,\r\n                    'stepIndicator.status': 'Issue Proforma Invoice',\r\n                    'stepIndicator.value': 2,\r\n                    // finalPrice: globalInvoiceVariable.paymentDetails.totalAmount.replace(/,/g, ''),\r\n                });\r\n\r\n                invoiceMessage();\r\n                setIsConfirmLoading(false);\r\n                dispatch(setTransactionModalVisible(false));\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error creating document: \", error);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     calculateTotalAmount();\r\n    // }, [additionalPriceArray]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        globalInvoiceVariable.cfs = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : cfsInputRef.current?.value;\r\n        globalInvoiceVariable.placeOfDelivery = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : placeOfDeliveryInputRef.current?.value;\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, maxHeight: 500, }}>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>CFS:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.cfs ? invoiceData.cfs : ''}\r\n                    ref={cfsInputRef} placeholderTextColor='#9B9E9F' placeholder='Input CFS (Optional)'\r\n                    style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.cfs = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, marginLeft: 3, }}>Place of Delivery:</Text>\r\n                <TextInput\r\n                    defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.placeOfDelivery ? invoiceData.placeOfDelivery : ''}\r\n                    ref={placeOfDeliveryInputRef} placeholderTextColor='#9B9E9F' placeholder='Place of Delivery (Optional)'\r\n                    style={{ height: 25, width: 200, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onChangeText={(value) => globalInvoiceVariable.placeOfDelivery = value} />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3 }}>Port of Departure:</Text>\r\n                <SelectPortOfDeparture />\r\n            </View>\r\n\r\n            <View style={{ margin: 5, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Sales Person:</Text>\r\n                <SelectSalesPerson />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <View style={{ margin: 2, }}>\r\n                <Text style={{ fontWeight: 700, margin: 3, }}>Port of Discharge:</Text>\r\n                {/*Select Discharge*/}\r\n                <SelectPortOfDischarge />\r\n            </View>\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 5, }} />\r\n\r\n            <ConsigneeInput />\r\n\r\n            <PaymentDetails />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', marginTop: 4, }} />\r\n\r\n            <BankInformation />\r\n\r\n            <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, marginTop: 4, }} />{/* Horizontal Line */}\r\n\r\n            <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}>\r\n                <View\r\n\r\n                    // onTouchEnd={() => confirmInvoice()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: isConfirmHovered ? '#145A32' : '#16A34A', // Change color on hover\r\n                        borderRadius: 5,\r\n                        padding: 5,\r\n                    }}\r\n\r\n                // onMouseEnter={() => setIsConfirmHovered(true)}\r\n                // onMouseLeave={() => setIsConfirmHovered(false)}\r\n                >\r\n                    {!isConfirmLoading ? (\r\n                        <Pressable onPress={() => confirmInvoice()}>\r\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>\r\n                                Confirm\r\n                            </Text>\r\n                        </Pressable>\r\n\r\n                    ) : (\r\n                        <Spinner size={'sm'} color={'white'} />)}\r\n\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n\r\nconst ProfitCalculator = () => {\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n\r\n    const [totalSCCAmount, setTotalSCCAmount] = useState(0);\r\n    const [formattedTotalSCCAmount, setFormattedTotalSCCAmount] = useState(0);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [totalProfitAmountDollars, setTotalProfitAmountDollars] = useState(0);\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n    const inputPriceRef = useRef(null);\r\n\r\n\r\n    const [portsData, setPortsData] = useState({});\r\n    const [origFreight, setOrigFreight] = useState(0);\r\n    const [lastFetchedPort, setLastFetchedPort] = useState('');\r\n\r\n\r\n    // Function to fetch ports data from Firestore\r\n    const fetchPortsData = async () => {\r\n        const currentPort = invoiceData.discharge.port;\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        // Fetch data if the current port is different from the last fetched port\r\n        // and if freightOrigPrice is valid (exists, not an empty string, and not 0)\r\n        if (currentPort !== lastFetchedPort && !freightOrigPrice) {\r\n\r\n            const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n            try {\r\n                const docSnap = await getDoc(docRef);\r\n\r\n                if (docSnap.exists()) {\r\n                    const data = docSnap.data();\r\n                    if (data[currentPort]?.kobePrice !== undefined) {\r\n\r\n                        if (invoiceData.departurePort == \"Nagoya\") {\r\n\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].nagoyaPrice,\r\n                            });\r\n                            // console.log(\"Nagoya Price \", data[currentPort].nagoyaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Yokohama\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].yokohamaPrice,\r\n                            });\r\n                            // console.log(\"Yokohama Price \", data[currentPort].yokohamaPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kyushu\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kyushuPrice,\r\n                            });\r\n                            // console.log(\"Kyushu Price \", data[currentPort].kyushuPrice);\r\n\r\n                        }\r\n                        else if (invoiceData.departurePort == \"Kobe\") {\r\n                            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                                freightOrigPrice: data[currentPort].kobePrice,\r\n                            });\r\n                            // console.log(\"Kobe Price \", data[currentPort].kobePrice);\r\n\r\n                        }\r\n\r\n                        setLastFetchedPort(currentPort); // Update last fetched port\r\n                    } else {\r\n                        console.log('Port data not found for the given port');\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching document:', error);\r\n            }\r\n        } else {\r\n            console.log('No need to fetch new data');\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for fetching ports data\r\n    // useEffect(() => {\r\n    //     // Fetch ports data\r\n    //     const fetchPortsData = async () => {\r\n    //         const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    //         try {\r\n    //             const docSnap = await getDoc(docRef);\r\n\r\n    //             if (docSnap.exists()) {\r\n    //                 const data = docSnap.data();\r\n    //                 setPortsData(data[invoiceData.discharge.port].kobePrice);\r\n    //                 console.log(data[invoiceData.discharge.port].kobePrice);\r\n    //             } else {\r\n    //                 console.log('No such document!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching document:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPortsData();\r\n\r\n    // }, [invoiceData]);\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n        inputPriceRef.current.value = defaultInputPrice;\r\n        calculateTotalAmount();\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n\r\n    };\r\n\r\n\r\n    const fee = {\r\n        auction: 10000,\r\n        transport: 10000,\r\n        shippingAgent: 15000,\r\n    };\r\n\r\n    const purchasedPrice = Number(selectedChatData.carData && selectedChatData.carData.purchasedPrice ? selectedChatData.carData.purchasedPrice : 0);\r\n    const formattedPurchasedPrice = Number(purchasedPrice).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const auctionFee = Number(fee.auction);\r\n    const formattedAuctionFee = Number(auctionFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const transportFee = Number(fee.transport);\r\n    const formattedTransportFee = Number(transportFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const shippingAgentFee = Number(fee.shippingAgent);\r\n    const formattedShippingAgentFee = Number(shippingAgentFee).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const cubicMeter = Number(selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ? selectedChatData.carData.dimensionCubicMeters : 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\r\n    const costPerCubicMeter = Number(selectedChatData && selectedChatData.freightOrigPrice ? selectedChatData.freightOrigPrice : 0);\r\n    const formattedCostPerCubicMeter = Number(costPerCubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter);\r\n    const formattedTotalCubicMeterCostDollars = Number(costPerCubicMeter * cubicMeter).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const totalCubicMeterCostYen = Number(totalCubicMeterCostDollars * selectedChatData.currency.usdToJpy);\r\n    const formattedTotalCubicMeterCostYen = Number(totalCubicMeterCostYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceYen = (purchasedPrice + auctionFee + transportFee + shippingAgentFee + totalSCCAmount + totalCubicMeterCostYen)\r\n    const formattedRealTotalPriceYen = Number(realTotalPriceYen).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n    const realTotalPriceDollars = realTotalPriceYen * selectedChatData.currency.jpyToUsd;\r\n    const formattedRealTotalPriceDollars = realTotalPriceDollars.toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n    const defaultInputPrice = Math.round(\r\n        invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount\r\n            ? Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, ''))\r\n            : totalPriceCalculation\r\n    );\r\n\r\n\r\n\r\n\r\n    const safelyParseNumber = (value) => {\r\n        const number = Number(value.replace(/,/g, ''));\r\n        return isNaN(number) ? 0 : number;\r\n    };\r\n\r\n    const calculateTotalAmount = () => {\r\n\r\n        const inputPrice = safelyParseNumber(inputPriceRef.current?.value);\r\n\r\n        const totalAmountDollars = Math.round(inputPrice - realTotalPriceDollars);\r\n        setTotalProfitAmountDollars(totalAmountDollars);\r\n        // const total = Math.round(fobPrice + freight + inspection + insurance + additionalPricesTotal).toLocaleString();\r\n        // setTotalAmountCalculated(total);\r\n        // globalInvoiceVariable.paymentDetails.totalAmount = total;\r\n    };\r\n\r\n    const handleInputPriceChangeText = (text) => {\r\n        const filteredText = text.replace(/[^0-9]/g, '');\r\n        inputPriceRef.current.value = filteredText;\r\n\r\n        calculateTotalAmount();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedChatData.carData && selectedChatData.carData.supplyChainsCostsData) {\r\n\r\n            const amounts = selectedChatData.carData.supplyChainsCostsData.map((item) => {\r\n                const expenseName = Object.keys(item)[0];\r\n                const expenseData = item[expenseName];\r\n                return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n            });\r\n\r\n            // Use reduce to add up all the amounts\r\n            const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n            const formattedTotalAmount = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n\r\n            setTotalSCCAmount(totalAmount);\r\n            setFormattedTotalSCCAmount(formattedTotalAmount);\r\n\r\n\r\n            // console.log(defaultInputPrice);\r\n            // console.log(realTotalPriceDollars);\r\n            // console.log(formattedRealTotalPriceDollars);\r\n            // console.log(realTotalPriceYen);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const freightOrigPrice = selectedChatData.freightOrigPrice;\r\n\r\n        if (modalVisible && !freightOrigPrice) {\r\n            fetchPortsData();\r\n        }\r\n\r\n\r\n    }, [modalVisible]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalSCCAmount !== 0 || totalSCCAmount !== '') {\r\n            const totalAmountDollars = Math.round(defaultInputPrice - realTotalPriceDollars);\r\n            setTotalProfitAmountDollars(totalAmountDollars);\r\n        }\r\n\r\n\r\n    }, [totalSCCAmount]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#4c555c' : '#6e7a83',\r\n                }}>\r\n                <Ionicons size={15} color={'white'} name='calculator' />\r\n                <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', }} >Profit Calculator</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n                initialFocusRef={inputPriceRef}\r\n                size={'lg'}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header>Profit Calculator</Modal.Header>\r\n                    <Modal.Body style={{ flexDirection: 'row', backgroundColor: '#fafafa', }}>\r\n\r\n                        <View style={{ flex: 1, borderRightWidth: 1, borderRightColor: '#DADDE1', maxHeight: 500, }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Yen):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy) < 0 ? '#FF0000' : '#8D7777',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars * selectedChatData.currency.usdToJpy).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (US Dollars):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(totalProfitAmountDollars) < 0 ? '#FF0000' : '#16A34A',\r\n                                }}>\r\n                                    {`${Number(totalProfitAmountDollars).toLocaleString('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Profit (Percentage):</Text>\r\n                                <Text selectable style={{\r\n                                    fontWeight: '700', fontSize: 18,\r\n                                    color: Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100) <= 10.5 ? '#FF0000' : '#336699',\r\n                                }}>\r\n                                    {`${Number(((totalProfitAmountDollars * selectedChatData.currency.usdToJpy) / purchasedPrice) * 100).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}%`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: '#6E7A83', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, color: 'white', }}>Price to calculate:</Text>\r\n                                <TextInput\r\n                                    onChangeText={handleInputPriceChangeText}\r\n                                    defaultValue={defaultInputPrice}\r\n                                    ref={inputPriceRef}\r\n                                    placeholderTextColor='#9B9E9F' placeholder='Input Price'\r\n                                    style={{\r\n                                        backgroundColor: 'white',\r\n                                        height: 25,\r\n                                        margin: 2,\r\n                                        padding: 1,\r\n                                        borderRadius: 4,\r\n                                        borderWidth: 1,\r\n                                        borderColor: 'white',\r\n                                        outlineStyle: 'none',\r\n                                        fontSize: 18,\r\n                                        fontWeight: '700',\r\n                                    }}\r\n                                />\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{ flex: 1, marginLeft: 3 }}>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Purchased Price:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedPurchasedPrice}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Auction Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedAuctionFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Transport Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTransportFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Shipping Agent Fee:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedShippingAgentFee}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Supply Chains Costs:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedTotalSCCAmount}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${cubicMeter}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 16, }}>Cost per Cubic Meter:</Text>\r\n                                <Text selectable style={{ fontWeight: '400', fontSize: 14, }}>\r\n                                    {`${formattedCostPerCubicMeter} x ${cubicMeter}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#16A34A', }}>\r\n                                    {`${formattedTotalCubicMeterCostDollars}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 14, color: '#8D7777', }}>\r\n                                    {`${formattedTotalCubicMeterCostYen}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ marginBottom: 10, borderWidth: 1, borderColor: '#DADDE1', borderRadius: 5, marginRight: 3, padding: 3, backgroundColor: 'white', }}>\r\n                                <Text style={{ fontWeight: 'bold', marginVertical: 5, fontSize: 20, }}>Total:</Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#8D7777', }}>\r\n                                    {`${formattedRealTotalPriceYen}`}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: '700', fontSize: 18, color: '#16A34A', }}>\r\n                                    {`${formattedRealTotalPriceDollars}`}\r\n                                </Text>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst GenerateCustomInvoice = () => {\r\n\r\n    let invoiceNameExtension = '';\r\n    let divideInvoice = 1;\r\n    let additionalPriceLocal;\r\n    let additionalNameLocal;\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const customInvoiceVisible = useSelector((state) => state.customInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [isChecked, setIsChecked] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.sameAsConsignee : false);\r\n\r\n    const [invoiceNumber, setInvoiceNumber] = useState(invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.id : '');\r\n    const [invoiceViewKey, setInvoiceViewKey] = useState(0);\r\n\r\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState('');\r\n\r\n    const issuingDateRef = useRef(null);\r\n    const [issuingDate, setIssuingDate] = useState('');\r\n\r\n    const dueDateRef = useRef(null);\r\n    const [dueDate, setDueDate] = useState('');\r\n\r\n\r\n    const shippedFromRef = useRef(null);\r\n    const [shippedFrom, setShippedFrom] = useState('');\r\n\r\n    const shippedToRef = useRef(null);\r\n    const [shippedTo, setShippedTo] = useState('');\r\n\r\n    const placeOfDeliveryRef = useRef(null);\r\n    const [placeOfDelivery, setPlaceOfDelivery] = useState('');\r\n\r\n    const cfsRef = useRef(null);\r\n    const [cfs, setCfs] = useState('');\r\n\r\n    const consigneeNameRef = useRef(null);\r\n    const [consigneeName, setConsigneeName] = useState('');\r\n\r\n    const consigneeAddressRef = useRef(null);\r\n    const [consigneeAddress, setConsigneeAddress] = useState('');\r\n\r\n    const consigneeEmailRef = useRef(null);\r\n    const [consigneeEmail, setConsigneeEmail] = useState('');\r\n\r\n    const consigneeContactRef = useRef(null);\r\n    const [consigneeContact, setConsigneeContact] = useState('');\r\n\r\n    const consigneeFaxRef = useRef(null);\r\n    const [consigneeFax, setConsigneeFax] = useState('');\r\n\r\n    const notifyPartyNameRef = useRef(null);\r\n    const [notifyPartyName, setNotifyPartyName] = useState('');\r\n\r\n    const notifyPartyAddressRef = useRef(null);\r\n    const [notifyPartyAddress, setNotifyPartyAddress] = useState('');\r\n\r\n    const notifyPartyEmailRef = useRef(null);\r\n    const [notifyPartyEmail, setNotifyPartyEmail] = useState('');\r\n\r\n    const notifyPartyContactRef = useRef(null);\r\n    const [notifyPartyContact, setNotifyPartyContact] = useState('');\r\n\r\n    const notifyPartyFaxRef = useRef(null);\r\n    const [notifyPartyFax, setNotifyPartyFax] = useState('');\r\n\r\n    const carNameRef = useRef(null);\r\n    const [carName, setCarName] = useState('');\r\n\r\n    const specificationsRef = useRef(null);\r\n    const [specifications, setSpecifications] = useState('');\r\n\r\n    const itemNoteRef = useRef(null);\r\n    const [itemNote, setItemNote] = useState('');\r\n\r\n    const fobTextRef = useRef(null);\r\n    const [fobText, setFobText] = useState('');\r\n\r\n    const fobPriceRef = useRef(null);\r\n    const [fobPrice, setFobPrice] = useState('');\r\n\r\n    const freightTextRef = useRef(null);\r\n    const [freightText, setFreightText] = useState('');\r\n\r\n    const freightPriceRef = useRef(null);\r\n    const [freightPrice, setFreightPrice] = useState('');\r\n\r\n    const inspectionTextRef = useRef(null);\r\n    const [inspectionText, setInspectionText] = useState('');\r\n\r\n    const inspectionPriceRef = useRef(null);\r\n    const [inspectionPrice, setInspectionPrice] = useState('');\r\n\r\n    const insuranceTextRef = useRef(null);\r\n    const [insuranceText, setInsuranceText] = useState('');\r\n\r\n    const insurancePriceRef = useRef(null);\r\n    const [insurancePrice, setInsurancePrice] = useState('');\r\n\r\n    const totalPriceRef = useRef(null);\r\n    const [totalPrice, setTotalPrice] = useState('');\r\n\r\n\r\n    const additionalNameRef = useRef(null);\r\n    const [additionalName, setAdditionalName] = useState([]);\r\n\r\n    const additionalPriceRef = useRef(null);\r\n    const [additionalPrice, setAdditionalPrice] = useState([]);\r\n\r\n    const dividedByRef = useRef(null);\r\n    const [dividedBy, setDividedBy] = useState('');\r\n\r\n\r\n    // const convertedCurrencyCustomInvoice = (baseValue) => {\r\n    //     if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n    //         return `${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n    //         const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `${(euroValue * Number(selectedChatData.currency.jpyToEur)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n    //         const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `${(audValue * Number(selectedChatData.currency.jpyToAud)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n    //         const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `${(gbpValue * Number(selectedChatData.currency.jpyToGbp)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n    //         const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `${(cadValue * Number(selectedChatData.currency.cadToJpy)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    // }\r\n    const convertedCurrencyCustomInvoice = (baseValue) => {\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur) + Number(baseValue) * Number(valueCurrency);\r\n            return `${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud) + Number(baseValue) * Number(valueCurrency);\r\n            return `${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp) + Number(baseValue) * Number(valueCurrency);\r\n            return `${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad) + Number(baseValue) * Number(valueCurrency);\r\n            return `${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        dispatch(setCustomInvoiceVisible(false))\r\n        dispatch(setPreviewInvoiceVisible(true))\r\n        setSelectedCurrencyExchange(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD')\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     let generatedImageUri = '';\r\n    //     const captureImageAsync = async () => {\r\n    //         try {\r\n    //             if (invoiceRef.current && modalVisible == true) {\r\n    //                 // Adjust the scale to control the captured image resolution\r\n    //                 const scale = 0.85; // Experiment with different scale values\r\n    //                 const width = 2480 * scale;\r\n    //                 const height = 3508 * scale;\r\n\r\n    //                 const imageUri = await captureRef(invoiceRef, {\r\n    //                     format: 'jpg',\r\n    //                     quality: 1, // Adjust quality if needed\r\n    //                     result: 'base64',\r\n    //                     width: width,\r\n    //                     height: height,\r\n    //                 });\r\n\r\n    //                 generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n    //                 setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n    //                 // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error(\"Error capturing view:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     captureImageAsync();\r\n\r\n    // }, [invoiceRef.current, invoiceData, modalVisible]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n        setSelectedCurrencyExchange(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD')\r\n    }, [capturedImageUri])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const captureImage = async () => {\r\n\r\n\r\n\r\n\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n\r\n            // generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n            setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n            await createPDF(`data:image/jpeg;base64,${imageUri}`);\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n\r\n\r\n\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id}${invoiceNameExtension} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n\r\n        handleAdditionalNameTextChange(additionalNameRef.current.value)\r\n        handleAdditionalPriceTextChange(additionalPriceRef.current.value)\r\n\r\n        setIssuingDate(issuingDateRef.current.value);\r\n        setDueDate(dueDateRef.current.value);\r\n        setShippedFrom(shippedFromRef.current.value);\r\n        setShippedTo(shippedToRef.current.value);\r\n        setPlaceOfDelivery(placeOfDeliveryRef.current.value);\r\n        setCfs(cfsRef.current.value);\r\n        setConsigneeName(consigneeNameRef.current.value);\r\n        setConsigneeAddress(consigneeAddressRef.current.value);\r\n        setConsigneeEmail(consigneeEmailRef.current.value);\r\n        setConsigneeContact(consigneeContactRef.current.value);\r\n        setConsigneeFax(consigneeFaxRef.current.value);\r\n        setNotifyPartyName(notifyPartyNameRef.current.value);\r\n        setNotifyPartyAddress(notifyPartyAddressRef.current.value);\r\n        setNotifyPartyEmail(notifyPartyEmailRef.current.value);\r\n        setNotifyPartyContact(notifyPartyContactRef.current.value);\r\n        setNotifyPartyFax(notifyPartyFaxRef.current.value);\r\n        setCarName(carNameRef.current.value);\r\n        setSpecifications(specificationsRef.current.value);\r\n        setItemNote(itemNoteRef.current.value);\r\n        setFobText(fobTextRef.current.value);\r\n        setFobPrice(fobPriceRef.current.value);\r\n        setFreightText(freightTextRef.current.value);\r\n        setFreightPrice(freightPriceRef.current.value);\r\n        setInspectionText(inspectionTextRef.current.value);\r\n        setInspectionPrice(inspectionPriceRef.current.value);\r\n        setInsuranceText(insuranceTextRef.current.value);\r\n        setInsurancePrice(insurancePriceRef.current.value);\r\n        setTotalPrice(totalPriceRef.current.value);\r\n        setAdditionalName(additionalNameLocal);\r\n        setAdditionalPrice(additionalPriceLocal);\r\n        setDividedBy(dividedByRef.current.value);\r\n\r\n\r\n        if (Number(divideInvoice) > 1) {\r\n            for (let i = 0; i < Number(divideInvoice); i++) {\r\n                // Update the invoice number for each iteration based on 'i'\r\n                setInvoiceNumber(`${invoiceData.id}-${i + 1}`);\r\n                invoiceNameExtension = `-${i + 1}`;\r\n                // Await the capturing of the image\r\n                await captureImage();  // Assuming this is defined elsewhere and works asynchronously\r\n            }\r\n        } else if (Number(divideInvoice) === 1) {\r\n            // If dividedBy is exactly 1, you've already set the invoice number above\r\n            setInvoiceNumber(`${invoiceData.id}`);\r\n            invoiceNameExtension = '';\r\n            await captureImage();  // Just capture the image once\r\n        }\r\n\r\n        // if (capturedImageUri) {\r\n        // await createPDF(capturedImageUri);\r\n        // }\r\n\r\n    };\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    // additionalNameRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : '';\r\n    // additionalPriceRef.current.value = invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalPrice ? invoiceData.paymentDetails.additionalPrice.join('\\n') : '';\r\n\r\n    const handleAdditionalPriceTextChange = (text) => {\r\n        // Process and filter each line\r\n        const filteredLines = text.split('\\n').map(line => {\r\n            let filteredLine = line.replace(/[^0-9.]/g, '');\r\n            const parts = filteredLine.split('.');\r\n            if (parts.length > 2) {\r\n                filteredLine = parts[0] + '.' + parts[1];\r\n            }\r\n            return filteredLine;\r\n        });\r\n\r\n        // Update the ref and the state\r\n        additionalPriceRef.current.value = filteredLines.join('\\n');\r\n        // setAdditionalPriceArray(filteredLines);\r\n        // globalAdditionalPriceArray = filteredLines;\r\n        additionalPriceLocal = filteredLines;\r\n\r\n    };\r\n\r\n    const handleAdditionalNameTextChange = (text) => {\r\n        // Update the ref\r\n        additionalNameRef.current.value = text;\r\n\r\n        // Split the text into lines and update the state\r\n        const lines = text.split('\\n');\r\n        // setAdditionalNameArray(lines);\r\n        additionalNameLocal = lines;\r\n    };\r\n\r\n    const handleFreightTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        freightPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleInspectionTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        inspectionPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleInsuranceTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        insurancePriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n\r\n    const handleFobTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        fobPriceRef.current.value = numericValue;\r\n\r\n    }\r\n\r\n    const handleDividedByTextChange = (value) => {\r\n        // Remove any non-numeric characters and leading zeros\r\n        const numericValue = value.replace(/[^0-9]/g, '').replace(/^0+/g, '');\r\n        // Update your variable only if the result is not an empty string and not 0\r\n        dividedByRef.current.value = numericValue;\r\n        divideInvoice = numericValue;\r\n\r\n    }\r\n\r\n    const CurrencySymbol = (value) => {\r\n        switch (value) {\r\n            case 'USD':\r\n                return '$ USD';\r\n\r\n            case 'EURO':\r\n                return '€ EURO';\r\n\r\n            case 'AUD':\r\n                return 'A$ AUD';\r\n\r\n            case 'GBP':\r\n                return '£ GBP';\r\n\r\n            case 'CAD':\r\n                return 'C$ CAD';\r\n        }\r\n    }\r\n\r\n    const CurrencySign = (value) => {\r\n        switch (value) {\r\n            case 'USD':\r\n                return '$';\r\n\r\n            case 'EURO':\r\n                return '€';\r\n\r\n            case 'AUD':\r\n                return 'A$';\r\n\r\n            case 'GBP':\r\n                return '£';\r\n\r\n            case 'CAD':\r\n                return 'C$';\r\n        }\r\n    }\r\n\r\n    const CurrencyPopover = () => {\r\n\r\n\r\n        const currencies = [\r\n            { label: '$ USD', value: 'USD' },\r\n            { label: '€ EURO', value: 'EURO' },\r\n            { label: 'A$ AUD', value: 'AUD' },\r\n            { label: '£ GBP', value: 'GBP' },\r\n            { label: 'C$ CAD', value: 'CAD' },\r\n        ];\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Box>\r\n                <Popover\r\n                    trigger={(triggerProps) => {\r\n                        return (\r\n                            <NativePressable {...triggerProps}\r\n                                marginLeft={'5px'}\r\n                                width=\"100px\"\r\n                                bg=\"white\"\r\n                                _hover={{\r\n                                    bg: '#f3f3f3',\r\n                                }}\r\n                                borderColor={'#D9D9D9'}\r\n                                borderWidth={1}\r\n                                borderRadius={'5px'}\r\n                                flexDirection={'row'}\r\n                            >\r\n                                <Text style={{ marginLeft: 1, textAlign: 'center ', color: 'black', fontWeight: 'bold', }}>{CurrencySymbol(selectedCurrencyExchange)}</Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        alignSelf: 'center',\r\n                                        marginLeft: 24,\r\n                                        marginRight: 2,\r\n                                    }}>\r\n                                    <FontAwesome name='caret-down' size='12' color='black' />\r\n                                </View>\r\n                            </NativePressable>\r\n                        );\r\n                    }}\r\n                >\r\n                    <Popover.Content width=\"100px\">\r\n                        <Box backgroundColor={'white'}>\r\n                            <VStack space={1}>\r\n                                {currencies.map((currency) => (\r\n                                    <NativePressable\r\n                                        key={currency.value}\r\n                                        onPress={() => {\r\n                                            setSelectedCurrencyExchange(currency.value);\r\n                                            // UpdateCurrency(currency.value)\r\n                                            // Perform additional logic if necessary, e.g., updating global state\r\n                                        }}\r\n                                        _hover={{\r\n                                            bg: '#f3f3f3',\r\n                                        }}\r\n                                    >\r\n                                        <Text fontSize=\"sm\" textAlign={'center'} color='black' fontWeight={'bold'}>\r\n                                            {currency.label}\r\n                                        </Text>\r\n                                    </NativePressable>\r\n                                ))}\r\n                            </VStack>\r\n                        </Box>\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    const totalPriceCalculated = () => {\r\n\r\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\r\n            const converted = Number(price); // Convert each price using your currency conversion function\r\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice))\r\n            // * Number(invoiceData.currency.jpyToEur)\r\n            ;\r\n\r\n\r\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToEur)\r\n        );\r\n\r\n\r\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\r\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\r\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\r\n        //         : 0)\r\n        //     + totalAdditionalPrice;\r\n\r\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToAud))\r\n\r\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToGbp))\r\n\r\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToCad))\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            return `${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            return `${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            return `${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            return `${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const FormContent = () => {\r\n\r\n\r\n        return (\r\n\r\n            <View\r\n                style={{\r\n                    width: screenWidth < mobileViewBreakpoint ? '98%' : 500\r\n                }}\r\n            >\r\n                <View\r\n                    style={{\r\n                        flex: 1\r\n                    }}\r\n                >\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', padding: 10, alignSelf: 'center', }}>Generate Custom Invoice</Text>\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text key={invoiceViewKey} style={{ margin: 2, fontWeight: 'bold', }}>Issuing Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={issuingDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedIssuingDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Issuing Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, fontWeight: 'bold', }}>Due Date:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dueDateRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? formattedDueDate : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Due Date'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped from:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedFromRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.departurePort}, ${invoiceData.departureCountry}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped from'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Shipped to:</Text>\r\n\r\n                    <TextInput\r\n                        ref={shippedToRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.discharge.port}, ${invoiceData.discharge.country}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Shipped to'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Place of Delivery:</Text>\r\n\r\n                    <TextInput\r\n                        ref={placeOfDeliveryRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.placeOfDelivery > 0 ? invoiceData.placeOfDelivery : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Place of Delivery'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>CFS:</Text>\r\n\r\n                    <TextInput\r\n                        ref={cfsRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length && invoiceData.cfs > 0 ? invoiceData.cfs : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='CFS'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#0A78BE', }}>Consignee</Text>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeAddressRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeEmailRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeContactRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={consigneeFaxRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.consignee.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', alignSelf: 'center', color: '#FF0000', }}>Notify Party</Text>\r\n\r\n                    <Checkbox\r\n                        isChecked={isChecked}\r\n                        onChange={value => {\r\n                            setIsChecked(value)\r\n                            globalInvoiceVariable.consignee.sameAsBuyer = value;\r\n                        }}\r\n                        style={{ margin: 2, borderColor: '#0A9FDC' }}\r\n                        size=\"sm\"\r\n                        _text={{ fontWeight: 700 }}\r\n                    >\r\n                        Same as consignee\r\n                    </Checkbox>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyNameRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.name : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Name'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Address:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyAddressRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.address : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Address'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Email:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyEmailRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.email : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Email'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Contact Number:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyContactRef}\r\n                        disabled={isChecked}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.contactNumber : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Contact Number'\r\n                        style={{ height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Fax:</Text>\r\n\r\n                    <TextInput\r\n                        ref={notifyPartyFaxRef}\r\n                        disabled={isChecked}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.notifyParty.fax : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Fax'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, backgroundColor: isChecked ? '#F1F1F1' : '#FFFFFF', borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Car name:</Text>\r\n\r\n                    <TextInput\r\n                        ref={carNameRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? invoiceData.carData.carName : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Date'\r\n                        style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Specifications:</Text>\r\n\r\n                    <TextInput\r\n                        ref={specificationsRef}\r\n                        multiline\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.carData.chassisNumber}\\n${invoiceData.carData.exteriorColor}\\n${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n${invoiceData.carData.fuel}\\n${invoiceData.carData.transmission}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Specifications'\r\n                        style={{ height: 120, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Item note:</Text>\r\n\r\n                    <TextInput\r\n                        ref={itemNoteRef}\r\n                        defaultValue={invoiceData && Object.keys(invoiceData).length > 0 ? `${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}` : ''}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Item note'\r\n                        style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    />\r\n\r\n                    <View style={{ width: '100%', borderBottomWidth: 2, borderColor: '#0A9FDC', alignSelf: 'center', margin: 2, }} />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Currency:</Text>\r\n\r\n                    <CurrencyPopover />\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>FOB:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <TextInput\r\n                            ref={fobTextRef}\r\n                            defaultValue={'FOB'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Fob'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none' }}\r\n                            onChangeText={(text) => {\r\n                                const filteredText = text.replace(/[^0-9]/g, ''); // Remove non-numeric characters\r\n\r\n                                fobTextRef.current.value = filteredText;\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\r\n\r\n                        <TextInput\r\n                            ref={fobPriceRef}\r\n                            onChangeText={handleFobTextChange}\r\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.fobPrice) : 0)}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='FOB Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Freight:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={freightTextRef}\r\n                            defaultValue={'Freight'}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\r\n\r\n                        <TextInput\r\n                            ref={freightPriceRef}\r\n                            onChangeText={handleFreightTextChange}\r\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.freightPrice) : 0)}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Freight Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Inspection:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={inspectionTextRef}\r\n                            onChangeText={handleInspectionTextChange}\r\n                            defaultValue={`Inspection ${invoiceData && Object.keys(invoiceData).length > 0 ? `[${invoiceData.paymentDetails.inspectionName}]` : ''}`}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\r\n\r\n                        <TextInput\r\n                            ref={inspectionPriceRef}\r\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.inspectionPrice) : 0)}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Insurance:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            ref={insuranceTextRef}\r\n                            onChangeText={handleInsuranceTextChange}\r\n                            defaultValue={`Insurance`}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Insurance'\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\r\n\r\n                        <TextInput\r\n                            ref={insurancePriceRef}\r\n                            defaultValue={convertedCurrencyCustomInvoice(invoiceData && Object.keys(invoiceData).length > 0 ? Number(invoiceData.paymentDetails.insurancePrice) : 0)}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Inspection Price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Additional:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <TextInput ref={additionalNameRef} onChangeText={handleAdditionalNameTextChange} multiline placeholderTextColor='#9B9E9F' placeholder='Name'\r\n                            defaultValue={invoiceData && Object.keys(invoiceData).length > 0 && invoiceData.paymentDetails.additionalName ? invoiceData.paymentDetails.additionalName.join('\\n') : ''}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                        <TextInput ref={additionalPriceRef}\r\n                            onChangeText={handleAdditionalPriceTextChange}\r\n                            multiline\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Price'\r\n                            defaultValue={invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                ? invoiceData.paymentDetails.additionalPrice.map(price => {\r\n                                    const converted = convertedCurrencyCustomInvoice(Number(price));\r\n                                    return converted;\r\n                                }).join('\\n')\r\n                                : ' '}\r\n                            style={{ flex: 1, height: 75, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }} />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Total price:</Text>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n\r\n                        <Text style={{ marginLeft: 2, paddingTop: 5, fontWeight: 'bold', }}>{CurrencySign(selectedCurrencyExchange)}</Text>\r\n\r\n                        <TextInput\r\n                            ref={totalPriceRef}\r\n                            defaultValue={totalPriceCalculated().replace(/,/g, '')}\r\n                            placeholderTextColor='#9B9E9F'\r\n                            placeholder='Total price'\r\n                            keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                            style={{ flex: 1, height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                        />\r\n                    </View>\r\n\r\n                    <Text style={{ margin: 2, paddingTop: 5, fontWeight: 'bold', }}>Divided by:</Text>\r\n\r\n                    <TextInput\r\n                        ref={dividedByRef}\r\n                        defaultValue={'1'}\r\n                        placeholderTextColor='#9B9E9F'\r\n                        placeholder='Total price'\r\n                        onChangeText={handleDividedByTextChange}\r\n                        keyboardType='numeric' // This prop prompts the user with a numeric keypad\r\n                        style={{\r\n                            flex: 1,\r\n                            height: 25,\r\n                            margin: 2,\r\n                            padding: 1,\r\n                            borderRadius: 2,\r\n                            borderWidth: 1,\r\n                            borderColor: '#D9D9D9',\r\n                            outlineStyle: 'none',\r\n                        }}\r\n                    />\r\n\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Modal\r\n                isOpen={customInvoiceVisible}\r\n                onClose={() => {\r\n                    handleModalClose();\r\n                }}\r\n                size={'lg'}\r\n            // useRNModal\r\n            >\r\n\r\n                <Modal.Content>\r\n\r\n                    {customInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: 600, maxWidth: screenWidth < mobileViewBreakpoint ? '100%' : 520, }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                <FormContent />\r\n                                <View style={{ flexDirection: 'row', margin: 5, width: '100%', justifyContent: 'center', }}>\r\n                                    <Pressable\r\n                                        focusable={false}\r\n                                        onPress={() => {\r\n                                            handleCaptureAndCreatePDF()\r\n                                        }}\r\n                                        style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginHorizontal: 10, backgroundColor: '#16A34A', width: '100%' }}>\r\n                                        <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                                        <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View\r\n                                    ref={invoiceRef}\r\n                                    key={invoiceViewKey}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceNumber}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${issuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedFrom}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{shippedTo}</Text>\r\n                                        {placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{placeOfDelivery}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{cfs}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{consigneeName}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeAddress}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeEmail}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${consigneeContact}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${consigneeFax == '' ? 'N/A' : consigneeFax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {isChecked == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyName}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyAddress}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyEmail}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${notifyPartyContact}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${notifyPartyFax == '' ? 'N/A' : notifyPartyFax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${dueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        {(fobText !== '' && fobPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${fobText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {fobPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(fobPrice).toFixed(2).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n                                        {(freightText !== '' && freightPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${freightText}`}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {freightPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(freightPrice).toFixed(2).toLocaleString('en-US')}` : ''}\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        {(inspectionText !== '' && inspectionPrice > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {`${inspectionText} ${insuranceText !== '' && insurancePrice > 0 ? `+ ${insuranceText}` : ''}`}\r\n                                                    </Text>\r\n\r\n                                                </View>\r\n\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}\r\n                                                    >\r\n                                                        {inspectionPrice > 0 ? `${CurrencySign(selectedCurrencyExchange)}${Number(inspectionPrice).toFixed(2).toLocaleString('en-US', { useGrouping: true })}` : ''}\r\n                                                        {insuranceText !== '' && insurancePrice > 0 ? ` + ${CurrencySign(selectedCurrencyExchange)}${Number(insurancePrice).toFixed(2).toLocaleString('en-US', { useGrouping: true })}` : ''}\r\n                                                    </Text>\r\n\r\n\r\n\r\n                                                </View>\r\n\r\n\r\n                                            </View>\r\n                                        }\r\n                                        {(additionalName && additionalName.length > 0) &&\r\n                                            (additionalPrice && additionalPrice.length > 0) &&\r\n                                            <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 5,\r\n                                                    flexDirection: 'row',\r\n                                                }}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {additionalName && additionalName.length > 0 ? `${additionalName.join(' + ')}` : ' '}\r\n                                                    </Text>\r\n\r\n\r\n                                                </View>\r\n\r\n                                                <View style={{\r\n                                                    borderTopWidth: 1 * widthScaleFactor,\r\n                                                    borderColor: '#C2E2F4',\r\n                                                    flex: 2,\r\n                                                }}>\r\n\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {additionalPrice && additionalPrice.length > 0\r\n                                                            ? additionalPrice.map(price =>\r\n                                                                !isNaN(parseFloat(price)) ? // Check if the price is a number\r\n                                                                    `${CurrencySign(selectedCurrencyExchange)}${parseFloat(price).toLocaleString('en-US', {\r\n                                                                        style: 'currency',\r\n                                                                        currency: 'USD',\r\n                                                                        minimumFractionDigits: 2,\r\n                                                                        maximumFractionDigits: 2\r\n                                                                    }).slice(1)}` : ''\r\n                                                            ).join(' + ')\r\n                                                            : ' '}\r\n\r\n\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        }\r\n\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${specifications}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n\r\n                                                <Text style={{\r\n                                                    fontWeight: 400,\r\n                                                    fontSize: 12 * widthScaleFactor,\r\n                                                    lineHeight: 14 * widthScaleFactor,\r\n                                                    marginBottom: 3 * heightScaleFactor,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                    {`${itemNote}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {carName !== '' ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`${CurrencySign(selectedCurrencyExchange)}${(Number(totalPrice) / Number(dividedBy)).toLocaleString('en-US')}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n                </Modal.Content>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst PreviewInvoice = () => {\r\n\r\n    // npm install html2canvas jspdf\r\n    // import jsPDF from 'jspdf';\r\n    // import html2canvas from 'html2canvas';\r\n    const dispatch = useDispatch();\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const previewInvoiceVisible = useSelector((state) => state.previewInvoiceVisible);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const [isPreviewHovered, setIsPreviewHovered] = useState(false);\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const invoiceRef = useRef(null);\r\n    const qrCodeRef = useRef(null);\r\n    const [invoiceImageUri, setInvoiceImageUri] = useState('');\r\n    const hoverPreviewIn = () => setIsPreviewHovered(true);\r\n    const hoverPreviewOut = () => setIsPreviewHovered(false);\r\n    const [firstCaptureUri, setFirstCaptureUri] = useState('');\r\n    const [capturedImageUri, setCapturedImageUri] = useState('');\r\n    const [vehicleImageUri, setVehicleImageUri] = useState(globalImageUrl);\r\n    const [featuresTrueCount, setFeaturesTrueCount] = useState(0);\r\n    const [rerenderState, setRerenderState] = useState(0);\r\n    const [imagePreviewKey, setImagePreviewKey] = useState(0);\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const handlePreviewInvoiceModalClose = () => {\r\n        dispatch(setPreviewInvoiceVisible(false));\r\n        setCapturedImageUri('');\r\n    }\r\n\r\n    function countTrueValuesInCarData(invoiceData) {\r\n        let count = 0;\r\n\r\n        // Check if carData exists in invoiceData\r\n        if (invoiceData.carData) {\r\n            // List of fields to check within carData\r\n            const fields = ['interior', 'exterior', 'safetySystem', 'comfort', 'sellingPoints'];\r\n\r\n            fields.forEach(field => {\r\n                if (invoiceData.carData[field]) {\r\n                    // Count true values in each field of carData\r\n                    count += Object.values(invoiceData.carData[field]).filter(value => value === true).length;\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (previewInvoiceVisible) {\r\n            setRerenderState(rerenderState + 1);\r\n        }\r\n    }, [previewInvoiceVisible])\r\n\r\n\r\n    useEffect(() => {\r\n        let generatedImageUri = '';\r\n        const captureImageAsync = async () => {\r\n            try {\r\n                if (invoiceRef.current) {\r\n                    // Adjust the scale to control the captured image resolution\r\n                    const scale = 0.85; // Experiment with different scale values\r\n                    const width = 2480 * scale;\r\n                    const height = 3508 * scale;\r\n\r\n\r\n                    const imageUri = await captureRef(invoiceRef, {\r\n                        format: 'jpg',\r\n                        quality: 1, // Adjust quality if needed\r\n                        result: 'base64',\r\n                        width: width,\r\n                        height: height,\r\n                    });\r\n\r\n                    const trueCount = countTrueValuesInCarData(invoiceData);\r\n                    setFeaturesTrueCount(trueCount);\r\n                    generatedImageUri = `data:image/jpeg;base64,${imageUri}`\r\n                    setCapturedImageUri(`data:image/jpeg;base64,${imageUri}`);\r\n\r\n                    // console.log(`data:image/jpeg;base64,${imageUri}`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error capturing view:\", error);\r\n            }\r\n        };\r\n\r\n\r\n        captureImageAsync();\r\n\r\n\r\n    }, [invoiceRef.current, invoiceData]);\r\n\r\n    useEffect(() => {\r\n        setCapturedImageUri(capturedImageUri);\r\n    }, [capturedImageUri])\r\n\r\n    const captureImage = async () => {\r\n        try {\r\n            // Adjust the scale to control the captured image resolution\r\n            const scale = 0.9; // Experiment with different scale values\r\n            const width = 2480 * scale;\r\n            const height = 3508 * scale;\r\n\r\n            const imageUri = await captureRef(invoiceRef, {\r\n                format: 'jpg',\r\n                quality: 1, // Adjust quality if needed\r\n                result: 'base64',\r\n                width: width,\r\n                height: height,\r\n            });\r\n            return `data:image/jpeg;base64,${imageUri}`;\r\n        } catch (error) {\r\n            console.error(\"Error capturing view:\", error);\r\n        }\r\n    };\r\n\r\n    const createPDF = async () => {\r\n        const element = invoiceRef.current;\r\n        if (element) {\r\n            // Reduce the scale slightly for smaller file size\r\n            const scale = 1; // Fine-tune this value for balance\r\n\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n            });\r\n\r\n            // Experiment with JPEG quality for a balance between quality and file size\r\n            const imageData = canvas.toDataURL('image/jpeg', 0.9);\r\n\r\n            // A4 size dimensions in mm\r\n            const pdfWidth = 210;\r\n            const pdfHeight = 297;\r\n\r\n            const pdf = new jsPDF({\r\n                orientation: 'portrait',\r\n                unit: 'mm',\r\n                format: 'a4'\r\n            });\r\n\r\n            // Adjust PDF compression settings\r\n            const options = {\r\n                imageCompression: 'JPEG',\r\n                imageQuality: 1, // Fine-tune this value as well\r\n            };\r\n\r\n            const imgProps = pdf.getImageProperties(imageData);\r\n            const pdfWidthFit = pdfWidth;\r\n            const pdfHeightFit = (imgProps.height * pdfWidthFit) / imgProps.width;\r\n\r\n            pdf.addImage(imageData, 'JPEG', 0, 0, pdfWidthFit, pdfHeightFit, undefined, 'FAST', 0, options);\r\n\r\n            // Filename logic\r\n            selectedChatData.stepIndicator.value < 3 ?\r\n                pdf.save(`Proforma Invoice (${invoiceData.carData.carName} [${invoiceData.carData.referenceNumber}]) (A4 Paper Size).pdf`) :\r\n                pdf.save(`Invoice No. ${invoiceData.id} (A4 Paper Size).pdf`);\r\n        } else {\r\n            console.error(\"No element to capture\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleCaptureAndCreatePDF = async () => {\r\n        const capturedImageUri = await captureImage();\r\n        if (capturedImageUri) {\r\n            await createPDF(capturedImageUri);\r\n        }\r\n    };\r\n\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = 377;\r\n    const smallHeight = 541;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const openImage = () => {\r\n        if (Platform.OS === 'web') {\r\n            const imageWindow = window.open();\r\n            imageWindow.document.write(`\r\n                <style>\r\n                    body {\r\n                        margin: 0;\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        height: 100vh;\r\n                        overflow: hidden;\r\n                    }\r\n                    img {\r\n                        width: 595px;\r\n                        height: 842px;\r\n                        object-fit: contain;\r\n                        transition: transform 0.25s ease;\r\n                        cursor: zoom-in; /* Set cursor to magnifying glass */\r\n                    }\r\n                    .zoomed {\r\n                        transform: scale(3);\r\n                        transform-origin: center;\r\n                        cursor: zoom-out; /* Change cursor to indicate zooming out */\r\n                    }\r\n                </style>\r\n                <img id=\"zoomableImage\" src=\"${capturedImageUri}\" alt=\"Base64 Image\" draggable=\"false\" />\r\n                <script>\r\n                    const image = document.getElementById('zoomableImage');\r\n    \r\n                    image.addEventListener('mousedown', function(e) {\r\n                        const rect = this.getBoundingClientRect();\r\n                        const x = e.clientX - rect.left;\r\n                        const y = e.clientY - rect.top;\r\n    \r\n                        // Set the transform origin to the mouse position\r\n                        this.style.transformOrigin = \\`\\${x}px \\${y}px\\`;\r\n                        this.classList.add('zoomed');\r\n                    });\r\n    \r\n                    document.addEventListener('mouseup', function() {\r\n                        image.classList.remove('zoomed');\r\n                    });\r\n                </script>\r\n            `);\r\n        } else {\r\n            console.log('This feature is only available in a web environment');\r\n        }\r\n    };\r\n\r\n\r\n    const s2ab = (s) => {\r\n        const buf = new ArrayBuffer(s.length);\r\n        const view = new Uint8Array(buf);\r\n        for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\r\n        return buf;\r\n    };\r\n\r\n    const modifyAndDownloadExcel = (file, dataToInsert) => {\r\n        // Read the file using SheetJS\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const workbook = XLSX.read(e.target.result, { type: 'binary' });\r\n\r\n            // Assuming the data is for the first sheet\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Insert your data into the sheet\r\n            // Example: Inserting data starting from the second row, in columns A, B, and C\r\n            dataToInsert.forEach((row, index) => {\r\n                const rowIndex = index + 2; // Adjust based on where you want to start inserting data\r\n                ['A', 'B', 'C'].forEach((col, colIndex) => {\r\n                    const cellRef = `${col}${rowIndex}`;\r\n                    XLSX.utils.sheet_add_aoa(sheet, [[row[colIndex]]], { origin: cellRef });\r\n                });\r\n            });\r\n\r\n            // Write the modified workbook to a binary string\r\n            const wbOut = XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });\r\n\r\n            // Convert the binary string to a Blob and trigger a download\r\n            const blob = new Blob([s2ab(wbOut)], { type: 'application/octet-stream' });\r\n            saveAs(blob, `Invoice No.${selectedChatData.invoiceNumber} Excel.xlsx`);\r\n        };\r\n        reader.readAsBinaryString(file);\r\n    };\r\n\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0))) + freightCalculation;\r\n\r\n\r\n    // const convertedCurrency = (baseValue) => {\r\n    //     if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n    //         return `$${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n    //         const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `€${(euroValue * Number(selectedChatData.currency.jpyToEur)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n    //         const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `A$${(audValue * Number(selectedChatData.currency.jpyToAud)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n    //         const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `£${(gbpValue * Number(selectedChatData.currency.jpyToGbp)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n    //         const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + Number(baseValue) * Number(valueCurrency);\r\n    //         return `C$${(cadValue * Number(selectedChatData.currency.cadToJpy)).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    // }\r\n    const convertedCurrency = (baseValue) => {\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `$${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            const euroValue = Number(baseValue) * Number(selectedChatData.currency.usdToEur);\r\n            return `€${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            const audValue = Number(baseValue) * Number(selectedChatData.currency.usdToAud);\r\n            return `A$${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            const gbpValue = Number(baseValue) * Number(selectedChatData.currency.usdToGbp);\r\n            return `£${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            const cadValue = Number(baseValue) * Number(selectedChatData.currency.usdToCad);\r\n            return `C$${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const totalPriceCalculated = () => {\r\n\r\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\r\n            const converted = Number(price); // Convert each price using your currency conversion function\r\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice))\r\n            // * Number(invoiceData.currency.jpyToEur)\r\n            ;\r\n\r\n\r\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToEur));\r\n\r\n\r\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\r\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\r\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\r\n        //         : 0)\r\n        //     + totalAdditionalPrice;\r\n\r\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToAud))\r\n\r\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToGbp))\r\n\r\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToCad))\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `$${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            return `€${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            return `A$${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            return `£${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            return `C$${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const PreviewInvoiceForMobile = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                        <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <QRCode\r\n                            value={invoiceData.cryptoNumber}\r\n                            size={80 * smallWidthScaleFactor}\r\n                            color=\"black\"\r\n                            backgroundColor=\"white\"\r\n                        />\r\n                    }\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    {selectedChatData.stepIndicator.value < 3 ?\r\n                        null :\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                    }\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor, }}>\r\n                        {/* Issuing Date */}\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                        </View>\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                        {/* Issuing Date */}\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                        <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                    </View>\r\n                }\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n                {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#FF5C00', height: 194 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                            <Entypo size={50 * smallWidthScaleFactor} name='warning' color={'#FF0000'} style={{ marginLeft: 15 * smallWidthScaleFactor, }} />\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#FF0000', marginLeft: 20 * smallWidthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                        </View>\r\n                    </View>\r\n                    :\r\n                    <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                        <View style={{ flex: 1, alignItems: 'center', }}>\r\n                            <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                            <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Bank Account`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1 }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                }}>\r\n                                    {`Payment Terms`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                </Text>\r\n\r\n                                <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                    <Text style={{\r\n                                        fontWeight: 750,\r\n                                        fontSize: 14 * smallWidthScaleFactor,\r\n                                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                        width: 'fit-content', // Make the underline cover the text width\r\n                                        marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                        color: '#F00A0A',\r\n                                        borderBottomColor: '#F00A0A',\r\n                                    }}>\r\n                                        {`Payment Due`}\r\n                                    </Text>\r\n\r\n                                    <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                        <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                    </Text>\r\n\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>}\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.fobPrice))}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price => {\r\n                                        const converted = convertedCurrency(Number(price));\r\n                                        return converted;\r\n                                    }).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`${totalPriceCalculated()}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {selectedChatData.stepIndicator.value < 3 ? null :\r\n                    <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n                            <NativeImage\r\n                                source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                style={{\r\n                                    width: 276 * smallWidthScaleFactor,\r\n                                    height: 81 * smallHeightScaleFactor,\r\n                                    resizeMode: 'contain',\r\n                                    alignSelf: 'center',\r\n                                    marginBottom: 0, // Minimize margin to keep the line close\r\n                                }}\r\n                            />\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Real Motor Japan'}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            width: 300 * smallWidthScaleFactor,\r\n                            alignItems: 'center',\r\n                            paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                        }}>\r\n\r\n                            <View style={{\r\n                                borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                                borderColor: 'black', // Change the color as needed\r\n                                width: '100%', // Line width as per your requirement\r\n                            }} />\r\n                            <Text italic style={{\r\n                                fontWeight: 700,\r\n                                fontSize: 16 * smallWidthScaleFactor,\r\n                            }}>\r\n                                {'Your Signature'}\r\n                            </Text>\r\n                        </View>\r\n                    </View>}\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <> {invoiceData && Object.keys(invoiceData).length > 0 &&\r\n\r\n            <>{!selectedChatData.isCancelled && <Pressable\r\n                onPress={handlePreviewInvoiceModalOpen}\r\n                focusable={false}\r\n                variant='ghost'\r\n                onHoverIn={hoverPreviewIn}\r\n                onHoverOut={hoverPreviewOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPreviewHovered ? '#0772ad' : '#0A8DD5',\r\n                }}>\r\n\r\n                {selectedChatData.invoiceNumber && selectedChatData.stepIndicator.value > 2 ?\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice No. ${selectedChatData.invoiceNumber}`}\r\n                    </Text>\r\n                    :\r\n                    <Text style={{ fontWeight: 700, color: 'white', }}>\r\n                        {`Preview Invoice`}\r\n                    </Text>}\r\n            </Pressable>}\r\n\r\n                <Modal\r\n                    isOpen={previewInvoiceVisible}\r\n                    onClose={() => {\r\n                        handlePreviewInvoiceModalClose();\r\n                    }}\r\n                    size={'full'}\r\n                    useRNModal\r\n                >\r\n                    <View style={{ flexDirection: 'row', margin: 2, }}>\r\n                        <Pressable onPress={() => {\r\n                            capturedImageUri ? handleCaptureAndCreatePDF() : null;\r\n                        }}\r\n                            style={{ justifyContent: 'center', flexDirection: 'row', padding: 5, borderRadius: 5, marginRight: 5, backgroundColor: '#16A34A', }}>\r\n                            <MaterialCommunityIcons size={20} name='download' color='white' />\r\n                            <Text style={{ color: 'white', }}>Download as PDF</Text>\r\n                        </Pressable>\r\n\r\n                        {selectedChatData.isCancelled && selectedChatData.stepIndicator.value < 3 ?\r\n                            null :\r\n                            <Pressable\r\n                                onPress={() => {\r\n                                    dispatch(setCustomInvoiceVisible(true))\r\n                                    dispatch(setPreviewInvoiceVisible(false))\r\n                                }}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                style={{\r\n                                    justifyContent: 'center',\r\n                                    flexDirection: 'row',\r\n                                    padding: 5,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: '#0A8DD5',\r\n                                }}>\r\n                                <MaterialCommunityIcons size={20} name='file-document-edit' color='white' />\r\n                                <Text style={{ fontWeight: 400, color: 'white', }}>\r\n                                    {`Generate Custom Invoice`}\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n                        }\r\n\r\n                        <Pressable\r\n                            onPress={() => {\r\n                                capturedImageUri ? openImage() : null;\r\n                            }}\r\n                            style={{ position: 'absolute', top: -2, right: -285, flexDirection: 'row', padding: 5, borderRadius: 5, backgroundColor: '#0A8DD5', }}>\r\n                            <Entypo size={20} name='images' color='white' />\r\n                            <Text style={{ color: 'white', }}>View Image</Text>\r\n                        </Pressable>\r\n\r\n                    </View>\r\n                    <Modal.CloseButton />\r\n                    {previewInvoiceVisible &&\r\n                        <ScrollView\r\n                            style={{ maxHeight: screenWidth < 960 ? 520 : 720, maxWidth: screenWidth < 960 ? '90%' : 900 }}\r\n                        >\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                right: 0,\r\n                                left: 0,\r\n                                backgroundColor: 'white',\r\n                                zIndex: 999,\r\n                                flex: 1,\r\n                                alignItems: 'center', // Center horizontally\r\n                            }}>\r\n                                {capturedImageUri ? (\r\n                                    (screenWidth < mobileViewBreakpoint ? <PreviewInvoiceForMobile /> :\r\n                                        <RNImage\r\n                                            key={imagePreviewKey}\r\n                                            source={{ uri: capturedImageUri.toString() }}\r\n                                            style={{\r\n                                                marginTop: 5,\r\n                                                width: screenWidth < mobileViewBreakpoint ? 377 : 595,\r\n                                                height: screenWidth < mobileViewBreakpoint ? 541 : 842,\r\n                                                resizeMode: 'stretch',\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                        />\r\n                                    )\r\n                                ) : (\r\n                                    <Spinner size={'lg'} color={'#0A9FDC'} style={{ alignSelf: 'center', paddingTop: 80 * heightScaleFactor, }} />\r\n                                )}\r\n                            </View>\r\n\r\n                            {/* Main content with invoice details */}\r\n                            {\r\n\r\n                                <View ref={invoiceRef}\r\n                                    style={{\r\n                                        width: newWidth,\r\n                                        height: newHeight,\r\n                                        backgroundColor: 'white',\r\n                                        zIndex: 1\r\n                                    }}>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        <NativeImage\r\n                                            source={require('../../assets/RMJ logo for invoice.png')}\r\n                                            style={{\r\n                                                width: 95 * widthScaleFactor,\r\n                                                height: 85 * heightScaleFactor,\r\n                                                resizeMode: 'stretch',\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * heightScaleFactor }}>\r\n                                        {/* Title */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`PROFORMA INVOICE`}</Text> :\r\n                                            <Text style={{ fontWeight: 700, fontSize: 25 * widthScaleFactor }}>{`INVOICE`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 38 * heightScaleFactor }}>\r\n                                        {/* QR CODE */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <View\r\n                                                ref={qrCodeRef}\r\n                                            >\r\n                                                <QRCode\r\n                                                    value={invoiceData.cryptoNumber}\r\n                                                    size={80 * widthScaleFactor}\r\n                                                    color=\"black\"\r\n                                                    backgroundColor=\"white\"\r\n                                                />\r\n                                            </View>\r\n\r\n                                        }\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 34 * heightScaleFactor }}>\r\n                                        {/* Invoice Number */}\r\n                                        {selectedChatData.stepIndicator.value < 3 ?\r\n                                            null :\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                                        }\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 34 * heightScaleFactor, }}>\r\n                                            {/* Issuing Date */}\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row', alignSelf: 'flex-end', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#F00A0A', }}>{`Valid Until: `}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 121 * widthScaleFactor, top: 49 * heightScaleFactor, flexDirection: 'row' }}>\r\n                                            {/* Issuing Date */}\r\n                                            <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                                            <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                                        </View>\r\n                                    }\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 40 * widthScaleFactor,\r\n                                        top: 134 * heightScaleFactor,\r\n                                        width: 280 * widthScaleFactor,\r\n                                    }}>\r\n                                        {/* Shipper */}\r\n                                        <Text style={{\r\n                                            fontWeight: 750,\r\n                                            fontSize: 16 * widthScaleFactor,\r\n                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                            width: 'fit-content', // Make the underline cover the text width\r\n                                            marginBottom: 5, // Add some space between text and underline\r\n                                        }}>\r\n                                            {`Shipper`}\r\n                                        </Text>\r\n                                        <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped From:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                                        <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Shipped To:`}</Text>\r\n                                        <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                                        {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n                                        {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`CFS:`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 14 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                                            </>\r\n                                            : null}\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', width: 715 * widthScaleFactor, }}>\r\n\r\n                                            <View style={{\r\n                                                flex: 1, width: 280 * widthScaleFactor,\r\n                                            }}>\r\n                                                {/* Buyer Information */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#0A78BE',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#0A78BE',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n\r\n                                                }}>\r\n                                                    {`Buyer Information`}\r\n                                                </Text>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                                                <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, paddingLeft: 20 * widthScaleFactor, width: 280 * widthScaleFactor, }}>\r\n                                                {/* Notify Party */}\r\n                                                <Text style={{\r\n                                                    fontWeight: 750,\r\n                                                    fontSize: 18 * widthScaleFactor,\r\n                                                    borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                    borderBottomColor: '#FF0000',\r\n                                                    width: 'fit-content', // Make the underline cover the text width\r\n                                                    marginBottom: 5, // Add some space between text and underline\r\n                                                    color: '#FF0000',\r\n                                                    marginTop: 25 * heightScaleFactor,\r\n                                                }}>\r\n                                                    {`Notify Party`}\r\n                                                </Text>\r\n                                                {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                                    <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                                    (<>\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 16 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 16 * widthScaleFactor, marginTop: 20, lineHeight: 14 * widthScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                                    </>)}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n\r\n                                    </View>\r\n                                    {selectedChatData.stepIndicator.value < 3 ?\r\n\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#FF5C00', height: 194 * heightScaleFactor, }}>\r\n                                            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                <Entypo size={50 * widthScaleFactor} name='warning' color={'#FF0000'} />\r\n                                                <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#FF0000', marginLeft: 20 * widthScaleFactor, }}>{`Bank Information will be provided after placing an order.`}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                        :\r\n                                        <View style={{ position: 'absolute', right: 38 * widthScaleFactor, top: 130 * heightScaleFactor, borderWidth: 3, width: 430 * widthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                                <Text style={{ fontWeight: 750, fontSize: 14 * widthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * widthScaleFactor, marginBottom: 5 * heightScaleFactor, }}>\r\n                                                <View style={{ flex: 1, marginRight: 50 * widthScaleFactor, }}>\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Bank Account`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Bank Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Branch Name: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Address: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor, marginTop: 3 * heightScaleFactor, }}>{`Account Number: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                                                    </Text>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1 }}>\r\n\r\n                                                    <Text style={{\r\n                                                        fontWeight: 750,\r\n                                                        fontSize: 14 * widthScaleFactor,\r\n                                                        borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                        width: 'fit-content', // Make the underline cover the text width\r\n                                                        marginBottom: 2, // Add some space between text and underline\r\n                                                    }}>\r\n                                                        {`Payment Terms`}\r\n                                                    </Text>\r\n\r\n                                                    <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`Terms: `}\r\n                                                        <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, lineHeight: 14 * widthScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                                                    </Text>\r\n\r\n                                                    <View style={{ paddingTop: 30 * heightScaleFactor, }}>\r\n\r\n                                                        <Text style={{\r\n                                                            fontWeight: 750,\r\n                                                            fontSize: 14 * widthScaleFactor,\r\n                                                            borderBottomWidth: 3, // Adjust the thickness of the underline\r\n                                                            width: 'fit-content', // Make the underline cover the text width\r\n                                                            marginBottom: 2, // Add some space between text and underline\r\n                                                            color: '#F00A0A',\r\n                                                            borderBottomColor: '#F00A0A',\r\n                                                        }}>\r\n                                                            {`Payment Due`}\r\n                                                        </Text>\r\n\r\n                                                        <Text style={{ fontWeight: 750, fontSize: 12 * widthScaleFactor, color: '#F00A0A', lineHeight: 14 * widthScaleFactor }}>{`Due Date: `}\r\n                                                            <Text style={{ fontWeight: 400, fontSize: 12 * widthScaleFactor, color: 'black', lineHeight: 14 * widthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                                        </Text>\r\n\r\n                                                    </View>\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>}\r\n\r\n\r\n                                    <View style={{\r\n                                        position: 'absolute',\r\n                                        left: 38 * widthScaleFactor,\r\n                                        top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * heightScaleFactor : 537 * heightScaleFactor,\r\n                                        width: 718 * widthScaleFactor,\r\n                                        borderWidth: 1 * widthScaleFactor,\r\n                                        borderColor: '#C2E2F4',\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Description`}\r\n                                                </Text>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Notes`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Quantity`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 'bold',\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        color: '#008AC6',\r\n                                                    }}>\r\n                                                    {`Amount`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`FOB`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`${convertedCurrency(Number(invoiceData.paymentDetails.fobPrice))}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {`Freight`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                                        </Text>\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                marginLeft: 2 * widthScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                                        </Text>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            marginLeft: 2 * widthScaleFactor,\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                        }}>\r\n                                                        {' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n\r\n                                            </View>\r\n\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice))}` : ' '}\r\n                                                </Text>}\r\n\r\n                                                {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice))}` : ' '}\r\n                                                        <Text\r\n                                                            style={{\r\n                                                                fontWeight: 400,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                            }}>\r\n                                                            {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice))}` : ' '}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                }\r\n\r\n                                                {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n\r\n                                                        }}>\r\n                                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice))}` : ' '}\r\n                                                    </Text>\r\n                                                }\r\n\r\n                                            </View>\r\n\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 5,\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                                                </Text>}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                            }}>\r\n                                                <Text\r\n                                                    style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                                        ? invoiceData.paymentDetails.additionalPrice.map(price => {\r\n                                                            const converted = convertedCurrency(Number(price));\r\n                                                            return converted;\r\n                                                        }).join(' + ')\r\n                                                        : ' '}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                paddingVertical: 2 * heightScaleFactor,\r\n\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                        marginLeft: 2 * widthScaleFactor,\r\n                                                    }}>\r\n                                                        {\"Used Vehicle\\n\"}\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.carName}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.fuel}\\n`}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 400,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                            {`${invoiceData.carData.transmission}\\n`}\r\n                                                        </Text>\r\n                                                    </Text>\r\n\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 1,\r\n                                                flexDirection: 'row',\r\n                                                justifyContent: 'center',\r\n                                            }}>\r\n                                                {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                                    <Text style={{\r\n                                                        fontWeight: 400,\r\n                                                        fontSize: 12 * widthScaleFactor,\r\n                                                        lineHeight: 14 * widthScaleFactor,\r\n                                                        marginBottom: 3 * heightScaleFactor,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                        {'1'}\r\n                                                    </Text>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                borderTopWidth: 1 * widthScaleFactor,\r\n                                                borderColor: '#C2E2F4',\r\n                                                flex: 2,\r\n                                                justifyContent: 'center',\r\n                                                flexDirection: 'row',\r\n                                            }}>\r\n                                                {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                                    <>\r\n                                                        <Text style={{\r\n                                                            fontWeight: 700,\r\n                                                            fontSize: 12 * widthScaleFactor,\r\n                                                            lineHeight: 14 * widthScaleFactor,\r\n                                                            marginBottom: 3 * heightScaleFactor,\r\n                                                            color: '#008AC6',\r\n                                                            marginRight: 10 * widthScaleFactor,\r\n                                                            top: 51 * heightScaleFactor,\r\n                                                            left: 50 * widthScaleFactor,\r\n                                                            position: 'absolute',\r\n                                                        }}>\r\n                                                            {\"Total\"}\r\n                                                            <Text style={{\r\n                                                                fontWeight: 700,\r\n                                                                fontSize: 12 * widthScaleFactor,\r\n                                                                lineHeight: 14 * widthScaleFactor,\r\n                                                                marginBottom: 3 * heightScaleFactor,\r\n                                                                alignSelf: 'center',\r\n                                                                color: '#00720B',\r\n                                                                marginLeft: 5 * widthScaleFactor,\r\n                                                            }}>\r\n                                                                {`${totalPriceCalculated()}`}\r\n                                                            </Text>\r\n                                                        </Text>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Text>{' '}</Text>\r\n                                                )}\r\n                                            </View>\r\n\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={{ position: 'absolute', left: 38 * widthScaleFactor, top: 825 * heightScaleFactor, width: 350 * widthScaleFactor, }}>\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Payment Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'No warranty service is provided on used vehicles.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Conditions for order cancellation:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                                        </Text>\r\n\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Intermediary Banking Information:'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Swift code: SMBCUS33'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                        }}>\r\n                                            {'Address: 277 Park Avenue'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'City: New York, NY'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Postal Code: 10172'}\r\n                                        </Text>\r\n                                        <Text style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * widthScaleFactor,\r\n                                            lineHeight: 14 * heightScaleFactor,\r\n                                            marginBottom: 5 * heightScaleFactor,\r\n\r\n                                        }}>\r\n                                            {'Country: United States'}\r\n                                        </Text>\r\n                                    </View>\r\n\r\n                                    {selectedChatData.stepIndicator.value < 3 ? null :\r\n                                        <View style={{ position: 'absolute', right: 39 * widthScaleFactor, top: 835 * heightScaleFactor, width: 300 * widthScaleFactor, }}>\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 80 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n                                                <NativeImage\r\n                                                    source={require('../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                                                    style={{\r\n                                                        width: 276 * widthScaleFactor,\r\n                                                        height: 81 * heightScaleFactor,\r\n                                                        resizeMode: 'contain',\r\n                                                        alignSelf: 'center',\r\n                                                        marginBottom: 0, // Minimize margin to keep the line close\r\n                                                    }}\r\n                                                />\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Real Motor Japan'}\r\n                                                </Text>\r\n                                            </View>\r\n\r\n                                            <View style={{\r\n                                                width: 300 * widthScaleFactor,\r\n                                                alignItems: 'center',\r\n                                                paddingBottom: 5 * heightScaleFactor, // Adjust this value to control space between image and line\r\n                                            }}>\r\n\r\n                                                <View style={{\r\n                                                    borderBottomWidth: 1 * heightScaleFactor,\r\n                                                    borderColor: 'black', // Change the color as needed\r\n                                                    width: '100%', // Line width as per your requirement\r\n                                                }} />\r\n                                                <Text italic style={{\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: 16 * widthScaleFactor,\r\n                                                }}>\r\n                                                    {'Your Signature'}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>}\r\n\r\n\r\n                                </View>\r\n                            }\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    }\r\n\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst ReopenTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const reopenTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been reopened by the seller.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been reopened by the seller.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleReopenTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': false, // Update the specific field\r\n                'orderPlaced': true\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': false // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'Reserved', // Update the specific field\r\n                        'reservedTo': selectedCustomerData.textEmail,\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await reopenTransactionMessage();\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#0772ad' : '#0A8DD5',\r\n                    padding: 10,\r\n                }}>\r\n\r\n                <MaterialCommunityIcons name='restart' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Reopen Transaction`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Reopen Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to reopen the transaction?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleReopenTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#0772ad' : '#0A8DD5',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CancelTransaction = () => {\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData)\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isYesHovered, setIsYesHovered] = useState(false);\r\n    const [isNoHovered, setIsNoHovered] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const yesHoverIn = () => setIsYesHovered(true);\r\n    const yesHoverOut = () => setIsYesHovered(false);\r\n\r\n    const noHoverIn = () => setIsNoHovered(true);\r\n    const noHoverOut = () => setIsNoHovered(false);\r\n\r\n    const handleModalOpen = () => {\r\n        setIsModalVisible(true);\r\n\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalVisible(false);\r\n\r\n    }\r\n\r\n\r\n    const sendEmail = async (to, subject, htmlContent) => {\r\n        try {\r\n            const response = await fetch('https://rmjsmtp.duckdns.org/emailServer/send-email', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    to,\r\n                    subject,\r\n                    htmlContent,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Email sent successfully');\r\n            } else {\r\n                console.error('Failed to send email');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending email:', error);\r\n        }\r\n    };\r\n\r\n    const htmlContent = `<html><head>\r\n    <title>Transaction Cancellation Notice</title>\r\n    <style>\r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            background-color: #f4f4f4;\r\n            color: #333;\r\n            padding: 10px;\r\n            margin: 0;\r\n        }\r\n        .container {\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n            margin: 20px auto;\r\n            max-width: 600px;\r\n            padding: 20px;\r\n        }\r\n        .highlight-red {\r\n            color: #FF0000; /* Red */\r\n            font-weight: bold;\r\n        }\r\n        .highlight-bold {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 16px;\r\n            line-height: 1.6;\r\n            margin: 10px 0 20px;\r\n        }\r\n        .signature {\r\n            font-weight: bold;\r\n            margin-top: 40px;\r\n            text-align: left;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <p><strong>Dear Valued Customer,</strong></p>\r\n\r\n        <p>I hope this message finds you well.</p>\r\n        \r\n        <p>I wanted to inform you that unfortunately, due to the non-receipt of payment for <span class=\"highlight-bold\">Invoice No. <span class=\"highlight-red\">${selectedChatData.invoiceNumber}</span></span> by the due date, </p>\r\n\r\n        <p>We had to proceed with the <span class=\"highlight-red\">cancellation of the transaction.</span></p>\r\n\r\n        <p>We understand that unforeseen circumstances can arise, and we're here to discuss any concerns or possible ways to support you moving forward.</p>\r\n\r\n        <p>Please reach out if you have any questions or require assistance.</p>\r\n\r\n        <p>Thank you for your understanding.</p>\r\n        \r\n        <p class=\"signature\">Best regards,<br>Real Motor Japan</p>\r\n    </div>\r\n\r\n</body></html>`;\r\n\r\n    const cancelTransactionMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The transaction has been cancelled.`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The transaction has been cancelled.`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const handleCancelTransaction = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const formattedTimeEmail = moment(datetime).format('MMMM D, YYYY');\r\n\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        const docRefChatId = doc(projectExtensionFirestore, \"chats\", selectedChatData.id);\r\n        const docRefVehicle = doc(projectExtensionFirestore, \"VehicleProducts\", selectedChatData.carData.stockID);\r\n\r\n        setIsYesLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'isCancelled': true, // Update the specific field\r\n                'orderPlaced': false\r\n            });\r\n            try {\r\n                await updateDoc(docRefChatId, {\r\n                    'isCancelled': true // Update the specific field\r\n                });\r\n\r\n                try {\r\n                    await updateDoc(docRefVehicle, {\r\n                        'stockStatus': 'On-Sale', // Update the specific field\r\n                        'reservedTo': ''\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error updating document: \", error);\r\n                }\r\n                await cancelTransactionMessage();\r\n\r\n                await sendEmail(selectedCustomerData.textEmail, `Transaction Cancelled | Real Motor Japan | Invoice No. ${selectedChatData.invoiceNumber}  (${formattedTimeEmail})`, htmlContent);\r\n\r\n                setIsYesLoading(false);\r\n                console.log(\"Document successfully updated\");\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#AAAAAA' : '#CCCCCC',\r\n                }}\r\n            >\r\n                <MaterialIcons name='cancel' size={15} color={'#52525B'} />\r\n                <Text color={'#52525B'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Cancel Transaction`}</Text>\r\n            </Pressable>\r\n\r\n\r\n            <Modal\r\n                isOpen={isModalVisible}\r\n                onClose={() => {\r\n                    handleModalClose()\r\n                }}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header>Cancel Transaction</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to cancel the transation?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={noHoverIn}\r\n                                onHoverOut={noHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isNoHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>No</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleCancelTransaction}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={yesHoverIn}\r\n                                onHoverOut={yesHoverOut}\r\n                                disabled={isYesLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isYesHovered ? '#800101' : '#FF0000',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isYesLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Yes</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst ExtendDueDateButton = () => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isConfirmHovered, setIsConfirmHovered] = useState(false);\r\n    const [isCancelHovered, setIsCancelHovered] = useState(false);\r\n    const [selectedDueDate, setSelectedDueDate] = useState('');\r\n    const [isConfirmLoading, setIsConfirmLoading] = useState(false);\r\n\r\n    let invoiceSelectedDueDate = '';\r\n\r\n    const currentDate = useSelector((state) => state.currentDate);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n\r\n\r\n    const confirmHoverIn = () => setIsConfirmHovered(true);\r\n    const confirmHoverOut = () => setIsConfirmHovered(false);\r\n\r\n    const cancelHoverIn = () => setIsCancelHovered(true);\r\n    const cancelHoverOut = () => setIsCancelHovered(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleModalOpen = () => {\r\n        setModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const handleConfirm = async () => {\r\n\r\n        try {\r\n            await confirmExtendDueDate();\r\n            handleModalClose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const extendDueDateMessage = async () => {\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        try {\r\n\r\n            // Adding the message to the 'messages' subcollection\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n\r\n            // Updating the main chat document with the latest message details\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                lastMessageSender: email,\r\n                lastMessage: `The due date has been changed to ${selectedDueDate\r\n                    ? new Date(selectedDueDate).toLocaleDateString(undefined, {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                    })\r\n                    : 'Invalid Date'\r\n                    }`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n        }\r\n    }\r\n\r\n    const confirmExtendDueDate = async () => {\r\n        const docRef = doc(projectExtensionFirestore, \"IssuedInvoice\", selectedChatData.invoiceNumber);\r\n        setIsConfirmLoading(true);\r\n        try {\r\n            await updateDoc(docRef, {\r\n                'bankInformations.dueDate': selectedDueDate // Update the specific field\r\n            });\r\n            await extendDueDateMessage();\r\n            setIsConfirmLoading(false);\r\n            console.log(\"Document successfully updated\");\r\n        } catch (error) {\r\n            console.error(\"Error updating document: \", error);\r\n        }\r\n    };\r\n\r\n    const ModalCalendar = ({ selectedDate, setSelectedDate, currentDate }) => {\r\n\r\n        const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n        const handleModalCalendarOpen = () => {\r\n            setModalCalendarVisible(true);\r\n        };\r\n\r\n        const handleModalCalendarClose = () => {\r\n            setModalCalendarVisible(false);\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                <Pressable style={{ height: 25, margin: 2, padding: 1, borderRadius: 2, borderWidth: 1, borderColor: '#D9D9D9', outlineStyle: 'none', }}\r\n                    onPress={handleModalCalendarOpen}>\r\n                    <Text style={{ flex: 1, }} >{selectedDate}</Text>\r\n                </Pressable>\r\n\r\n                <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Content>\r\n                        <View style={{ height: '100%', flex: 1 }}>\r\n                            <Calendar\r\n                                onDayPress={useCallback(day => {\r\n                                    setSelectedDate(day.dateString);\r\n                                    invoiceSelectedDueDate = day.dateString;\r\n                                    globalInvoiceVariable.bankInformations.dueDate = day.dateString;\r\n                                    handleModalCalendarClose();\r\n                                }, [])}\r\n                                markedDates={{\r\n                                    [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n                                }}\r\n                                renderArrow={(direction) => (\r\n                                    direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n                                )}\r\n                                enableSwipeMonths={true}\r\n                                initialDate={selectedDate}\r\n                                // minDate={currentDate}\r\n                                showSixWeeks />\r\n\r\n                        </View>\r\n\r\n                    </Modal.Content>\r\n\r\n                </Modal>\r\n            </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentDate) {\r\n            const date = new Date(currentDate);\r\n\r\n            // Check the day of the week\r\n            const dayOfWeek = date.getDay();\r\n\r\n            if (dayOfWeek === 5) { // Friday\r\n                date.setDate(date.getDate() + 3); // Add 3 days to reach Monday\r\n            } else if (dayOfWeek === 6) { // Saturday\r\n                date.setDate(date.getDate() + 2); // Add 2 days to reach Monday\r\n            } else {\r\n                date.setDate(date.getDate() + 1); // Sunday to Thursday, add 1 day\r\n            }\r\n\r\n            // Format the date back to string\r\n            const adjustedDate = date.toISOString().split('T')[0];\r\n            setSelectedDueDate(adjustedDate);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? '#a8720a' : '#D38F0D',\r\n                }}\r\n            >\r\n                <FontAwesome name='calendar-plus-o' size={15} color={'white'} />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{`Extend Due Date`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                useRNModal\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.Header >Extend Due Date</Modal.Header>\r\n                    <View style={{ margin: 2, }}>\r\n                        <Text style={{ fontWeight: 700, marginLeft: 3, }}>Due Date:</Text>\r\n                        <ModalCalendar currentDate={currentDate} selectedDate={selectedDueDate} setSelectedDate={setSelectedDueDate} />\r\n                    </View>\r\n                    <Modal.Footer>\r\n                        <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between', }}>\r\n                            <Pressable\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onPress={handleModalClose}\r\n                                onHoverIn={cancelHoverIn}\r\n                                onHoverOut={cancelHoverOut}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isCancelHovered ? '#3F3F46' : '#52525B',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                <Text color={'white'} style={{ fontWeight: 700, }}>Cancel</Text>\r\n                            </Pressable>\r\n\r\n                            <View style={{ flex: 1 }} />\r\n\r\n                            <Pressable\r\n                                onPress={handleConfirm}\r\n                                focusable={false}\r\n                                variant='ghost'\r\n                                onHoverIn={confirmHoverIn}\r\n                                onHoverOut={confirmHoverOut}\r\n                                disabled={isConfirmLoading}\r\n                                style={{\r\n                                    marginTop: 3,\r\n                                    paddingVertical: 3,\r\n                                    alignItems: 'center', // Center items vertically\r\n                                    justifyContent: 'center',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isConfirmHovered ? '#0f7534' : '#16A34A',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {!isConfirmLoading ? <Text color={'white'} style={{ fontWeight: 700, }}>Confirm</Text> : <Spinner size={'sm'} color={'white'} />}\r\n                            </Pressable>\r\n                        </View>\r\n\r\n\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nconst TransactionModal = () => {\r\n    const transactionModalVisible = useSelector((state) => state.transactionModalVisible);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalClose = () => {\r\n        dispatch(setTransactionModalVisible(false));\r\n    }\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={transactionModalVisible}\r\n            onClose={() => {\r\n                handleTransactionModalClose()\r\n            }}\r\n            size={'lg'}\r\n            useRNModal\r\n        >\r\n            {transactionModalVisible &&\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n\r\n                    <Modal.Header style={{ borderBottomWidth: 2, borderColor: '#0A9FDC', }} >{transactionModalTitle}</Modal.Header>\r\n\r\n                    {transactionModalContentValue == 1 || transactionModalContentValue == 2 &&\r\n                        <IssueProformaInvoiceModalContent />\r\n                    }\r\n\r\n                    {transactionModalContentValue == 3 &&\r\n                        <InputPaymentModalContent />\r\n                    }\r\n                </Modal.Content>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst TransactionButton = ({ title, buttonValue, transactionValue, colorHoverIn, colorHoverOut }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n\r\n    const hoverIn = () => setIsHovered(true);\r\n    const hoverOut = () => setIsHovered(false);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleTransactionModalOpen = () => {\r\n        dispatch(setTransactionModalVisible(true));\r\n        transactionModalTitle = title;\r\n        transactionModalContentValue = transactionValue;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                focusable={false}\r\n                variant='ghost'\r\n                onPress={handleTransactionModalOpen}\r\n                onHoverIn={hoverIn}\r\n                onHoverOut={hoverOut}\r\n                style={{\r\n                    marginTop: 3,\r\n                    paddingVertical: 3,\r\n                    paddingHorizontal: 5,\r\n                    flexDirection: 'row', // Align items in a row\r\n                    alignItems: 'center', // Center items vertically\r\n                    justifyContent: 'center',\r\n                    borderRadius: 5,\r\n                    backgroundColor: isHovered ? colorHoverIn : colorHoverOut,\r\n                }}\r\n            >\r\n                <FastImage\r\n                    source={{\r\n                        uri: require(`../../assets/chat_step/chat_step_${buttonValue}_on.png`),\r\n                        priority: FastImage.priority.normal\r\n                    }}\r\n                    style={{\r\n                        tintColor: 'rgba(128, 128, 128, 1)',\r\n                        width: 15,\r\n                        height: 15,\r\n                        alignSelf: 'center',\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n                <Text color={'white'} style={{ fontWeight: 700, marginLeft: 5, }}>{title}</Text>\r\n            </Pressable>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst TransactionList = ({ displayedTransactions, handleChatPress, selectedCustomerData }) => {\r\n    // Assuming an environment that supports onMouseEnter and onMouseLeave\r\n    return (\r\n        Array.isArray(selectedCustomerData.transactions) && selectedCustomerData.transactions.length > 0 ? (\r\n            displayedTransactions.map((transaction, index) => {\r\n                const [isHovered, setIsHovered] = useState(false); // This won't work as expected due to scope\r\n\r\n                return (\r\n                    <Pressable\r\n                        key={index}\r\n                        onPress={() => handleChatPress(`chat_${transaction.stockId}_${selectedCustomerData.textEmail}`)}\r\n                        onMouseEnter={() => setIsHovered(true)} // These events are not native to React Native\r\n                        onMouseLeave={() => setIsHovered(false)}\r\n                        style={{\r\n                            marginBottom: 15,\r\n                            backgroundColor: isHovered ? '#F2F2F2' : '#FFFFFF', // Change color on hover\r\n                            borderRadius: 10,\r\n                            shadowColor: '#000',\r\n                            shadowOffset: { width: 0, height: 2 },\r\n                            shadowOpacity: 0.1,\r\n                            shadowRadius: 2,\r\n                            elevation: 3,\r\n                            padding: 5,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#eee',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <FastImage\r\n                                source={{ uri: transaction.imageUrl, priority: FastImage.priority.normal }}\r\n                                style={{\r\n                                    width: 60,\r\n                                    height: 60,\r\n                                    borderRadius: 30,\r\n                                    alignSelf: 'center',\r\n                                    margin: 10,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#0A78BE' }} selectable={false} numberOfLines={1} ellipsizeMode='tail'>\r\n                                    {transaction.carName}\r\n                                </Text>\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                <Text style={{ color: '#333' }} selectable={false} numberOfLines={1} ellipsizeMode='tail'>\r\n                                    {transaction.referenceNumber}\r\n                                </Text>\r\n                            </Text>\r\n                        </View>\r\n                    </Pressable>\r\n                );\r\n            })\r\n        ) : (\r\n            <Text style={{ fontWeight: 'bold', alignSelf: 'center' }} italic>No history to show</Text>\r\n        )\r\n    );\r\n};\r\n\r\nconst TransactionHistoryModal = () => {\r\n\r\n    const [transactionHistoryVisible, setTransactionHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const navigate = useNavigate();\r\n    const [displayedTransactions, setDisplayedTransactions] = useState(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const hoverStyle = isHovered ? {\r\n        backgroundColor: '#E8EAF6', // Lighter background color on hover\r\n        // Any other style changes on hover\r\n    } : {};\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = selectedCustomerData.transactions.slice(\r\n            displayedTransactions.length,\r\n            displayedTransactions.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedTransactions([...displayedTransactions, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handleTransactionHistoryModalOpen = () => {\r\n        setDisplayedTransactions(selectedCustomerData.transactions ? selectedCustomerData.transactions.slice(0, 5) : null);\r\n        setTransactionHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handleTransactionHistoryModalClose = () => {\r\n        setTransactionHistoryVisible(false);\r\n    };\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    const handleChatPress = (chatId) => {\r\n        const encryptedChatId = encryptData(chatId);\r\n        const encodedChatId = encodeURIComponent(encryptedChatId); // URL-encode the encrypted data\r\n        // navigate(`/top/chat-messages/${encodedChatId}`);\r\n        const path = `/top/chat-messages/${encodedChatId}`;\r\n        // Construct the URL for hash-based routing\r\n        const baseUrl = window.location.origin + window.location.pathname;\r\n        const fullPath = `${baseUrl}#${path}`;\r\n        window.open(fullPath, '_blank');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            <Pressable onPress={handleTransactionHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Transactions`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={transactionHistoryVisible} onClose={handleTransactionHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Transactions History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n\r\n                            <TransactionList\r\n                                displayedTransactions={displayedTransactions}\r\n                                handleChatPress={handleChatPress}\r\n                                selectedCustomerData={selectedCustomerData}\r\n                            />\r\n\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PaymentHistoryModal = () => {\r\n\r\n    const [paymentHistoryVisible, setPaymentHistoryVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const sortedPayments = selectedCustomerData.paymentsHistory\r\n        ? [...selectedCustomerData.paymentsHistory].sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA; // Sorts in descending order\r\n        })\r\n        : [];\r\n\r\n    const [displayedPayments, setDisplayedPayments] = useState(sortedPayments.slice(0, 5));\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    const loadMorePayments = () => {\r\n        if (loadingMore) return; // Prevent multiple loads\r\n\r\n        setLoadingMore(true);\r\n        const nextItems = sortedPayments.slice(\r\n            displayedPayments.length,\r\n            displayedPayments.length + 5\r\n        );\r\n\r\n        setTimeout(() => { // Simulate network request\r\n            setDisplayedPayments([...displayedPayments, ...nextItems]);\r\n            setLoadingMore(false);\r\n        }, 500); // Adjust the timeout as needed\r\n    };\r\n\r\n    const handlePaymentHistoryModalOpen = () => {\r\n        setDisplayedPayments(sortedPayments.slice(0, 5));\r\n        setPaymentHistoryVisible(true);\r\n\r\n    };\r\n\r\n    const handlePaymentHistoryModalClose = () => {\r\n        setPaymentHistoryVisible(false);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function formatDate(dateString) {\r\n        // Remove ' at ' from the date string\r\n        const cleanedDateString = dateString.replace(' at ', ' ');\r\n        const date = new Date(cleanedDateString);\r\n\r\n        if (isNaN(date.getTime())) {\r\n            // Date is not valid\r\n            console.error(\"Invalid Date:\", dateString);\r\n            return \"Invalid Date\";\r\n        }\r\n\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date.getFullYear();\r\n        const month = months[date.getMonth()];\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n\r\n        let hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n        // return `${year} ${month} ${day} at ${hours}:${minutes}${ampm}`;\r\n        return `${year} ${month} ${day}`;\r\n\r\n    }\r\n\r\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\r\n        return layoutMeasurement.height + contentOffset.y >= contentSize.height - 20;\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable onPress={handlePaymentHistoryModalOpen}>\r\n                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 10 : 14, color: '#0A78BE', textAlign: 'center', }} underline>\r\n                    {`View Payments History`}\r\n                </Text>\r\n            </Pressable>\r\n\r\n            <Modal isOpen={paymentHistoryVisible} onClose={handlePaymentHistoryModalClose} useRNModal>\r\n                <Modal.Content style={{ backgroundColor: 'white', borderRadius: 10 }}>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header style={{ backgroundColor: 'white', textAlign: 'center', fontSize: 18, fontWeight: 'bold', color: '#333' }}>\r\n                        Payment History\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ScrollView\r\n                            style={{ flex: 1, paddingHorizontal: 15, maxHeight: 500 }}\r\n                            onScroll={({ nativeEvent }) => {\r\n                                if (isCloseToBottom(nativeEvent)) {\r\n                                    loadMorePayments();\r\n                                }\r\n                            }}\r\n                            scrollEventThrottle={400} // Adjust as needed\r\n                        >\r\n                            {\r\n                                Array.isArray(sortedPayments) && sortedPayments.length > 0 ?\r\n                                    displayedPayments.map((payment, index) => (\r\n                                        <View key={index} style={{\r\n                                            marginBottom: 15,\r\n                                            backgroundColor: '#F8F9FF', // Card background color\r\n                                            borderRadius: 10, // Rounded corners for the card\r\n                                            shadowColor: '#000', // Shadow color\r\n                                            shadowOffset: { width: 0, height: 2 },\r\n                                            shadowOpacity: 0.1,\r\n                                            shadowRadius: 2,\r\n                                            elevation: 3, // Elevation for Android\r\n                                            padding: 15, // Padding inside the card\r\n                                            borderBottomWidth: 1,\r\n                                            borderBottomColor: '#eee',\r\n                                        }}>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Date: </Text>\r\n                                                <Text style={{ color: '#333' }}>\r\n                                                    {formatDate(sortedPayments[sortedPayments.length - 1 - index].date)}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Value: </Text>\r\n                                                <Text style={{ color: Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString().startsWith('-') ? '#FF0000' : '#16A34A' }}>\r\n                                                    ${Number(sortedPayments[sortedPayments.length - 1 - index].value).toLocaleString()}\r\n                                                </Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Vehicle Name: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleName}</Text>\r\n                                            </Text>\r\n\r\n                                            <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black', marginBottom: 5 }}>\r\n                                                <Text style={{ fontWeight: 'bold', color: '#0A78BE', }}>Reference Number: </Text>\r\n                                                <Text style={{ color: '#333' }}>{sortedPayments[sortedPayments.length - 1 - index].vehicleRef}</Text>\r\n                                            </Text>\r\n\r\n                                        </View>\r\n\r\n                                    )) :\r\n                                    <Text style={{ fontWeight: 'bold', alignSelf: 'center', }} italic>No history to show</Text>\r\n                            }\r\n                            <View style={{ height: 20, }}>\r\n                                {loadingMore && <Spinner size='sm' color=\"#7B9CFF\" />}\r\n                            </View>\r\n\r\n                        </ScrollView>\r\n\r\n\r\n\r\n                    </Modal.Body>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst CustomerProfileModal = () => {\r\n    const [customerModalVisible, setCustomerModalVisible] = useState(false);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n    const handleModalOpen = () => {\r\n        setCustomerModalVisible(true);\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setCustomerModalVisible(false);\r\n    }\r\n\r\n    const totalPaymentValue = selectedCustomerData.paymentsHistory\r\n        ? selectedCustomerData.paymentsHistory.reduce((sum, payment) => {\r\n            const value = Number(payment.value);\r\n            return sum + (isNaN(value) ? 0 : value);\r\n        }, 0)\r\n        : 0;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Pressable\r\n                onPress={handleModalOpen}\r\n                style={{ width: 'fit-content', }}\r\n            >\r\n                <Text style={{ fontWeight: 700, }} underline>{`${globalCustomerFirstName} ${globalCustomerLastName}`}</Text>\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={customerModalVisible}\r\n                onClose={handleModalClose}\r\n                size={'lg'}\r\n\r\n            >\r\n                <Modal.Content background={'white'}>\r\n\r\n                    <Modal.Body>\r\n\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                alignItems: 'center',\r\n                            }}>\r\n\r\n                            <View style={{\r\n                                borderRadius: 10,\r\n                                backgroundColor: '#F8F9FF',\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                alignItems: 'center',\r\n                                paddingBottom: 15,\r\n\r\n                            }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 24 : 26, color: '#0A78BE', }} selectable>\r\n                                    {`${globalCustomerFirstName} ${globalCustomerLastName}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', width: '45%', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.textZip}, ${selectedCustomerData.textStreet}, ${selectedCustomerData.city}, ${selectedCustomerData.country}`}\r\n                                </Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                        paddingTop: 20,\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n\r\n                                    <Text style={{ fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14, color: '#6F6F6F', textAlign: 'center', paddingTop: 2, }} selectable>\r\n                                        {`${selectedCustomerData.textPhoneNumber}`}\r\n                                    </Text>\r\n\r\n                                    {/* Separator */}\r\n\r\n                                    <View style={{\r\n                                        height: '100%', // Full height of the parent View\r\n                                        width: 2, // Width of the line\r\n                                        backgroundColor: '#DCDCDC', // Line color\r\n                                        marginHorizontal: 10, // Space on the sides of the line\r\n                                    }} />\r\n\r\n                                    <Hyperlink\r\n                                        linkDefault={true}\r\n                                        linkStyle={{ color: '#8A64F6', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 14 }}\r\n\r\n                                    >\r\n                                        <Text style={{ textAlign: 'center' }} selectable>\r\n                                            {selectedCustomerData.textEmail}\r\n                                        </Text>\r\n                                    </Hyperlink>\r\n\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        <View\r\n                            style={{\r\n                                width: screenWidth < mobileViewBreakpoint ? '100%' : '90%',\r\n                                justifyContent: 'center',\r\n                                marginTop: 50,\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'center',\r\n                            }}>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#009922', textAlign: 'center', }} selectable>\r\n                                    {`$${(totalPaymentValue).toLocaleString('en-US', {\r\n                                        minimumFractionDigits: 2,\r\n                                        maximumFractionDigits: 2,\r\n                                        useGrouping: true\r\n                                    })}`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Total Payment`}\r\n                                </Text>\r\n\r\n                                <PaymentHistoryModal />\r\n\r\n                            </View>\r\n\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#990000', textAlign: 'center', }} selectable>\r\n                                    {`$${selectedCustomerData.overBalance ? Number(selectedCustomerData.overBalance).toLocaleString('en-US', {\r\n                                        minimumFractionDigits: 2,\r\n                                        maximumFractionDigits: 2,\r\n                                        useGrouping: true\r\n                                    }) : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Overbalance`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontSize: 14, color: 'transparent', textAlign: 'center', }} underline selectable={false}>\r\n                                    {`-----`}\r\n                                </Text>\r\n\r\n\r\n                            </View>\r\n\r\n                            <View style={{ flex: 1, alignItems: 'center', }}>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 20 : 24, color: '#0029A3', textAlign: 'center', }} selectable>\r\n                                    {`${selectedCustomerData.transactions ? (selectedCustomerData.transactions).length : 0}`}\r\n                                </Text>\r\n                                <Text style={{ fontWeight: 'bold', fontSize: screenWidth < mobileViewBreakpoint ? 12 : 16, color: '#5E4343', textAlign: 'center', }}>\r\n                                    {`Transactions`}\r\n                                </Text>\r\n\r\n                                <TransactionHistoryModal />\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </Modal.Body>\r\n\r\n\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst ChatMessageHeader = () => {\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedVehicleData = useSelector((state) => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector((state) => state.selectedCustomerData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const invoiceData = useSelector((state) => state.invoiceData);\r\n    const carImageUrl = useSelector((state) => state.carImageUrl);\r\n    const dispatch = useDispatch();\r\n    const [reRenderKey, setReRenderKey] = useState(0);\r\n    const totalPriceCondition = selectedChatData.fobPrice && selectedChatData.jpyToUsd && selectedChatData.m3 && selectedChatData.freightPrice;\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const [selectedCurrencyExchange, setSelectedCurrencyExchange] = useState(selectedChatData && Object.keys(selectedChatData).length > 0 && (selectedChatData.selectedCurrencyExchange !== 'None' || selectedChatData.selectedCurrencyExchange !== 'USD') && selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : 'USD');\r\n\r\n\r\n    // const convertedCurrency = (baseValue) => {\r\n\r\n    //     if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\r\n    //         return `$${Math.round(Number(baseValue)).toLocaleString('en-US', { useGrouping: true })}`\r\n    //     }\r\n    //     if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n    //         return `€${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToEur))).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n    //         return `A$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToAud))).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n    //         return `£${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.jpyToGbp))).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n    //     if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n    //         return `C$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToJpy) + (Number(baseValue) * valueCurrency)) * Number(selectedChatData.currency.cadToJpy))).toLocaleString('en-US', { useGrouping: true })}`;\r\n    //     }\r\n\r\n    // }\r\n\r\n    const convertedCurrency = (baseValue) => {\r\n        if (selectedChatData.selectedCurrencyExchange == 'None' || selectedChatData.selectedCurrencyExchange == 'USD' || !selectedChatData.selectedCurrencyExchange) {\r\n            return `$${Math.round(Number(baseValue)).toLocaleString('en-US', { useGrouping: true })}`\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'EURO') {\r\n            return `€${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToEur)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'AUD') {\r\n            return `A$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToAud)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'GBP') {\r\n            return `£${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToGbp)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (selectedChatData.selectedCurrencyExchange == 'CAD') {\r\n            return `C$${(Math.round((Number(baseValue) * Number(selectedChatData.currency.usdToCad)))).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n\r\n    const freightCalculation = ((selectedChatData.m3 ? selectedChatData.m3 :\r\n        (selectedChatData.carData && selectedChatData.carData.dimensionCubicMeters ?\r\n            selectedChatData.carData.dimensionCubicMeters : 0)) *\r\n        Number(selectedChatData.freightPrice));\r\n\r\n    const inspectionPriceCondition = (selectedChatData.inspection === true ? Number(valueInspectionPrice) : 0);\r\n    const insurancePriceCondition = (selectedChatData.insurance === true ? Number(valueInsurancePrice) : 0);\r\n\r\n    const totalPriceCalculation = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)))\r\n        + freightCalculation\r\n        + inspectionPriceCondition\r\n        + insurancePriceCondition;\r\n\r\n    const fobPriceDollars = (selectedChatData.fobPrice ? selectedChatData.fobPrice :\r\n        (selectedChatData.carData && selectedChatData.carData.fobPrice ?\r\n            selectedChatData.carData.fobPrice : 0) *\r\n        (selectedChatData.jpyToUsd ? selectedChatData.jpyToUsd :\r\n            (selectedChatData.currency && selectedChatData.currency.jpyToUsd ?\r\n                selectedChatData.currency.jpyToUsd : 0)));\r\n\r\n    const carName = selectedChatData.carData && selectedChatData.carData.carName ? selectedChatData.carData.carName : (selectedChatData.vehicle && selectedChatData.vehicle.carName ? selectedChatData.vehicle.carName : '');\r\n\r\n    const freightPriceYen = freightCalculation / selectedChatData.currency.jpyToUsd;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setReRenderKey(reRenderKey + 1)\r\n        dispatch(setChatMessageBoxLoading(false));\r\n\r\n    }, [activeChatId]);\r\n\r\n    const CurrencySymbol = (value) => {\r\n        switch (value) {\r\n            case 'USD':\r\n                return '$ USD';\r\n\r\n            case 'EURO':\r\n                return '€ EURO';\r\n\r\n            case 'AUD':\r\n                return 'A$ AUD';\r\n\r\n            case 'GBP':\r\n                return '£ GBP';\r\n\r\n            case 'CAD':\r\n                return 'C$ CAD';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const UpdateCurrency = async (currencyValue) => {\r\n\r\n        const oldSelectedCurrency = selectedChatData.selectedCurrencyExchange ? selectedChatData.selectedCurrencyExchange : '$ USD';\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss.SSS');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n        if (oldSelectedCurrency !== currencyValue) {\r\n\r\n            await addDoc(collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'), {\r\n                text: `Transaction currency has been changed to ${CurrencySymbol(currencyValue)}`,\r\n                sender: email,\r\n                timestamp: formattedTime, // Using the fetched timestamp\r\n                ip: ip, // IP Address\r\n                ipCountry: ipCountry // Country of the IP Address\r\n            });\r\n\r\n            if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n                await setDoc(doc(projectExtensionFirestore, 'IssuedInvoice', selectedChatData.invoiceNumber), {\r\n                    selectedCurrencyExchange: currencyValue,\r\n                }, { merge: true });\r\n            }\r\n\r\n\r\n            await updateDoc(doc(projectExtensionFirestore, 'chats', selectedChatData.id), {\r\n                selectedCurrencyExchange: currencyValue,\r\n                lastMessage: `Transaction currency has been changed to ${CurrencySymbol(currencyValue)}`,\r\n                lastMessageDate: formattedTime,\r\n                customerRead: false,\r\n                read: true,\r\n                readBy: [email],\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const totalPriceCalculated = () => {\r\n        // Safely access deeply nested properties using optional chaining and provide default values\r\n        const additionalPrices = invoiceData?.paymentDetails?.additionalPrice || [];\r\n        const fobPrice = Number(invoiceData?.paymentDetails?.fobPrice || 0);\r\n        const freightPrice = Number(invoiceData?.paymentDetails?.freightPrice || 0);\r\n        const inspectionPrice = invoiceData?.paymentDetails?.inspectionIsChecked ? Number(invoiceData.paymentDetails.inspectionPrice || 0) : 0;\r\n        const usdToEur = Number(invoiceData?.currency?.usdToEur || 1);\r\n        const usdToJpy = Number(invoiceData?.currency?.usdToJpy || 1);\r\n        const jpyToAud = Number(invoiceData?.currency?.jpyToAud || 1);\r\n        const jpyToGbp = Number(invoiceData?.currency?.jpyToGbp || 1);\r\n        const cadToJpy = Number(invoiceData?.currency?.cadToJpy || 1);\r\n\r\n        const totalAdditionalPrice = additionalPrices.reduce((total, price) => {\r\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const baseTotal = fobPrice + freightPrice + inspectionPrice + totalAdditionalPrice + (invoiceData?.paymentDetails?.incoterms == 'CIF' ? Number(invoiceData.paymentDetails.insurancePrice) : 0);\r\n\r\n        // Calculating total in different currencies\r\n        const totalUsd = baseTotal;\r\n        const totalEur = baseTotal * usdToEur;\r\n        const totalAud = baseTotal * usdToJpy * jpyToAud;\r\n        const totalGbp = baseTotal * usdToJpy * jpyToGbp;\r\n        const totalCad = baseTotal * usdToJpy * cadToJpy;\r\n\r\n        switch (invoiceData?.selectedCurrencyExchange) {\r\n            case 'EURO':\r\n                return `€${Math.round(Number(totalEur)).toLocaleString('en-US', { useGrouping: true })}`;\r\n            case 'AUD':\r\n                return `A$${Math.round(Number(totalAud)).toLocaleString('en-US', { useGrouping: true })}`;\r\n            case 'GBP':\r\n                return `£${Math.round(Number(totalGbp)).toLocaleString('en-US', { useGrouping: true })}`;\r\n            case 'CAD':\r\n                return `C$${Math.round(Number(totalCad)).toLocaleString('en-US', { useGrouping: true })}`;\r\n            case 'None':\r\n            case 'USD':\r\n            default:\r\n                return `$${Math.round(Number(totalUsd)).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const CurrencyPopover = () => {\r\n\r\n\r\n        const currencies = [\r\n            { label: '$ USD', value: 'USD' },\r\n            { label: '€ EURO', value: 'EURO' },\r\n            { label: 'A$ AUD', value: 'AUD' },\r\n            { label: '£ GBP', value: 'GBP' },\r\n            { label: 'C$ CAD', value: 'CAD' },\r\n        ];\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Box>\r\n                <Popover\r\n                    trigger={(triggerProps) => {\r\n                        return (\r\n                            <NativePressable {...triggerProps}\r\n                                marginLeft={'5px'}\r\n                                width=\"auto\"\r\n                                bg=\"#303030\"\r\n                                _hover={{\r\n                                    bg: '#595959',\r\n                                }}\r\n                                borderColor={'#D9D9D9'}\r\n                                borderWidth={1}\r\n                                borderRadius={'5px'}\r\n                                flexDirection={'row'}\r\n                            >\r\n                                <Text style={{ marginLeft: 1, textAlign: 'center ', color: '#E4DCAC', fontWeight: 'bold', }}>{CurrencySymbol(selectedCurrencyExchange)}</Text>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        alignSelf: 'center',\r\n                                        marginLeft: 24,\r\n                                        marginRight: 2,\r\n                                    }}>\r\n                                    <FontAwesome name='caret-down' size='12' color='#E4DCAC' />\r\n                                </View>\r\n                            </NativePressable>\r\n                        );\r\n                    }}\r\n                >\r\n                    <Popover.Content width=\"85px\">\r\n                        <Box backgroundColor={'#303030'}>\r\n                            <VStack space={1}>\r\n                                {currencies.map((currency) => (\r\n                                    <NativePressable\r\n                                        key={currency.value}\r\n                                        onPress={() => {\r\n                                            setSelectedCurrencyExchange(currency.value);\r\n                                            UpdateCurrency(currency.value)\r\n                                            // Perform additional logic if necessary, e.g., updating global state\r\n                                        }}\r\n                                        _hover={{\r\n                                            bg: '#595959',\r\n                                        }}\r\n                                    >\r\n                                        <Text fontSize=\"sm\" textAlign={'center'} color='#E4DCAC' fontWeight={'bold'}>\r\n                                            {currency.label}\r\n                                        </Text>\r\n                                    </NativePressable>\r\n                                ))}\r\n                            </VStack>\r\n                        </Box>\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{\r\n            flex: 1,\r\n            alignSelf: 'flex-start',\r\n            flexDirection: 'row',\r\n        }}>\r\n\r\n\r\n            {carImageUrl ? (\r\n                <FastImage\r\n                    source={{ uri: carImageUrl, priority: FastImage.priority.normal }}\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        margin: 10,\r\n                    }}\r\n                    resizeMode={FastImage.resizeMode.stretch}\r\n                />\r\n            ) : (\r\n                <View\r\n                    style={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        borderRadius: 30,\r\n                        alignSelf: 'center',\r\n                        backgroundColor: '#e0e0e0',\r\n                        marginRight: 10,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            <View style={{ alignSelf: 'center', paddingRight: 10, }}>\r\n                <Text style={{ fontWeight: 700, color: '#0A78BE', }}>{carName}</Text>\r\n\r\n                <CustomerProfileModal />\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 1, color: '#8D7777', }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.referenceNumber ? selectedChatData.carData.referenceNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{`$${selectedChatData.offerPrice ? selectedChatData.offerPrice : 0}`}</Text> */}\r\n                <TimelineStatus data={statusData} />\r\n\r\n            </View>\r\n\r\n            {/* <HorizontalTimeline /> */}\r\n\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 10, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.chassisNumber ? selectedChatData.carData.chassisNumber : 'Chassis N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.modelCode ? selectedChatData.carData.modelCode : 'Model Code N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.mileage\r\n                            ? Number(selectedChatData.carData.mileage).toLocaleString('en-US')\r\n                            : 'Mileage N/A'} km\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.fuel ? selectedChatData.carData.fuel : 'Fuel N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, fontSize: 12, paddingTop: 0, marginLeft: 2, }}>\r\n                        {selectedChatData.carData && selectedChatData.carData.transmission ? selectedChatData.carData.transmission : 'Transmission N/A'}\r\n                    </Text>\r\n                </View>\r\n\r\n            </View>\r\n            <View style={{ alignSelf: 'center', justifyContent: 'center', paddingLeft: 15, }}>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontSize: 18, }} bold>Total Price: </Text>\r\n                    <Text selectable style={{ fontSize: 18, color: \"#16A34A\", textAlign: 'right', }} bold>\r\n                        {`${convertedCurrency(totalPriceCalculation)}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2, }}>\r\n                        ({`¥${Number(\r\n                            totalPriceCalculation /\r\n                            ((selectedChatData && selectedChatData.jpyToUsd) ? Number(selectedChatData.jpyToUsd) :\r\n                                (selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd) ? selectedChatData.currency.jpyToUsd :\r\n                                    0)\r\n                        ).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                    <View style={{ marginTop: 3 }}>\r\n                        {!selectedChatData.isCancelled && <CurrencyPopover />}\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>FOB Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${convertedCurrency(fobPriceDollars)}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.fobPrice ? selectedChatData.fobPrice : Number(selectedChatData.carData && selectedChatData.carData.fobPrice ? selectedChatData.carData.fobPrice : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, }}>Freight Price: </Text>\r\n                    <Text selectable style={{ fontWeight: 700, color: \"#8D7777\", textAlign: 'right', }}>\r\n                        {`${convertedCurrency(freightCalculation)}`}\r\n                    </Text>\r\n                    <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 2, marginLeft: 2, }}>\r\n                        ({`${(selectedChatData.freightPrice ? freightPriceYen : Number(selectedChatData.carData && selectedChatData.carData.freightPrice ? freightPriceYen : 0)).toLocaleString('en-US', { style: 'currency', currency: 'JPY', minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text selectable style={{ fontWeight: 700, textAlign: 'right', }}>\r\n                        {`${selectedChatData.country && selectedChatData.port ? `${selectedChatData.country} / ${selectedChatData.port}` : 'N/A'}`}\r\n                    </Text>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row', }}>\r\n                    <Text style={{ fontWeight: 700, color: \"#16A34A\", }}>{selectedChatData.insurance ? 'CIF' : 'C&F'}\r\n                        {selectedChatData.inspection ? ` + Inpection[${selectedChatData.inspectionName}]` : ''}</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                selectedVehicleData.reservedTo !== selectedCustomerData.textEmail) ?\r\n                null :\r\n                (<View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 2, }}>\r\n                    {(selectedChatData.stepIndicator.value == 1 || selectedChatData.stepIndicator.value == 2) &&\r\n                        <>\r\n                            <ProfitCalculator />\r\n\r\n                            <TransactionButton\r\n                                key={'Issue Proforma Invoice'}\r\n                                title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : selectedChatData.stepIndicator.value == 2 ? 'Update Invoice' : ''}\r\n                                colorHoverIn={'#0f7534'}\r\n                                colorHoverOut={'#16A34A'}\r\n                                transactionValue={2}\r\n                                buttonValue={2}\r\n                                iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />\r\n\r\n                            <PreviewInvoice />\r\n\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                    {totalPriceCalculated()}\r\n                                </Text>\r\n                                <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                    ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                </Text>\r\n                            </View>\r\n                        </>\r\n                    }\r\n\r\n                    {(selectedChatData.stepIndicator.value == 3) &&\r\n\r\n\r\n                        (\r\n                            <View style={{ flexDirection: 'row', paddingRight: 10, paddingTop: 2, }}>\r\n                                {\r\n                                    selectedChatData.isCancelled == true && (\r\n                                        <View style={{ flexDirection: 'row', paddingRight: 10, }}>\r\n                                            <View style={{ paddingLeft: 10, }}>\r\n                                                <ReopenTransaction />\r\n                                            </View>\r\n                                        </View>\r\n                                    )\r\n                                }\r\n                                <View style={{ paddingLeft: 10, }}>\r\n                                    {!selectedChatData.isCancelled && <ProfitCalculator />}\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Input Payment'}\r\n                                        title={'Input Payment'}\r\n                                        colorHoverOut={'#FF0000'}\r\n                                        colorHoverIn={'#800101'}\r\n                                        transactionValue={3}\r\n                                        buttonValue={4}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    <PreviewInvoice />\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row' }}>\r\n                                        <Text style={{ fontWeight: 700, fontSize: 18 }}>Final Price: </Text>\r\n                                        <Text selectable style={{ fontWeight: 700, fontSize: 18, color: \"#FF0000\", textAlign: 'right' }}>\r\n                                            {(totalPriceCalculated())}\r\n                                        </Text>\r\n                                        <Text selectable style={{ fontWeight: 400, fontSize: 12, color: \"#8D7777\", paddingTop: 4, marginLeft: 2 }}>\r\n                                            ({`¥${(invoiceData && invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount && selectedChatData && selectedChatData.currency && selectedChatData.currency.jpyToUsd ? (Number(invoiceData.paymentDetails.totalAmount.replace(/,/g, '')) / Number(selectedChatData.currency.jpyToUsd)) : 0).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`})\r\n                                        </Text>\r\n                                    </View>}\r\n                                </View>\r\n\r\n                                <View style={{ paddingLeft: 10, }}>\r\n\r\n                                    {!selectedChatData.isCancelled && <TransactionButton\r\n                                        key={'Issue Proforma Invoice'}\r\n                                        title={selectedChatData.stepIndicator.value == 1 ? 'Issue Proforma Invoice' : 'Update Invoice'}\r\n                                        colorHoverIn={'#0f7534'}\r\n                                        colorHoverOut={'#16A34A'}\r\n                                        transactionValue={2}\r\n                                        buttonValue={2}\r\n                                        iconActive={<FontAwesome5 name=\"file-invoice-dollar\" color=\"#1C2B33\" size={14} />} />}\r\n\r\n                                    {!selectedChatData.isCancelled && <ExtendDueDateButton />}\r\n\r\n                                    {!selectedChatData.isCancelled && <CancelTransaction />}\r\n\r\n                                    {!selectedChatData.isCancelled && <View style={{ flexDirection: 'row', }}>\r\n                                        {invoiceData && invoiceData.bankInformations && invoiceData.bankInformations.dueDate &&\r\n                                            <>\r\n                                                <Text style={{ fontWeight: 700, fontSize: 14, }}>Due Date: </Text>\r\n                                                <Text selectable style={{ fontWeight: 700, fontSize: 14, textAlign: 'right', color: '#FF0000', }}>\r\n                                                    {\r\n                                                        invoiceData.bankInformations.dueDate\r\n                                                            ? new Date(invoiceData.bankInformations.dueDate).toLocaleDateString(undefined, {\r\n                                                                year: 'numeric',\r\n                                                                month: 'long',\r\n                                                                day: 'numeric',\r\n                                                            })\r\n                                                            : 'Invalid Date'\r\n                                                    }\r\n                                                </Text>\r\n                                            </>}\r\n                                    </View>}\r\n\r\n                                </View>\r\n                            </View>)\r\n                    }\r\n                </View>)\r\n\r\n            }\r\n\r\n            <GenerateCustomInvoice />\r\n\r\n            <TransactionModal />\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\n\r\nconst ReadByListModal = ({ userEmail, handleReadByListModalClose }) => {\r\n\r\n    const readByListModalVisible = useSelector((state) => state.readByListModalVisible)\r\n    const selectedChatData = useSelector((state) => state.selectedChatData)\r\n    // const [email, setEmail] = useState(projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '');\r\n\r\n    const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={readByListModalVisible}\r\n            onClose={() => handleReadByListModalClose()}\r\n            useRNModal\r\n            size={'xs'}\r\n        >\r\n            <Modal.Content borderRadius={0} style={{ padding: 15, backgroundColor: '#f8f8f8', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5 }}>\r\n                <Modal.CloseButton />\r\n\r\n                <Modal.Header style={{ fontSize: 22, fontWeight: '600', textAlign: 'center', color: '#333', }}>Read List</Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {\r\n                        selectedChatData.readBy.length > 0 ? (\r\n                            <ScrollView style={{ maxHeight: 250, borderRadius: 10 }}>\r\n                                {/* Sort and map over the readBy list */}\r\n                                {\r\n                                    [...selectedChatData.readBy]\r\n                                        .sort((a, b) => a === email ? -1 : b === email ? 1 : 0)\r\n                                        .map(item => (\r\n                                            <View key={item} style={{ flex: 1, flexDirection: 'row', alignItems: 'center', marginVertical: 8, borderBottomWidth: 0.5, borderColor: '#ddd', paddingBottom: 8 }}>\r\n                                                {item === 'RMJ-Bot' ?\r\n                                                    <FontAwesome5 name=\"robot\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} /> :\r\n                                                    <FontAwesome name=\"user-circle\" size={24} color=\"#4A90E2\" style={{ marginRight: 12 }} />}\r\n                                                <View style={{ flex: 1 }}> {/* Ensure text has its own block and can wrap */}\r\n                                                    <Text style={{ color: '#555', flexWrap: 'wrap' }}>{email === item ? 'You' : item}</Text>\r\n                                                </View>\r\n                                            </View>\r\n                                        ))\r\n                                }\r\n                            </ScrollView>\r\n                        ) : (\r\n                            <Text style={{ textAlign: 'center', color: 'grey', fontSize: 16 }}>No one has read this message yet.</Text>\r\n                        )\r\n                    }\r\n                </Modal.Body>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nconst ImagePreviewModal = ({ isVisible, onClose, imageUrl }) => {\r\n    return (\r\n        <Modal isOpen={isVisible} onClose={onClose} size=\"full\" useRNModal>\r\n            <Modal.Content\r\n                style={{\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    width: '80%',\r\n                    height: '80%',\r\n                    alignSelf: 'center',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Modal.CloseButton />\r\n                <FastImage\r\n                    source={{ uri: imageUrl, priority: FastImage.priority.normal }}\r\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\r\n                    resizeMode={FastImage.resizeMode.contain}\r\n                />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nconst HoverablePressable = ({ url, printComponent }) => {\r\n    const [isHoveredDownload, setIsHoveredDownload] = useState(false);\r\n    const [isHoveredPrint, setIsHoveredPrint] = useState(false);\r\n    const baseStyle = {\r\n        marginRight: 10,\r\n        borderRadius: 16,\r\n        borderWidth: 1,\r\n        borderColor: 'white',\r\n        width: 26,\r\n        height: 26,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const hoverStyle = {\r\n        backgroundColor: '#ddd', // Example hover style\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip label=\"Download\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredDownload ? '#424649' : 'transparent',\r\n                    }}\r\n                    onPress={async () => {\r\n                        await Linking.openURL(url);\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredDownload(true)}\r\n                    onMouseLeave={() => setIsHoveredDownload(false)}\r\n                >\r\n                    <MaterialCommunityIcons name=\"download\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip>\r\n\r\n            {/* <Tooltip label=\"Print\" openDelay={200} bgColor={'white'} _text={{ color: '#1C2B33', }}>\r\n                <Pressable\r\n                    style={{\r\n                        marginRight: 8,\r\n                        borderRadius: 16,\r\n                        width: 32,\r\n                        height: 32,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor: isHoveredPrint ? '#424649' : 'transparent',\r\n                    }}\r\n                    onMouseEnter={() => setIsHoveredPrint(true)}\r\n                    onMouseLeave={() => setIsHoveredPrint(false)}\r\n                    onPress={printComponent}\r\n                >\r\n                    <MaterialCommunityIcons name=\"printer\" size={20} color={'#F1F1F1'} />\r\n                </Pressable>\r\n            </Tooltip> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst DocumentPreviewModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedFileUrl = useSelector((state) => state.selectedFileUrl);\r\n    const pdfViewerModalVisible = useSelector((state) => state.pdfViewerModalVisible);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [iframeKey, setIframeKey] = useState(0);\r\n\r\n\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024153002.887%2FDAILY%20REPORT%202024-01-29.pdf?alt=media&token=88b7be9b-17ef-48d3-b5b3-6f7f0d317b7c'\r\n    const urlDocx = 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/ChatFiles%2Fchat_2023090239_marcvan14%40gmail.com%2FC-HUB_01312024170117.701%2FDAILY%20REPORT%202024-01-29.docx?alt=media&token=9bf45632-e192-45bf-8b40-9fd5cdb9368e';\r\n    const [isLoading, setLoading] = useState(true); // Loading state\r\n\r\n    // console.log(`https://docs.google.com/viewer?url=${encodeURIComponent(urlDocx)}&embedded=true`);\r\n\r\n\r\n    const handleIframeLoad = () => {\r\n        setLoading(false); // Set loading to false when iframe content is loaded\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n\r\n        dispatch(setPdfViewerModalVisible(false))\r\n        dispatch(setSelectedFileUrl(''))\r\n        setLoading(true);\r\n        globalSelectedFileType = '';\r\n        globalSelectedPDFUrl = '';\r\n    }\r\n\r\n    const printIframe = () => {\r\n        // const iframe = document.getElementById('documentIframe');\r\n        // iframe.contentWindow.print();\r\n        const printWindow = window.open(`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`, '_blank');\r\n        printWindow.focus();\r\n        printWindow.print();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n\r\n            if (isLoading) {\r\n                console.log(\"Iframe is taking too long to load. Attempting to reload.\");\r\n                console.log(\"Current URL:\", selectedFileUrl);\r\n                console.log(\"Current Global URL:\", globalSelectedPDFUrl);\r\n\r\n                setIsLoading(false);\r\n                setIframeKey(prevKey => prevKey + 1);\r\n                dispatch(setSelectedFileUrl(globalSelectedPDFUrl));\r\n\r\n            }\r\n\r\n        }, 5000); // Timeout set to 5 seconds\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [isLoading,]);\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={pdfViewerModalVisible}\r\n            onClose={() => {\r\n                handleModalClose();\r\n            }\r\n            } size=\"xl\">\r\n            <Modal.Content>\r\n                {globalSelectedFileType !== 'pdf' ?\r\n\r\n                    (<>\r\n                        {isLoading && (\r\n                            <View style={{\r\n                                top: 0,\r\n                                bottom: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                position: 'absolute',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                height: '700px'  // Same height as the iframe for consistent layout\r\n                            }}>\r\n                                <Spinner\r\n                                    animating\r\n                                    size=\"lg\"\r\n                                    color={'#7B9CFF'}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {selectedFileUrl !== '' &&\r\n                            <>\r\n                                {!isLoading &&\r\n                                    <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n                                        <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                    </View>\r\n                                }\r\n\r\n                                <iframe\r\n                                    key={iframeKey}\r\n                                    src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                    id='documentIframe'\r\n                                    style={{ width: '100%', height: '700px' }}\r\n                                    title=\"Document Viewer\"\r\n                                    onLoad={() => {\r\n                                        handleIframeLoad();\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </>\r\n                    )\r\n\r\n                    : (\r\n                        <>\r\n                            {isLoading && (\r\n                                <View style={{\r\n                                    top: 0,\r\n                                    bottom: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    position: 'absolute',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '700px'  // Same height as the iframe for consistent layout\r\n                                }}>\r\n                                    <Spinner\r\n                                        animating\r\n                                        size=\"lg\"\r\n                                        color={'#7B9CFF'}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            {selectedFileUrl !== '' &&\r\n                                (\r\n                                    screenWidth < mobileViewBreakpoint ?\r\n                                        (<>\r\n                                            {!isLoading &&\r\n                                                <View style={{ flexDirection: 'row', width: '100%', height: 57, borderRadius: 0, backgroundColor: '#323639', justifyContent: 'flex-end', alignItems: 'center', }}>\r\n\r\n                                                    <HoverablePressable url={globalSelectedPDFUrl} printComponent={printIframe} />\r\n                                                </View>\r\n                                            }\r\n\r\n                                            <iframe\r\n                                                key={iframeKey}\r\n                                                src={`https://docs.google.com/viewer?url=${encodeURIComponent(selectedFileUrl)}&embedded=true`}\r\n                                                id='mobilePdfIframe'\r\n                                                style={{ width: '100%', height: '700px' }}\r\n                                                title=\"PDF Viewer\"\r\n                                                onLoad={handleIframeLoad}\r\n                                            />\r\n                                        </>) :\r\n                                        (<iframe\r\n                                            src={selectedFileUrl}\r\n                                            style={{ width: '100%', height: '700px' }}\r\n                                            title=\"PDF Viewer\"\r\n                                            onLoad={handleIframeLoad} // Event when iframe has loaded\r\n                                        />)\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n\r\n\r\n                }\r\n\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nconst ChatMessageBox = ({ activeButtonValue, userEmail }) => {\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const selectedChatData = useSelector((state) => state.selectedChatData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const loadMoreMessagesLoading = useSelector((state) => state.loadMoreMessagesLoading);\r\n    const noMoreMessagesData = useSelector((state) => state.noMoreMessagesData);\r\n    const [isEyeHovered, setIsEyeHovered] = useState(false);\r\n    const flatListRef = useRef();\r\n    const [hoveredImageIndex, setHoveredImageIndex] = useState(null);\r\n\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\r\n    const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n    const screenHeight = Dimensions.get('window').height;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // Store the current path\r\n        const handlePopState = () => {\r\n            if (screenWidth < mobileViewBreakpoint && activeChatId !== '') {\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setActiveChatId(''));\r\n                navigate('/top/chat-messages');\r\n            }\r\n        };\r\n\r\n        // Add event listener when component mounts or when dependencies change\r\n        window.addEventListener('popstate', handlePopState);\r\n\r\n        // Cleanup function to remove event listener when component unmounts or dependencies change\r\n        return () => {\r\n            window.removeEventListener('popstate', handlePopState);\r\n        };\r\n\r\n    }, []);\r\n\r\n    const openPreview = (index) => {\r\n        setSelectedImageIndex(index);\r\n        setIsPreviewVisible(true);\r\n    };\r\n\r\n    const closePreview = () => {\r\n        setIsPreviewVisible(false);\r\n        setSelectedImageIndex(null);\r\n    };\r\n\r\n    const handleImageMessageMouseEnter = (index) => {\r\n        setHoveredImageIndex(index);\r\n    };\r\n\r\n    const handleImageMessageMouseLeave = () => {\r\n        setHoveredImageIndex(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [read, setRead] = useState(selectedChatData.read);\r\n\r\n    const handleReadByListModalOpen = () => {\r\n        dispatch(setReadByListModalVisible(true));\r\n    };\r\n\r\n    const handleReadByListModalClose = () => {\r\n        dispatch(setReadByListModalVisible(false));\r\n    };\r\n\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 2000,\r\n                    useNativeDriver: true\r\n                })\r\n            ])\r\n        ).start();\r\n    }, [selectedChatData, chatMessagesData, animatedValue]);\r\n\r\n    const borderColor = animatedValue.interpolate({\r\n        inputRange: [0, 0.25, 0.5, 0.75, 1],\r\n        outputRange: [\r\n            'rgb(255, 100, 100)', // Red\r\n            'rgb(100, 255, 100)', // Green\r\n            'rgb(100, 100, 255)', // Blue\r\n            'rgb(255, 255, 100)', // Yellow\r\n            'rgb(255, 100, 255)'  // Magenta\r\n        ]\r\n    });\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <>\r\n                {!noMoreMessagesData && (\r\n                    <View style={{ paddingVertical: 20, height: 60, }}>\r\n                        {loadMoreMessagesLoading && (\r\n                            <Spinner\r\n                                animating\r\n                                size=\"sm\"\r\n                                color={'#7B9CFF'}\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </>\r\n\r\n        );\r\n    };\r\n\r\n    const handleLoadMoreMessages = async () => {\r\n        dispatch(setLoadMoreMessagesLoading(true));\r\n        dispatch(setNoMoreMessagesData(false));\r\n\r\n        let nextQuery;\r\n        if (!globalMessagesLastVisible) {\r\n            // No more data to load or globalLastVisible is undefined\r\n            dispatch(setLoadMoreMessagesLoading(false));\r\n            dispatch(setNoMoreMessagesData(true));\r\n        }\r\n\r\n        else {\r\n            dispatch(setLoadMoreMessagesLoading(true));\r\n            dispatch(setNoMoreMessagesData(false));\r\n\r\n            nextQuery = query(\r\n                collection(projectExtensionFirestore, 'chats', selectedChatData.id, 'messages'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(globalMessagesLastVisible),\r\n                limit(10)\r\n            );\r\n            try {\r\n                const unsubscribe = onSnapshot(nextQuery, (snapshot) => {\r\n                    if (snapshot.empty) {\r\n                        // Handle the case when there's no more data\r\n                        console.log(\"No more data to load\");\r\n                        setTimeout(() => {\r\n                            dispatch(setLoadMoreMessagesLoading(false));\r\n                            dispatch(setNoMoreMessagesData(true));\r\n                            globalMessagesLastVisible = null;\r\n                        }, 0);  // Delay setting loading and no more data flags\r\n                        return;\r\n                    }\r\n\r\n                    const chatsData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        chatsData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Append new data to the existing list\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setChatMessagesData([...chatMessagesData, ...chatsData]));\r\n                        dispatch(setLoadMoreMessagesLoading(false));\r\n                        globalMessagesLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n                    }, 0);\r\n\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data from Firebase:', error);\r\n                setTimeout(() => dispatch(setLoadMoreMessagesLoading(false)), 0);  // Ensure loading is set to false even if there's an error\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const updateChatToRead = async () => {\r\n        const email = projectControlAuth.currentUser ? projectControlAuth.currentUser.email : '';\r\n        const docRef = doc(projectExtensionFirestore, \"chats\", activeChatId);\r\n        if (email !== '') {\r\n            try {\r\n\r\n                await updateDoc(docRef, {\r\n                    read: true,\r\n                    readBy: arrayUnion(email),\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error updating document: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeChatId == selectedChatData.id) {\r\n            if (selectedChatData.stepIndicator.value !== activeButtonValue && activeButtonValue !== 0) {\r\n                dispatch(setChatMessagesData([]));\r\n                dispatch(setMessageTextInputValue(''));\r\n                dispatch(setActiveChatId(''));\r\n            }\r\n            else {\r\n                updateChatToRead();\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [selectedChatData]);\r\n\r\n    const handlePreviewInvoiceModalOpen = () => {\r\n        dispatch(setPreviewInvoiceVisible(true));\r\n    };\r\n\r\n    const formatDate = (timestamp) => {\r\n        // Parse the original timestamp\r\n        // Expected format: \"2024/01/15 at 12:17:50\"\r\n        const parts = timestamp.match(/(\\d{4})\\/(\\d{2})\\/(\\d{2}) at (\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (!parts) return timestamp; // Return original if parsing fails\r\n\r\n        // Create a new Date object\r\n        const date = new Date(parts[1], parts[2] - 1, parts[3], parts[4], parts[5], parts[6]);\r\n\r\n        // Format month names\r\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // Convert to 12-hour format and determine AM or PM\r\n        const hours = date.getHours();\r\n        const isPM = hours >= 12;\r\n        const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12 AM\r\n        const amPm = isPM ? 'PM' : 'AM';\r\n\r\n        // Construct the new format with year at the beginning\r\n        return `${date.getFullYear().toString().substr(-2)} ${months[date.getMonth()]} ${date.getDate()}, ${formattedHours}:${date.getMinutes().toString().padStart(2, '0')} ${amPm}`;\r\n    };\r\n\r\n    const extractUsernameFromEmail = (email) => {\r\n        const [username] = email.split('@');\r\n        return username;\r\n    };\r\n\r\n\r\n    const breakUrl = (url, maxUrlLength = 30) => {\r\n        let brokenUrl = '';\r\n        while (url.length > 0) {\r\n            brokenUrl += url.substring(0, maxUrlLength);\r\n            if (url.length > maxUrlLength) {\r\n                brokenUrl += '\\u200B'; // Zero-width space\r\n            }\r\n            url = url.substring(maxUrlLength);\r\n        }\r\n        return brokenUrl;\r\n    };\r\n\r\n    const isUrl = (text) => {\r\n        // Simple URL check\r\n        const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!urlPattern.test(text);\r\n    };\r\n\r\n    const handleLinkPress = (url) => {\r\n        Linking.canOpenURL(url).then(supported => {\r\n            if (supported) {\r\n                Linking.openURL(url);\r\n            } else {\r\n                console.log(\"Don't know how to open URI: \" + url);\r\n            }\r\n        });\r\n    };\r\n\r\n    const cleanUrl = (url) => {\r\n        // Removing Zero Width Space and other potential invisible characters\r\n        return url.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    };\r\n\r\n\r\n    const renderItemText = (isGlobalCustomerSender, text) => {\r\n        const urlPattern = new RegExp('(https?:\\\\/\\\\/[^\\\\s]+)', 'g');\r\n        let segments = text.split(urlPattern);\r\n\r\n        const insertBreaks = (str, n) => {\r\n            // Inserts a zero-width space every 'n' characters in 'str'\r\n            let result = '';\r\n            while (str.length > 0) {\r\n                result += str.substring(0, n) + '\\u200B';\r\n                str = str.substring(n);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return segments.map((segment, index) => {\r\n            const segmentWithBreaks = segment.length > 30 && !segment.includes(' ') ? insertBreaks(segment, 30) : segment;\r\n\r\n            if (isUrlForText(segment)) {\r\n                // Apply breaks for long URLs\r\n                return (\r\n                    <Pressable key={index} onPress={() => handleLinkPress(segment)}>\r\n                        <Text\r\n                            selectable\r\n                            style={{\r\n                                fontWeight: '400',\r\n                                color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                fontSize: 16,\r\n                                flexShrink: 1,\r\n                                textDecorationLine: 'underline',\r\n                                flexWrap: 'wrap',\r\n                            }}\r\n                        >\r\n                            {segmentWithBreaks}\r\n                        </Text>\r\n                    </Pressable>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Text\r\n                        selectable\r\n                        key={index}\r\n                        style={{\r\n                            fontWeight: '400',\r\n                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 14 : 16,\r\n                            flexShrink: 1,\r\n                            flexWrap: 'wrap',\r\n                        }}\r\n                    >\r\n                        {segmentWithBreaks}\r\n                    </Text>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const iconSize = 24;\r\n        const lowerFileName = fileName.toLowerCase();\r\n\r\n        if (lowerFileName.endsWith('.pdf')) {\r\n            return <MaterialIcons name={'picture-as-pdf'} size={iconSize} color=\"#fca19a\" />;\r\n        }\r\n        // Add more conditions for other file types as needed\r\n        // Example for .docx files\r\n        if (lowerFileName.endsWith('.docx') || lowerFileName.endsWith('.doc')) {\r\n            return <MaterialCommunityIcons name={'microsoft-word'} size={iconSize} color=\"#7B9CFF\" />;\r\n        }\r\n        if (lowerFileName.endsWith('.xlsx') || lowerFileName.endsWith('.xls') || lowerFileName.endsWith('.csv')) {\r\n            return <MaterialCommunityIcons name={'microsoft-excel'} size={iconSize} color=\"#6db375\" />;\r\n        }\r\n\r\n        if (lowerFileName.endsWith('.rar') || lowerFileName.endsWith('.zip')) {\r\n            return <FastImage\r\n                source={{ uri: require('../../assets/rar_icon.png'), priority: FastImage.priority.high }}\r\n                style={{\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.cover}\r\n            />;\r\n        }\r\n        // Default icon if no specific type is matched\r\n        return <MaterialIcons name=\"insert-drive-file\" size={iconSize} color=\"#b3afaf\" />;\r\n    };\r\n\r\n    const isUrlForText = (text) => {\r\n        const urlPattern = new RegExp('^(http://www\\\\.|https://www\\\\.|http://|https://)[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$');\r\n        return urlPattern.test(text);\r\n    }\r\n\r\n    const renderItem = ({ item, index }) => {\r\n        const isGlobalCustomerSender = item.sender === globalCustomerId;\r\n        const isLastMessage = index === 0; // Since the list is inverted, the first item is actually the last message\r\n        const isHovered = hoveredImageIndex === index;\r\n        const textFontSize = screenWidth < mobileViewBreakpoint ? 14 : 16;\r\n\r\n        return (\r\n            <View style={{\r\n                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                width: '100%',\r\n                height: '100%',\r\n                alignSelf: isGlobalCustomerSender ? 'flex-start' : 'flex-end',\r\n                marginVertical: 4,\r\n                maxWidth: screenWidth < mobileViewBreakpoint ? '80%' : '60%', // Max width for long messages\r\n                // borderWidth: 1,\r\n                // borderColor: 'red',\r\n            }}>\r\n                {item.messageType == 'IssuedInvoice' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Pressable onPress={handlePreviewInvoiceModalOpen}>\r\n                                    <Text underline selectable style={{\r\n                                        fontWeight: 400,\r\n                                        color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                        fontSize: textFontSize,\r\n                                    }}>\r\n                                        {item.text.trim()}\r\n                                    </Text>\r\n                                </Pressable>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>\r\n                }\r\n\r\n\r\n                {item.messageType == 'InputPayment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <Animated.View style={{\r\n                                padding: 7,\r\n                                flex: 1,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                borderWidth: 3,\r\n                                borderColor: borderColor,\r\n                            }}>\r\n                                <Text selectable style={{\r\n                                    fontWeight: 400,\r\n                                    color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                    fontSize: textFontSize,\r\n                                }}>\r\n                                    {item.text.trim()}\r\n                                </Text>\r\n                            </Animated.View>\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp, sender email, IP, and country */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: 'gray',\r\n                            fontSize: 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'attachment' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    marginBottom: 5,\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onPress={() => {\r\n                                            if (item.file.name.endsWith('.pdf')) {\r\n                                                globalSelectedFileType = 'pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n                                            }\r\n                                            else {\r\n                                                globalSelectedFileType = 'not-pdf'\r\n                                                dispatch(setPdfViewerModalVisible(true));\r\n                                                dispatch(setSelectedFileUrl(item.file.url));\r\n                                                globalSelectedPDFUrl = item.file.url;\r\n\r\n\r\n\r\n                                            }\r\n                                            // dispatch(setSelectedFileUrl(item.file.url));\r\n                                            // // globalSelectedPDFUrl = item.file.url\r\n                                            // dispatch(setPdfViewerModalVisible(true));\r\n\r\n                                        }}\r\n                                        style={{ flexDirection: 'row', }}\r\n                                    >\r\n                                        <View style={{ marginRight: 5, }}>\r\n                                            {getFileIcon(item.file.name)}\r\n                                        </View>\r\n\r\n                                        <Text underline selectable style={{\r\n                                            fontWeight: 400,\r\n                                            color: isGlobalCustomerSender ? '#555659' : '#555659',\r\n                                            fontSize: textFontSize,\r\n                                        }}>\r\n                                            {item.file.name.trim()}\r\n                                        </Text>\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n\r\n                {!item.messageType && item.file && item.file.type == 'image' &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        {item.text && item.text !== '' &&\r\n                            <View style={{\r\n                                marginBottom: 5,\r\n                                padding: 10,\r\n                                borderRadius: 5,\r\n                                backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                flexShrink: 1,\r\n                            }}>\r\n                                {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                            </View>\r\n                        }\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 0,\r\n                                    borderRadius: 10,\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    <Pressable\r\n                                        onMouseEnter={() => handleImageMessageMouseEnter(index)}\r\n                                        onMouseLeave={handleImageMessageMouseLeave}\r\n                                        onPress={() => openPreview(index)}\r\n                                        style={{\r\n                                            position: 'relative', // Ensure relative positioning for the overlay\r\n                                            width: 250,\r\n                                            height: 250,\r\n                                            alignSelf: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <FastImage\r\n                                            source={{ uri: item.file.url, priority: FastImage.priority.normal }}\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                borderRadius: 10,\r\n                                                borderWidth: 1,\r\n                                                borderColor: '#DADDE1',\r\n                                            }}\r\n                                            resizeMode={FastImage.resizeMode.contain}\r\n                                        />\r\n                                        {isHovered && (\r\n                                            <View style={{\r\n                                                ...StyleSheet.absoluteFillObject, // Make overlay cover the entire image\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.1)', // Semi-transparent black\r\n                                                borderRadius: 10, // Match the border radius of the image\r\n                                            }} />\r\n                                        )}\r\n                                    </Pressable>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n\r\n                    </View>}\r\n\r\n                {!item.messageType && !item.file &&\r\n                    <View style={{ flexDirection: 'column', alignItems: isGlobalCustomerSender ? 'flex-start' : 'flex-end', flex: 1 }}>\r\n                        <View style={{ flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse', flex: 1, }}>\r\n                            <View style={{\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                                flex: 1,\r\n                            }}>\r\n                                <View style={{\r\n                                    padding: 10,\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: isGlobalCustomerSender ? '#FFFFFF' : '#f1f5ff',\r\n                                    marginLeft: isGlobalCustomerSender ? 10 : 0,\r\n                                    marginRight: isGlobalCustomerSender ? 0 : 10,\r\n                                    flexShrink: 1,\r\n                                }}>\r\n                                    {renderItemText(isGlobalCustomerSender, item.text.trim())}\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={{\r\n                                position: 'absolute',\r\n                                left: isGlobalCustomerSender ? '100%' : -60,\r\n                                top: '50%',\r\n                                bottom: '50%',\r\n                                flexDirection: isGlobalCustomerSender ? 'row' : 'row-reverse',\r\n                            }}>\r\n                                {/* Display read status text outside of the message bubble */}\r\n                                {isLastMessage && selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Already read by the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail-open\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n\r\n                                {isLastMessage && !selectedChatData.customerRead && !isGlobalCustomerSender && (\r\n                                    <Tooltip label=\"Message sent to the customer\" openDelay={200} bgColor={'#FAFAFA'} _text={{ color: '#1C2B33', }}>\r\n                                        <View style={{\r\n                                            alignSelf: 'flex-end',\r\n                                            marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                            marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                            alignSelf: 'center',\r\n                                        }}>\r\n                                            <Ionicons name=\"mail\" size={20} color={'#1B81C2'} />\r\n                                        </View>\r\n                                    </Tooltip>\r\n                                )}\r\n                                {isLastMessage && selectedChatData.readBy.length > 0 && (\r\n                                    <View style={{\r\n                                        alignSelf: 'flex-end',\r\n                                        marginLeft: isGlobalCustomerSender ? 8 : 0,\r\n                                        marginRight: isGlobalCustomerSender ? 0 : 8,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        <Pressable\r\n                                            focusable={false}\r\n                                            onHoverIn={() => setIsEyeHovered(true)}\r\n                                            onHoverOut={() => setIsEyeHovered(false)}\r\n                                            onPress={handleReadByListModalOpen}\r\n                                        >\r\n                                            <Entypo name=\"eye\" size={20} color={isEyeHovered ? '#c5d1ce' : '#75A99C'} />\r\n                                        </Pressable>\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                        {/* Additional message properties like timestamp and sender */}\r\n                        <Text style={{\r\n                            fontWeight: '300',\r\n                            color: '#888c96',\r\n                            fontSize: screenWidth < mobileViewBreakpoint ? 9 : 11,\r\n                            marginTop: 4,\r\n                            marginBottom: 4,\r\n                            marginLeft: isGlobalCustomerSender ? 15 : 0,\r\n                            marginRight: isGlobalCustomerSender ? 0 : 15,\r\n                        }}\r\n                            selectable>\r\n                            {!isGlobalCustomerSender ?\r\n                                (`${formatDate(item.timestamp)} - ${extractUsernameFromEmail(item.sender)}${item.ip ? ` - ${item.ip}` : ''}${item.ipCountry ? ` - ${item.ipCountry}` : ''}`)\r\n                                : (`${formatDate(item.timestamp)}${item.ip ? ` - ${item.ip}${item.ipCountry ? ` - ${item.ipCountry}` : ''}` : ''}`)\r\n                            }\r\n                        </Text>\r\n\r\n                    </View>}\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        chatMessagesData.length > 0 ? (\r\n            <>\r\n                <FlatList\r\n                    style={{ height: 100 }}\r\n                    ref={flatListRef}\r\n                    data={chatMessagesData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    initialNumToRender={10} // Adjust based on your average message size and performance\r\n                    maxToRenderPerBatch={10}\r\n                    windowSize={100}\r\n                    onEndReachedThreshold={0.05}\r\n                    ListFooterComponent={renderFooter}\r\n                    onEndReached={handleLoadMoreMessages}\r\n                    inverted\r\n                />\r\n                {selectedImageIndex !== null && (\r\n                    <ImagePreviewModal\r\n                        isVisible={isPreviewVisible}\r\n                        onClose={closePreview}\r\n                        imageUrl={chatMessagesData[selectedImageIndex].file.url}\r\n                    />\r\n                )}\r\n                <ReadByListModal userEmail={userEmail} handleReadByListModalClose={handleReadByListModalClose} />\r\n            </>\r\n        ) : null\r\n    );\r\n};\r\n\r\n\r\nconst ReservedStatusViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: '#FFFFCC',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: '#FF0000', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>The vehicle is reserved to a customer</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst CancelledViewForHeader = () => {\r\n\r\n    return (\r\n        <View style={{\r\n            zIndex: 999,\r\n            flex: 1,\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'red',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n            opacity: 0.7, // Set border color\r\n        }}>\r\n            <Text style={{ color: 'white', fontSize: 16, fontWeight: 'bold', textAlign: 'center', }} selectable={false}>Cancelled Transaction</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default function ChatMessages() {\r\n    const navigate = useNavigate();\r\n    const selectedChatData = useSelector(state => state.selectedChatData);\r\n    const selectedVehicleData = useSelector(state => state.selectedVehicleData);\r\n    const selectedCustomerData = useSelector(state => state.selectedCustomerData);\r\n    const [email, setEmail] = useState('');\r\n    const chatListData = useSelector((state) => state.chatListData);\r\n    const activeChatId = useSelector((state) => state.activeChatId);\r\n    const chatMessageBoxLoading = useSelector((state) => state.chatMessageBoxLoading);\r\n    const chatListSearchText = useSelector((state) => state.chatListSearchText);\r\n    const chatMessagesData = useSelector((state) => state.chatMessagesData);\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    const [name, setName] = useState(loginName);\r\n\r\n    // const screenWidth = Dimensions.get('window').width;\r\n\r\n    const [activeButton, setActiveButton] = useState('All messages');\r\n    const [activeButtonValue, setActiveButtonValue] = useState(0);\r\n\r\n    const [activeFilterButton, setActiveFilterButton] = useState('');\r\n    const [unreadButtonValue, setUnreadButtonValue] = useState(false);\r\n    const [readButtonValue, setReadButtonValue] = useState(false);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // globalImageUrl = '';\r\n        // navigate(`/devadmin/chat-messages/#`);\r\n        // console.log(encryptDataAPI('rmj-marc'));\r\n\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n\r\n        const fetchIpAndCountry = async () => {\r\n            try {\r\n                // dispatch(setChatMessageBoxLoading(true));\r\n                // Fetch IP Address\r\n                const ipResponse = await axios.get('https://api.ipify.org?format=json');\r\n                const fetchedIp = ipResponse.data.ip;\r\n                ip = fetchedIp;\r\n\r\n                // Fetch IP Country\r\n                if (fetchedIp) {\r\n                    const countryResponse = await axios.get(`https://ipapi.co/${fetchedIp}/json/`);\r\n                    const fetchedIpCountry = countryResponse.data.country_name;\r\n                    ipCountry = fetchedIpCountry;\r\n                    // dispatch(setChatMessageBoxLoading(false));\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching IP data:', error);\r\n            }\r\n        };\r\n\r\n        const collectionRef = collection(projectExtensionFirestore, 'chats'); // Replace with your collection name\r\n        const unrepliedQuery = query(\r\n            collectionRef,\r\n            where('read', '==', false),\r\n            limit(10) // Limit the query to 10 documents\r\n        );\r\n\r\n        const unsubscribe = onSnapshot(unrepliedQuery, (querySnapshot) => {\r\n            setUnreadCount(querySnapshot.size); // Update state with the new count\r\n            fetchIpAndCountry();\r\n\r\n        }, (error) => {\r\n            console.error(\"Error fetching documents: \", error);\r\n        });\r\n\r\n\r\n\r\n        // Clean up function to unsubscribe from the listener when the component unmounts\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n            unsubscribe();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const handlePress = (buttonTitle, buttonTitleValue) => {\r\n        if (activeButton == buttonTitle) {\r\n        }\r\n        else {\r\n            setActiveButton(buttonTitle);\r\n            setActiveButtonValue(buttonTitleValue);\r\n            setActiveFilterButton('');\r\n            setUnreadButtonValue(false);\r\n\r\n            dispatch(setActiveChatId(''));\r\n\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setNoMoreData(false));\r\n        }\r\n    };\r\n\r\n\r\n    const handleUnreadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setUnreadButtonValue(prevState => !prevState);\r\n        setReadButtonValue(false);\r\n    };\r\n\r\n    const handleReadPress = (buttonTitle) => {\r\n\r\n        setActiveFilterButton(prevState => prevState === buttonTitle ? '' : buttonTitle);\r\n        setReadButtonValue(prevState => !prevState);\r\n        setUnreadButtonValue(false);\r\n\r\n    };\r\n\r\n\r\n    //Main fetch\r\n    useEffect(() => {\r\n        let queryRef;\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setChatMessageBoxLoading(false));\r\n        dispatch(setActiveChatId(''));\r\n\r\n        // Helper function to build the query\r\n        const buildQuery = () => {\r\n            const searchValue = chatListSearchText.toUpperCase();\r\n\r\n            if (unreadButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', false), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', false), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else if (readButtonValue) {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('read', '==', true), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('read', '==', true), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n            else {\r\n                if (activeButtonValue === 0) {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                } else {\r\n                    return searchValue === '' ?\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), orderBy('lastMessageDate', 'desc'), limit(10)) :\r\n                        query(collection(projectExtensionFirestore, 'chats'), where('stepIndicator.value', '==', activeButtonValue), where('keywords', 'array-contains', searchValue), orderBy('lastMessageDate', 'desc'), limit(10));\r\n                }\r\n            }\r\n        };\r\n\r\n        // Build and execute the query\r\n        queryRef = buildQuery();\r\n\r\n        const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n            const chatsData = [];\r\n            snapshot.forEach((doc) => {\r\n                chatsData.push({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                });\r\n            });\r\n\r\n            dispatch(setChatListData(chatsData));\r\n            globalLastVisible = snapshot.docs[snapshot.docs.length - 1];\r\n            dispatch(setNoMoreData(false));\r\n            dispatch(setLoadMoreLoading(false));\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data from Firebase:', error);\r\n        });\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [unreadButtonValue, readButtonValue, activeButtonValue, chatListSearchText]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigate(\"/login\")\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    navigate(\"/login\")\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            onSnapshot(accountDocRef, (docSnapshot) => {\r\n                if (docSnapshot.exists()) {\r\n                    const data = docSnapshot.data();\r\n                    const fieldType = data.type;\r\n                    const fieldName = data.name;\r\n                    dispatch(setLoginName(fieldName));\r\n\r\n                } else {\r\n                    // Handle the case where the document does not exist\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSignOut = () => {\r\n        // Check if currentUser exists before signing out\r\n        if (projectControlAuth.currentUser) {\r\n            signOut(projectControlAuth).then(() => {\r\n                navigate(\"/login\")\r\n                setEmail('');\r\n                setName('');\r\n            }).catch(() => {\r\n                // Handle any sign out errors here\r\n            });\r\n        } else {\r\n            // Handle the case where there is no user currently signed in\r\n            console.log('No user signed in to sign out');\r\n            // Optionally navigate to the login screen or show a message\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   const handleScreenResize = () => {\r\n    //     const screenWidth = Dimensions.get('window').width;\r\n    //     setIsMobileView(screenWidth < 1200);\r\n    //   };\r\n\r\n    //   // Initial check on component mount\r\n    //   handleScreenResize();\r\n\r\n    //   // Listen for screen dimension changes\r\n    //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n    //   // Cleanup event listener on component unmount\r\n    //   return () => {\r\n    //     Dimensions.removeEventListener('change', handleScreenResize);\r\n    //   };\r\n    // }, []);\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n\r\n\r\n\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const slideAnim = useRef(new Animated.Value(screenWidth)).current;\r\n    const isVisible = chatMessagesData.length > 0;\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            // Delayed slide in from right to left with smooth easing\r\n            Animated.timing(slideAnim, {\r\n                toValue: 0, // Final position on the screen\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true, // Use native driver for better performance\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        } else {\r\n            // Delayed slide out to the right with smooth easing when not visible\r\n            Animated.timing(slideAnim, {\r\n                toValue: screenWidth,\r\n                duration: 300, // Slightly longer duration for smoother effect\r\n                useNativeDriver: true,\r\n                easing: Easing.bezier(0.25, 0.1, 0.25, 1), // Smooth and natural easing curve\r\n                delay: 100, // Start with a slight delay for a smoother transition\r\n            }).start();\r\n        }\r\n    }, [isVisible, screenWidth, slideAnim]);\r\n\r\n    const handlePressBack = () => {\r\n        dispatch(setMessageTextInputValue(''));\r\n        dispatch(setChatMessagesData([]));\r\n        dispatch(setActiveChatId(''));\r\n        navigate(`/top/chat-messages`);\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <NativeBaseProvider>\r\n                <View style={{ backgroundColor: \"white\", height: '100%', width: '100%', flexDirection: 'column', maxHeight: '100vh', overflow: 'hidden', }} >\r\n                    {/* Header */}\r\n                    <Box\r\n                        px=\"3\"\r\n                        bgColor='#0642f4'\r\n                        height={54}\r\n                        position=\"sticky\"\r\n                        top={0}\r\n                        zIndex={999}\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        borderBottomWidth={0}\r\n                        borderBottomColor={'cyan.500'}\r\n                    >\r\n\r\n                        <SideDrawer\r\n                            selectedScreen={selectedScreen} />\r\n\r\n                        <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                            <FastImage\r\n                                source={{\r\n                                    uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                    priority: FastImage.priority.high,\r\n                                }}\r\n                                resizeMode={FastImage.resizeMode.stretch}\r\n                                style={styles.image} />\r\n                        </Box>\r\n\r\n                        <View style={{ alignItems: 'center', flex: 1 }}>\r\n                            <QRCodeScanner />\r\n                        </View>\r\n\r\n                        <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        {/* Sidebar */}\r\n                        {/* <SideDrawer\r\n                            selectedScreen={selectedScreen} /> */}\r\n\r\n                        {/* Main Content */}\r\n                        {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                        {/* Main Content Content */}\r\n\r\n                        {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                        <View style={{ flex: 1, backgroundColor: \"white\", height: '100%' }}>\r\n                            <View style={{ flex: 1, height: '100%' }}>\r\n\r\n                                <View style={{\r\n                                    display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex',\r\n                                    borderBottomWidth: 1,\r\n                                    borderColor: '#f5f5f5',\r\n                                    width: '100%',\r\n                                    backgroundColor: 'white',\r\n                                    height: 60,\r\n                                }}>\r\n                                    {/* Chat Header */}\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'row',\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            flexDirection: 'row',\r\n                                        }}>\r\n                                            <ScrollView scrollEnabled horizontal>\r\n\r\n                                                <HeaderButton\r\n                                                    key={'All messages'}\r\n                                                    title={'All messages'}\r\n                                                    onPress={() => handlePress('All messages', 0)}\r\n                                                    isActive={activeButton === 'All messages'}\r\n                                                    headerCount={\r\n                                                        unreadCount > 0 ?\r\n                                                            (<View style={{\r\n                                                                backgroundColor: '#FF0000',\r\n                                                                borderRadius: 100, // Half of width and height\r\n                                                                width: 20,\r\n                                                                height: 20, // Same as width for a perfect circle\r\n                                                                marginLeft: 10,\r\n                                                                justifyContent: 'center', // Center children vertically\r\n                                                                alignItems: 'center', // Center children horizontally\r\n                                                            }}>\r\n                                                                <Text style={{\r\n                                                                    color: 'white',\r\n                                                                    fontWeight: 700,\r\n                                                                    fontSize: 14,\r\n                                                                }}>{unreadCount > 9 ? `9+` : unreadCount}</Text>\r\n                                                            </View>) : (<></>)}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Negotiation'}\r\n                                                    title={'Negotiation'}\r\n                                                    onPress={() => handlePress('Negotiation', 1)}\r\n                                                    isActive={activeButton === 'Negotiation'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Issued Proforma Invoice'}\r\n                                                    title={'Issued Proforma Invoice'}\r\n                                                    onPress={() => handlePress('Issued Proforma Invoice', 2)}\r\n                                                    isActive={activeButton === 'Issued Proforma Invoice'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Order Item'}\r\n                                                    title={'Order Item'}\r\n                                                    onPress={() => handlePress('Order Item', 3)}\r\n                                                    isActive={activeButton === 'Order Item'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Payment Confirmed'}\r\n                                                    title={'Payment Confirmed'}\r\n                                                    onPress={() => handlePress('Payment Confirmed', 4)}\r\n                                                    isActive={activeButton === 'Payment Confirmed'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Shipping Schedule'}\r\n                                                    title={'Shipping Schedule'}\r\n                                                    onPress={() => handlePress('Shipping Schedule', 5)}\r\n                                                    isActive={activeButton === 'Shipping Schedule'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Documents'}\r\n                                                    title={'Documents'}\r\n                                                    onPress={() => handlePress('Documents', 6)}\r\n                                                    isActive={activeButton === 'Documents'}\r\n                                                />\r\n\r\n                                                <HeaderButton\r\n                                                    key={'Vehicle Received'}\r\n                                                    title={'Vehicle Received'}\r\n                                                    onPress={() => handlePress('Vehicle Received', 7)}\r\n                                                    isActive={activeButton === 'Vehicle Received'}\r\n                                                />\r\n                                            </ScrollView>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', height: '100%', }}>\r\n                                    {/* Chat Body */}\r\n\r\n                                    <View style={{ flex: screenWidth > mobileViewBreakpoint ? '' : 1, display: screenWidth < mobileViewBreakpoint && activeChatId !== '' ? 'none' : 'flex', }}>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', maxHeight: 100, minHeight: 100, backgroundColor: 'white', }}>\r\n                                            {/* Chat Search */}\r\n                                            <View style={{ flex: 1, paddingHorizontal: 10 }}>\r\n                                                <SearchChat lastVisible={lastVisible} setLastVisible={setLastVisible} unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                                {/* <Pressable\r\n                                                variant=\"ghost\"\r\n                                                style={{\r\n                                                    padding: 3,\r\n                                                    width: 100,\r\n                                                    flexDirection: 'row', // Align items in a row\r\n                                                    alignItems: 'center', // Center items vertically\r\n                                                    borderRadius: 5,\r\n                                                }}\r\n                                                backgroundColor='#ECEDF0'\r\n                                                _hover={{ backgroundColor: '#d7d7d9' }}\r\n                                            >\r\n                                                <MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={20} />\r\n                                                <Text style={{ color: '#1C2B33', marginLeft: 5 }}>Unreplied</Text>\r\n                                            </Pressable> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', }}>\r\n                                                    <FilterButton\r\n                                                        key={'Unread'}\r\n                                                        title={'Unread '}\r\n                                                        onPress={() => handleUnreadPress('Unread')}\r\n                                                        isActive={activeFilterButton === 'Unread'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-unread\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-unread\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                    <FilterButton\r\n                                                        key={'Read'}\r\n                                                        title={'Read '}\r\n                                                        onPress={() => handleReadPress('Read')}\r\n                                                        isActive={activeFilterButton === 'Read'}\r\n                                                        iconActive={<MaterialIcons name=\"mark-email-read\" color=\"#0A78BE\" size={16} />}\r\n                                                        iconNotActive={<MaterialIcons name=\"mark-email-read\" color=\"#1C2B33\" size={16} />}\r\n                                                    />\r\n\r\n                                                </View>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, maxWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', minWidth: screenWidth > mobileViewBreakpoint ? 380 : '100%', borderRightWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', }}>\r\n                                            {/* Chat List */}\r\n                                            <ChatList unreadButtonValue={unreadButtonValue} activeButtonValue={activeButtonValue} />\r\n                                        </View>\r\n\r\n                                    </View>\r\n\r\n                                    {screenWidth > mobileViewBreakpoint && (chatMessageBoxLoading ? (\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', height: '100%', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n                                        <View style={{ flex: 1, }}>\r\n\r\n                                            <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                {/* Chat Message Header */}\r\n\r\n                                                <ScrollView scrollEnabled horizontal>\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                </ScrollView>\r\n\r\n                                            </View>\r\n\r\n                                            <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n\r\n                                                <View style={{ flex: 1, }}>\r\n\r\n                                                    {(selectedChatData && chatMessagesData.length > 0 && selectedCustomerData && selectedVehicleData) &&\r\n                                                        (selectedChatData && chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            (selectedVehicleData.reservedTo !== selectedCustomerData.textEmail))\r\n                                                        ? <ReservedStatusViewForHeader /> :\r\n                                                        (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                    }\r\n\r\n                                                    {/* Chat Message Box */}\r\n                                                    <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                    <DocumentPreviewModal />\r\n                                                </View>\r\n\r\n                                                <View style={{ maxHeight: 180, justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                                                    {/* Chat Input Text */}\r\n                                                    {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    ))}\r\n\r\n                                    {screenWidth < mobileViewBreakpoint && activeChatId !== '' && (chatMessageBoxLoading ? (\r\n\r\n                                        <View style={{ flex: 1, backgroundColor: 'white', justifyContent: 'center', alignItems: 'center', }}>\r\n                                            <Spinner\r\n                                                animating\r\n                                                size=\"lg\"\r\n                                                color={'#7B9CFF'}\r\n                                            />\r\n                                        </View>) : (\r\n\r\n                                        <Animated.View\r\n                                            style={{\r\n                                                backgroundColor: '#E5EBFE',\r\n                                                height: '100%',\r\n                                                flex: 1,\r\n                                                transform: [{ translateX: slideAnim }]\r\n                                            }}\r\n\r\n                                        >\r\n\r\n                                            <View style={{ flex: 1 }}>\r\n                                                <View style={{ flex: 1, minHeight: 90, maxHeight: screenWidth < 1281 ? 130 : 125, borderBottomWidth: 0, borderColor: '#DADDE1', backgroundColor: 'white', justifyContent: 'center', flexDirection: 'row', }}>\r\n                                                    {/* Chat Message Header */}\r\n                                                    {(screenWidth < mobileViewBreakpoint && chatMessagesData.length > 0) &&\r\n                                                        <Pressable onPress={handlePressBack} style={{ justifyContent: 'center', alignItems: 'center', }}>\r\n                                                            <Ionicons name=\"chevron-back\" size={40} color='black' />\r\n                                                        </Pressable>\r\n                                                    }\r\n\r\n                                                    <ScrollView scrollEnabled horizontal>\r\n                                                        {chatMessagesData.length < 1 ? null : (<ChatMessageHeader />)}\r\n                                                    </ScrollView>\r\n                                                </View>\r\n\r\n                                                <View style={{ flex: 1, borderColor: '#DADDE1', backgroundColor: chatMessagesData.length < 1 ? 'white' : '#e5ebfe', paddingBottom: 10, }}>\r\n                                                    <View style={{ flex: 1, }}>\r\n                                                        {(chatMessagesData.length > 0 && selectedVehicleData.stockStatus == 'Reserved' &&\r\n                                                            selectedVehicleData.reservedTo !== selectedCustomerData.textEmail)\r\n                                                            ? <ReservedStatusViewForHeader /> :\r\n                                                            (selectedChatData.isCancelled && chatMessagesData.length > 0 && <CancelledViewForHeader />)\r\n                                                        }\r\n                                                        {/* Chat Message Box */}\r\n                                                        <ChatMessageBox activeButtonValue={activeButtonValue} userEmail={email} />\r\n                                                        <DocumentPreviewModal />\r\n\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            {/* Absolute Positioned Chat Input Text at the Bottom */}\r\n                                            <View style={{ alignItems: 'center', paddingBottom: 10 }}>\r\n                                                {chatMessagesData.length < 1 ? null : (<ChatInputText />)}\r\n                                            </View>\r\n\r\n                                        </Animated.View>\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                            {/* <SuccessModal /> */}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <LoadingModal />\r\n            </NativeBaseProvider>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Pressable,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    useBreakpointValue,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n} from 'native-base';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { debounce } from 'lodash';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, deleteField } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n    setVehicleListData,\r\n    setSupplyChainsCostsData,\r\n    setSelectedPaidTo,\r\n    setSelectedExpenseName,\r\n    setSupplyChainsCostsModalVisible,\r\n    setVehicleListSupplyChainsCostsData,\r\n    setDeleteImageVisible,\r\n    setSelectedImages,\r\n    setAddAnotherImages,\r\n    setIsAddPhotoVisible,\r\n    setUploadImagesModalVisible,\r\n    setUploadImagesButtonLoading,\r\n    setViewImagesModalVisible,\r\n    setViewImagesData,\r\n    setLoadingModalVisible,\r\n    setAddVehicleListData,\r\n    setEditVehicleModalVisible,\r\n    setFobPriceHistoryModalVisible,\r\n    setSelectedButton,\r\n    setAddCountryModalVisible,\r\n    setAddPortModalVisible,\r\n    setDeletePortModalVisible,\r\n    setAddPortsForCountriesModalVisible,\r\n    setCountryPortsData,\r\n    setDeleteCountryModalVisible,\r\n    setLoginName\r\n} from './redux/store';\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep, merge } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'FREIGHT'\r\n\r\nlet nameVariable = {\r\n    text: ''\r\n}\r\n\r\nlet defaultSelectedButton = 'countries';\r\n\r\nlet selectedPort = '';\r\nlet selectedCountry = '';\r\nlet selectedPortForCountry = '';\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = projectControlAuth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\nconst SearchablePortDropdown = ({ modalAddOpen }) => {\r\n    // const [selectedItem, setSelectedItem] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n    const [data, setData] = useState([]); // Initialize data state with an empty array\r\n    const searchRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Your data fetching logic here\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map((key) => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n            } else {\r\n                console.log('No such document!');\r\n            }\r\n        }, (error) => {\r\n            console.error('Error fetching countries: ', error);\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const filteredData = data.filter((item) =>\r\n        item.ports.toLowerCase().includes(query.toLowerCase().trim()) ||\r\n        item.country.toLowerCase().includes(query.toLowerCase().trim())\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={{\r\n                padding: 10,\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#ccc',\r\n                width: '100%',\r\n                backgroundColor: '#85929F',\r\n            }}\r\n            onPress={() => {\r\n                // setSelectedItem(item);\r\n                selectedPortForCountry = item;\r\n                setQuery('');\r\n                setIsDropdownVisible(false);\r\n\r\n            }}\r\n        >\r\n            <Text style={{ color: 'white', }}>{item.ports}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n\r\n    }, [isDropdownVisible])\r\n\r\n    useEffect(() => {\r\n\r\n        searchRef.current.focus();\r\n        setIsDropdownVisible(false);\r\n        selectedPortForCountry = '';\r\n\r\n    }, [modalAddOpen])\r\n\r\n    return (\r\n        <View style={{ flex: 1, width: '100%' }}>\r\n            <Button\r\n                title=\"Show Dropdown\"\r\n                onPress={() => {\r\n                    setIsDropdownVisible(!isDropdownVisible)\r\n\r\n                }}\r\n                bgColor={'#102A43'}\r\n                style={{ borderWidth: 1 }}\r\n                flex={1}\r\n            >\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between', // This will position the children at opposite ends\r\n                }}>\r\n                    <Text style={{ color: 'white', flex: 1, alignSelf: 'flex-start' }}>{selectedPortForCountry ? selectedPortForCountry.ports : 'Select Port'}</Text>\r\n                    <MaterialIcons style={{ alignSelf: 'flex-end' }} name={isDropdownVisible ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color='white' size={22} />\r\n                </View>\r\n            </Button>\r\n            <View style={{ display: isDropdownVisible ? 'flex' : 'none' }}>\r\n                <TextInput\r\n                    ref={searchRef}\r\n                    style={{\r\n                        outlineStyle: 'none',\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: '#102A43',\r\n                        flex: 1,\r\n                    }}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChangeText={(text) => setQuery(text)}\r\n                />\r\n                <FlatList\r\n                    style={{ height: 150, width: '100%', borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}\r\n                    data={filteredData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={(item) => item.ports.toString()}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n//     const dispatch = useDispatch();\r\n//     const toast = useToast();\r\n//     const [inspectionData, setInspectionData] = useState(['Required', 'Not-Required', 'Optional']);\r\n//     const [key, setKey] = useState(nanoid());\r\n\r\n//     const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n//     const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n\r\n//     const handleSaveStockStatus = async () => {\r\n\r\n//         dispatch(setLoadingModalVisible(true));\r\n\r\n//        const response = await axios.get('http://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n//         const { datetime } = response.data;\r\n//         const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n//         const year = moment(datetime).format('YYYY');\r\n//         const month = moment(datetime).format('MM');\r\n//         const monthWithDay = moment(datetime).format('MM/DD');\r\n//         const date = moment(datetime).format('YYYY/MM/DD');\r\n//         const day = moment(datetime).format('DD');\r\n//         const time = moment(datetime).format('HH:mm');\r\n\r\n//         const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n//         if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n//             dispatch(setLoadingModalVisible(false));\r\n//         }\r\n\r\n//         else {\r\n\r\n//             const stockStatusHistoryData = {\r\n//                 date: formattedTime,\r\n//                 stockStatus: selectedStockStatusValue,\r\n//                 changedBy: nameVariable.text,\r\n//             };\r\n//             const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n//             try {\r\n//                 await updateDoc(vehicleProductRef, {\r\n//                     stockStatus: selectedStockStatusValue,\r\n//                     stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n//                 });\r\n//                 const logData = {\r\n//                     message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n//                     timestamp: formattedTime,\r\n//                     colorScheme: true,\r\n//                     keywords: [\r\n//                         formattedTime.toLowerCase(),\r\n//                         globalCurrentStockID.toLowerCase(),\r\n//                         `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n//                         'Stock Status'.toLowerCase(),\r\n//                         'Stock Status Updated'.toLowerCase(),\r\n//                         'Stock'.toLowerCase(),\r\n//                         'Status Updated'.toLowerCase(),\r\n//                         'Updated'.toLowerCase(),\r\n//                         globalSelectedCarName.toLowerCase(),\r\n//                         globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n//                         nameVariable.text.toLowerCase(),\r\n//                         year.toLowerCase(),\r\n//                         month.toLowerCase(),\r\n//                         monthWithDay.toLowerCase(),\r\n//                         date.toLowerCase(),\r\n//                         day.toLowerCase(),\r\n//                         time.toLowerCase(),\r\n//                         timeWithMinutesSeconds.toLowerCase(),\r\n//                     ],\r\n//                 };\r\n//                 addLogToCollection(logData);\r\n//                 dispatch(setLoadingModalVisible(false));\r\n\r\n//                 // console.log('FOB Price updated successfully');\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             } catch (error) {\r\n//                 console.error(error);\r\n//                 toast.show({\r\n//                     render: () => {\r\n//                         return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n//                             <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n//                         </View>;\r\n//                     }\r\n//                 })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={{ flex: 1, flexDirection: 'row' }}>\r\n//             <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n//                 <Select\r\n//                     selectedValue={selectedStockStatusValue}\r\n//                     onValueChange={(value) => {\r\n//                         setSelectedStockStatusValue(value);\r\n//                     }}\r\n//                     flex={3}\r\n//                     accessibilityLabel=\"---\"\r\n//                     placeholder=\"---\"\r\n//                     _selectedItem={{\r\n//                         bg: \"teal.600\",\r\n//                         endIcon: <CheckIcon size=\"5\" />\r\n//                     }}\r\n//                 >\r\n//                     {stockStatusData.map((item) => (\r\n//                         <Select.Item key={item} label={item} value={item} />\r\n//                     ))}\r\n//                 </Select>\r\n//             </View>\r\n\r\n//             <TouchableHighlight\r\n//                 underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n//                 onPress={handleSaveStockStatus}\r\n//                 style={{\r\n//                     backgroundColor: '#16A34A',\r\n//                     borderRadius: 5,\r\n//                     padding: 3,\r\n//                     margin: 2,\r\n//                     alignSelf: 'center',\r\n//                 }}>\r\n//                 <MaterialIcons name='update' color='white' size={22} />\r\n//             </TouchableHighlight>\r\n//         </View>\r\n\r\n\r\n\r\n\r\n//     );\r\n// };\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\n\r\nconst SortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, collectionName, handleFirstModalClose, handleFirstModalOpen }) => {\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalData, setModalData] = useState(data);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setModalData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n\r\n    //   fetchData();\r\n\r\n    // }, [modalSortOpen]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const modalDocRef = doc(collection(databaseInit, collectionName), docName);\r\n        const modalDocSnap = await getDoc(modalDocRef);\r\n        if (modalDocSnap.exists()) {\r\n            // setModalData(modalDocSnap.data()?.dataName || []);\r\n            setModalData(modalDocSnap.data()?.[dataName] || []);\r\n        }\r\n    }, [databaseInit, modalData]);\r\n\r\n    // useEffect(() => {\r\n    //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n    //     setModalData(snapshot.data()?.[dataName] || []);\r\n    //   });\r\n\r\n    //   return () => unsubscribe();\r\n    // }, [dataName, databaseInit, docName]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        setModalSaveLoading(true);\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        try {\r\n            await updateDoc(doc(collection(databaseInit, collectionName), docName), { [dataName]: modalData });\r\n            setModalSaveLoading(false);\r\n            setModalSortOpen(true);\r\n            setModalSave(false);\r\n\r\n\r\n            const logData = {\r\n                message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n                timestamp: formattedTime,\r\n                colorScheme: true,\r\n                keywords: [\r\n                    formattedTime.toLowerCase(),\r\n                    `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`.toLowerCase(),\r\n                    `${title} updated`.toLowerCase(),\r\n                    `\"${title}\" updated`.toLowerCase(),\r\n                    'updated'.toLowerCase(),\r\n                    title.toLowerCase(),\r\n                    nameVariable.text.toLowerCase(),\r\n                    year.toLowerCase(),\r\n                    month.toLowerCase(),\r\n                    monthWithDay.toLowerCase(),\r\n                    date.toLowerCase(),\r\n                    day.toLowerCase(),\r\n                    time.toLowerCase(),\r\n                    timeWithMinutesSeconds.toLowerCase(),\r\n                ],\r\n            };\r\n\r\n            addLogToCollection(logData);\r\n\r\n        } catch (error) {\r\n            setModalSaveLoading(false);\r\n            handleModalSaveClose();\r\n            console.error(error);\r\n        }\r\n\r\n\r\n    }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n    const handleSortModalOpen = useCallback(() => {\r\n        setModalIsLoading(true);\r\n        fetchData();\r\n        setModalSortOpen(true);\r\n        // handleFirstModalClose();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    const handleSortModalClose = useCallback(async () => {\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(false);\r\n        // handleFirstModalOpen();\r\n    }, [modalSortOpen, modalIsLoading]);\r\n\r\n    // const handleAddTextChange = () => {\r\n    //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n    //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n    // };\r\n\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleSortModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [])\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        handleSortModalOpen();\r\n        textAreaAdd.current?.clear();\r\n    }, [modalAddOpen])\r\n\r\n    const handleModalAddSuccessClose = useCallback(() => {\r\n        setModalAddSuccess(false);\r\n        // setIsLoading(false);\r\n        handleSortModalOpen();\r\n    }, [modalAddSuccess])\r\n\r\n    const handleModalAddSuccessOpen = useCallback(() => {\r\n        setModalAddSuccess(true);\r\n        handleSortModalClose();\r\n        setModalAddOpen(false);\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n    const handleModalSaveOpen = useCallback(() => {\r\n        setModalSave(true);\r\n        setModalSortOpen(false);\r\n        setModalIsLoading(true);\r\n    }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n    const handleModalSaveClose = useCallback(() => {\r\n        setModalSave(false);\r\n        setModalSortOpen(true);\r\n    }, [modalSave, modalSortOpen]);\r\n\r\n    const handleAddSubmit = async () => {\r\n\r\n        const data = textAreaAdd.current?.value;\r\n        const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n        if (data !== '') {\r\n\r\n            setModalSaveLoading(true);\r\n\r\n            try {\r\n                const modalCollectionRef = collection(databaseInit, collectionName);\r\n                const modalDocRef = doc(modalCollectionRef, docName);\r\n                await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n                const logData = {\r\n                    message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`.toLowerCase(),\r\n                        `${title} added`.toLowerCase(),\r\n                        `\"${title}\" added`.toLowerCase(),\r\n                        'added'.toLowerCase(),\r\n                        title.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                        timeWithMinutesSeconds.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                setModalSaveLoading(false);\r\n\r\n                handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n                console.log('Data added to Firestore');\r\n            } catch (error) {\r\n                console.error('Error adding data to Firestore:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box justifyContent=\"center\" alignItems={'flex-start'} marginRight={1}>\r\n\r\n                {!modalIsLoading ? (\r\n                    <TouchableOpacity onPress={handleSortModalOpen} >\r\n                        <Icon as={<MaterialCommunityIcons name=\"playlist-edit\" />} size={5} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                ) : (\r\n                    <Spinner color=\"white\" size={20} />\r\n                )}\r\n\r\n\r\n            </Box>\r\n\r\n            <Modal\r\n                isOpen={modalSortOpen}\r\n                onClose={handleSortModalClose}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>{headerText}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <Box w={'full'} flexDir={'column'}>\r\n                            <Box alignItems={'flex-end'}>\r\n                                <Pressable onPress={handleModalAddOpen} ><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></Pressable>\r\n                            </Box>\r\n\r\n                            <Box flex={1} borderWidth={1} borderColor={'#102A43'} borderRadius={5}>\r\n\r\n                                <DraggableFlatList\r\n                                    style={{ alignContent: 'center', flex: 1, }}\r\n                                    data={modalData}\r\n                                    keyExtractor={(item) => item}\r\n                                    renderItem={({ item, drag }) => (\r\n\r\n                                        <Box flex={1} bgColor={'rgba(16,42,67, 0.5)'} borderBottomWidth={1} borderBottomColor={'warmGray.400'} flexDir={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                                            <Pressable onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></Pressable>\r\n\r\n                                            <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                            <Pressable onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></Pressable>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                    onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n                            </Box>\r\n\r\n                        </Box>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleSortModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleModalSaveOpen} flex={1} size={'sm'} borderRadius={5}>Save</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalSave}\r\n                onClose={handleModalSaveClose}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Save Order?</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <Text>Are you sure you want to save changes?</Text>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n                            <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n                initialFocusRef={textAreaAdd}>\r\n                <Modal.Content >\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add {title}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n                        <TextArea\r\n                            textAlign={'center'}\r\n                            w={'full'}\r\n                            ref={textAreaAdd}\r\n                            multiline\r\n                            onChangeText={handleAddTextChange}\r\n                            totalLines={4}\r\n                            placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} >\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n            {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n            <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} >\r\n                <Modal.Content bgColor={'green.100'}>\r\n                    <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n                        <Text textAlign={'center'} color={'#102A43'} bold>\r\n                            😊😎 Success! 😎😊\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body\r\n                        justifyContent={'center'}\r\n                        alignItems={'center'}\r\n                        bgColor={'green.200'}\r\n                        borderLeftWidth={4}\r\n                        borderLeftColor={'green.600'}\r\n                        margin={5}\r\n                    >\r\n                        <Box flex={1}>\r\n                            <Text color={'green.600'} bold>\r\n                                Added successfully!\r\n                            </Text>\r\n                            <Text color={'green.600'}>\r\n                                Added successfully!\r\n                            </Text>\r\n                        </Box>\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                                Ok\r\n                            </Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nconst FreightNavigation = () => {\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedButtonState, setSelectedButtonState] = useState(defaultSelectedButton);\r\n\r\n\r\n    const handlePress = (button) => {\r\n        if (button !== selectedButtonState) {\r\n            dispatch(setLoadingModalVisible(true));\r\n        }\r\n        dispatch(setSelectedButton(button));\r\n        setSelectedButtonState(button);\r\n    };\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: screenWidth >= 960 ? '50%' : '90%' }}>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('countries')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'countries' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"flag\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'countries' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'countries' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Countries</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                onPress={() => handlePress('ports')}\r\n                style={{\r\n                    borderRadius: 5,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    borderWidth: 1,\r\n                    borderColor: 'white',\r\n                    backgroundColor: selectedButtonState === 'ports' ? '#0642F4' : 'transparent',\r\n                    flexDirection: 'row',\r\n                }}\r\n            >\r\n                <MaterialIcons\r\n                    name=\"directions-boat\" // The icon name from MaterialIcons\r\n                    size={20} // Set the size of the icon\r\n                    color={selectedButtonState === 'ports' ? 'white' : 'black'} // Set the color based on active state\r\n                />\r\n                <Text style={{ color: selectedButtonState === 'ports' ? 'white' : 'black', fontWeight: 'bold', marginLeft: 5, }}>Ports</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectMethod = ({ defaultValue, portCode, page, searchQuery }) => {\r\n    const [selectedMethod, setSelectedMethod] = useState('');\r\n    const methodData = useSelector((state) => state.methodData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updatePortMethod = async (portCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (newValue !== '' && newValue !== '__NativeBasePlaceHolder__') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const methodField = `${formattedCountryCode}.method`;\r\n\r\n            try {\r\n                if (currentValue == selectedMethod) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [methodField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" method to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Method Updated: \"${nameVariable.text}\" updated \"${portCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Method'.toLowerCase(),\r\n                            'Method Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            portCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Method updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Method updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating method:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedPortCode = portCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const portData = documentSnapshot.data()[formattedPortCode];\r\n                // Make sure to check if portData exists before trying to access its properties\r\n                if (portData && portData.method) {\r\n                    const method = portData.method;\r\n                    setSelectedMethod(method);\r\n                    currentValue = method;\r\n                }\r\n                else {\r\n                    setSelectedMethod('__NativeBasePlaceHolder__');\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: '100%', }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedMethod}\r\n                onValueChange={(value) => {\r\n                    setSelectedMethod(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {methodData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updatePortMethod(portCode, selectedMethod)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionIsRequired = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionIsRequired, setSelectedInspectionIsRequired] = useState('');\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspection = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionIsRequiredField = `${formattedCountryCode}.inspectionIsRequired`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionIsRequired) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionIsRequiredField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionIsRequired) {\r\n                    const inspectionIsRequired = countryData.inspectionIsRequired;\r\n                    setSelectedInspectionIsRequired(inspectionIsRequired);\r\n                    currentValue = inspectionIsRequired;\r\n\r\n\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n\r\n\r\n            <Select\r\n                selectedValue={selectedInspectionIsRequired}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionIsRequired(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionIsRequiredData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspection(countryCode, selectedInspectionIsRequired)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst SelectInspectionName = ({ width, defaultValue, countryCode, page, searchQuery }) => {\r\n    const [selectedInspectionName, setSelectedInspectionName] = useState('');\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    let currentValue = '';\r\n\r\n\r\n\r\n\r\n    const updateCountryInspectionName = async (countryCode, newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const inspectionNameField = `${formattedCountryCode}.inspectionName`;\r\n\r\n            try {\r\n                if (currentValue == selectedInspectionName) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [inspectionNameField]: newValue\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Inspection Name Updated: \"${nameVariable.text}\" updated \"${countryCode}\" inspection name to \"${newValue}\"`.toLowerCase(),\r\n                            'Inspection Name'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Inspection Name Updated'.toLowerCase(),\r\n                            'Name'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Inspection Name updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Inspection Name updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.inspectionName) {\r\n                    const inspectionName = countryData.inspectionName;\r\n                    setSelectedInspectionName(inspectionName);\r\n                    currentValue = inspectionName;\r\n\r\n                }\r\n                else {\r\n                    setSelectedInspectionName('__NativeBasePlaceHolder__');\r\n                    currentValue = '__NativeBasePlaceHolder__';\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [page, searchQuery]);\r\n\r\n    return (\r\n        <View style={{ flexDirection: 'row', width: width, }}>\r\n            <Select\r\n                selectedValue={selectedInspectionName}\r\n                onValueChange={(value) => {\r\n                    setSelectedInspectionName(value);\r\n                }}\r\n                bgColor={'white'}\r\n                flex={1}\r\n                accessibilityLabel=\"---\"\r\n                placeholder=\"---\"\r\n                _selectedItem={{\r\n                    bg: \"teal.600\",\r\n                    endIcon: <CheckIcon />\r\n                }}\r\n            >\r\n                {inspectionNameData.map((item) => (\r\n                    <Select.Item key={item} label={item} value={item} />\r\n                ))}\r\n            </Select>\r\n            <TouchableHighlight\r\n                onPress={() => updateCountryInspectionName(countryCode, selectedInspectionName)}\r\n                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                style={{\r\n                    backgroundColor: '#16A34A',\r\n                    borderRadius: 5,\r\n                    padding: 5,\r\n                    margin: 2,\r\n                    alignSelf: 'center',\r\n                }}>\r\n                <MaterialIcons name='update' color='white' size={22} />\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst countriesList = [\r\n    \"Zambia\",\r\n    \"D.R.Congo\",\r\n    \"Mozambique\",\r\n    \"Zimbabwe\",\r\n    \"Uganda\",\r\n    \"Tanzania\",\r\n    \"Malawi\",\r\n    \"Burundi\",\r\n    \"Lesotho\",\r\n    \"South Sudan\",\r\n    \"Botswana\",\r\n    \"Kenya\",\r\n    \"Republic of South Africa\",\r\n    \"Djibouti\",\r\n    \"Ethiopia\",\r\n    \"Angola\",\r\n    \"Benin\",\r\n    \"Cameroon\",\r\n    \"Gabon\",\r\n    \"Ghana\",\r\n    \"Guinea\",\r\n    \"Madagascar\",\r\n    \"Mali\",\r\n    \"Namibia\",\r\n    \"Nigeria\",\r\n    \"Rwanda\",\r\n    \"Sierra Leone\",\r\n    \"Sudan\",\r\n    \"Algeria\",\r\n    \"Canary Islands\",\r\n    \"Cape Verde\",\r\n    \"Central African Republic\",\r\n    \"Chad\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Gambia\",\r\n    \"Liberia\",\r\n    \"Mahe\",\r\n    \"Maldives\",\r\n    \"Mauritania\",\r\n    \"Mayotte\",\r\n    \"Morocco\",\r\n    \"Niger\",\r\n    \"Republic of Guinea-Bissau\",\r\n    \"Republic of the Congo\",\r\n    \"Reunion\",\r\n    \"Saint Helena\",\r\n    \"Sao Tome and Principe\",\r\n    \"Seychelles\",\r\n    \"Swaziland\",\r\n    \"Tunisia\",\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"American Samoa\",\r\n    \"Anguilla\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bonaire/Netherlands Antilles\",\r\n    \"Brazil\",\r\n    \"British Virgin Islands\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Cambodia\",\r\n    \"Canada\",\r\n    \"Cayman Islands\",\r\n    \"Chile\",\r\n    \"Colombia\",\r\n    \"Commonwealth of Dominica\",\r\n    \"Comoros\",\r\n    \"Cook Islands\",\r\n    \"Costa Rica\",\r\n    \"Cote D'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curacao/Netherlands Antilles\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Dominican Republic\",\r\n    \"East Timor\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"Estonia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guatemala\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kiribati\",\r\n    \"Korea\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"LAO PDR\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Libya\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Malaysia\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Martinique\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Myanmar\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"Netherlands Antilles\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Niue\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"People's Republic of China\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of Belarus\",\r\n    \"Republic of El Salvador\",\r\n    \"Republic of Macedonia\",\r\n    \"Republic of Nicaragua\",\r\n    \"Romania\",\r\n    \"Russian Federation\",\r\n    \"Saba Island\",\r\n    \"Saint Eustatius\",\r\n    \"Saint Kitts And Nevis\",\r\n    \"Samoa\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Singapore\",\r\n    \"Slovak Republic\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"St. Barthelemy\",\r\n    \"St. Croix\",\r\n    \"St. Lucia\",\r\n    \"St. Maarten\",\r\n    \"St. Thomas\",\r\n    \"St. Vincent\",\r\n    \"Suriname\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Thailand\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Tortola\",\r\n    \"Trinidad and Tobago\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands\",\r\n    \"Tuvalu\",\r\n    \"UAE\",\r\n    \"Ukraine\",\r\n    \"United Kingdom\",\r\n    \"Uruguay\",\r\n    \"US Virgin Islands\",\r\n    \"USA\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Wallis et Futuna\",\r\n    \"Yemen\",\r\n    \"Somaliland\",\r\n\r\n];\r\n\r\n\r\nconst addPort = async (portName, country, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [portName]: {\r\n            country: country,\r\n            sortOrder: sortOrder,\r\n            method: '',\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\n\r\nconst addCountry = async (countryName, inspectionIsRequired, inspectionName, sortOrder) => {\r\n    const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n    // New country data\r\n    const newCountryData = {\r\n        [countryName]: {\r\n            inspectionIsRequired: inspectionIsRequired,\r\n            inspectionName: inspectionName,\r\n            sortOrder: sortOrder\r\n        }\r\n    };\r\n\r\n    // Set document with merge option\r\n    try {\r\n        await setDoc(docRef, newCountryData, { merge: true });\r\n        console.log(\"Country added/updated successfully!\");\r\n\r\n    } catch (error) {\r\n        console.error(\"Error adding/updating country: \", error);\r\n    }\r\n};\r\n\r\nconst AddCountryModal = ({ handleAddCountryModalClose }) => {\r\n\r\n    const addCountryModalVisible = useSelector((state) => state.addCountryModalVisible);\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const inputCountryText = useRef(null);\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        const countryCode = inputCountryText.current?.value;\r\n        const formattedCountryCode = countryCode.replace(/\\./g, '_');\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        if (inputCountryText.current?.value !== '') {\r\n            try {\r\n                await addCountry(formattedCountryCode, 'Not-Required', '', 999);\r\n                const logData = {\r\n                    message: `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Added: \"${nameVariable.text}\" added country \"${countryCode}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Country added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                dispatch(setAddCountryModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setAddButtonLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleFirstModalClose = () => {\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    };\r\n    const handleFirstModalOpen = () => {\r\n        dispatch(setAddCountryModalVisible(true));\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={addCountryModalVisible}\r\n            onClose={() => {\r\n                handleAddCountryModalClose();\r\n                inputCountryText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Country</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddCountryModalClose();\r\n                            inputCountryText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst NavigatePage = () => {\r\n    const selectedButton = useSelector((state) => state.selectedButton);\r\n\r\n    if (selectedButton === 'countries') {\r\n        return <CountriesTable />;\r\n    }\r\n    if (selectedButton === 'ports') {\r\n        return <PortsTable />;\r\n    }\r\n};\r\n\r\n\r\nconst AddPortsForCountriesModal = ({ handleAddPortsForCountriesModalClose, handleAddPortsForCountriesModalOpen }) => {\r\n\r\n    const addPortsForCountriesModalVisible = useSelector((state) => state.addPortsForCountriesModalVisible);\r\n    const countryPortsData = useSelector((state) => state.countryPortsData);\r\n    const [data, setData] = useState([]);\r\n    const [modalSortOpen, setModalSortOpen] = useState(false);\r\n    const [modalAddOpen, setModalAddOpen] = useState(false);\r\n    const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n    const [modalSave, setModalSave] = useState(false);\r\n    const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n    const [modalIsLoading, setModalIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        // Replace dots with underscores in the country code\r\n        const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        // Reference to your document\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n\r\n        // Listen for document updates\r\n        const unsubscribe = onSnapshot(docRef, (documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                // Use bracket notation to access the property using the variable\r\n                const countryData = documentSnapshot.data()[formattedCountryCode];\r\n                // Make sure to check if countryData exists before trying to access its properties\r\n                if (countryData && countryData.nearestPorts) {\r\n                    const nearestPorts = countryData.nearestPorts;\r\n                    setData(nearestPorts);\r\n\r\n                }\r\n                else {\r\n                    setData([]);\r\n                }\r\n            } else {\r\n                // documentSnapshot.data() will be undefined in this case\r\n\r\n                console.log('No such document!');\r\n            }\r\n        },\r\n            (error) => {\r\n                // Handle the error\r\n                console.error(\"Error getting document: \", error);\r\n            });\r\n\r\n        // Detach the listener when the component unmounts\r\n        return () => unsubscribe();\r\n    }, [addPortsForCountriesModalVisible]);\r\n\r\n    const handleDeleteItemPress = useCallback(\r\n        (item) => {\r\n            setData((prevData) => {\r\n                const updatedData = prevData.filter((value) => value !== item);\r\n                return updatedData;\r\n            });\r\n        },\r\n        []\r\n    );\r\n\r\n    const handleModalAddOpen = useCallback(() => {\r\n        setModalAddOpen(true);\r\n        handleAddPortsForCountriesModalClose();\r\n        setModalIsLoading(true);\r\n        // handleFirstModalClose();\r\n\r\n    }, []);\r\n\r\n    const handleModalAddClose = useCallback(() => {\r\n        setModalAddOpen(false);\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n    }, []);\r\n\r\n    const addPortForCountryField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (selectedPortForCountry.ports !== '') {\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_');\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n                // Fetch the current nearestPorts array from Firestore\r\n                const docSnap = await getDoc(documentRef);\r\n                if (docSnap.exists()) {\r\n                    const nearestPorts = docSnap.data()[formattedCountryCode]?.nearestPorts || [];\r\n\r\n                    // Check if selectedPortForCountry is already in the nearestPorts array\r\n                    if (!nearestPorts.includes(selectedPortForCountry.ports)) {\r\n                        // Update the document with the new value\r\n                        await updateDoc(documentRef, {\r\n                            [nearestPortsField]: [...nearestPorts, selectedPortForCountry.ports]\r\n                        });\r\n\r\n                        const logData = {\r\n                            message: `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`,\r\n                            timestamp: formattedTime,\r\n                            colorScheme: true,\r\n                            keywords: [\r\n                                formattedTime.toLowerCase(),\r\n                                `Nearest Ports Added: \"${nameVariable.text}\" added \"${selectedPortForCountry.ports}\" port to \"${selectedCountry}\"`.toLowerCase(),\r\n                                'Nearest Ports'.toLowerCase(),\r\n                                'Nearest'.toLowerCase(),\r\n                                'Nearest Ports Added'.toLowerCase(),\r\n                                'Ports'.toLowerCase(),\r\n                                'Added'.toLowerCase(),\r\n                                selectedPortForCountry.ports.toLowerCase(),\r\n                                selectedCountry.toLowerCase(),\r\n                                nameVariable.text.toLowerCase(),\r\n                                year.toLowerCase(),\r\n                                month.toLowerCase(),\r\n                                monthWithDay.toLowerCase(),\r\n                                date.toLowerCase(),\r\n                                day.toLowerCase(),\r\n                                time.toLowerCase(),\r\n                            ],\r\n                        };\r\n                        addLogToCollection(logData);\r\n                        handleAddPortsForCountriesModalClose();\r\n                        toast.show({\r\n                            render: () => {\r\n                                return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                    <Text style={{ color: 'white' }}>Nearest Ports added successfully</Text>\r\n                                </View>;\r\n                            }\r\n                        })\r\n                        console.log('Nearest Ports added successfully');\r\n                        setModalSaveLoading(false);\r\n                        handleModalAddClose();\r\n                        // ...\r\n                    } else {\r\n                        // Handle the case where the port already exists\r\n                        console.log('Port already exists in the nearest ports list');\r\n                        setModalSaveLoading(false);\r\n\r\n                        // You can show a message to the user here if needed\r\n                    }\r\n                } else {\r\n                    console.log('No such document!');\r\n                    setModalSaveLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n                // Error handling...\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const updateCountryPortsField = async (newValue) => {\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        setModalSaveLoading(true);\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = selectedCountry.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const nearestPortsField = `${formattedCountryCode}.nearestPorts`;\r\n\r\n            try {\r\n\r\n\r\n                await updateDoc(documentRef, {\r\n                    [nearestPortsField]: newValue\r\n                });\r\n\r\n                dispatch(setLoadingModalVisible(false));\r\n                const logData = {\r\n                    message: `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Nearest Ports Updated: \"${nameVariable.text}\" updated \"${selectedCountry}\" nearest ports`.toLowerCase(),\r\n                        'Nearest Ports'.toLowerCase(),\r\n                        'Nearest'.toLowerCase(),\r\n                        'Nearest Ports Updated'.toLowerCase(),\r\n                        'Ports'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                addLogToCollection(logData);\r\n                handleAddPortsForCountriesModalClose();\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Nearest Ports updated successfully</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                console.log('Nearest Ports updated successfully');\r\n                setModalSaveLoading(false);\r\n\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n                setModalSaveLoading(false);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n            console.log(newValue);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <><Modal\r\n            isOpen={addPortsForCountriesModalVisible}\r\n            onClose={handleAddPortsForCountriesModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header borderBottomWidth={0}>\r\n                    <Text color={'#102A43'} bold>Manage ports for {selectedCountry}</Text>\r\n                </Modal.Header>\r\n                <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                    <View style={{ width: '100%' }}>\r\n                        <View style={{ alignItems: 'flex-end', }}>\r\n                            <TouchableOpacity onPress={handleModalAddOpen}><Icon as={<FontAwesome name=\"plus-circle\" />} size={5} color=\"#102A43\" /></TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ flex: 1, borderWidth: 1, borderColor: '#102A43', borderRadius: 5, }}>\r\n                            <DraggableFlatList\r\n                                style={{ alignContent: 'center', flex: 1, }}\r\n                                data={data}\r\n                                keyExtractor={(item) => item}\r\n                                renderItem={({ item, drag }) => (\r\n\r\n                                    <View style={{\r\n                                        flex: 1,\r\n                                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                                        borderBottomWidth: 1,\r\n                                        borderBottomColor: '#A8A29E',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}>\r\n                                        <TouchableOpacity onPress={() => handleDeleteItemPress(item)}><Icon as={<AntDesign name=\"minuscircle\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                        <Text flex={1} textAlign={'center'} color={'white'}>{item}</Text>\r\n                                        <TouchableOpacity onPressIn={drag}><Icon as={<Entypo name=\"menu\" />} size={4} color=\"#102A43\" /></TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )}\r\n                                onDragEnd={useCallback(({ data }) => setData(data), [])} />\r\n\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n                </Modal.Body>\r\n                <Modal.Footer borderTopWidth={0}>\r\n                    <HStack space={5} flex={1}>\r\n                        <Button onPress={handleAddPortsForCountriesModalClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                        {modalSaveLoading ?\r\n                            (<Button flex={1} size={'sm'} borderRadius={5} colorScheme={'success'} disabled>\r\n                                <Spinner size={18} color={'white'} flex={1} borderRadius={5} />\r\n                            </Button>) :\r\n                            (<Button onPress={() => updateCountryPortsField(data)} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Save</Button>)\r\n                        }\r\n\r\n                    </HStack>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n            <Modal\r\n                isOpen={modalAddOpen}\r\n                onClose={handleModalAddClose}\r\n            // initialFocusRef={textAreaAdd}\r\n            >\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>\r\n                        <Text color={'#102A43'} bold>Add Ports for {selectedCountry}</Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n                        <SearchablePortDropdown modalAddOpen={modalAddOpen} />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <HStack space={5} flex={1}>\r\n                            <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n                            <Button onPress={() => addPortForCountryField()} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5} colorScheme={'success'}>Add</Button>\r\n                        </HStack>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal></>\r\n    );\r\n\r\n}\r\n\r\nconst DeleteCountryModal = ({ handleDeleteCountryModalClose }) => {\r\n    const deleteCountryModalVisible = useSelector((state) => state.deleteCountryModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeleteCountry = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        const formattedFieldCode = selectedCountry.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeleteCountryModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Country Deleted: \"${nameVariable.text}\" deleted country \"${selectedCountry}\" for Freight.`.toLowerCase(),\r\n                        'Country'.toLowerCase(),\r\n                        'Country Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedCountry.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deleteCountryModalVisible} onClose={handleDeleteCountryModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Country?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected country?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeleteCountryModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeleteCountry}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst CountriesTable = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const optionsPerPage = [10, 20, 50];\r\n    const inspectionIsRequiredData = useSelector((state) => state.inspectionIsRequiredData);\r\n    const inspectionNameData = useSelector((state) => state.inspectionNameData);\r\n    const [data, setData] = useState([]); // This will hold all the countries data   \r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const inputSearchRef = useRef(null);\r\n    const inputSortOrder = useRef([]);\r\n    const toast = useToast();\r\n    const textAreaAddInspectionIsRequired = useRef(null);\r\n    const textAreaAddInspectionName = useRef(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.inspectionIsRequired.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const addCountriesToFirestore = async () => {\r\n    //         // Create a new list with dots replaced by underscores\r\n    //         const sanitizedCountriesList = countriesList.map(country =>\r\n    //             country.replace(/\\./g, '_')\r\n    //         );\r\n\r\n    //         for (const [index, country] of sanitizedCountriesList.entries()) {\r\n    //             // The index of an array is zero-based, to make it one-based add 1\r\n    //             // (If you really need a one-based index, otherwise just use index)\r\n    //             const sortOrder = index;\r\n    //             try {\r\n    //                 await addCountry(country, 'Not-Required', '', sortOrder);\r\n    //             } catch (error) {\r\n    //                 console.error(`Error adding country: ${country}`, error);\r\n    //                 // Optionally handle the error by stopping the loop, or continue to the next iteration\r\n    //                 // break; // Stop the loop if an error occurs\r\n    //                 // continue; // Skip to the next iteration\r\n    //             }\r\n    //             // Optionally add a delay here if necessary\r\n    //             // await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\r\n    //         }\r\n    //     };\r\n\r\n    //     addCountriesToFirestore();\r\n    // }, []);\r\n    const handleAddInspectionNameTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionName.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionName.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    const handleAddInspectionIsRequiredTextChange = () => {\r\n        const textAreaValue = textAreaAddInspectionIsRequired.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddInspectionIsRequired.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        country: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddCountryModalOpen = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddCountryModalClose = () => {\r\n\r\n        dispatch(setAddCountryModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalOpen = (nearestPorts, country) => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(true));\r\n        dispatch(setCountryPortsData(nearestPorts));\r\n        // setSelectedCountry(selectedCountry);\r\n        selectedCountry = country;\r\n    }\r\n\r\n\r\n    const handleAddPortsForCountriesModalClose = () => {\r\n\r\n        dispatch(setAddPortsForCountriesModalVisible(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputSortOrder.current[item.country].value = item.sortOrder ? item.sortOrder : 0;\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData, screenWidth]); // Run this effect when 'items' changes\r\n    // Now, to update a specific field\r\n\r\n    const updateCountrySortOrder = async (countryCode, newValue, inputRef) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const sortOrderField = `${formattedCountryCode}.sortOrder`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [sortOrderField]: newValue\r\n                });\r\n\r\n\r\n\r\n                const logData = {\r\n                    message: `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Sort Order Updated: \"${nameVariable.text}\" updated \"${countryCode}\" sort order to \"${newValue}\"`.toLowerCase(),\r\n                        'Sort'.toLowerCase(),\r\n                        'Sort Order'.toLowerCase(),\r\n                        'Sort Order Updated'.toLowerCase(),\r\n                        'Order Updated'.toLowerCase(),\r\n                        'Order'.toLowerCase(),\r\n                        'Updated'.toLowerCase(),\r\n                        countryCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Sort order updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log('Sort order updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating sort order:', error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n    // Call the function to update the field\r\n\r\n\r\n\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.country].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteCountryModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(true));\r\n        selectedCountry = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeleteCountryModalClose = () => {\r\n\r\n        dispatch(setDeleteCountryModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleUpdateInsurance = async (newValue, currentValue, countryCode) => {\r\n\r\n        // Specify the document reference\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'CountriesDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = countryCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const insuranceField = `${formattedCountryCode}.insurance`;\r\n\r\n            try {\r\n                if (currentValue == newValue) {\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n\r\n                }\r\n                else {\r\n\r\n                    await updateDoc(documentRef, {\r\n                        [insuranceField]: newValue,\r\n                    });\r\n\r\n                    dispatch(setLoadingModalVisible(false));\r\n                    const logData = {\r\n                        message: `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`,\r\n                        timestamp: formattedTime,\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            `Insurance Updated: \"${nameVariable.text}\" updated \"${countryCode}\" insurance to \"${newValue}\"`.toLowerCase(),\r\n                            'Insurance'.toLowerCase(),\r\n                            'Inspection'.toLowerCase(),\r\n                            'Insurance Updated'.toLowerCase(),\r\n                            'Updated'.toLowerCase(),\r\n                            newValue.toString().toLowerCase(),\r\n                            countryCode.toLowerCase(),\r\n                            nameVariable.text.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                        ],\r\n                    };\r\n                    addLogToCollection(logData);\r\n                    toast.show({\r\n                        render: () => {\r\n                            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                                <Text style={{ color: 'white' }}>Insurance updated successfully</Text>\r\n                            </View>;\r\n                        }\r\n                    })\r\n                    console.log('Insurance updated successfully');\r\n                }\r\n                // Perform the update\r\n\r\n            } catch (error) {\r\n                console.error('Error updating inspection:', error);\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Country Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddCountryModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Table Headers */}\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionIsRequiredDoc'\r\n                                handleAddTextChange={handleAddInspectionIsRequiredTextChange}\r\n                                textAreaAdd={textAreaAddInspectionIsRequired}\r\n                                title='Inspection'\r\n                                dataName={'inspectionIsRequiredData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionIsRequiredData}\r\n                            />\r\n                            <Text flex={1} style={{ color: 'white', }} bold>Inspection</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2, flexDirection: 'row', }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='InspectionNameDoc'\r\n                                handleAddTextChange={handleAddInspectionNameTextChange}\r\n                                textAreaAdd={textAreaAddInspectionName}\r\n                                title='Inspection Name'\r\n                                dataName={'inspectionNameData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Inspection\"\r\n                                data={inspectionNameData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Insurance</Text>\r\n                        </View>\r\n                        <View style={{ flex: screenWidth < 1700 ? 2 : 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }} bold>Nearest Port</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 5 }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 5, }}>\r\n                                    {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                    <TextInput\r\n                                        ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '20%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                        onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionIsRequired width={'70%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                </View>\r\n                                <View style={{ flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <SelectInspectionName width={'70%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, marginHorizontal: 5, justifyContent: 'center', alignItems: 'center', }}>\r\n                                    <BouncyCheckbox\r\n                                        size={25}\r\n                                        fillColor=\"#0642F4\"\r\n                                        unfillColor=\"#FFFFFF\"\r\n                                        innerIconStyle={{ borderWidth: 2 }}\r\n                                        textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                        isChecked={item.insurance ? item.insurance : false}\r\n                                        onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', flex: screenWidth < 1700 ? 2 : 1, marginHorizontal: 5 }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                        style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                            size={20} // Set the size of the icon\r\n                                            color={'white'} // Set the color based on active state\r\n                                        />\r\n                                        <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/* <TouchableOpacity style={{ flex: 1 }}>\r\n                                <Text>Add Ports</Text>\r\n                            </TouchableOpacity> */}\r\n                                </View>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                    <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                    <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                </View>\r\n            ) :\r\n\r\n                (\r\n                    //Countries Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddCountryModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Country</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                        {/* Table Headers */}\r\n\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text selectable style={{ marginLeft: 3 }}>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            {/* <Text style={{ borderTopLeftRadius: 5, borderBottomLeftRadius: 5, alignSelf: 'center', backgroundColor: 'white', padding: 8 }}>{item.sortOrder}→</Text> */}\r\n                                            <TextInput\r\n                                                ref={(ref) => (inputSortOrder.current[item.country] = ref)}\r\n                                                style={{ outlineStyle: 'none', padding: 5, width: '100%', backgroundColor: 'white', borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                onSubmitEditing={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            />\r\n                                            <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                <TouchableHighlight\r\n                                                    onPress={() => updateCountrySortOrder(item.country, inputSortOrder.current[item.country].value, inputSortOrder)}\r\n                                                    underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                    style={{\r\n                                                        backgroundColor: '#16A34A',\r\n                                                        borderRadius: 5,\r\n                                                        padding: 5,\r\n                                                        margin: 2,\r\n                                                        alignSelf: 'center',\r\n                                                    }}>\r\n                                                    <MaterialIcons name='update' color='white' size={22} />\r\n                                                </TouchableHighlight>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionIsRequired width={'100%'} defaultValue={item.inspectionIsRequired} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Inspection Name</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <SelectInspectionName width={'100%'} defaultValue={item.inspectionName} countryCode={item.country} page={page} searchQuery={searchQuery} />\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Insurance</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <BouncyCheckbox\r\n                                                size={25}\r\n                                                fillColor=\"#0642F4\"\r\n                                                unfillColor=\"#FFFFFF\"\r\n                                                innerIconStyle={{ borderWidth: 2 }}\r\n                                                textStyle={{ fontFamily: \"JosefinSans-Regular\" }}\r\n                                                isChecked={item.insurance ? item.insurance : false}\r\n                                                onPress={(isChecked) => handleUpdateInsurance(isChecked, item.insurance ? item.insurance : false, item.country)}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nearest Port</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flexDirection: 'row', flex: 1, marginHorizontal: 5 }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleAddPortsForCountriesModalOpen(item.nearestPorts ? item.nearestPorts : [], item.country)}\r\n                                                    style={{ flex: 1, backgroundColor: '#0891B2', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 5, }}\r\n                                                >\r\n                                                    <MaterialIcons\r\n                                                        name=\"directions-boat\" // The icon name from MaterialIcons\r\n                                                        size={20} // Set the size of the icon\r\n                                                        color={'white'} // Set the color based on active state\r\n                                                    />\r\n                                                    <Text style={{ alignSelf: 'center', color: 'white', marginLeft: 3, }}>View Ports</Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n\r\n                                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n\r\n                                                <View style={{ flex: 1, borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeleteCountryModalOpen(item.country)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddCountryModal handleAddCountryModalClose={handleAddCountryModalClose} />\r\n                        <AddPortsForCountriesModal handleAddPortsForCountriesModalClose={handleAddPortsForCountriesModalClose} handleAddPortsForCountriesModalOpen={handleAddPortsForCountriesModalOpen} />\r\n                        <DeleteCountryModal handleDeleteCountryModalClose={handleDeleteCountryModalClose} />\r\n                    </View>\r\n                )}\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst portsList = {\r\n    \"Dar es Salaam\": { country: \"Tanzania\" },\r\n    \"Durban\": { country: \"Republic of South Africa\" },\r\n    \"Maputo\": { country: \"Mozambique\" },\r\n    \"Abidjan\": { country: \"Cote D'Ivoire\" },\r\n    \"Mombasa\": { country: \"Kenya\" },\r\n    \"Lusaka\": { country: \"Zambia\" },\r\n    \"Matadi\": { country: \"D.R. Congo\" },\r\n    \"Zanzibar\": { country: \"Tanzania\" },\r\n    \"St. John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Aarhus\": { country: \"Denmark\" },\r\n    \"Abadan\": { country: \"Iran\" },\r\n    \"Abu Dhabi\": { country: \"United Arab Emirates\" },\r\n    \"Acapulco\": { country: \"Mexico\" },\r\n    \"Adelaide\": { country: \"Australia\" },\r\n    \"Aden\": { country: \"Yemen\" },\r\n    \"Al Khobar\": { country: \"Saudi Arabia\" },\r\n    \"Al Ladhiqiyah\": { country: \"Syria\" },\r\n    \"Al Mukalla\": { country: \"Yemen\" },\r\n    \"Al Qusayr\": { country: \"Egypt\" },\r\n    \"Al Ruwais\": { country: \"Qatar\" },\r\n    \"Alexandria\": { country: \"Egypt\" },\r\n    \"Algiers\": { country: \"Algeria\" },\r\n    \"Antwerp\": { country: \"Belgium\" },\r\n    \"Apia\": { country: \"Samoa\" },\r\n    \"Aqaba\": { country: \"Jordan\" },\r\n    \"Arwad\": { country: \"Syria\" },\r\n    \"As Salif\": { country: \"Yemen\" },\r\n    \"Ash Shihr\": { country: \"Yemen\" },\r\n    \"Ashdod\": { country: \"Israel\" },\r\n    \"Ashgabat\": { country: \"Turkmenistan\" },\r\n    \"Ashkelon\": { country: \"Israel\" },\r\n    \"Assab\": { country: \"Eritrea\" },\r\n    \"Assumption Island\": { country: \"Seychelles\" },\r\n    \"Asunción\": { country: \"Paraguay\" },\r\n    \"Auckland\": { country: \"New Zealand\" },\r\n    \"Avarua\": { country: \"Cook Islands\" },\r\n    \"Balboa\": { country: \"Panama\" },\r\n    \"Balhaf\": { country: \"Yemen\" },\r\n    \"Banana\": { country: \"D.R.Congo\" },\r\n    \"Bandar Abbas\": { country: \"Iran\" },\r\n    \"Bandar Seri Begawan\": { country: \"Brunei Darussalam\" },\r\n    \"Bangkok\": { country: \"Thailand\" },\r\n    \"Baniyas\": { country: \"Syria\" },\r\n    \"Banjul\": { country: \"Gambia\" },\r\n    \"Bar\": { country: \"Montenegro\" },\r\n    \"Barcelona\": { country: \"Spain\" },\r\n    \"Barranquilla\": { country: \"Colombia\" },\r\n    \"Basra\": { country: \"Iraq\" },\r\n    \"Basse-Terre\": { country: \"Guadeloupe\" },\r\n    \"Batroun\": { country: \"Lebanon\" },\r\n    \"Batumi\": { country: \"Georgia\" },\r\n    \"Beira\": { country: \"Mozambique\" },\r\n    \"Beirut\": { country: \"Lebanon\" },\r\n    \"Belize City\": { country: \"Belize\" },\r\n    \"Benghazi\": { country: \"Libya\" },\r\n    \"Berbera\": { country: \"Somalia\" },\r\n    \"Berbera\": { country: \"Somaliland\" },\r\n    \"Bissau\": { country: \"Guinea-Bissau\" },\r\n    \"Bissau\": { country: \"Republic of Guinea-Bissau\" },\r\n    \"Blantyre\": { country: \"Malawi\" },\r\n    \"Bo\": { country: \"Sierra Leone\" },\r\n    \"Boma\": { country: \"D.R.Congo\" },\r\n    \"Bosaso\": { country: \"Somalia\" },\r\n    \"Brava\": { country: \"Somalia\" },\r\n    \"Brazzaville\": { country: \"Republic of the Congo\" },\r\n    \"Bridgetown\": { country: \"Barbados\" },\r\n    \"Brisbane\": { country: \"Australia\" },\r\n    \"Buchanan\": { country: \"Liberia\" },\r\n    \"Bucharest\": { country: \"Romania\" },\r\n    \"Buenos Aires\": { country: \"Argentina\" },\r\n    \"Busan\": { country: \"South Korea\" },\r\n    \"Byblos\": { country: \"Lebanon\" },\r\n    \"Cabinda\": { country: \"Angola\" },\r\n    \"Calabar\": { country: \"Nigeria\" },\r\n    \"Calais\": { country: \"France\" },\r\n    \"Callao\": { country: \"Peru\" },\r\n    \"Cap-Haitien\": { country: \"Haiti\" },\r\n    \"Cape Town\": { country: \"South Africa\" },\r\n    \"Caracas\": { country: \"Venezuela\" },\r\n    \"Cartagena\": { country: \"Colombia\" },\r\n    \"Casablanca\": { country: \"Morocco\" },\r\n    \"Cayenne\": { country: \"French Guiana\" },\r\n    \"Cebu\": { country: \"Philippines\" },\r\n    \"Chabahar\": { country: \"Iran\" },\r\n    \"Charlotte Amalie\": { country: \"US Virgin Islands\" },\r\n    \"Chekka\": { country: \"Lebanon\" },\r\n    \"Chisinau\": { country: \"Moldova\" },\r\n    \"Chittagong\": { country: \"Bangladesh\" },\r\n    \"Christchurch\": { country: \"New Zealand\" },\r\n    \"Colombo\": { country: \"Sri Lanka\" },\r\n    \"Colonia\": { country: \"Micronesia\" },\r\n    \"Comoros\": { country: \"Comoros\" },\r\n    \"Conakry\": { country: \"Guinea\" },\r\n    \"Constanta\": { country: \"Romania\" },\r\n    \"Constanța\": { country: \"Romania\" },\r\n    \"Copenhagen\": { country: \"Denmark\" },\r\n    \"Cork\": { country: \"Ireland\" },\r\n    \"Cotonou\": { country: \"Benin\" },\r\n    \"Cristóbal\": { country: \"Panama\" },\r\n    \"Dakar\": { country: \"Senegal\" },\r\n    \"Dammam\": { country: \"Saudi Arabia\" },\r\n    \"Darwin\": { country: \"Australia\" },\r\n    \"Diego Suarez (Antsiranana)\": { country: \"Madagascar\" },\r\n    \"Dili\": { country: \"East Timor\" },\r\n    \"Djibouti\": { country: \"Djibouti\" },\r\n    \"Doha\": { country: \"Qatar\" },\r\n    \"Doraleh\": { country: \"Djibouti\" },\r\n    \"Douala\": { country: \"Cameroon\" },\r\n    \"Dubai\": { country: \"UAE\" },\r\n    \"Dublin\": { country: \"Ireland\" },\r\n    \"Duqm\": { country: \"Oman\" },\r\n    \"Durrës\": { country: \"Albania\" },\r\n    \"Dzaoudzi\": { country: \"Mayotte\" },\r\n    \"Ehoala\": { country: \"Madagascar\" },\r\n    \"Eil\": { country: \"Somalia\" },\r\n    \"Eilat\": { country: \"Israel\" },\r\n    \"El Arish\": { country: \"Egypt\" },\r\n    \"El Ma'an\": { country: \"Somalia\" },\r\n    \"El Tor\": { country: \"Egypt\" },\r\n    \"Famagusta\": { country: \"Cyprus\" },\r\n    \"Freeport\": { country: \"Bahamas\" },\r\n    \"Freetown\": { country: \"Sierra Leone\" },\r\n    \"Fremantle\": { country: \"Australia\" },\r\n    \"Funafuti\": { country: \"Tuvalu\" },\r\n    \"Garoua\": { country: \"Cameroon\" },\r\n    \"Gdansk\": { country: \"Poland\" },\r\n    \"Gdańsk\": { country: \"Poland\" },\r\n    \"Gdynia\": { country: \"Poland\" },\r\n    \"Genoa\": { country: \"Italy\" },\r\n    \"George Town\": { country: \"Cayman Islands\" },\r\n    \"Georgetown\": { country: \"Guyana\" },\r\n    \"Gizo\": { country: \"Solomon Islands\" },\r\n    \"Gothenburg\": { country: \"Sweden\" },\r\n    \"Grand Turk\": { country: \"Turks and Caicos Islands\" },\r\n    \"Greenville\": { country: \"Liberia\" },\r\n    \"Guangzhou\": { country: \"Peoples Republic of China\" },\r\n    \"Guayaquil\": { country: \"Ecuador\" },\r\n    \"Gwadar\": { country: \"Pakistan\" },\r\n    \"Gydnia\": { country: \"Poland\" },\r\n    \"Hadera\": { country: \"Israel\" },\r\n    \"Haifa\": { country: \"Israel\" },\r\n    \"Hamburg\": { country: \"Germany\" },\r\n    \"Hamilton\": { country: \"Bermuda\" },\r\n    \"Hargeisa\": { country: \"Somaliland\" },\r\n    \"Harper\": { country: \"Liberia\" },\r\n    \"Havana\": { country: \"Cuba\" },\r\n    \"Helsinki\": { country: \"Finland\" },\r\n    \"Ho Chi Minh City\": { country: \"Vietnam\" },\r\n    \"Hobyo\": { country: \"Somalia\" },\r\n    \"Hodeida\": { country: \"Yemen\" },\r\n    \"Hodeidah\": { country: \"Yemen\" },\r\n    \"Hong Kong\": { country: \"Hong Kong\" },\r\n    \"Honiara\": { country: \"Solomon Islands\" },\r\n    \"Incheon\": { country: \"South Korea\" },\r\n    \"Inchon\": { country: \"South Korea\" },\r\n    \"Istanbul\": { country: \"Turkey\" },\r\n    \"Jaffna\": { country: \"Sri Lanka\" },\r\n    \"Jakarta\": { country: \"Indonesia\" },\r\n    \"Jamestown\": { country: \"Saint Helena\" },\r\n    \"Jeddah Islamic Port\": { country: \"Saudi Arabia\" },\r\n    \"Jeddah\": { country: \"Saudi Arabia\" },\r\n    \"Jizan\": { country: \"Saudi Arabia\" },\r\n    \"Jounieh\": { country: \"Lebanon\" },\r\n    \"Jubail\": { country: \"Saudi Arabia\" },\r\n    \"Jurong\": { country: \"Singapore\" },\r\n    \"Kandla\": { country: \"India\" },\r\n    \"Kaohsiung\": { country: \"Taiwan\" },\r\n    \"Karachi\": { country: \"Pakistan\" },\r\n    \"Kathmandu\": { country: \"Nepal\" },\r\n    \"Khartoum\": { country: \"Sudan\" },\r\n    \"Khasab\": { country: \"Oman\" },\r\n    \"King Abdul Aziz Port\": { country: \"Saudi Arabia\" },\r\n    \"King Fahd Industrial Port\": { country: \"Saudi Arabia\" },\r\n    \"Kingston\": { country: \"Jamaica\" },\r\n    \"Kinshasa\": { country: \"D.R.Congo\" },\r\n    \"Kismayo\": { country: \"Somalia\" },\r\n    \"Klaipeda\": { country: \"Lithuania\" },\r\n    \"Kobe\": { country: \"Japan\" },\r\n    \"Kolkata\": { country: \"India\" },\r\n    \"Koror\": { country: \"Palau\" },\r\n    \"Kralendijk\": { country: \"Bonaire/Netherlands Antilles\" },\r\n    \"Kribi\": { country: \"Cameroon\" },\r\n    \"Kuching Port\": { country: \"Malaysia\" },\r\n    \"Kuwait City\": { country: \"Kuwait\" },\r\n    \"Kyrenia\": { country: \"Cyprus\" },\r\n    \"La Ceiba\": { country: \"Honduras\" },\r\n    \"La Digue\": { country: \"Seychelles\" },\r\n    \"La Guaira\": { country: \"Venezuela\" },\r\n    \"La Libertad\": { country: \"El Salvador\" },\r\n    \"Lae\": { country: \"Papua New Guinea\" },\r\n    \"Lagos\": { country: \"Nigeria\" },\r\n    \"Larnaca\": { country: \"Cyprus\" },\r\n    \"Las Palmas\": { country: \"Canary Islands\" },\r\n    \"Latakia\": { country: \"Syria\" },\r\n    \"Le Havre\": { country: \"France\" },\r\n    \"Le Port\": { country: \"Reunion\" },\r\n    \"Libreville\": { country: \"Gabon\" },\r\n    \"Limassol\": { country: \"Cyprus\" },\r\n    \"Limbe\": { country: \"Cameroon\" },\r\n    \"Limón\": { country: \"Costa Rica\" },\r\n    \"Lisbon\": { country: \"Portugal\" },\r\n    \"Lobito\": { country: \"Angola\" },\r\n    \"Lomé\": { country: \"Togo\" },\r\n    \"London\": { country: \"United Kingdom\" },\r\n    \"Luanda\": { country: \"Angola\" },\r\n    \"Luganville\": { country: \"Vanuatu\" },\r\n    \"Lüderitz\": { country: \"Namibia\" },\r\n    \"Mahé\": { country: \"Seychelles\" },\r\n    \"Majunga (Mahajanga)\": { country: \"Madagascar\" },\r\n    \"Majuro\": { country: \"Marshall Islands\" },\r\n    \"Malabo\": { country: \"Equatorial Guinea\" },\r\n    \"Male\": { country: \"Maldives\" },\r\n    \"Malé\": { country: \"Maldives\" },\r\n    \"Manama\": { country: \"Bahrain\" },\r\n    \"Manila\": { country: \"Philippines\" },\r\n    \"Manta\": { country: \"Ecuador\" },\r\n    \"Manzanillo\": { country: \"Mexico\" },\r\n    \"Marsa Matruh\": { country: \"Egypt\" },\r\n    \"MARSAXLOKK\": { country: \"Malta\" },\r\n    \"Marsaxlokk\": { country: \"Malta\" },\r\n    \"Marseille\": { country: \"France\" },\r\n    \"Massawa\": { country: \"Eritrea\" },\r\n    \"Mata-Utu\": { country: \"Wallis and Futuna\" },\r\n    \"Matadi\": { country: \"D.R.Congo\" },\r\n    \"Matarani\": { country: \"Peru\" },\r\n    \"Mayumba\": { country: \"Gabon\" },\r\n    \"Melbourne\": { country: \"Australia\" },\r\n    \"Merca\": { country: \"Somalia\" },\r\n    \"Mindelo\": { country: \"Cape Verde\" },\r\n    \"Miri Port\": { country: \"Malaysia\" },\r\n    \"Mocha\": { country: \"Yemen\" },\r\n    \"Mogadishu\": { country: \"Somalia\" },\r\n    \"Monaco\": { country: \"Monaco\" },\r\n    \"Monrovia\": { country: \"Liberia\" },\r\n    \"Montego Bay\": { country: \"Jamaica\" },\r\n    \"Montevideo\": { country: \"Uruguay\" },\r\n    \"Moroni\": { country: \"Comoros\" },\r\n    \"Muara\": { country: \"Brunei Darussalam\" },\r\n    \"Mukalla\": { country: \"Yemen\" },\r\n    \"Mumbai\": { country: \"India\" },\r\n    \"Muscat\": { country: \"Oman\" },\r\n    \"Nacala\": { country: \"Mozambique\" },\r\n    \"Naha\": { country: \"Japan\" },\r\n    \"Namibe\": { country: \"Angola\" },\r\n    \"Naples\": { country: \"Italy\" },\r\n    \"Nassau\": { country: \"Bahamas\" },\r\n    \"Neiafu\": { country: \"Tonga\" },\r\n    \"New Westminster\": { country: \"Canada\" },\r\n    \"New York\": { country: \"USA\" },\r\n    \"Newcastle\": { country: \"Australia\" },\r\n    \"Nieuw Nickerie\": { country: \"Suriname\" },\r\n    \"Nishtun\": { country: \"Yemen\" },\r\n    \"Nouadhibou\": { country: \"Mauritania\" },\r\n    \"Nouakchott\": { country: \"Mauritania\" },\r\n    \"Noumea\": { country: \"New Caledonia\" },\r\n    \"Novorossiysk\": { country: \"Russian Federation\" },\r\n    \"Nuku'alofa\": { country: \"Tonga\" },\r\n    \"Obock\": { country: \"Djibouti\" },\r\n    \"Odessa\": { country: \"Ukraine\" },\r\n    \"Omboue\": { country: \"Gabon\" },\r\n    \"Onne\": { country: \"Nigeria\" },\r\n    \"Oran\": { country: \"Algeria\" },\r\n    \"Oranjestad\": { country: \"Aruba\" },\r\n    \"Osaka\": { country: \"Japan\" },\r\n    \"Padang\": { country: \"Indonesia\" },\r\n    \"Palermo\": { country: \"Italy\" },\r\n    \"Papeete\": { country: \"French Polynesia\" },\r\n    \"Paramaribo\": { country: \"Suriname\" },\r\n    \"Pattaya\": { country: \"Thailand\" },\r\n    \"Pemba\": { country: \"Mozambique\" },\r\n    \"Penang Port\": { country: \"Malaysia\" },\r\n    \"Philipsburg\": { country: \"Netherlands Antilles\" },\r\n    \"Piraeus\": { country: \"Greece\" },\r\n    \"Plymouth\": { country: \"Montserrat\" },\r\n    \"Pohnpei\": { country: \"Micronesia\" },\r\n    \"Pointe Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-Noire\": { country: \"Republic of the Congo\" },\r\n    \"Pointe-à-Pitre\": { country: \"Guadeloupe\" },\r\n    \"Ponce\": { country: \"Puerto Rico\" },\r\n    \"Port Castries\": { country: \"St. Lucia\" },\r\n    \"Port Elizabeth\": { country: \"South Africa\" },\r\n    \"Port Gentil\": { country: \"Gabon\" },\r\n    \"Port Harcourt\": { country: \"Nigeria\" },\r\n    \"Port Kelang\": { country: \"Malaysia\" },\r\n    \"Port Kembla\": { country: \"Australia\" },\r\n    \"Port Louis\": { country: \"Mauritius\" },\r\n    \"Port Moresby\": { country: \"Papua New Guinea\" },\r\n    \"Port of Spain\": { country: \"Trinidad and Tobago\" },\r\n    \"Port Rashid\": { country: \"United Arab Emirates\" },\r\n    \"Port Réunion\": { country: \"Reunion\" },\r\n    \"Port Sudan\": { country: \"Sudan\" },\r\n    \"Port Sultan Qaboos\": { country: \"Oman\" },\r\n    \"Port Victoria\": { country: \"Seychelles\" },\r\n    \"Port Vila\": { country: \"Vanuatu\" },\r\n    \"Port Villa\": { country: \"Vanuatu\" },\r\n    \"Port-au-Prince\": { country: \"Haiti\" },\r\n    \"Port-Louis\": { country: \"Mauritius\" },\r\n    \"Port-Vila\": { country: \"Vanuatu\" },\r\n    \"Porto Grande (Mindelo)\": { country: \"Cape Verde\" },\r\n    \"Porto-Novo\": { country: \"Benin\" },\r\n    \"Porto\": { country: \"Portugal\" },\r\n    \"Poti\": { country: \"Georgia\" },\r\n    \"Praslin\": { country: \"Seychelles\" },\r\n    \"Principe\": { country: \"Sao Tome and Principe\" },\r\n    \"Providenciales\": { country: \"Turks And Caicos Islands\" },\r\n    \"Puerto Barrios\": { country: \"Guatemala\" },\r\n    \"Puerto Cabello\": { country: \"Venezuela\" },\r\n    \"Puerto Limon\": { country: \"Republic of Costa Rica\" },\r\n    \"Puerto Madryn\": { country: \"Argentina\" },\r\n    \"Puerto Plata\": { country: \"Dominican Republic\" },\r\n    \"Puerto Sucre\": { country: \"Venezuela\" },\r\n    \"Punta del Este\": { country: \"Uruguay\" },\r\n    \"Puntarenas\": { country: \"Costa Rica\" },\r\n    \"Quelimane\": { country: \"Mozambique\" },\r\n    \"Quetzal\": { country: \"Guatemala\" },\r\n    \"Rabaul\": { country: \"Papua New Guinea\" },\r\n    \"Rabigh\": { country: \"Saudi Arabia\" },\r\n    \"Ras Al Ghar\": { country: \"Saudi Arabia\" },\r\n    \"Ras al Khafji\": { country: \"Saudi Arabia\" },\r\n    \"Ras al-Arah\": { country: \"Yemen\" },\r\n    \"Ras Gharib\": { country: \"Egypt\" },\r\n    \"Ras Isa Marine Terminal\": { country: \"Yemen\" },\r\n    \"Ras Isa\": { country: \"Yemen\" },\r\n    \"Ras Shukheir\": { country: \"Egypt\" },\r\n    \"Ras Tanura\": { country: \"Saudi Arabia\" },\r\n    \"Reykjavik\": { country: \"Iceland\" },\r\n    \"Riga\": { country: \"Latvia\" },\r\n    \"Rijeka\": { country: \"Croatia\" },\r\n    \"Rio de Janeiro\": { country: \"Brazil\" },\r\n    \"Road Town\": { country: \"British Virgin Islands\" },\r\n    \"Robertsport\": { country: \"Liberia\" },\r\n    \"Roseau\": { country: \"Commonwealth Of Dominica\" },\r\n    \"Rotterdam\": { country: \"Netherlands\" },\r\n    \"Saida\": { country: \"Lebanon\" },\r\n    \"Saint George's\": { country: \"Grenada\" },\r\n    \"Saint John's\": { country: \"Antigua and Barbuda\" },\r\n    \"Saint John\": { country: \"Barbados\" },\r\n    \"Saint Louis\": { country: \"Senegal\" },\r\n    \"Saint Petersburg\": { country: \"Russian Federation\" },\r\n    \"Saint Pierre\": { country: \"Saint Pierre and Miquelon\" },\r\n    \"Saint-Denis\": { country: \"Reunion\" },\r\n    \"Saipan\": { country: \"Northern Mariana Islands\" },\r\n    \"Salalah\": { country: \"Oman\" },\r\n    \"Saleef\": { country: \"Yemen\" },\r\n    \"San Antonio\": { country: \"Chile\" },\r\n    \"San Jose\": { country: \"Antigua\" },\r\n    \"San Juan\": { country: \"Puerto Rico\" },\r\n    \"San Pedro\": { country: \"Cote D'Ivoire\" },\r\n    \"Sana'a\": { country: \"Yemen\" },\r\n    \"Santo Domingo\": { country: \"Dominican Republic\" },\r\n    \"Santo\": { country: \"Vanuatu\" },\r\n    \"Santos\": { country: \"Brazil\" },\r\n    \"Sao Tome\": { country: \"Sao Tome and Principe\" },\r\n    \"Scarborough\": { country: \"Trinidad and Tobago\" },\r\n    \"Sevastopol\": { country: \"Ukraine\" },\r\n    \"Sfax\": { country: \"Tunisia\" },\r\n    \"Shanghai\": { country: \"Peoples Republic of China\" },\r\n    \"Sharjah\": { country: \"United Arab Emirates\" },\r\n    \"Shenzhen\": { country: \"Peoples Republic of China\" },\r\n    \"Sibu Port\": { country: \"Malaysia\" },\r\n    \"Sidon\": { country: \"Lebanon\" },\r\n    \"Sihanoukville\": { country: \"Cambodia\" },\r\n    \"Singapore\": { country: \"Singapore\" },\r\n    \"Sinop\": { country: \"Turkey\" },\r\n    \"Sittwe\": { country: \"Myanmar\" },\r\n    \"Sochi\": { country: \"Russian Federation\" },\r\n    \"Socotra\": { country: \"Yemen\" },\r\n    \"Sohar\": { country: \"Oman\" },\r\n    \"Sokodé\": { country: \"Togo\" },\r\n    \"Southampton\": { country: \"United Kingdom\" },\r\n    \"Soyo\": { country: \"Angola\" },\r\n    \"Split\": { country: \"Croatia\" },\r\n    \"St. Croix\": { country: \"US Virgin Islands\" },\r\n    \"St. George\": { country: \"Grenada\" },\r\n    \"Stockholm\": { country: \"Sweden\" },\r\n    \"Suakin\": { country: \"Sudan\" },\r\n    \"Sur\": { country: \"Lebanon\" },\r\n    \"Surabaya\": { country: \"Indonesia\" },\r\n    \"Suva\": { country: \"Fiji\" },\r\n    \"Sydney\": { country: \"Australia\" },\r\n    \"Szczecin\": { country: \"Poland\" },\r\n    \"São Tomé\": { country: \"Sao Tome and Principe\" },\r\n    \"Tadjoura\": { country: \"Djibouti\" },\r\n    \"Tainan\": { country: \"Taiwan\" },\r\n    \"Tallinn\": { country: \"Estonia\" },\r\n    \"Tamatave (Toamasina)\": { country: \"Madagascar\" },\r\n    \"Tanajib\": { country: \"Saudi Arabia\" },\r\n    \"Tanjung Pelepas\": { country: \"Malaysia\" },\r\n    \"Tarawa\": { country: \"Kiribati\" },\r\n    \"Tartus\": { country: \"Syria\" },\r\n    \"Tauranga\": { country: \"New Zealand\" },\r\n    \"Tekirdag\": { country: \"Turkey\" },\r\n    \"Tema\": { country: \"Ghana\" },\r\n    \"Tianjin\": { country: \"Peoples Republic of China\" },\r\n    \"Tin Can Island\": { country: \"Nigeria\" },\r\n    \"Toamasina\": { country: \"Madagascar\" },\r\n    \"Toliara\": { country: \"Madagascar\" },\r\n    \"Tonga\": { country: \"Tonga\" },\r\n    \"Toripoli\": { country: \"Libya\" },\r\n    \"Trabzon\": { country: \"Turkey\" },\r\n    \"Trieste\": { country: \"Italy\" },\r\n    \"Trincomalee\": { country: \"Sri Lanka\" },\r\n    \"Tripoli\": { country: \"Lebanon\" },\r\n    \"Tunis\": { country: \"Tunisia\" },\r\n    \"Turkmenbashi\": { country: \"Turkmenistan\" },\r\n    \"Tyre\": { country: \"Lebanon\" },\r\n    \"Tórshavn\": { country: \"Faroe Islands\" },\r\n    \"ULAANBAATAR\": { country: \"Mongolia\" },\r\n    \"Ulcinj\": { country: \"Montenegro\" },\r\n    \"Umm Qasr\": { country: \"Iraq\" },\r\n    \"Ushuaia\": { country: \"Argentina\" },\r\n    \"Valletta\": { country: \"Malta\" },\r\n    \"Valparaíso\": { country: \"Chile\" },\r\n    \"Vancouver\": { country: \"Canada\" },\r\n    \"Varna\": { country: \"Bulgaria\" },\r\n    \"Veracruz\": { country: \"Mexico\" },\r\n    \"Victoria\": { country: \"Mahe (Seychelles)\" },\r\n    \"Visakhapatnam\": { country: \"India\" },\r\n    \"Vladivostok\": { country: \"Russian Federation\" },\r\n    \"Walvis Bay\": { country: \"Namibia\" },\r\n    \"Warri\": { country: \"Nigeria\" },\r\n    \"Wellington\": { country: \"New Zealand\" },\r\n    \"Willemstad\": { country: \"Curacao\" },\r\n    \"Yanbu\": { country: \"Saudi Arabia\" },\r\n    \"Yangon\": { country: \"Myanmar\" },\r\n    \"Yap\": { country: \"Micronesia\" },\r\n    \"Yaren\": { country: \"Nauru\" },\r\n    \"Yokohama\": { country: \"Japan\" },\r\n    \"Zeebrugge\": { country: \"Belgium\" },\r\n    \"Ziguinchor\": { country: \"Senegal\" },\r\n    \"Zonguldak\": { country: \"Turkey\" },\r\n}\r\n\r\n\r\nconst AddPortModal = ({ handleAddPortModalClose }) => {\r\n\r\n    const addPortModalVisible = useSelector((state) => state.addPortModalVisible);\r\n    const inputPortText = useRef(null);\r\n    const inputCountryText = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [addButtonLoading, setAddButtonLoading] = useState(false);\r\n\r\n    const handleAddButton = async () => {\r\n        setAddButtonLoading(true);\r\n        if (inputPortText.current?.value !== '' && inputCountryText.current?.value !== '') {\r\n            const countryCode = inputCountryText.current?.value;\r\n            const portCode = inputPortText.current?.value;\r\n            const formattedPortCode = portCode.replace(/\\./g, '_');\r\n            const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n            const { datetime } = response.data;\r\n            const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n            const year = moment(datetime).format('YYYY');\r\n            const month = moment(datetime).format('MM');\r\n            const monthWithDay = moment(datetime).format('MM/DD');\r\n            const date = moment(datetime).format('YYYY/MM/DD');\r\n            const day = moment(datetime).format('DD');\r\n            const time = moment(datetime).format('HH:mm');\r\n            try {\r\n                await addPort(formattedPortCode, inputCountryText.current?.value, 9999);\r\n                const logData = {\r\n                    message: `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Added: \"${nameVariable.text}\" added port \"${portCode}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Added'.toLowerCase(),\r\n                        'Added'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>Port added successfully!</Text>\r\n                        </View>;\r\n                    }\r\n\r\n                })\r\n                dispatch(setAddPortModalVisible(false));\r\n                setAddButtonLoading(false);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        else {\r\n            setAddButtonLoading(false);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const filterInput = (inputRef) => {\r\n        const currentValue = inputRef.current.value;\r\n        const filteredValue = currentValue.replace(/[^a-zA-Z0-9. ]/g, '');\r\n        if (currentValue !== filteredValue) {\r\n            inputRef.current.setNativeProps({ text: filteredValue });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={addPortModalVisible}\r\n            onClose={() => {\r\n                handleAddPortModalClose();\r\n                inputPortText.current.value = '';\r\n            }}\r\n            size={'md'}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header style={{ backgroundColor: '#7B9CFF', }}><Text color={'white'} fontSize={20} bold>Add Port</Text></Modal.Header>\r\n                <Modal.Body >\r\n                    <View style={{ marginVertical: 5, }}>\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Port</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputPortText}\r\n                            onChangeText={() => filterInput(inputPortText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Port' />\r\n\r\n                        <View style={{ backgroundColor: '#7B9CFF', flex: 1, marginTop: 10, }}>\r\n                            <Text bold color={'white'} marginLeft={1}>Country</Text>\r\n                        </View>\r\n                        <TextInput\r\n                            ref={inputCountryText}\r\n                            onChangeText={() => filterInput(inputCountryText)}\r\n                            style={{\r\n                                outlineStyle: 'none',\r\n                                flex: 1,\r\n                                padding: 5,\r\n                                backgroundColor: 'white',\r\n                                borderBottomLeftRadius: 5,\r\n                                borderBottomRightRadius: 5,\r\n                                placeholderTextColor: '#ACADA3',\r\n                                borderColor: '#D4D4D4',\r\n                                borderWidth: 1,\r\n                            }}\r\n                            placeholder='Input Country' />\r\n\r\n                    </View>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button.Group variant=\"solid\" space=\"2\">\r\n                        <Button colorScheme={'gray'} onPress={() => {\r\n                            handleAddPortModalClose();\r\n                            inputPortText.current.value = '';\r\n                        }}>Cancel</Button>\r\n                        {addButtonLoading ?\r\n                            (<Spinner size=\"lg\" color={'#16A34A'} />) :\r\n                            (<Button colorScheme={'success'} onPress={handleAddButton}>Add</Button>)\r\n                        }\r\n\r\n                    </Button.Group>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst DeletePortModal = ({ handleDeletePortModalClose }) => {\r\n    const deletePortModalVisible = useSelector((state) => state.deletePortModalVisible);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    const handleDeletePort = async () => {\r\n        setButtonLoading(true);\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        const formattedFieldCode = selectedPort.replace(/\\./g, '_');\r\n\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n        updateDoc(documentRef, {\r\n            [formattedFieldCode]: deleteField()\r\n        })\r\n            .then(() => {\r\n                console.log('Field deleted successfully');\r\n                handleDeletePortModalClose();\r\n                setButtonLoading(false);\r\n                const logData = {\r\n                    message: `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: false,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `Port Deleted: \"${nameVariable.text}\" deleted port \"${selectedPort}\" for Freight.`.toLowerCase(),\r\n                        'Port'.toLowerCase(),\r\n                        'Port Deleted'.toLowerCase(),\r\n                        'Deleted'.toLowerCase(),\r\n                        'Freight'.toLowerCase(),\r\n                        selectedPort.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n\r\n                addLogToCollection(logData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting field: ', error);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={deletePortModalVisible} onClose={handleDeletePortModalClose}>\r\n            <Modal.Content>\r\n                <Modal.CloseButton />\r\n                <Modal.Header>Delete Port?</Modal.Header>\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the selected port?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <TouchableOpacity\r\n                            style={{ flex: 1, backgroundColor: '#525252', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            onPress={handleDeletePortModalClose}\r\n                        >\r\n                            <Text style={{ color: 'white', alignSelf: 'center', }}>No</Text>\r\n                        </TouchableOpacity>\r\n                        {buttonLoading ?\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                            ><Spinner size={18} color={'white'} />\r\n                            </TouchableOpacity>) :\r\n                            (<TouchableOpacity\r\n                                style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, margin: 5, }}\r\n                                onPress={handleDeletePort}\r\n                            >\r\n                                <Text style={{ color: 'white', alignSelf: 'center', }}>Yes</Text>\r\n                            </TouchableOpacity>)\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst PortsTable = () => {\r\n    const dispatch = useDispatch();\r\n    const methodData = useSelector((state) => state.methodData);\r\n    const toast = useToast();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const optionsPerPage = [10, 20, 50];\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const inputSearchRef = useRef(null);\r\n    const textAreaAddMethod = useRef(null);\r\n\r\n    const inputSortOrder = useRef([]);\r\n    const inputProfitPrice = useRef([]);\r\n    const inputNagoyaPrice = useRef([]);\r\n    const inputYokohamaPrice = useRef([]);\r\n    const inputKyushuPrice = useRef([]);\r\n    const inputKobePrice = useRef([]);\r\n    const inputMemo = useRef([]);\r\n\r\n    const [inputMemoValues, setInputMemoValues] = useState({});\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const handleSortOrderTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 3);\r\n\r\n        inputSortOrder.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n    const handleProfitPriceTextChange = (text, item) => {\r\n        // Remove any non-numeric characters from the input text and limit to 3 digits\r\n        const numericValue = text.replace(/[^0-9]/g, '').slice(0, 4);\r\n\r\n        inputProfitPrice.current[item.ports].value = numericValue;\r\n\r\n    };\r\n\r\n\r\n    const updatePortsField = async (portCode, newValue, inputRef, title, fieldName) => {\r\n        // Specify the document reference\r\n        const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n        const { datetime } = response.data;\r\n        const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n        const year = moment(datetime).format('YYYY');\r\n        const month = moment(datetime).format('MM');\r\n        const monthWithDay = moment(datetime).format('MM/DD');\r\n        const date = moment(datetime).format('YYYY/MM/DD');\r\n        const day = moment(datetime).format('DD');\r\n        const time = moment(datetime).format('HH:mm');\r\n\r\n        const documentRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n        if (newValue !== '') {\r\n            // Replace dots with underscores in the countryCode if the keys in Firestore use underscores\r\n            // If your keys can contain dots and are used as such in Firestore, do not replace with underscores.\r\n            const formattedCountryCode = portCode.replace(/\\./g, '_'); // Replace dots with underscores or any other valid character\r\n\r\n            // Specify the field using dot notation for the nested field\r\n            const field = `${formattedCountryCode}.${fieldName}`;\r\n\r\n            try {\r\n                // Perform the update\r\n                await updateDoc(documentRef, {\r\n                    [field]: newValue\r\n                });\r\n\r\n                const logData = {\r\n                    message: `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\".`,\r\n                    timestamp: formattedTime,\r\n                    colorScheme: true,\r\n                    keywords: [\r\n                        formattedTime.toLowerCase(),\r\n                        `${title} Updated: \"${nameVariable.text}\" updated \"${portCode}\" ${title} to \"${newValue}\"`.toLowerCase(),\r\n                        `Sort`.toLowerCase(),\r\n                        `${title}`.toLowerCase(),\r\n                        `${title} Updated`.toLowerCase(),\r\n                        `Updated`.toLowerCase(),\r\n                        portCode.toLowerCase(),\r\n                        nameVariable.text.toLowerCase(),\r\n                        year.toLowerCase(),\r\n                        month.toLowerCase(),\r\n                        monthWithDay.toLowerCase(),\r\n                        date.toLowerCase(),\r\n                        day.toLowerCase(),\r\n                        time.toLowerCase(),\r\n                    ],\r\n                };\r\n                toast.show({\r\n                    render: () => {\r\n                        return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n                            <Text style={{ color: 'white' }}>{title} updated successfully!</Text>\r\n                        </View>;\r\n                    }\r\n                })\r\n                addLogToCollection(logData);\r\n                dispatch(setLoadingModalVisible(false));\r\n                console.log(`${title} updated successfully`);\r\n            } catch (error) {\r\n                console.error(`Error updating ${title}:`, error);\r\n\r\n            }\r\n        }\r\n        else {\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return data.filter((item) =>\r\n            item.country.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.ports.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n            item.sortOrder.toString().includes(searchQuery)\r\n        );\r\n    }, [searchQuery, data]);\r\n\r\n    const paginatedData = useMemo(() => {\r\n        const startIndex = page * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return filtered.slice(startIndex, endIndex);\r\n    }, [page, itemsPerPage, searchQuery, data, filtered]);\r\n\r\n\r\n    const handleSearch = debounce(() => {\r\n        setSearchQuery(inputSearchRef.current?.value);\r\n    }, 50);\r\n\r\n    const startIndex = page * itemsPerPage;\r\n    const endIndex = Math.min(startIndex + itemsPerPage, data.length);\r\n\r\n    // useEffect(() => {\r\n    //     const portsDataWithSortOrder = Object.entries(portsList).reduce((acc, [portName, portDetails], index) => {\r\n    //         // Replace dots in portName with underscores\r\n    //         const sanitizedPortName = portName.replace(/\\./g, '_');\r\n    //         acc[sanitizedPortName] = { ...portDetails, sortOrder: index };\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     setDoc(doc(projectExtensionFirestore, \"CustomerCountryPort\", \"PortsDoc\"), portsDataWithSortOrder)\r\n    //         .then(() => {\r\n    //             console.log(\"Document successfully written!\");\r\n    //             dispatch(setLoadingModalVisible(false));\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(\"Error writing document: \", error);\r\n    //         });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(projectExtensionFirestore, 'CustomerCountryPort', 'PortsDoc');\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        // This will start the listener\r\n        const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const formattedData = Object.keys(data)\r\n                    .map(key => ({\r\n                        ports: key.replace(/_/g, '.'),\r\n                        ...data[key],\r\n                    }))\r\n                    .sort((a, b) => a.sortOrder - b.sortOrder); // Sorting based on the sortOrder field\r\n                setData(formattedData);\r\n                // setFilteredData(formattedData);\r\n                dispatch(setLoadingModalVisible(false));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n                dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error fetching countries: \", error);\r\n\r\n        });\r\n\r\n        // This will unsubscribe from the listener when the component is unmounted\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n\r\n    const handleAddMethodTextChange = () => {\r\n        const textAreaValue = textAreaAddMethod.current?.value;\r\n        if (textAreaValue) {\r\n            const newText = textAreaValue\r\n                .split('\\n')\r\n                .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n                .join('\\n');\r\n            textAreaAddMethod.current.setNativeProps({ text: newText });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        paginatedData.forEach(item => {\r\n            inputMemo.current[item.ports].value = item.memo ? item.memo : '';\r\n            inputSortOrder.current[item.ports].value = item.sortOrder ? item.sortOrder : 0;\r\n            inputProfitPrice.current[item.ports].value = item.profitPrice ? item.profitPrice : 0;\r\n            inputNagoyaPrice.current[item.ports].value = item.nagoyaPrice ? item.nagoyaPrice : 0;\r\n            inputYokohamaPrice.current[item.ports].value = item.yokohamaPrice ? item.yokohamaPrice : 0;\r\n            inputKyushuPrice.current[item.ports].value = item.kyushuPrice ? item.kyushuPrice : 0;\r\n            inputKobePrice.current[item.ports].value = item.kobePrice ? item.kobePrice : 0;\r\n\r\n\r\n\r\n        });\r\n        // setInputMemoValues(initialValues);\r\n\r\n    }, [paginatedData]); // Run this effect when 'items' changes\r\n\r\n    const handleAddPortModalOpen = () => {\r\n\r\n        dispatch(setAddPortModalVisible(true));\r\n\r\n    }\r\n\r\n    const handleAddPortModalClose = () => {\r\n\r\n        dispatch(setAddPortModalVisible(false));\r\n\r\n    }\r\n\r\n    const handleDeletePortModalOpen = (selectedValue) => {\r\n\r\n        dispatch(setDeletePortModalVisible(true));\r\n        selectedPort = selectedValue;\r\n\r\n    }\r\n\r\n    const handleDeletePortModalClose = () => {\r\n\r\n        dispatch(setDeletePortModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {screenWidth >= 1280 ? (\r\n                <View style={{ flex: 1, }}>\r\n                    {/* Search Bar */}\r\n                    <View style={{ padding: 10 }}>\r\n                        <TextInput\r\n                            ref={inputSearchRef}\r\n                            onSubmitEditing={handleSearch}\r\n                            style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                            placeholder='Search'\r\n                            returnKeyType='search'\r\n                            autoCapitalize='none'\r\n                        />\r\n                    </View>\r\n\r\n                    {/* Add Port Button */}\r\n                    <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                        <TouchableOpacity\r\n                            onPress={handleAddPortModalOpen}\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                padding: 10,\r\n                                borderWidth: 1,\r\n                                borderColor: 'white',\r\n                                backgroundColor: '#16A34A',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: '#E4E4E7',\r\n                            backgroundColor: '#0642F4',\r\n                            padding: 10,\r\n                            borderRadius: 5,\r\n                            marginTop: 10,\r\n                        }}\r\n                    >\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2 }}>\r\n                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, padding: 2, flexDirection: 'row' }}>\r\n                            <SortAndAddModal\r\n                                collectionName='CustomerCountryPort'\r\n                                docName='MethodDoc'\r\n                                handleAddTextChange={handleAddMethodTextChange}\r\n                                textAreaAdd={textAreaAddMethod}\r\n                                title='Method'\r\n                                dataName={'methodData'}\r\n                                databaseInit={projectExtensionFirestore}\r\n                                headerText=\"Rearrange/Add Method\"\r\n                                data={methodData}\r\n                            />\r\n                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                        </View>\r\n                        <View style={{ flex: 2, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, padding: 2, justifyContent: 'center', alignItems: 'center', }}>\r\n                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                    <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                        {paginatedData.map((item, index) => (\r\n                            <View\r\n                                key={index}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    alignItems: 'center',\r\n                                    borderBottomWidth: 1,\r\n                                    borderBottomColor: '#E4E4E7',\r\n                                    backgroundColor: '#BFDBFE',\r\n                                    paddingVertical: 10,\r\n                                }}>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                <Text style={{ flex: 1, marginHorizontal: 3, alignSelf: 'center' }} selectable>{item.country}</Text>\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                    <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                        <TextInput\r\n                                            onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                            onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                            ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                            style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                        />\r\n                                        <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                            <TouchableHighlight\r\n                                                onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                style={{\r\n                                                    backgroundColor: '#16A34A',\r\n                                                    borderRadius: 5,\r\n                                                    padding: 5,\r\n                                                    margin: 2,\r\n                                                    alignSelf: 'center',\r\n                                                }}>\r\n                                                <MaterialIcons name='update' color='white' size={22} />\r\n                                            </TouchableHighlight>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                        ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                        ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                        ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                        ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                    <TextInput\r\n                                        onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                        ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                    />\r\n                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                margin: 2,\r\n                                                alignSelf: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: screenWidth < 1800 ? 2 : 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                    <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                </View>\r\n\r\n                                <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                    <TextInput\r\n                                        multiline\r\n                                        // value={inputMemoValues[item.ports] || ''}\r\n                                        // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                        ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                        style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                    />\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#16A34A',\r\n                                                borderRadius: 5,\r\n                                                padding: 5,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n\r\n                                    <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                        <TouchableHighlight\r\n                                            onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                            style={{\r\n                                                backgroundColor: '#DC2626',\r\n                                                borderRadius: 5,\r\n                                                padding: 10,\r\n                                                alignSelf: 'center',\r\n                                                height: '100%',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                            }}>\r\n                                            <AntDesign name='delete' color='white' size={22} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                                {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                            </View>\r\n                        ))}\r\n                        <DataTable.Pagination\r\n                            page={page}\r\n                            numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                            onPageChange={(page) => setPage(page)}\r\n                            label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                            optionsPerPage={optionsPerPage}\r\n                            itemsPerPage={itemsPerPage}\r\n                            setItemsPerPage={setItemsPerPage}\r\n                            showFastPagination\r\n                            optionsLabel={'Rows per page'}\r\n                        />\r\n                    </DataTable>\r\n                    <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                    <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                </View>) :\r\n                (\r\n                    //Ports Table Mobile View\r\n                    <View style={{ flex: 1, }}>\r\n                        {/* Search Bar */}\r\n                        <View style={{ padding: 10 }}>\r\n                            <TextInput\r\n                                ref={inputSearchRef}\r\n                                onSubmitEditing={handleSearch}\r\n                                style={{ outlineStyle: 'none', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3' }}\r\n                                placeholder='Search'\r\n                                returnKeyType='search'\r\n                                autoCapitalize='none'\r\n                            />\r\n                        </View>\r\n\r\n                        {/* Add Port Button */}\r\n                        <View style={{ paddingHorizontal: 10, paddingTop: 0, paddingBottom: 0, alignItems: 'flex-start' }}>\r\n                            <TouchableOpacity\r\n                                onPress={handleAddPortModalOpen}\r\n                                style={{\r\n                                    borderRadius: 5,\r\n                                    padding: 10,\r\n                                    borderWidth: 1,\r\n                                    borderColor: 'white',\r\n                                    backgroundColor: '#16A34A',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <MaterialIcons name=\"add\" size={20} color={'white'} />\r\n                                <Text style={{ color: 'white', fontWeight: 'bold', marginLeft: 5 }}>Add Port</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <DataTable margin={[0, 0, 0, 1, 1, 1]}>\r\n                            {paginatedData.map((item, index) => (\r\n                                <View\r\n                                    key={index}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        flexDirection: 'column',\r\n                                        borderWidth: 1,\r\n                                        borderColor: '#E4E4E7',\r\n                                        backgroundColor: '#BFDBFE',\r\n                                        margin: 10,\r\n                                    }}>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Port Name</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3 }} selectable>{item.ports}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Country</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <Text style={{ flex: 1, marginHorizontal: 3, }} selectable>{item.country}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Sort Order</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.sortOrder ? item.sortOrder : 0}→</Text> */}\r\n                                                <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, borderLeftColor: '#E4E4E7', }}>\r\n                                                    <TextInput\r\n                                                        onChangeText={(text) => handleSortOrderTextChange(text, item)}\r\n                                                        onSubmitEditing={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                        ref={(ref) => (inputSortOrder.current[item.ports] = ref)}\r\n                                                        style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5 }}\r\n                                                    />\r\n                                                    <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                        <TouchableHighlight\r\n                                                            onPress={() => updatePortsField(item.ports, inputSortOrder.current[item.ports].value, inputSortOrder, 'Sort Order', 'sortOrder')}\r\n                                                            underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                            style={{\r\n                                                                backgroundColor: '#16A34A',\r\n                                                                borderRadius: 5,\r\n                                                                padding: 5,\r\n                                                                margin: 2,\r\n                                                                alignSelf: 'center',\r\n                                                            }}>\r\n                                                            <MaterialIcons name='update' color='white' size={22} />\r\n                                                        </TouchableHighlight>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Price (USD)</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.profitPrice ? item.profitPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onChangeText={(text) => handleProfitPriceTextChange(text, item)}\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                    ref={(ref) => (inputProfitPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputProfitPrice.current[item.ports].value, inputProfitPrice, 'Profit Price', 'profitPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Nagoya</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.nagoyaPrice ? item.nagoyaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                    ref={(ref) => (inputNagoyaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputNagoyaPrice.current[item.ports].value, inputNagoyaPrice, 'Nagoya Price', 'nagoyaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Yokohama</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.yokohamaPrice ? item.yokohamaPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                    ref={(ref) => (inputYokohamaPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputYokohamaPrice.current[item.ports].value, inputYokohamaPrice, 'Yokohama Price', 'yokohamaPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kyushu</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kyushuPrice ? item.kyushuPrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                    ref={(ref) => (inputKyushuPrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKyushuPrice.current[item.ports].value, inputKyushuPrice, 'Kyushu Price', 'kyushuPrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Kobe</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                {/* <Text style={{ marginHorizontal: 3, alignSelf: 'center', }} bold>{item.kobePrice ? item.kobePrice : 0}→</Text> */}\r\n                                                <TextInput\r\n                                                    onSubmitEditing={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                    ref={(ref) => (inputKobePrice.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', padding: 5, width: '90%', backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderLeftColor: '#E4E4E7', borderLeftWidth: 1, }}\r\n                                                />\r\n                                                <View style={{ backgroundColor: 'white', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputKobePrice.current[item.ports].value, inputKobePrice, 'Kobe Price', 'kobePrice')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            margin: 2,\r\n                                                            alignSelf: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Method</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n\r\n\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, backgroundColor: 'white' }}>\r\n                                                <SelectMethod defaultValue={item.method} portCode={item.ports} page={page} searchQuery={searchQuery} />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Memo</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 2, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, }}>\r\n                                                <TextInput\r\n                                                    multiline\r\n                                                    // value={inputMemoValues[item.ports] || ''}\r\n                                                    // onChangeText={(text) => handleMemoTextChange(text, item.ports)}\r\n                                                    ref={(ref) => (inputMemo.current[item.ports] = ref)}\r\n                                                    style={{ outlineStyle: 'none', flex: 2, height: 60, paddingLeft: 5, backgroundColor: 'white', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, }}\r\n                                                />\r\n                                                <View style={{ borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => updatePortsField(item.ports, inputMemo.current[item.ports].value, inputMemo, 'Memo', 'memo')}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{\r\n                                                            backgroundColor: '#16A34A',\r\n                                                            borderRadius: 5,\r\n                                                            padding: 5,\r\n                                                            alignSelf: 'center',\r\n                                                            height: '100%',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center',\r\n                                                        }}>\r\n                                                        <MaterialIcons name='update' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <View style={{ flexDirection: 'row' }}>\r\n                                        <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                                            <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                                        </View>\r\n                                        <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                                            <View style={{ flex: 1, flexDirection: 'row', borderTopLeftRadius: 5, borderBottomLeftRadius: 5, marginHorizontal: 3, justifyContent: 'center', alignItems: 'center', }}>\r\n                                                <View style={{ width: '100%', borderTopRightRadius: 5, borderBottomRightRadius: 5, }}>\r\n                                                    <TouchableHighlight\r\n                                                        onPress={() => handleDeletePortModalOpen(item.ports)}\r\n                                                        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                                                        style={{ flex: 1, backgroundColor: '#DC2626', padding: 5, borderRadius: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', margin: 6, }}>\r\n                                                        <AntDesign name='delete' color='white' size={22} />\r\n                                                    </TouchableHighlight>\r\n                                                </View>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    {/* <Text style={{ flex: 1, marginHorizontal: 5 }}>{item.inspectionIsRequired}</Text> */}\r\n\r\n                                    {/* You can add the mapping for nearestPorts here, assuming nearestPorts is an array */}\r\n                                    {/* {item.nearestPorts && item.nearestPorts.map((port, portIndex) => (\r\n            <Text key={portIndex}>Nearest Port: {port}</Text>\r\n          ))} */}\r\n                                </View>\r\n                            ))}\r\n                            <DataTable.Pagination\r\n                                page={page}\r\n                                numberOfPages={Math.ceil(filtered.length / itemsPerPage)}\r\n                                onPageChange={(page) => setPage(page)}\r\n                                label={`${startIndex + 1}-${endIndex} of ${filtered.length}`}\r\n                                optionsPerPage={optionsPerPage}\r\n                                itemsPerPage={itemsPerPage}\r\n                                setItemsPerPage={setItemsPerPage}\r\n                                showFastPagination\r\n                                optionsLabel={'Rows per page'}\r\n                            />\r\n                        </DataTable>\r\n                        <AddPortModal handleAddPortModalClose={handleAddPortModalClose} />\r\n                        <DeletePortModal handleDeletePortModalClose={handleDeletePortModalClose} />\r\n                    </View>\r\n                )}\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Freight() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const logo = require('../../assets/C-Hub.png');\r\n    const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n    const [isMobileView, setIsMobileView] = useState(false);\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n    const loginName = useSelector((state) => state.loginName);\r\n    nameVariable.text = loginName;\r\n    const [name, setName] = useState(loginName);\r\n    const [time, setTime] = useState('');\r\n\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n    const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            const newWidth = Dimensions.get('window').width;\r\n            setScreenWidth(newWidth); // Update the screenWidth state\r\n        };\r\n\r\n        // Add event listener for window resize\r\n        Dimensions.addEventListener('change', updateWidth);\r\n\r\n        // Clean up the event listener when the component unmounts or re-renders\r\n        return () => {\r\n            Dimensions.removeEventListener('change', updateWidth);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedButton(defaultSelectedButton));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(projectControlAuth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(projectControlAuth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = projectControlAuth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const listenForNameChange = (documentId) => {\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(projectControlAuth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'}\r\n                >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n                    {/* \r\n                    {screenWidth <= 960 && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n\r\n                    <Box w={screenWidth <= 960 ? 120 : 0} h={screenWidth <= 960 ? 6 : 10} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image} />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n                    {/* Main Content */}\r\n                    {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n                    {/* Main Content Content */}\r\n\r\n\r\n                    {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n                    <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n                        <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <FreightNavigation />\r\n                                <NavigatePage />\r\n                                {/* {selectedButton == 'countries' ? <CountriesTable /> : <></>}\r\n                                {selectedButton == 'ports' ? <PortsTable /> : <></>} */}\r\n                            </View>\r\n                        </ScrollView>\r\n                        {/* <SuccessModal /> */}\r\n\r\n                    </View>\r\n\r\n\r\n                    {/* </Box> */}\r\n\r\n                    {/* </Box> */}\r\n                </View>\r\n\r\n            </View>\r\n            <LoadingModal />\r\n\r\n        </NativeBaseProvider>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { View, Dimensions, StyleSheet, Image } from \"react-native\";\r\nimport { Box, Flex, Popover, Button, Text } from \"native-base\";\r\nimport FastImage from \"react-native-fast-image-web-support\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport MobileViewDrawer from \"../SideDrawer/MobileViewDrawer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst NamePopover = ({ name, handleSignOut }) => {\r\n  const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n  const showPopover = () => {\r\n    setShowNamePopover(!showNamePopover);\r\n  };\r\n\r\n  return (\r\n    <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n      <Flex direction=\"row-reverse\">\r\n        <Popover\r\n          isOpen={showNamePopover}\r\n          trigger={(triggerProps) => (\r\n            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n              <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n            </Text>\r\n          )}\r\n          onClose={() => setShowNamePopover(!showNamePopover)}\r\n          placement='bottom right'\r\n          trapFocus={false}\r\n        >\r\n          <Popover.Content backgroundColor={'#7B9CFF'}>\r\n            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n            <Popover.Body backgroundColor={'#7B9CFF'}>\r\n              <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                Logout\r\n              </Button>\r\n            </Popover.Body>\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StickyHeader = ({ selectedScreen, handleSignOut }) => {\r\n  const loginName = useSelector((state) => state.loginName);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  // const logo = require('https://i.imgur.com/V98nKSK.png');\r\n  // const logo2 = require('https://i.imgur.com/NGCIoSV.png');\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n\r\n    <Box\r\n      px=\"3\"\r\n      bgColor='#7b9cff'\r\n      height={54}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={999}\r\n      flexDirection=\"row\"\r\n      alignItems=\"center\"\r\n      borderBottomWidth={2}\r\n      borderBottomColor={'cyan.500'} >\r\n\r\n      <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5}>\r\n        <Image\r\n          source={{ uri: 'https://i.imgur.com/V98nKSK.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      {screenWidth <= 960 && <MobileViewDrawer\r\n        selectedScreen={selectedScreen}\r\n      />}\r\n\r\n\r\n      <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]}>\r\n      <Image\r\n          source={{ uri: 'https://i.imgur.com/NGCIoSV.png' }}\r\n          style={styles.image}\r\n          resizeMode=\"stretch\"\r\n        />\r\n      </Box>\r\n\r\n      <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n    </Box>\r\n\r\n  );\r\n}\r\n\r\nexport default StickyHeader;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Dimensions, TextInput, Keyboard } from 'react-native';\r\nimport {\r\n    Input,\r\n    Icon,\r\n    Stack,\r\n    Pressable,\r\n    Center,\r\n    PresenceTransition,\r\n    NativeBaseProvider,\r\n    Button,\r\n    Box,\r\n    HStack,\r\n    Image,\r\n    Container,\r\n    Header,\r\n    Left,\r\n    Body,\r\n    Title,\r\n    Content,\r\n    Text,\r\n    Heading,\r\n    Flex,\r\n    VStack,\r\n    ScrollView,\r\n    SectionList,\r\n    useBreakpointValue,\r\n    Spinner,\r\n    Modal,\r\n    Divider,\r\n    IconButton,\r\n    Popover\r\n} from \"native-base\";\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    FontAwesome,\r\n    Entypo,\r\n    MaterialIcons,\r\n    Ionicons,\r\n    Fontisto,\r\n    EvilIcons,\r\n    AntDesign,\r\n    MaterialCommunityIcons,\r\n    Feather,\r\n    FontAwesome5Brands\r\n} from 'react-native-vector-icons';\r\nimport 'react-native-gesture-handler';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { signOut, onAuthStateChanged, reload, getAuth, getIdTokenResult, createUserWithEmailAndPassword, fetchSignInMethodsForEmail } from 'firebase/auth';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport { app, db, getFirestore, collection, addDoc, doc, setDoc, auth, getDoc, onSnapshot, updateDoc, getDocs, orderBy, query, limit } from '../../firebasecontrol'\r\nimport { arrayUnion, where, startAfter, endBefore, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport { projectExtensionFirestore, projectControlFirestore } from '../../crossFirebase';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport './../style.css';\r\nimport { debounce, set, throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { bg } from 'date-fns/locale';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLoginName } from './redux/store';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { LineChart, BarChart } from 'react-native-chart-kit';\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\r\nimport {\r\n    OPEN_EXCHANGE_API_KEY\r\n} from '@env';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst firestore = getFirestore();\r\nconst getEmailOfCurrentUser = () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n        const email = user.email;\r\n        return email;\r\n    } else {\r\n        // console.log('No user is currently authenticated');\r\n        return null;\r\n    }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\nimport {\r\n    setLogsData,\r\n    setLoadingModalVisible,\r\n} from './redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\nlet selectedScreen = 'LOGS'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addKeywordsToLogs = async () =>{\r\n//     const logsRef = collection(projectControlFirestore, \"logs\");\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(logsRef);\r\n\r\n//       querySnapshot.forEach((doc) => {\r\n//         const data = doc.data();\r\n//         const keywords = [\r\n//           data.timestamp,\r\n//           data.message,\r\n//         ];\r\n\r\n//         updateDoc(doc.ref, {\r\n//           keywords: arrayUnion(...keywords)\r\n//         });\r\n//       });\r\n\r\n//       console.log(\"Keywords added successfully to logs collection.\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding keywords to logs collection:\", error);\r\n//     }\r\n//   }\r\nconst LoadingModal = () => {\r\n    const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                flex: 1,\r\n                display: loadingModalVisible ? 'flex' : 'none',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* Content within the modal */}\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spinner size=\"lg\" color=\"white\" />\r\n                <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconst LogsTable = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    const [firstVisible, setFirstVisible] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const searchInputRef = useRef(null);\r\n    const logsData = useSelector((state) => state.logsData);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(projectControlFirestore, 'logs'),\r\n            orderBy('timestamp', 'desc'),\r\n            limit(pageSize)\r\n        );\r\n        const unsubscribe = onSnapshot(q, (documents) => {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n            dispatch(setLogsData(logsDatabaseData));\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            setFirstVisible(documents.docs[0]);\r\n        });\r\n        return () => unsubscribe();\r\n\r\n    }, []);\r\n\r\n    const fetchNextData = async () => {\r\n\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collectionGroup(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                startAfter(lastVisible),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'next');\r\n\r\n\r\n\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const fetchPreviousData = async () => {\r\n        if (searchText === '') {\r\n\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev')\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                endBefore(firstVisible),\r\n                limitToLast(pageSize)\r\n            );\r\n\r\n            const documents = await getDocs(q);\r\n            updateState(documents, 'prev');\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchFirstPage = (documents) => {\r\n\r\n\r\n        const logsDatabaseData = [];\r\n\r\n        documents.forEach((document) => {\r\n            logsDatabaseData.push({\r\n                id: document.id,\r\n                ...document.data(),\r\n            });\r\n        });\r\n\r\n        dispatch(setLogsData(logsDatabaseData));\r\n\r\n        if (documents?.docs[0]) {\r\n            setFirstVisible(documents.docs[0]);\r\n        }\r\n        if (documents?.docs[documents.docs.length - 1]) {\r\n            setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n        if (!documents.empty) {\r\n            const logsDatabaseData = [];\r\n            documents.forEach((document) => {\r\n                logsDatabaseData.push({\r\n                    id: document.id,\r\n                    ...document.data(),\r\n                });\r\n            });\r\n\r\n\r\n\r\n            if (documents?.docs[0]) {\r\n                setFirstVisible(documents.docs[0]);\r\n            }\r\n            if (documents?.docs[documents.docs.length - 1]) {\r\n                setLastVisible(documents.docs[documents.docs.length - 1]);\r\n            }\r\n\r\n            if (pageClicked == 'next') {\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n            if (pageClicked == 'prev') {\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n\r\n            dispatch(setLogsData(logsDatabaseData));\r\n        }\r\n\r\n        else {\r\n\r\n            if (searchText == '') {\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n            else {\r\n\r\n                setCurrentPage(1);\r\n\r\n                const q = query(\r\n                    collection(projectControlFirestore, 'logs'),\r\n                    where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                    orderBy('timestamp', 'desc'),\r\n                    limit(pageSize)\r\n                );\r\n                const firstPageDocuments = await getDocs(q);\r\n                fetchFirstPage(firstPageDocuments);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleNextPage = async () => {\r\n        // setPageClicked('next');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage + 1);\r\n        await fetchNextData();\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const handlePreviousPage = async () => {\r\n        // setPageClicked('previous');\r\n        dispatch(setLoadingModalVisible(true));\r\n        // setCurrentPage(currentPage - 1);\r\n        await fetchPreviousData();\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        searchData();\r\n\r\n    }, [searchText]);\r\n\r\n    const searchData = async () => {\r\n\r\n        dispatch(setLoadingModalVisible(true));\r\n\r\n        if (searchText === '') {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n\r\n            setCurrentPage(1);\r\n            const q = query(\r\n                collection(projectControlFirestore, 'logs'),\r\n                where('keywords', 'array-contains', searchText.toLowerCase()),\r\n                orderBy('timestamp', 'desc'),\r\n                limit(pageSize)\r\n            );\r\n\r\n            const firstPageDocuments = await getDocs(q);\r\n            fetchFirstPage(firstPageDocuments);\r\n            dispatch(setLoadingModalVisible(false));\r\n        }\r\n    };\r\n\r\n    const handleSearchEnter = () => {\r\n\r\n        if (searchInputRef.current?.value !== '') {\r\n            setSearchText(searchInputRef.current.value.trim());\r\n        }\r\n        else {\r\n            setSearchText('');\r\n\r\n            if (searchText == '') {\r\n                searchData();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View>\r\n                <TextInput ref={searchInputRef} style={{ width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                    onSubmitEditing={handleSearchEnter}\r\n                    placeholder='Search'\r\n                    returnKeyType='search'\r\n                    keyboardType='default'\r\n                    autoCapitalize='none'\r\n                />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                    borderBottomWidth: 1,\r\n                    borderBottomColor: '#E4E4E7',\r\n                    backgroundColor: '#0642F4',\r\n                    padding: 2,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Timestamp</Text>\r\n                </View>\r\n                <View style={{ flex: 1, padding: 2 }}>\r\n                    <Text style={{ color: 'white', }} bold>Action</Text>\r\n                </View>\r\n            </View>\r\n            {logsData.map((item) => (\r\n                <View\r\n                    key={item.id}\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#E4E4E7',\r\n                        backgroundColor: item.colorScheme ? '#BBF7D0' : '#EAC7D6',\r\n                        paddingVertical: 10,\r\n                        flexGrow: 1,\r\n                    }}>\r\n                    <View style={{ flex: 1, }}>\r\n                        <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.timestamp}</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Text selectable style={{ width: '90%', }}>{item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n\r\n            <View style={{ flexDirection: 'row', width: screenWidth < 960 ? '90%' : '30%', alignSelf: 'center', }}>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <TouchableOpacity\r\n                        style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                        onPress={handlePreviousPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                <View style={{ flex: 1, backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n                </View>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                    <TouchableOpacity\r\n                        onPress={handleNextPage}>\r\n                        <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                            <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nconst addLogToCollection = async (data) => {\r\n    try {\r\n        const firestore = getFirestore();\r\n        const logsCollectionRef = collection(firestore, 'logs');\r\n\r\n        // Add a new document to the \"logs\" collection\r\n        await addDoc(logsCollectionRef, data);\r\n\r\n        // console.log('Document added successfully!');\r\n    } catch (error) {\r\n        console.error('Error adding document:', error);\r\n    }\r\n};\r\n\r\nconst CurrencyConverterComponent = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isYesLoading, setIsYesLoading] = useState(false);\r\n    const [successModalVisible, setSuccessModalVisible] = useState(false);\r\n    const [todayCurrency, setTodayCurrency] = useState([]);\r\n    const [timestampCurrency, setTimestampCurrency] = useState([]);\r\n    const [exchangeRate, setExchangeRate] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [time, setTime] = useState('');\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n    const loginName = useSelector((state) => state.loginName);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(\r\n            doc(projectExtensionFirestore, 'currency', 'currency'),\r\n            (snapshot) => {\r\n                const data = snapshot.data();\r\n                setTodayCurrency(data?.todayCurrency);\r\n                setTimestampCurrency(data?.timestampCurrency);\r\n            }\r\n        );\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    const CurrencyConverter = async () => {\r\n\r\n        setIsLoading(true);\r\n        setIsYesLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `https://openexchangerates.org/api/latest.json?app_id=${OPEN_EXCHANGE_API_KEY}`\r\n            );\r\n\r\n            // Replace 'YOUR_APP_ID' with your actual API key obtained from Open Exchange Rates\r\n\r\n\r\n            const rates = response.data.rates;\r\n            const usdToJpy = 1 / rates.JPY; // Invert the rate to convert USD to JPY\r\n            const JpyToUsd = rates.JPY / 1;\r\n\r\n\r\n\r\n            const yenToDollar = Number(usdToJpy.toFixed(4)); // Move the toFixed here\r\n            const dollarToYen = Number(JpyToUsd.toFixed(4));\r\n\r\n            const usdToEur = 1 / rates.EUR;\r\n            const eurToUsd = rates.EUR;\r\n\r\n            const usdToGbp = 1 / rates.GBP;\r\n            const gbpToUsd = rates.GBP;\r\n\r\n            const usdToAud = 1 / rates.AUD;\r\n            const audToUsd = rates.AUD;\r\n\r\n\r\n            const usdToCad = 1 / rates.CAD;\r\n            const cadToUsd = rates.CAD;\r\n\r\n            // Calculate Yen to Euro and Euro to Yen\r\n            const yenToEuro = yenToDollar * eurToUsd; // Convert Yen to USD first, then to Euro\r\n            const euroToYen = dollarToYen * usdToEur; // Convert Euro to USD first, then to Yen\r\n\r\n            const yenToGbp = yenToDollar * gbpToUsd; // Convert Yen to USD first, then to Pound Sterling\r\n            const gbpToYen = dollarToYen * usdToGbp; // Convert Pound Sterling to USD first, then to Yen\r\n\r\n            const yenToAud = yenToDollar * audToUsd; // Convert Yen to USD first, then to Australian Dollars\r\n            const audToYen = dollarToYen * usdToAud; // Convert Australian Dollars to USD first, then to Yen\r\n\r\n            const yenToCad = yenToDollar * cadToUsd; // Convert Yen to USD first, then to Canadian Dollars\r\n            const cadToYen = dollarToYen * usdToCad; // Convert Canadian Dollars to USD first, then to Yen\r\n\r\n            // Format the new rates\r\n\r\n\r\n\r\n            setExchangeRate(yenToDollar);\r\n\r\n            const timestamp = response.data.timestamp;\r\n            const lastUpdateDate = new Date(timestamp * 1000);\r\n            setLastUpdate(lastUpdateDate);\r\n\r\n            const formattedLastUpdate = lastUpdateDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            });\r\n\r\n            const newTodayCurrency = `1 JPY = ${yenToDollar} USD / 1 USD = ${dollarToYen} JPY\\n1 JPY = ${yenToEuro.toFixed(4)} EUR / 1 EUR = ${euroToYen.toFixed(4)} JPY\\n1 JPY = ${yenToAud.toFixed(4)} AUD / 1 AUD = ${audToYen.toFixed(4)} JPY\\n1 JPY = ${yenToGbp.toFixed(4)} GBP / 1 GBP = ${gbpToYen.toFixed(4)} JPY\\n1 JPY = ${yenToCad.toFixed(4)} CAD / 1 CAD = ${cadToYen.toFixed(4)} JPY\\n`;\r\n            const currencyRef = doc(projectExtensionFirestore, 'currency', 'currency');\r\n\r\n            try {\r\n                await setDoc(currencyRef, {\r\n                    jpyToUsd: Number(usdToJpy),\r\n                    usdToJpy: Number(JpyToUsd),\r\n                    jpyToEur: yenToEuro,\r\n                    eurToJpy: euroToYen,\r\n                    jpyToGbp: yenToGbp,\r\n                    gbpToJpy: gbpToYen,\r\n                    jpyToAud: yenToAud,\r\n                    audToJpy: audToYen,\r\n                    usdToEur: eurToUsd,\r\n                    eurToUsd: usdToEur,\r\n                    usdToGbp: gbpToUsd,\r\n                    gbpToUsd: usdToGbp,\r\n                    usdToAud: audToUsd,\r\n                    audToUsd: usdToAud,\r\n                    cadToUsd: usdToCad,\r\n                    usdToCad: cadToUsd,\r\n                    jpyToCad: cadToYen,\r\n                    cadToJpy: yenToCad,\r\n                    todayCurrency: newTodayCurrency,\r\n                    timestampCurrency: 'Updated Last: ' + formattedLastUpdate,\r\n                }, { merge: true });\r\n                // console.log('Currency data updated successfully!');\r\n                setSuccessModalVisible(true);\r\n                setModalVisible(false);\r\n                setIsLoading(false);\r\n                setIsYesLoading(false);\r\n                try {\r\n                    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n                    const { datetime } = response.data;\r\n                    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n                    const year = moment(datetime).format('YYYY');\r\n                    const month = moment(datetime).format('MM');\r\n                    const monthWithDay = moment(datetime).format('MM/DD');\r\n                    const date = moment(datetime).format('YYYY/MM/DD');\r\n                    const day = moment(datetime).format('DD');\r\n                    const time = moment(datetime).format('HH:mm');\r\n                    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n                    setTime(formattedTime);\r\n\r\n                    const logDataCurrency = {\r\n                        message: `Currency Update: \"${loginName}\" updated the currency exchange.\\n¥JPY → $USD = ${Number(usdToJpy).toFixed(4)} / $USD → ¥JPY = ${Number(JpyToUsd).toFixed(4)}\\n¥JPY → €EUR = ${yenToEuro.toFixed(4)} / €EUR → ¥JPY = ${euroToYen.toFixed(4)}\\n¥JPY → A$AUD = ${yenToAud.toFixed(4)} / A$AUD → ¥JPY = ${audToYen.toFixed(4)}\\n¥JPY → £GBP = ${yenToGbp.toFixed(4)} / £GBP → ¥JPY = ${gbpToYen.toFixed(4)}\\n¥JPY → C$CAD = ${yenToCad.toFixed(4)} / C$CAD → ¥JPY = ${cadToYen.toFixed(4)}`,\r\n                        timestamp: formattedTime, // Use the formatted time here\r\n                        colorScheme: true,\r\n                        keywords: [\r\n                            formattedTime.toLowerCase(),\r\n                            loginName.toLowerCase(),\r\n                            '$'.toLowerCase(),\r\n                            '¥'.toLowerCase(),\r\n                            `Currency Update: \"${loginName}\" updated the currency exchange.`.toLowerCase(),\r\n                            'Update'.toLowerCase(),\r\n                            'Currency'.toLowerCase(),\r\n                            formattedTime.toLowerCase(),\r\n                            year.toLowerCase(),\r\n                            month.toLowerCase(),\r\n                            monthWithDay.toLowerCase(),\r\n                            date.toLowerCase(),\r\n                            day.toLowerCase(),\r\n                            time.toLowerCase(),\r\n                            timeWithMinutesSeconds.toLowerCase(),\r\n                        ],\r\n\r\n                    };\r\n\r\n                    addLogToCollection(logDataCurrency);\r\n                }\r\n                catch (error) {\r\n                    console.error('Error fetching time:', error);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error updating currency data:', error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching exchange rate:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleCloseCurrencyModal = () => {\r\n        setModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n    const handleOpenCurrencyModal = () => {\r\n        setModalVisible(true);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleCloseSuccessModal = () => {\r\n        setSuccessModalVisible(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                flex={1}\r\n                borderWidth={1}\r\n                borderColor=\"gray.200\"\r\n                borderRadius={4}\r\n                overflow=\"hidden\"\r\n                margin={1}\r\n                alignItems={'center'}\r\n                bg=\"#F5F5F5\">\r\n                <Image\r\n                    source={require('../../assets/currency_background.jpg')}\r\n                    alt=\"Background Image\"\r\n                    resizeMode=\"stretch\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    position={'absolute'}\r\n\r\n                />\r\n\r\n                <Center height=\"100%\">\r\n\r\n                    <Box alignItems=\"center\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"} borderRadius={5} paddingBottom={1}>\r\n\r\n                        <Text bold color=\"#39ff14\" margin={1} textAlign={'center'} fontSize={screenWidth > 960 ? '' : 12} >{todayCurrency}</Text>\r\n                        <Text textAlign=\"center\" color=\"#39ff14\" margin={1} fontSize={screenWidth > 960 ? '' : 12}>{timestampCurrency}</Text>\r\n                        <Button alignSelf={'center'} w={'95%'} _hover={{ bgColor: \"green.800\" }} bgColor={'transparent'} variant={'outline'} borderColor={\"#39ff14\"} _text={{ color: \"#39ff14\", }} onPress={handleOpenCurrencyModal}>{isLoading ? <Spinner color=\"#39ff14\" size={21} /> : 'Update'}</Button>\r\n\r\n                    </Box>\r\n\r\n                </Center>\r\n\r\n            </Box>\r\n\r\n            <Modal isOpen={modalVisible} onClose={handleCloseCurrencyModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header borderBottomWidth={0}>Update currency</Modal.Header>\r\n                    <Modal.Body>\r\n                        Do you want to update to the latest currency?\r\n                    </Modal.Body>\r\n                    <Modal.Footer borderTopWidth={0}>\r\n                        <Button onPress={handleCloseCurrencyModal} flex={1} margin={1} colorScheme={'danger'}>No</Button>\r\n                        <Button onPress={CurrencyConverter} colorScheme={'success'} flex={1} margin={1}>{isYesLoading ? <Spinner color=\"white\" size={21} /> : 'Yes'}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal><Modal isOpen={successModalVisible} onClose={handleCloseSuccessModal}>\r\n                <Modal.Content>\r\n                    <Modal.CloseButton />\r\n                    <Modal.Header bgColor={'green.200'} borderBottomWidth={0}>Update success!</Modal.Header>\r\n                    <Modal.Body bgColor={'green.200'}>\r\n                        <Text bold margin={1}>{todayCurrency}</Text>\r\n                        <Text margin={1}>{timestampCurrency}</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.200'} borderTopWidth={0}>\r\n                        <Button onPress={handleCloseSuccessModal} flex={1} margin={1}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst MyBarChart = () => {\r\n    const dataValues = [\r\n        { day: 1, value: 30 },\r\n        { day: 2, value: 45 },\r\n        // ... add data for each day of the month\r\n        { day: 31, value: 60 }\r\n    ];\r\n\r\n    return (\r\n        <ScrollView style={{ flex: 1, margin: 5, borderRadius: 5, }}>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={10}\r\n                style={{\r\n                    parent: {\r\n                        backgroundColor: \"#FFF\", // White background\r\n                    }\r\n                }}\r\n            >\r\n                <VictoryAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" }, // Style for the axis itself\r\n                        ticks: { stroke: \"grey\", size: 5 }, // Style for axis ticks\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" } // Style for the labels\r\n                    }}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n                    style={{\r\n                        axis: { stroke: \"#757575\" },\r\n                        ticks: { stroke: \"grey\", size: 5 },\r\n                        tickLabels: { fontSize: 10, padding: 5, fill: \"grey\" }\r\n                    }}\r\n                />\r\n                <VictoryBar\r\n                    data={dataValues}\r\n                    x=\"day\"\r\n                    y=\"value\"\r\n                    style={{\r\n                        data: {\r\n                            fill: ({ datum }) => datum.value > 50 ? \"#4178BE\" : \"#5AA9E6\", // Blue shades for bars\r\n                            width: 8 // Width of each bar\r\n                        }\r\n                    }}\r\n                    barRatio={0.8} // Adjusts the width of the bars\r\n                />\r\n            </VictoryChart>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nexport default function Logs() {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const loginName = useSelector((state) => state.loginName);\r\n\r\n    // const navigation = useNavigation();\r\n    const navigate = useNavigate();\r\n\r\n    const [isSelectedLogs, setIsSelectedLogs] = useState(true);\r\n    const [isSelectedAddAccount, setIsSelectedAddAccount] = useState(false);\r\n    const [isSelectedAccountList, setIsSelectedAccountList] = useState(false);\r\n    const [typeOfAccount, setTypeOfAccount] = useState('');\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const [remainingTime, setRemainingTime] = useState(0);\r\n    const [todayCurrency, setTodayCurrency] = useState('')\r\n    const [timestampCurrency, setTimestampCurrency] = useState('');\r\n    const [exchangeRate, setExchangeRate] = useState(null);\r\n    const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n    const [time, setTime] = useState('');\r\n    const optionsPerPage = [13, 26, 52];\r\n    const [page, setPage] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const searchInput = useRef(null);\r\n    const searchInputValue = searchInput.current?.value;\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'logs'), orderBy('timestamp', 'desc'));\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const documents = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n                    setData(documents);\r\n                });\r\n\r\n                return () => unsubscribe();\r\n            } catch (error) {\r\n                console.error('Error retrieving data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [itemsPerPage]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const delayedSearch = (text) => {\r\n    //     clearTimeout(timeoutId);\r\n    //     timeoutId = setTimeout(() => {\r\n    //         handleSearch(text);\r\n    //     }, 300); // Set the delay to 300 milliseconds\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n    // const handleChange = text => {\r\n    //     setEmail(text)\r\n    //     setErrorShow(false)\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const SuccessModal = () => {\r\n        return <Center>\r\n            <Modal isOpen={showModal} onClose={() => setShowModal(false)} size=\"lg\"  >\r\n                <Modal.Content maxWidth=\"350\" bgColor={'green.600'} borderWidth={3} borderColor={'green.400'}>\r\n                    <Modal.Header bgColor={'green.600'} borderBottomWidth={0}><Text color=\"white\" textAlign={'center'} bold>😊😎 Success! 😎😊</Text></Modal.Header>\r\n                    <Modal.Body >\r\n                        <Text color=\"white\" textAlign={'center'}>Account creation for Real Motor Japan Control Hub was successful.</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer bgColor={'green.600'} borderTopWidth={0}>\r\n                        <Button _hover={{ bgColor: 'green.500', }} variant={'outline'} flex=\"1\" onPress={() => setShowModal(false)}>\r\n                            <Text color=\"white\" textAlign={'center'}>Proceed</Text>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </Center>;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                // navigation.navigate(\"Login\")\r\n                navigate(\"/Login\");\r\n            }\r\n\r\n        })\r\n\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleDocumentChange = (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            const isActive = data.active;\r\n\r\n            if (!isActive) {\r\n                signOut(auth)\r\n                    .then(() => {\r\n                        // navigation.navigate('Login');\r\n                        navigate(\"/Login\");\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error signing out:', error);\r\n                    });\r\n            }\r\n        } else {\r\n            signOut(auth)\r\n                .then(() => {\r\n                    // navigation.navigate('Login');\r\n                    navigate(\"/Login\");\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error signing out:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const subscribeToFieldChange = () => {\r\n        const userId = auth.currentUser?.email;\r\n        if (userId) {\r\n            const userRef = doc(firestore, 'accounts', userId);\r\n            const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n            return unsubscribe;\r\n        } else {\r\n            // Return a no-op function if there's no user\r\n            return () => {\r\n                navigate(\"/login\")\r\n            };\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = subscribeToFieldChange();\r\n\r\n        return () => {\r\n            // This will now always be a function\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const currentUserEmail = getEmailOfCurrentUser();\r\n        if (currentUserEmail) {\r\n            getFieldValueByEmail(currentUserEmail);\r\n            setEmail(currentUserEmail)\r\n            const documentId = currentUserEmail;\r\n            listenForNameChange(documentId);\r\n        }\r\n    }, []);\r\n\r\n    const listenForNameChange = (documentId) => {\r\n        const userRef = doc(db, 'accounts', documentId);\r\n\r\n\r\n        // To stop listening for updates, you can call unsubscribe()\r\n        // unsubscribe();\r\n    };\r\n\r\n\r\n\r\n    const getFieldValueByEmail = async (email) => {\r\n        try {\r\n            const accountDocRef = doc(firestore, 'accounts', email);\r\n            const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n            if (accountDocSnapshot.exists()) {\r\n                const data = accountDocSnapshot.data();\r\n                const fieldType = data.type;\r\n                const fieldName = data.name;\r\n                dispatch(setLoginName(data.name));\r\n\r\n            } else {\r\n                console.log('Document does not exist');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching field value:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleSignOut = () => {\r\n\r\n        signOut(auth).then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n            setEmail('');\r\n            setName('');\r\n        }).catch(() => {\r\n            // An error happened.\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n    // Function to hide the Popover\r\n\r\n    const NamePopover = ({ name, handleSignOut }) => {\r\n        const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n        const showPopover = () => {\r\n            setShowNamePopover(!showNamePopover);\r\n        };\r\n\r\n        return (\r\n            <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n                <Flex direction=\"row-reverse\">\r\n                    <Popover\r\n                        isOpen={showNamePopover}\r\n                        trigger={(triggerProps) => (\r\n                            <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n                            </Text>\r\n                        )}\r\n                        onClose={() => setShowNamePopover(!showNamePopover)}\r\n                        placement='bottom right'\r\n                        trapFocus={false}\r\n                    >\r\n                        <Popover.Content backgroundColor={'#0642F4'}>\r\n                            {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n                            <Popover.Body backgroundColor={'#0642F4'}>\r\n                                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                                    Logout\r\n                                </Button>\r\n                            </Popover.Body>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Flex>\r\n            </Box>\r\n        );\r\n    };\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n        },\r\n        image: {\r\n            flex: 1,\r\n        },\r\n    });\r\n    return (\r\n        <NativeBaseProvider>\r\n            <SuccessModal />\r\n            <Box bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n                {/* Header */}\r\n                <Box\r\n                    px=\"3\"\r\n                    bgColor='#0642f4'\r\n                    height={54}\r\n                    position=\"sticky\"\r\n                    top={0}\r\n                    zIndex={999}\r\n                    flexDirection=\"row\"\r\n                    alignItems=\"center\"\r\n                    borderBottomWidth={0}\r\n                    borderBottomColor={'cyan.500'} >\r\n\r\n                    <SideDrawer\r\n                        selectedScreen={selectedScreen} />\r\n\r\n                    <Box w={[0, 0, 0, 850]} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n                    {/* \r\n                    {showDrawerIcon && <MobileViewDrawer\r\n                        selectedScreen={selectedScreen} />} */}\r\n\r\n                    <Box w={[150, 200, 250, 0]} h={[6, 8, 10, 10]} marginBottom={1.5} marginTop={1.5} marginLeft={[3, 3, 3, 10]} >\r\n                        <FastImage\r\n                            source={{\r\n                                uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20HALF.png?alt=media&token=7ce6aef2-0527-40c7-b1ce-e47079e144df',\r\n                                priority: FastImage.priority.high,\r\n                            }}\r\n                            resizeMode={FastImage.resizeMode.stretch}\r\n                            style={styles.image}\r\n                        />\r\n                    </Box>\r\n\r\n\r\n                    <View style={{ alignItems: 'center', flex: 1 }}>\r\n                        <QRCodeScanner />\r\n                    </View>\r\n\r\n                    <NamePopover name={loginName} handleSignOut={handleSignOut} />\r\n\r\n                </Box>\r\n\r\n                {/* Content */}\r\n                <Box flex={[1]} flexDirection=\"row\" >\r\n\r\n\r\n                    {/* Main Content */}\r\n                    <Box flex={1} flexGrow={1} minHeight={0} flexDirection={screenWidth <= 960 ? 'column' : 'row'}>\r\n                        {/* Main Content Content */}\r\n\r\n\r\n\r\n                        <Box flex={1}>\r\n                            <CurrencyConverterComponent />\r\n                            <MyBarChart />\r\n                        </Box>\r\n\r\n\r\n\r\n                        <Box flex={1} height={'100%'}>\r\n                            <ScrollView flex={1}>\r\n                                <LogsTable />\r\n                            </ScrollView>\r\n\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <LoadingModal />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","// QRCodeScanner.js\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Flex,\r\n    HStack,\r\n    Icon,\r\n    Image as NativeImage,\r\n    Input,\r\n    Modal,\r\n    NativeBaseProvider,\r\n    Popover,\r\n    Spinner,\r\n    Stack,\r\n    Text,\r\n    VStack,\r\n    TextArea,\r\n    InputRightAddon,\r\n    InputGroup,\r\n    InputLeftAddon,\r\n    Select,\r\n    CheckIcon,\r\n    PresenceTransition,\r\n    CloseIcon,\r\n    ScrollView as ScrollViewNative,\r\n    Divider,\r\n    useDisclosure,\r\n    useDisclose,\r\n    FormControl,\r\n    Checkbox,\r\n    useToast,\r\n    Tooltip,\r\n    Progress,\r\n    Alert\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n    Dimensions,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    StyleSheet,\r\n    View,\r\n    PanResponder,\r\n    Animated,\r\n    Easing,\r\n    InputAccessoryView,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableHighlight,\r\n    TextInput,\r\n    Image as RNImage,\r\n    Pressable,\r\n    Linking,\r\n    Modal as RNModal,\r\n    Platform,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport Webcam from 'react-webcam';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo,\r\n    FontAwesome5,\r\n    EvilIcons\r\n} from 'react-native-vector-icons';\r\n\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup, increment } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from '../../../crossFirebase';\r\nimport jsQR from 'jsqr';\r\n\r\n\r\nlet formattedIssuingDate = ''; // Initialize the variable outside the conditional rendering block\r\nlet formattedDueDate = '';\r\n\r\nconst mobileViewBreakpoint = 1367;\r\n\r\nconst QRCodeScanner = () => {\r\n    const webcamRef = React.useRef(null);\r\n    const [qrCode, setQrCode] = useState('');\r\n    const [isScanning, setIsScanning] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [invoiceData, setInvoiceData] = useState(null);\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // QR code scanning logic\r\n    useEffect(() => {\r\n        const intervalId = isScanning ? setInterval(() => {\r\n            const video = webcamRef.current;\r\n            if (video) {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.video.videoWidth;\r\n                canvas.height = video.video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video.video, 0, 0, canvas.width, canvas.height);\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n                if (code) {\r\n                    clearInterval(intervalId);\r\n                    setIsScanning(false);\r\n                    setQrCode(code.data);\r\n                    console.log(code.data);\r\n\r\n                }\r\n            }\r\n        }, 100) : null;\r\n\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [isScanning]);\r\n\r\n    const fetchInvoiceData = async (cryptoNumber) => {\r\n        const q = query(collection(projectExtensionFirestore, 'IssuedInvoice'), where('cryptoNumber', '==', cryptoNumber));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            setInvoiceData({ ...doc.data(), id: doc.id });\r\n        });\r\n        setModalVisible(true); // Show the modal after fetching the data\r\n    };\r\n\r\n    // Listen for QR code detection\r\n    useEffect(() => {\r\n        if (qrCode) {\r\n            fetchInvoiceData(qrCode);\r\n        }\r\n    }, [qrCode]);\r\n\r\n    const toggleScanning = () => {\r\n        setIsScanning(!isScanning);\r\n\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModalVisible(false);\r\n        setQrCode('');\r\n    };\r\n\r\n    if (invoiceData && Object.keys(invoiceData).length > 0) {\r\n        const issuingDateString = invoiceData.bankInformations.issuingDate;\r\n        const dueDateString = invoiceData.bankInformations.dueDate;\r\n        const issuingDateObject = new Date(issuingDateString);\r\n        const dueDateObject = new Date(dueDateString);\r\n\r\n\r\n        const options = {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        };\r\n\r\n        formattedIssuingDate = issuingDateObject.toLocaleDateString(undefined, options);\r\n        formattedDueDate = dueDateObject.toLocaleDateString(undefined, options);\r\n\r\n    }\r\n\r\n    const originalWidth = 794;\r\n    const originalHeight = 1123;\r\n\r\n\r\n    const originalSmallWidth = 794;\r\n    const originalSmallHeight = 1123;\r\n\r\n    const newWidth = 2480;\r\n    const newHeight = 3508;\r\n\r\n    const smallWidth = screenWidth < mobileViewBreakpoint ? 377 : 574;\r\n    const smallHeight = screenWidth < mobileViewBreakpoint ? 541 : 903;\r\n\r\n    const smallWidthScaleFactor = smallWidth / originalSmallWidth;\r\n    const smallHeightScaleFactor = smallHeight / originalSmallHeight;\r\n\r\n    const widthScaleFactor = newWidth / originalWidth;\r\n    const heightScaleFactor = newHeight / originalHeight;\r\n\r\n    const valueCurrency = 0.5;\r\n\r\n    const convertedCurrency = (baseValue) => {\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `$${Number(baseValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            const euroValue = Number(baseValue) * Number(invoiceData.currency.usdToEur);\r\n            return `€${(euroValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            const audValue = Number(baseValue) * Number(invoiceData.currency.usdToAud);\r\n            return `A$${(audValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            const gbpValue = Number(baseValue) * Number(invoiceData.currency.usdToGbp);\r\n            return `£${(gbpValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            const cadValue = Number(baseValue) * Number(invoiceData.currency.usdToCad);\r\n            return `C$${(cadValue).toFixed(2).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n    }\r\n\r\n    const totalPriceCalculated = () => {\r\n\r\n        const totalAdditionalPrice = invoiceData.paymentDetails.additionalPrice.reduce((total, price) => {\r\n            const converted = Number(price); // Convert each price using your currency conversion function\r\n            const numericPart = price.replace(/[^0-9.]/g, ''); // Remove non-numeric characters, assuming decimal numbers\r\n            return total + parseFloat(numericPart); // Add the numeric value to the total\r\n        }, 0);\r\n\r\n        const totalUsd = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice))\r\n            // * Number(invoiceData.currency.jpyToEur)\r\n            ;\r\n\r\n\r\n        const totalEur = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToEur));\r\n\r\n\r\n        // const totalEur = Number(invoiceData.paymentDetails.fobPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + Number(invoiceData.paymentDetails.freightPrice) * Number(invoiceData.currency.usdToEur)\r\n        //     + (valueCurrency * Number(invoiceData.currency.usdToEur))\r\n        //     + (invoiceData.paymentDetails.inspectionIsChecked\r\n        //         ? (Number(invoiceData.paymentDetails.inspectionPrice) * Number(invoiceData.currency.usdToEur)\r\n        //             + (valueCurrency * Number(invoiceData.currency.usdToEur)))\r\n        //         : 0)\r\n        //     + totalAdditionalPrice;\r\n\r\n        const totalAud = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToAud))\r\n\r\n        const totalGbp = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToGbp))\r\n\r\n        const totalCad = ((Number(invoiceData.paymentDetails.fobPrice)\r\n            + Number(invoiceData.paymentDetails.freightPrice)\r\n            + (invoiceData.paymentDetails.inspectionIsChecked\r\n                ? (Number(invoiceData.paymentDetails.inspectionPrice))\r\n                : 0)\r\n            + (invoiceData.paymentDetails.incoterms == 'CIF'\r\n                ? Number(invoiceData.paymentDetails.insurancePrice)\r\n                : 0)\r\n            + totalAdditionalPrice)\r\n            * Number(invoiceData.currency.usdToCad))\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'None' || !invoiceData.selectedCurrencyExchange || invoiceData.selectedCurrencyExchange == 'USD') {\r\n            return `$${Math.round(totalUsd).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n\r\n        if (invoiceData.selectedCurrencyExchange == 'EURO') {\r\n            return `€${Math.round(totalEur).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'AUD') {\r\n            return `A$${Math.round(totalAud).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'GBP') {\r\n            return `£${Math.round(totalGbp).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n        if (invoiceData.selectedCurrencyExchange == 'CAD') {\r\n            return `C$${Math.round(totalCad).toLocaleString('en-US', { useGrouping: true })}`;\r\n        }\r\n\r\n    }\r\n\r\n    const PreviewInvoice = () => {\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    width: smallWidth,\r\n                    height: smallHeight,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1\r\n                }}>\r\n\r\n                <View\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        zIndex: 999,\r\n                    }}\r\n                />\r\n\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    <NativeImage\r\n                        source={require('../../../assets/RMJ logo for invoice.png')}\r\n                        style={{\r\n                            width: 95 * smallWidthScaleFactor,\r\n                            height: 85 * smallHeightScaleFactor,\r\n                            resizeMode: 'stretch',\r\n                        }}\r\n                    />\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', alignSelf: 'center', top: 80 * smallHeightScaleFactor }}>\r\n                    {/* Title */}\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 25 * smallWidthScaleFactor }}>{`INVOICE`}</Text>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 38 * smallHeightScaleFactor }}>\r\n                    {/* QR CODE */}\r\n\r\n                    <QRCode\r\n                        value={invoiceData.cryptoNumber}\r\n                        size={80 * smallWidthScaleFactor}\r\n                        color=\"black\"\r\n                        backgroundColor=\"white\"\r\n                    />\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 34 * smallHeightScaleFactor }}>\r\n                    {/* Invoice Number */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Invoice No. RMJ-${invoiceData.id}`}</Text>\r\n                </View>\r\n                <View style={{ position: 'absolute', right: 121 * smallWidthScaleFactor, top: 49 * smallHeightScaleFactor, flexDirection: 'row' }}>\r\n                    {/* Issuing Date */}\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor }}>{`Issuing Date: `}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor }}>{`${formattedIssuingDate}`}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 40 * smallWidthScaleFactor,\r\n                    top: 134 * smallHeightScaleFactor,\r\n                    width: 280 * smallWidthScaleFactor,\r\n                }}>\r\n                    {/* Shipper */}\r\n                    <Text style={{\r\n                        fontWeight: 750,\r\n                        fontSize: 16 * smallWidthScaleFactor,\r\n                        borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                        width: 'fit-content', // Make the underline cover the text width\r\n                        marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                    }}>\r\n                        {`Shipper`}\r\n                    </Text>\r\n                    <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Real Motor Japan (YANAGISAWA HD CO.,LTD)`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`26-2 Takara Tsutsumi-cho Toyota City, Aichi Prefecture, Japan, 473-0932`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: +81565850606`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped From:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.departurePort}, ${invoiceData.departureCountry}`}</Text>\r\n\r\n                    <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Shipped To:`}</Text>\r\n                    <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.discharge.port}, ${invoiceData.discharge.country}`}</Text>\r\n                    {invoiceData.placeOfDelivery && invoiceData.placeOfDelivery !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Place of Delivery:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 12 * smallHeightScaleFactor }}>{`${invoiceData.placeOfDelivery}`}</Text>\r\n                        </>\r\n                        : null}\r\n                    {invoiceData.cfs && invoiceData.cfs !== '' ?\r\n                        <>\r\n                            <Text style={{ fontWeight: 700, fontSize: 14 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`CFS:`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 14 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.cfs}`}</Text>\r\n                        </>\r\n                        : null}\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', width: 715 * smallWidthScaleFactor, }}>\r\n\r\n                        <View style={{\r\n                            flex: 1, width: 280 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {/* Buyer Information */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#0A78BE',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#0A78BE',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n\r\n                            }}>\r\n                                {`Buyer Information`}\r\n                            </Text>\r\n                            <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.name}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.address}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.email}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.consignee.contactNumber}`}</Text>\r\n                            <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.consignee.fax == '' ? 'N/A' : invoiceData.consignee.fax}`}</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, paddingLeft: 20 * smallWidthScaleFactor, width: 280 * smallWidthScaleFactor, }}>\r\n                            {/* Notify Party */}\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 18 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                borderBottomColor: '#FF0000',\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 5 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                color: '#FF0000',\r\n                                marginTop: 45 * smallHeightScaleFactor,\r\n                            }}>\r\n                                {`Notify Party`}\r\n                            </Text>\r\n                            {invoiceData.notifyParty.sameAsConsignee == true ? (\r\n                                <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, }}>{`Same as consignee / buyer`}</Text>) :\r\n                                (<>\r\n                                    <Text style={{ fontWeight: 750, fontSize: 16 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.name}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.address}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.email}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.notifyParty.contactNumber}`}</Text>\r\n                                    <Text style={{ fontWeight: 400, fontSize: 16 * smallWidthScaleFactor, marginTop: 6 * smallHeightScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`FAX: ${invoiceData.notifyParty.fax == '' ? 'N/A' : invoiceData.notifyParty.fax}`}</Text>\r\n                                </>)}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 38 * smallWidthScaleFactor, top: 130 * smallHeightScaleFactor, borderWidth: 3 * smallWidthScaleFactor, width: 430 * smallWidthScaleFactor, borderColor: '#1ABA3D', }}>\r\n\r\n                    <View style={{ flex: 1, alignItems: 'center', }}>\r\n                        <Text style={{ fontWeight: 750, fontSize: 14 * smallWidthScaleFactor, color: '#114B33', }}>{`Bank Information`}</Text>\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', marginHorizontal: 5 * smallWidthScaleFactor, marginBottom: 5 * smallHeightScaleFactor, }}>\r\n                        <View style={{ flex: 1, marginRight: 50 * smallWidthScaleFactor, }}>\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallHeightScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Bank Account`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Bank Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.bankName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Branch Name: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.branchName}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`SWIFTCODE: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.swiftCode}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Address: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.address}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Name of Account Holder: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountHolder}`}</Text>\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor, marginTop: 3 * smallHeightScaleFactor, }}>{`Account Number: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.bankAccount.accountNumberValue}`}</Text>\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1 }}>\r\n\r\n                            <Text style={{\r\n                                fontWeight: 750,\r\n                                fontSize: 14 * smallWidthScaleFactor,\r\n                                borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                width: 'fit-content', // Make the underline cover the text width\r\n                                marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                            }}>\r\n                                {`Payment Terms`}\r\n                            </Text>\r\n\r\n                            <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`Terms: `}\r\n                                <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, lineHeight: 14 * smallHeightScaleFactor }}>{`${invoiceData.bankInformations.paymentTerms}`}</Text>\r\n                            </Text>\r\n\r\n                            <View style={{ paddingTop: 30 * smallHeightScaleFactor, }}>\r\n\r\n                                <Text style={{\r\n                                    fontWeight: 750,\r\n                                    fontSize: 14 * smallWidthScaleFactor,\r\n                                    borderBottomWidth: 3 * smallWidthScaleFactor, // Adjust the thickness of the underline\r\n                                    width: 'fit-content', // Make the underline cover the text width\r\n                                    marginBottom: 2 * smallHeightScaleFactor, // Add some space between text and underline\r\n                                    color: '#F00A0A',\r\n                                    borderBottomColor: '#F00A0A',\r\n                                }}>\r\n                                    {`Payment Due`}\r\n                                </Text>\r\n\r\n                                <Text style={{ fontWeight: 750, fontSize: 12 * smallWidthScaleFactor, color: '#F00A0A', lineHeight: 14 * smallWidthScaleFactor }}>{`Due Date: `}\r\n                                    <Text style={{ fontWeight: 400, fontSize: 12 * smallWidthScaleFactor, color: 'black', lineHeight: 14 * smallWidthScaleFactor }}>{`${formattedDueDate}`}</Text>\r\n                                </Text>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    left: 38 * smallWidthScaleFactor,\r\n                    top: (invoiceData.placeOfDelivery && invoiceData.cfs) || (invoiceData.placeOfDelivery !== '' && invoiceData.cfs !== '') ? 577 * smallHeightScaleFactor : 537 * smallHeightScaleFactor,\r\n                    width: 718 * smallWidthScaleFactor,\r\n                    borderWidth: 1 * smallWidthScaleFactor,\r\n                    borderColor: '#C2E2F4',\r\n                    alignSelf: 'center',\r\n                }}>\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Description`}\r\n                            </Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Notes`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 1, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Quantity`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{ flex: 2, justifyContent: 'center', }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    color: '#008AC6',\r\n                                }}>\r\n                                {`Amount`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`FOB`}\r\n                            </Text>\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`${convertedCurrency((Number(invoiceData.paymentDetails.fobPrice)))}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {`Freight`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {`${convertedCurrency(Number(invoiceData.paymentDetails.freightPrice))}`}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.inspectionIsChecked ? `Inspection [${invoiceData.paymentDetails.inspectionName}]` : ' '}\r\n                                    </Text>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            marginLeft: 2 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms == \"CIF\" ? ` + Insurance` : ' '}\r\n                                    </Text>\r\n                                </>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        marginLeft: 2 * smallWidthScaleFactor,\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `Insurance` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                    }}>\r\n                                    {' '}\r\n                                </Text>\r\n                            }\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && (invoiceData.paymentDetails.incoterms == \"C&F\" || invoiceData.paymentDetails.incoterms == \"FOB\") && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                            </Text>}\r\n\r\n                            {invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.inspectionIsChecked ? `${convertedCurrency(Number(invoiceData.paymentDetails.inspectionPrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                    <Text\r\n                                        style={{\r\n                                            fontWeight: 400,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                        }}>\r\n                                        {invoiceData.paymentDetails.incoterms === \"CIF\" ? ` + ${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            }\r\n\r\n                            {!invoiceData.paymentDetails.inspectionIsChecked && invoiceData.paymentDetails.incoterms == \"CIF\" &&\r\n                                <Text\r\n                                    style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n\r\n                                    }}>\r\n                                    {invoiceData.paymentDetails.incoterms == \"CIF\" ? `${convertedCurrency(Number(invoiceData.paymentDetails.insurancePrice).toLocaleString('en-US', { useGrouping: true })).split('.')[0]}` : ' '}\r\n                                </Text>\r\n                            }\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 5,\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 && <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalName && (invoiceData.paymentDetails.additionalName).length > 0 ? `${invoiceData.paymentDetails.additionalName.join(' + ')}` : ' '}\r\n                            </Text>}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                        }}>\r\n                            <Text\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                {invoiceData.paymentDetails.additionalPrice && invoiceData.paymentDetails.additionalPrice.length > 0\r\n                                    ? invoiceData.paymentDetails.additionalPrice.map(price => {\r\n                                        const converted = convertedCurrency(Number(price));\r\n                                        return converted;\r\n                                    }).join(' + ')\r\n                                    : ' '}\r\n                            </Text>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, flexDirection: 'row', }}>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            paddingVertical: 2 * smallHeightScaleFactor,\r\n\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                    marginLeft: 2 * smallWidthScaleFactor,\r\n                                }}>\r\n                                    {\"Used Vehicle\\n\"}\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.carName}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.chassisNumber}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.exteriorColor}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.engineDisplacement).toLocaleString('en-US')} cc\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${Number(invoiceData.carData.mileage).toLocaleString('en-US')} km\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.fuel}\\n`}\r\n                                    </Text>\r\n                                    <Text style={{\r\n                                        fontWeight: 400,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        alignSelf: 'center',\r\n                                    }}>\r\n                                        {`${invoiceData.carData.transmission}\\n`}\r\n                                    </Text>\r\n                                </Text>\r\n\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.incoterms && invoiceData.discharge.port && invoiceData.discharge ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {`${invoiceData.paymentDetails.incoterms} ${invoiceData.discharge.port}`}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 1,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            {invoiceData.carData && invoiceData.carData.carName ? (\r\n                                <Text style={{\r\n                                    fontWeight: 400,\r\n                                    fontSize: 12 * smallWidthScaleFactor,\r\n                                    lineHeight: 14 * smallWidthScaleFactor,\r\n                                    marginBottom: 3 * smallHeightScaleFactor,\r\n                                    alignSelf: 'center',\r\n                                }}>\r\n                                    {'1'}\r\n                                </Text>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            borderTopWidth: 1 * smallWidthScaleFactor,\r\n                            borderColor: '#C2E2F4',\r\n                            flex: 2,\r\n                            justifyContent: 'center',\r\n                            flexDirection: 'row',\r\n                        }}>\r\n                            {invoiceData.paymentDetails && invoiceData.paymentDetails.totalAmount ? (\r\n                                <>\r\n                                    <Text style={{\r\n                                        fontWeight: 700,\r\n                                        fontSize: 12 * smallWidthScaleFactor,\r\n                                        lineHeight: 14 * smallWidthScaleFactor,\r\n                                        marginBottom: 3 * smallHeightScaleFactor,\r\n                                        color: '#008AC6',\r\n                                        marginRight: 10 * smallWidthScaleFactor,\r\n                                        top: 51 * smallHeightScaleFactor,\r\n                                        left: 50 * smallWidthScaleFactor,\r\n                                        position: 'absolute',\r\n                                    }}>\r\n                                        {\"Total\"}\r\n                                        <Text style={{\r\n                                            fontWeight: 700,\r\n                                            fontSize: 12 * smallWidthScaleFactor,\r\n                                            lineHeight: 14 * smallWidthScaleFactor,\r\n                                            marginBottom: 3 * smallHeightScaleFactor,\r\n                                            alignSelf: 'center',\r\n                                            color: '#00720B',\r\n                                            marginLeft: 5 * smallWidthScaleFactor,\r\n                                        }}>\r\n                                            {`${totalPriceCalculated()}`}\r\n                                        </Text>\r\n                                    </Text>\r\n\r\n                                </>\r\n                            ) : (\r\n                                <Text>{' '}</Text>\r\n                            )}\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={{ position: 'absolute', left: 38 * smallWidthScaleFactor, top: 825 * smallHeightScaleFactor, width: 350 * smallWidthScaleFactor, }}>\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Payment Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'The customer is responsible for the bank charges incurred when the T/T (Telegraphic Transfer) is paid.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'No warranty service is provided on used vehicles.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Conditions for order cancellation:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'(1) Order Cancellation Penalty: If the order is cancelled after payment, a penalty of USD 220 will apply.'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'(2) Non-refund: Payment for vehicles purchased through pre-delivery inspection is non-refundable.'}\r\n                    </Text>\r\n\r\n                    <Text style={{\r\n                        fontWeight: 700,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Intermediary Banking Information:'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Bank Name: SUMITOMO MITSUI BANKING CORPORATION (NEW YORK BRANCH).'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Swift code: SMBCUS33'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                    }}>\r\n                        {'Address: 277 Park Avenue'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'City: New York, NY'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Postal Code: 10172'}\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontWeight: 400,\r\n                        fontSize: 12 * smallWidthScaleFactor,\r\n                        lineHeight: 14 * smallHeightScaleFactor,\r\n                        marginBottom: 5 * smallHeightScaleFactor,\r\n\r\n                    }}>\r\n                        {'Country: United States'}\r\n                    </Text>\r\n                </View>\r\n\r\n\r\n                <View style={{ position: 'absolute', right: 39 * smallWidthScaleFactor, top: 835 * smallHeightScaleFactor, width: 300 * smallWidthScaleFactor, }}>\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 80 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n                        <NativeImage\r\n                            source={require('../../../assets/RMJ Invoice Signature with Hanko.png')}\r\n                            style={{\r\n                                width: 276 * smallWidthScaleFactor,\r\n                                height: 81 * smallHeightScaleFactor,\r\n                                resizeMode: 'contain',\r\n                                alignSelf: 'center',\r\n                                marginBottom: 0, // Minimize margin to keep the line close\r\n                            }}\r\n                        />\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Real Motor Japan'}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={{\r\n                        width: 300 * smallWidthScaleFactor,\r\n                        alignItems: 'center',\r\n                        paddingBottom: 5 * smallHeightScaleFactor, // Adjust this value to control space between image and line\r\n                    }}>\r\n\r\n                        <View style={{\r\n                            borderBottomWidth: 1 * smallHeightScaleFactor,\r\n                            borderColor: 'black', // Change the color as needed\r\n                            width: '100%', // Line width as per your requirement\r\n                        }} />\r\n                        <Text italic style={{\r\n                            fontWeight: 700,\r\n                            fontSize: 16 * smallWidthScaleFactor,\r\n                        }}>\r\n                            {'Your Signature'}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                paddingRight: 20,\r\n\r\n            }}\r\n        >\r\n            {/* Modal for displaying invoice data */}\r\n            <Modal\r\n                isOpen={modalVisible}\r\n                onClose={handleModalClose}\r\n                size=\"lg\"\r\n                useRNModal\r\n            >\r\n\r\n                {invoiceData ? (\r\n                    <PreviewInvoice />\r\n                ) : (\r\n                    <Text>No data available</Text>\r\n                )}\r\n\r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={isScanning} onClose={() => setIsScanning(false)} size=\"lg\">\r\n                <View\r\n                    style={{ backgroundColor: 'black', }}\r\n                >\r\n                    {isScanning && <Webcam ref={webcamRef}\r\n                        style={{\r\n                            width: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                            height: screenWidth < mobileViewBreakpoint ? 300 : 500,\r\n                        }} videoConstraints={{ facingMode: \"environment\" }} />}\r\n                </View>\r\n\r\n\r\n            </Modal>\r\n\r\n            {/* {isScanning && (\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    width: 300, // Adjust according to your needs\r\n                    height: 300, // Adjust according to your needs\r\n                    borderRadius: 20,\r\n                    overflow: 'hidden',\r\n                }}>\r\n                    <Webcam ref={webcamRef} style={styles.cameraView} videoConstraints={{ facingMode: \"environment\" }} />\r\n                </View>\r\n            )} */}\r\n\r\n            <Pressable\r\n                focusable={false}\r\n                onPress={toggleScanning}\r\n                style={{\r\n                    padding: 10,\r\n                    borderRadius: 5,\r\n                }}>\r\n                <MaterialCommunityIcons name='data-matrix-scan' size={30} color='white' />\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cameraContainer: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: [{ translateX: -150 }, { translateY: -150 }], // Adjust based on your webcam view size\r\n        width: 300, // Adjust according to your needs\r\n        height: 300, // Adjust according to your needs\r\n        borderRadius: 20,\r\n        overflow: 'hidden',\r\n    },\r\n    cameraView: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\r\n\r\nexport default QRCodeScanner;\r\n\r\n","\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  Modal,\r\n  Text,\r\n  VStack,\r\n  ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n\r\n\r\nconst MobileViewDrawer = ({ selectedScreen }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleOpen = () => {\r\n\r\n    setIsOpen(true);\r\n\r\n  }\r\n  const handleClose = () => {\r\n\r\n    setIsOpen(false);\r\n\r\n  }\r\n\r\n  const handleToggleLogs = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"LOGS\");\r\n  }, []);\r\n\r\n  const handleToggleAddAccount = useCallback(() => {\r\n\r\n\r\n    navigation.navigate(\"ADD C-HUB ACCOUNT\");\r\n  }, []);\r\n\r\n  const handleToggleAccountList = useCallback(() => {\r\n\r\n    navigation.navigate(\"ACCOUNT LIST\");\r\n  }, []);\r\n\r\n  const handleToggleAddVehicle = useCallback(() => {\r\n\r\n    navigation.navigate(\"ADD NEW VEHICLE\");\r\n  }, []);\r\n\r\n\r\n  const handleVehicleList = useCallback(() => {\r\n    navigation.navigate(\"VEHICLE LIST\");\r\n  }, []);\r\n\r\n\r\n  const handleFreight = useCallback(() => {\r\n    navigation.navigate(\"FREIGHT\");\r\n  }, []);\r\n\r\n  const handleChatMessages = useCallback(() => {\r\n    navigation.navigate(\"CHAT MESSAGES\");\r\n  }, []);\r\n\r\n\r\n  const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 1,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(slideAnimation, {\r\n        toValue: 0,\r\n        duration: 500,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [isOpen, slideAnimation]);\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableHighlight onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{ borderRadius: 5, flex: 1 }}>\r\n        <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n      </TouchableHighlight>\r\n\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n        useRNModal\r\n        style={{\r\n          alignItems: 'flex-start',\r\n          justifyContent: 'flex-start',\r\n          height: '100%',\r\n\r\n        }}\r\n      >\r\n        <Modal.Content\r\n          maxWidth={255}\r\n          borderRadius={0}\r\n          maxHeight=\"100%\"\r\n          height=\"full\"\r\n          bgColor={'transparent'}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              flex: 1,\r\n              transform: [\r\n                {\r\n                  translateX: slideAnimation.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-255, 0],\r\n                  }),\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <View style={{ backgroundColor: '#7b9cff', flex: 1, borderRightWidth: 2, borderColor: 'cyan' }}>\r\n              <View style={{ flex: 1, }}>\r\n\r\n                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                  <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Image\r\n                      source={{\r\n                        uri: logo2,\r\n                      }}\r\n                      resizeMode=\"stretch\"\r\n                      style={{ width: 170, height: 30 }}\r\n                    />\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                  >\r\n                    <MaterialIcons\r\n                      name=\"arrow-back\"\r\n                      size={30}\r\n                      color=\"white\"\r\n                      onPress={handleClose}\r\n                    />\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Sidebar Content */}\r\n                <View style={{ paddingHorizontal: 1, backgroundColor: '#7b9cff', flex: 1 }}>\r\n                  <ScrollView>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderTopWidth: 1,\r\n                        borderColor: 'white',\r\n                        backgroundColor: selectedScreen == 'LOGS' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleLogs}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"history\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          LOGS\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n\r\n                    {/* ACCOUNT MANAGEMENT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddAccount}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n\r\n                        <MaterialIcons name=\"person-add\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ADD C-HUB ACCOUNT\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAccountList}\r\n                    >\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <MaterialCommunityIcons name=\"account-details\" size={20} color=\"white\" />\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          ACCOUNT LIST\r\n                        </Text>\r\n                      </View>\r\n\r\n                    </TouchableOpacity>\r\n                    {/* VEHICLE INFORMATION INPUT */}\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleToggleAddVehicle}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 4, }}>\r\n                          <FontAwesome name=\"automobile\" size={15} color=\"white\" />\r\n                          <FontAwesome\r\n                            name=\"plus\"\r\n                            size={10}\r\n                            color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          UPDATE / ADD NEW VEHICLE\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleVehicleList}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <FontAwesome\r\n                            name=\"automobile\"\r\n                            size={15}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialCommunityIcons name=\"format-list-bulleted\" size={10} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          VEHICLE LIST\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'FREIGHT' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleFreight}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <MaterialIcons\r\n                            name=\"public\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                          <MaterialIcons name=\"sync\" size={12} color=\"white\"\r\n                            style={{\r\n                              position: 'absolute', // Position it absolutely...\r\n                              top: -3, // ...at the top...\r\n                              left: -5 // ...and left.\r\n                            }}\r\n                          />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          FREIGHT\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                    <TouchableOpacity\r\n                      style={{\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: 'white',\r\n                        backgroundColor: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : '#7b9cff',\r\n                      }}\r\n                      onPress={handleChatMessages}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: 2, }}>\r\n                        <View style={{ marginLeft: 3, }}>\r\n                          <Entypo\r\n                            name=\"chat\"\r\n                            size={20}\r\n                            color=\"white\" />\r\n\r\n                        </View>\r\n                        <Text style={{ color: 'white', paddingVertical: 10, paddingLeft: 10 }}>\r\n                          CHAT MESSAGES\r\n                        </Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                    {/* Footer Content */}\r\n                    {/* <TouchableOpacity\r\n              style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n              onPress={handleSignOut}\r\n            >\r\n              <Text style={{ color: 'white', textAlign: 'center' }}>\r\n                Logout\r\n              </Text>\r\n            </TouchableOpacity> */}\r\n                  </ScrollView>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Animated.View>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MobileViewDrawer;","import {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    HStack,\r\n    Modal,\r\n    Text,\r\n    VStack,\r\n    ScrollView,\r\n\r\n} from 'native-base';\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    AntDesign,\r\n    FontAwesome,\r\n    Ionicons,\r\n    MaterialCommunityIcons,\r\n    MaterialIcons,\r\n    Entypo\r\n} from 'react-native-vector-icons';\r\nimport { View, TouchableOpacity, Easing, Image, Dimensions, Animated, Pressable } from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst SideDrawer = ({ selectedScreen }) => {\r\n\r\n    const loginAccountType = useSelector((state) => state.loginAccountType);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const logo2 = require('../../../assets/C-Hub Logo Only.png');\r\n    const [onHover, setOnHover] = useState(false);\r\n\r\n    const screenWidth = Dimensions.get('window').width;\r\n\r\n    // const navigation = useNavigation();\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const handleOpen = () => {\r\n\r\n        setIsOpen(true);\r\n\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setIsOpen(false);\r\n\r\n    }\r\n\r\n    const handleToggleLogs = useCallback(() => {\r\n        navigate(\"/top/logs\");\r\n    }, []);\r\n\r\n    const handleToggleAddAccount = useCallback(() => {\r\n        navigate(\"/top/add-c-hub-account\");\r\n    }, []);\r\n\r\n    const handleToggleAccountList = useCallback(() => {\r\n\r\n        navigate(\"/top/account-list\");\r\n    }, []);\r\n\r\n    const handleToggleAddVehicle = useCallback(() => {\r\n\r\n        navigate(\"/top/add-new-vehicle\");\r\n    }, []);\r\n\r\n\r\n    const handleVehicleList = useCallback(() => {\r\n        navigate(\"/top/vehicle-list\");\r\n    }, []);\r\n\r\n\r\n    const handleFreight = useCallback(() => {\r\n        navigate(\"/top/freight\");\r\n    }, []);\r\n\r\n    const handleChatMessages = useCallback(() => {\r\n        navigate(\"/top/chat-messages\");\r\n    }, []);\r\n\r\n\r\n    const slideAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 1,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        } else {\r\n            Animated.timing(slideAnimation, {\r\n                toValue: 0,\r\n                duration: 500,\r\n                easing: Easing.inOut(Easing.ease),\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isOpen, slideAnimation]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Pressable\r\n                onHoverIn={() => {\r\n                    handleOpen()\r\n                    setOnHover(true);\r\n                }}\r\n                onHoverOut={() =>\r\n                    setTimeout(() => setOnHover(false), [100])\r\n                }\r\n                onPress={() => handleOpen()} onPressOut={() => handleOpen()} underlayColor=\"#5a7bc9\" style={{\r\n                    backgroundColor: onHover ? '#5a7bc9' : 'transparent',\r\n                    borderRadius: 5,\r\n                }}>\r\n                <FontAwesome name=\"navicon\" size={30} color=\"white\" style={{ margin: 2 }} />\r\n            </Pressable>\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={handleClose}\r\n                useRNModal\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                <Modal.Content\r\n                    maxWidth={255}\r\n                    borderRadius={0}\r\n                    maxHeight=\"100%\"\r\n                    height=\"full\"\r\n                    bgColor={'transparent'}\r\n                >\r\n                    <Animated.View\r\n                        style={{\r\n                            flex: 1,\r\n                            transform: [\r\n                                {\r\n                                    translateX: slideAnimation.interpolate({\r\n                                        inputRange: [0, 1],\r\n                                        outputRange: [-255, 0],\r\n                                    }),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    >\r\n\r\n                        <View style={{ backgroundColor: '#0642f4', flex: 1, borderRightWidth: 0, borderColor: 'cyan' }}>\r\n                            <View style={{ flex: 1, }}>\r\n\r\n                                <View style={{ flexDirection: 'row', margin: 3, justifyContent: 'space-between' }}>\r\n                                    <View style={{ width: '80%', alignItems: 'center', justifyContent: 'center' }}>\r\n                                        <Image\r\n                                            source={{\r\n                                                uri: logo2,\r\n                                            }}\r\n                                            resizeMode=\"stretch\"\r\n                                            style={{ width: 170, height: 30 }}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={{ flexDirection: 'row', alignItems: 'flex-end', marginVertical: 1.5, marginHorizontal: 1.5 }}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name=\"arrow-back\"\r\n                                            size={30}\r\n                                            color=\"white\"\r\n                                            onPress={handleClose}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                {/* Sidebar Content */}\r\n                                <View style={{ paddingHorizontal: 1, backgroundColor: '#0642f4', height: '100%' }}>\r\n                                    <ScrollView style={{ width: 245 }}>\r\n                                        <View style={{ height: 20 }}>\r\n                                            {/* Sidebar Content Items */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'LOGS' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'LOGS' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    w={'full'}\r\n                                                    onPress={() => selectedScreen == 'LOGS' ? null : handleToggleLogs()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'LOGS' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={<MaterialCommunityIcons name=\"history\" size={20} color={selectedScreen == 'LOGS' ? '#0642F4' : \"white\"} />}\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    LOGS\r\n                                                </Button>\r\n                                            }\r\n\r\n                                            {/* ACCOUNT MANAGEMENT */}\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0} w={'full'}\r\n                                                onPress={() => selectedScreen == 'ADD C-HUB ACCOUNT' ? null : handleToggleAddAccount()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={<MaterialIcons name=\"person-add\" size={20} color={selectedScreen == 'ADD C-HUB ACCOUNT' ? '#0642F4' : \"white\"} />}\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ADD C-HUB ACCOUNT</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'ACCOUNT LIST' ? null : handleToggleAccountList()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'ACCOUNT LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <MaterialCommunityIcons name=\"account-details\" size={20}\r\n                                                        color={selectedScreen == 'ACCOUNT LIST' ? '#0642F4' : \"white\"}\r\n                                                    />\r\n\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            >ACCOUNT LIST</Button>}\r\n                                            {/* VEHICLE INFORMATION INPUT */}\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0} w={'full'}\r\n                                                    onPress={() => selectedScreen == 'ADD NEW VEHICLE' ? null : handleToggleAddVehicle()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'ADD NEW VEHICLE' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome name=\"automobile\" size={15}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n                                                                <FontAwesome\r\n                                                                    name=\"plus\"\r\n                                                                    size={10}\r\n                                                                    color={selectedScreen == 'ADD NEW VEHICLE' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                >UPDATE / ADD NEW VEHICLE</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') &&\r\n                                                <Button\r\n                                                    _text={{ color: selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\", }}\r\n                                                    borderRadius={0}\r\n                                                    borderTopWidth={1}\r\n                                                    borderBottomWidth={1}\r\n                                                    borderColor={'white'}\r\n                                                    _hover={{ bgColor: selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#032da8', }}\r\n                                                    marginTop={0}\r\n                                                    onPress={() => selectedScreen == 'VEHICLE LIST' ? null : handleVehicleList()}\r\n                                                    colorScheme={undefined}\r\n                                                    bgColor={selectedScreen == 'VEHICLE LIST' ? '#FFFFFF' : '#0642F4'}\r\n                                                    leftIcon={\r\n                                                        <>\r\n                                                            <View>\r\n                                                                <FontAwesome\r\n                                                                    name=\"automobile\"\r\n                                                                    size={15}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                />\r\n\r\n                                                                <MaterialCommunityIcons name=\"format-list-bulleted\" size={10}\r\n                                                                    color={selectedScreen == 'VEHICLE LIST' ? '#0642F4' : \"white\"}\r\n                                                                    style={{\r\n                                                                        position: 'absolute', // Position it absolutely...\r\n                                                                        top: -3, // ...at the top...\r\n                                                                        left: -5 // ...and left.\r\n                                                                    }}\r\n                                                                />\r\n\r\n                                                            </View>\r\n\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    justifyContent=\"flex-start\"\r\n                                                    alignItems=\"center\"\r\n                                                // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                                >VEHICLE LIST</Button>}\r\n\r\n                                            {loginAccountType == 'admin' && <Button\r\n                                                _text={{ color: selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => selectedScreen == 'FREIGHT' ? null : handleFreight()}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'FREIGHT' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <MaterialIcons\r\n                                                                name=\"public\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                            />\r\n\r\n                                                            <MaterialIcons name=\"sync\" size={12}\r\n                                                                color={selectedScreen == 'FREIGHT' ? '#0642F4' : \"white\"}\r\n                                                                style={{\r\n                                                                    position: 'absolute', // Position it absolutely...\r\n                                                                    top: -3, // ...at the top...\r\n                                                                    left: -5 // ...and left.\r\n                                                                }}\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >FREIGHT</Button>\r\n                                            }\r\n\r\n                                            {(loginAccountType == 'admin' || loginAccountType == 'sales' || loginAccountType == 'booking') && <Button\r\n                                                _text={{ color: selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\", }}\r\n                                                borderRadius={0}\r\n                                                borderTopWidth={1}\r\n                                                borderBottomWidth={1}\r\n                                                borderColor={'white'}\r\n                                                _hover={{ bgColor: selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#032da8', }}\r\n                                                marginTop={0}\r\n                                                onPress={() => { selectedScreen == 'CHAT MESSAGES' ? null : handleChatMessages() }}\r\n                                                colorScheme={undefined}\r\n                                                bgColor={selectedScreen == 'CHAT MESSAGES' ? '#FFFFFF' : '#0642F4'}\r\n                                                leftIcon={\r\n                                                    <>\r\n                                                        <View>\r\n                                                            <Entypo\r\n                                                                name=\"chat\"\r\n                                                                size={20}\r\n                                                                color={selectedScreen == 'CHAT MESSAGES' ? '#0642F4' : \"white\"}\r\n\r\n                                                            />\r\n\r\n                                                        </View>\r\n\r\n\r\n                                                    </>\r\n                                                }\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"center\"\r\n                                            // rightIcon={<FontAwesome name=\"automobile\" size={15} color=\"white\" />}\r\n                                            >CHAT MESSAGES</Button>}\r\n                                        </View>\r\n                                        {/* Footer Content */}\r\n                                        {/* <TouchableOpacity\r\n            style={{ borderTopWidth: 1, borderColor: 'gray', backgroundColor: '#7b9cff', paddingVertical: 10 }}\r\n            onPress={handleSignOut}\r\n          >\r\n            <Text style={{ color: 'white', textAlign: 'center' }}>\r\n              Logout\r\n            </Text>\r\n          </TouchableOpacity> */}\r\n                                    </ScrollView>\r\n                                    <View style={{ borderTopWidth: 0, backgroundColor: '#7b9cff', position: 'absolute', bottom: 0, left: 0, right: 0, borderTopColor: 'gray', paddingTop: 3 }}>\r\n                                        {/* Footer Content */}\r\n                                        {/* <Center marginBottom={1.5}>\r\n            <Button w={100} colorScheme=\"error\" onPress={handleSignOut}>\r\n              <MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" /> Logout\r\n            </Button>\r\n          </Center> */}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n\r\n                    </Animated.View>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  HStack,\r\n  Icon,\r\n  Image as NativeImage,\r\n  Input,\r\n  Modal,\r\n  NativeBaseProvider,\r\n  Popover,\r\n  Pressable,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  useBreakpointValue,\r\n  TextArea,\r\n  InputRightAddon,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Select,\r\n  CheckIcon,\r\n  PresenceTransition,\r\n  CloseIcon,\r\n  ScrollView as ScrollViewNative,\r\n  Divider,\r\n  useDisclosure,\r\n  useDisclose,\r\n  FormControl,\r\n  Checkbox,\r\n  useToast\r\n} from 'native-base';\r\nimport React, { useEffect, useRef, useState, useMemo, useCallback, useReducer } from 'react';\r\nimport {\r\n  Dimensions,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n  View,\r\n  PanResponder,\r\n  Animated,\r\n  InputAccessoryView,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Image as RNImage\r\n} from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  FontAwesome5,\r\n  EvilIcons\r\n} from 'react-native-vector-icons';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport axios from 'axios';\r\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signOut } from 'firebase/auth';\r\nimport { addDoc, collection, doc, getDoc, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, getDocs, orderBy, startAfter, limit, where, endBefore, endAt, limitToLast, collectionGroup } from 'firebase/firestore';\r\nimport moment from 'moment';\r\nimport { authForCreateUser } from '../../firebasecontrolCreateUser';\r\nimport './../style.css';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionAuth, projectControlFirebase, projectExtensionFirebase } from \"../../crossFirebase\";\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, listAll, deleteObject } from 'firebase/storage';\r\nimport FastImage from 'react-native-fast-image-web-support';\r\nimport MobileViewDrawer from './SideDrawer/MobileViewDrawer';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\r\nimport { Calendar, LocaleConfig } from 'react-native-calendars';\r\nimport { DragSortableView } from 'react-native-drag-sort';\r\nimport {\r\n  setVehicleListData,\r\n  setSupplyChainsCostsData,\r\n  setSelectedPaidTo,\r\n  setSelectedExpenseName,\r\n  setSupplyChainsCostsModalVisible,\r\n  setVehicleListSupplyChainsCostsData,\r\n  setDeleteImageVisible,\r\n  setSelectedImages,\r\n  setAddAnotherImages,\r\n  setIsAddPhotoVisible,\r\n  setUploadImagesModalVisible,\r\n  setUploadImagesButtonLoading,\r\n  setViewImagesModalVisible,\r\n  setViewImagesData,\r\n  setLoadingModalVisible,\r\n  setAddVehicleListData,\r\n  setEditVehicleModalVisible,\r\n  setFobPriceHistoryModalVisible,\r\n  setFobHistoryData,\r\n  setLoginName\r\n} from './redux/store';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\nimport { nanoid } from 'nanoid';\r\nimport { cloneDeep } from 'lodash';\r\nimport StickyHeader from './Header/StickyHeader';\r\nimport { UsePagination } from './VehicleListComponent/UsePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCodeScanner from './QrCodeScanner/QrCodeScanner';\r\n\r\n// import { CollectionGroup } from 'firebase-admin/firestore';\r\nconst { width } = Dimensions.get('window');\r\nlet selectedScreen = 'VEHICLE LIST'\r\n\r\nlet globalSupplyChainCostsData = [];\r\nlet globalCurrentSupplyChainCostsData = [];\r\nlet globalFobPriceHistoryData = [];\r\nlet globalCurrentStockID = '';\r\nlet globalSelectedPaidTo = '';\r\nlet globalSPCSelectedDate = '';\r\nlet globalSelectedExpenseName = '';\r\nlet globalSupplyChainCostsAmount = 0;\r\nlet globalSelectedImages = [];\r\nlet globalSelectedVehicle = '';\r\nlet globalSelectedVehicleReferenceNumber = '';\r\nlet globalSelectedCarName = '';\r\nconst nameVariable = {\r\n  text: \"\",\r\n};\r\n\r\nconst firestore = getFirestore();\r\n\r\nconst getEmailOfCurrentUser = () => {\r\n  const user = projectControlAuth.currentUser;\r\n  if (user) {\r\n    const email = user.email;\r\n    return email;\r\n  } else {\r\n    // console.log('No user is currently authenticated');\r\n    return null;\r\n  }\r\n};\r\n\r\n// const Drawer = createDrawerNavigator();\r\n\r\n\r\nconst storage = getStorage(projectExtensionFirebase);\r\n\r\nconst SelectStockStatus = ({ selectedValue, id, item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const stockStatusData = useSelector((state) => state.stockStatusData);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n  const [selectedStockStatusValue, setSelectedStockStatusValue] = useState(selectedValue);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', id), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Handle the data from the document\r\n        setSelectedStockStatusValue(data.stockStatus);\r\n        // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSaveStockStatus = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n    if (item.stockStatus == selectedStockStatusValue || selectedStockStatusValue == '' || selectedStockStatusValue == '__NativeBasePlaceHolder__') {\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n    else {\r\n\r\n      const stockStatusHistoryData = {\r\n        date: formattedTime,\r\n        stockStatus: selectedStockStatusValue,\r\n        changedBy: nameVariable.text,\r\n      };\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, {\r\n          stockStatus: selectedStockStatusValue,\r\n          stockStatusHistory: arrayUnion(stockStatusHistoryData)\r\n        });\r\n        const logData = {\r\n          message: `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to \"${selectedStockStatusValue}\" with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n          keywords: [\r\n            formattedTime.toLowerCase(),\r\n            globalCurrentStockID.toLowerCase(),\r\n            `Stock Status Updated: \"${nameVariable.text}\" updated \"${item.carName}\" stock status to ${selectedStockStatusValue} with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n            'Stock Status'.toLowerCase(),\r\n            'Stock Status Updated'.toLowerCase(),\r\n            'Stock'.toLowerCase(),\r\n            'Status Updated'.toLowerCase(),\r\n            'Updated'.toLowerCase(),\r\n            globalSelectedCarName.toLowerCase(),\r\n            globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n            nameVariable.text.toLowerCase(),\r\n            year.toLowerCase(),\r\n            month.toLowerCase(),\r\n            monthWithDay.toLowerCase(),\r\n            date.toLowerCase(),\r\n            day.toLowerCase(),\r\n            time.toLowerCase(),\r\n            timeWithMinutesSeconds.toLowerCase(),\r\n          ],\r\n        };\r\n        addLogToCollection(logData);\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n        // console.log('FOB Price updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Stock Status updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <View style={{ width: screenWidth >= 1360 ? '70%' : '88%', backgroundColor: 'white', }}>\r\n        <Select\r\n          selectedValue={selectedStockStatusValue}\r\n          onValueChange={(value) => {\r\n            setSelectedStockStatusValue(value);\r\n          }}\r\n          flex={3}\r\n          accessibilityLabel=\"---\"\r\n          placeholder=\"---\"\r\n          _selectedItem={{\r\n            bg: \"teal.600\",\r\n            endIcon: <CheckIcon size=\"5\" />\r\n          }}\r\n        >\r\n          {stockStatusData.map((item) => (\r\n            <Select.Item key={item} label={item} value={item} />\r\n          ))}\r\n        </Select>\r\n      </View>\r\n\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={handleSaveStockStatus}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 3,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </View>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nconst addLogToCollection = async (data) => {\r\n  try {\r\n    const logsCollectionRef = collection(projectControlFirestore, 'logs');\r\n\r\n    // Add a new document to the \"logs\" collection\r\n    await addDoc(logsCollectionRef, data);\r\n\r\n    // console.log('Document added successfully!');\r\n  } catch (error) {\r\n    console.error('Error adding document:', error);\r\n  }\r\n};\r\n\r\nconst LoadingModal = () => {\r\n  const loadingModalVisible = useSelector((state) => state.loadingModalVisible);\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        flex: 1,\r\n        display: loadingModalVisible ? 'flex' : 'none',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {/* Content within the modal */}\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Spinner size=\"lg\" color=\"white\" />\r\n        <Text style={{ color: 'white' }} selectable={false}>Loading, please wait!</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst ClearImagesModal = ({ modalDeleteImagesVisible, setModalDeleteImagesVisible, handleClearImages, selectedImages, isAddPhotoVisible }) => {\r\n  // const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n\r\n  const handleModalDeleteOpen = () => {\r\n    setModalDeleteImagesVisible(true);\r\n  };\r\n\r\n  const handleModalDeleteClose = () => {\r\n    setModalDeleteImagesVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          backgroundColor: '#FF4136',\r\n          borderRadius: 3,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          display: isAddPhotoVisible ? 'none' : 'flex',\r\n        }}\r\n      >\r\n        <TouchableHighlight onPress={handleModalDeleteOpen} style={{ flex: 1 }}>\r\n          <Ionicons name=\"trash-sharp\" size={20} color=\"white\" />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n      <Modal isOpen={modalDeleteImagesVisible} onClose={handleModalDeleteClose} useRNModal>\r\n        <Modal.Content bgColor={'error.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'error.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear Images\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'error.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.400'}\r\n            margin={5}\r\n          >\r\n            <View style={{ flex: 1 }}>\r\n              <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>Alert!</Text>\r\n              <Text style={{ color: '#FF4136' }}>\r\n                Are you sure you want to clear{' '}\r\n                <Text style={{ color: '#FF4136', fontWeight: 'bold' }}>\r\n                  {selectedImages.length}\r\n                </Text>{' '}\r\n                selected image(s)?\r\n              </Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'error.100'}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleModalDeleteClose}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#57534E', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>No</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleClearImages}\r\n                style={{\r\n                  flex: 1,\r\n                  backgroundColor: '#DC2626', // Replace with your desired color\r\n                  borderRadius: 5,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  margin: 5,\r\n                  padding: 5,\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 14, color: 'white' }}>Clear Images</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploader = ({ dragSortableViewRef, handleClearImagesExtra }) => {\r\n  const dispatch = useDispatch();\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const deleteImageVisible = useSelector((state) => state.deleteImageVisible);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const selectedImages = useSelector((state) => state.selectedImages);\r\n  // const [selectedImages, setSelectedImages] = useState([]);\r\n  const isAddPhotoVisible = useSelector((state) => state.isAddPhotoVisible);\r\n  const addAnotherImages = useSelector((state) => state.addAnotherImages);\r\n  // const [IsAddPhotoVisible, setIsAddPhotoVisible] = useState(true);\r\n  // const [addAnotherImages, setAddAnotherImages] = useState(false);\r\n  // const modalDeleteImagesVisible = useSelector((state) => state.modalDeleteImagesVisible);\r\n  const [modalDeleteImagesVisible, setModalDeleteImagesVisible] = useState(false);\r\n  const [scrollEnabled, setscrollEnabled] = useState(true);\r\n  const [isEnterEdit, setisEnterEdit] = useState(false);\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n  const [isCursorLoading, setIsCursorLoading] = useState(false);\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n  const [isFileSizeLimitModal, setIsFileSizeLimitModal] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setIsCursorLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n  const styles = StyleSheet.create({\r\n    dropdown: {\r\n      margin: 16,\r\n      height: 50,\r\n      borderBottomColor: 'gray',\r\n      borderBottomWidth: 0.5,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n\r\n    },\r\n    txt: {\r\n      fontSize: 18,\r\n      lineHeight: 24,\r\n      padding: 5\r\n    },\r\n    sort: {\r\n    },\r\n    item_children: {\r\n      width: 90,\r\n      height: 90,\r\n      backgroundColor: 'black',\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    item_delete_icon: {\r\n      width: 14,\r\n      height: 14,\r\n      position: \"absolute\",\r\n      right: 1,\r\n      top: 1\r\n    },\r\n    item_icon: {\r\n      width: 90,\r\n      height: 90,\r\n      resizeMode: \"contain\",\r\n      position: \"absolute\"\r\n    }\r\n  });\r\n\r\n  const handleImageAddToSelection = async () => {\r\n    dispatch(setDeleteImageVisible(true));\r\n    if (selectedImages.length === 40) {\r\n      return; // Limit reached, do not add a new image\r\n    }\r\n\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40 - selectedImages.length, // Adjust the selection limit based on the remaining slots\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Filter out images larger than 10MB\r\n      const newImages = [...selectedImages];\r\n      const promises = response.assets.map(async (asset) => {\r\n        const file = await fetch(asset.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          const exists = newImages.some((image) => image.uri === asset.uri);\r\n          if (!exists) {\r\n            newImages.push(asset); // Add the asset to the array if it doesn't exist\r\n          }\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      const limitedImages = newImages.slice(0, 40);\r\n      dispatch(setSelectedImages(limitedImages));\r\n      globalSelectedImages = limitedImages;\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      // limitedImages.forEach((image) => {\r\n      //   console.log(`File size: ${image.fileSize}`);\r\n      // });\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n  const reloadData = useCallback(() => {\r\n    if (selectedImages.length > 0) {\r\n      // ... Logic to reload data using selectedImages and width\r\n\r\n      // Assuming your logic has updated selectedImages, you can directly use it here\r\n      const updatedSelectedImages = [...selectedImages];\r\n\r\n      // Dispatch the updatedSelectedImages array to the state\r\n      dispatch(setSelectedImages(updatedSelectedImages));\r\n    }\r\n\r\n  }, [widthState]);\r\n\r\n  useEffect(() => {\r\n    const handleWidthChange = ({ window }) => {\r\n      setWidthState(window.width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', handleWidthChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reloadData();\r\n  }, [reloadData]);\r\n\r\n\r\n\r\n  const handleClearImages = useCallback(() => {\r\n    setModalDeleteImagesVisible(false);\r\n    // dispatch(setSelectedImages([]));\r\n    // globalSelectedImages = [];\r\n    // dispatch(setIsAddPhotoVisible(true));\r\n    // dispatch(setAddAnotherImages(false));\r\n    // dispatch(setDeleteImageVisible(true));\r\n    handleClearImagesExtra();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const renderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={-3}\r\n              right={-3}\r\n              bg=\"rgba(0, 0, 0, 0.5)\"\r\n              borderRadius={10}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Pressable onPress={() => handleDeleteImagePress(item.uri)} display={boolean ? 'block' : 'none'}>\r\n                <Icon as={<Entypo name=\"circle-with-cross\" />} size={4} color={\"white\"} cursor={'pointer'} />\r\n              </Pressable>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    // console.log(item.id);\r\n    // console.log(index)\r\n    if (isEnterEdit) {\r\n\r\n      return (\r\n\r\n        <Box key={item.uri} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n            />\r\n\r\n\r\n          </Box>\r\n        </Box>\r\n\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <Box key={item.id} style={styles.item}>\r\n          <Box style={styles.item_children}>\r\n\r\n            <FastImage\r\n              style={styles.item_icon}\r\n              source={{\r\n                uri: item.uri,\r\n                priority: FastImage.priority.normal,\r\n              }}\r\n              resizeMode={FastImage.resizeMode.contain}\r\n\r\n            />\r\n\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const handleImageSelection = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n      // quality: 10,\r\n      maxWidth: 1000,\r\n      maxHeight: 1000,\r\n      selectionLimit: 40,\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await launchImageLibrary(options);\r\n      if (response.didCancel) {\r\n        // console.log('User cancelled image picker');\r\n        return;\r\n      } else if (response.error) {\r\n        // console.log('ImagePicker Error: ', response.error);\r\n        return;\r\n      } else if (!response.assets || response.assets.length === 0) {\r\n        // console.log('No images selected.');\r\n        return;\r\n      }\r\n\r\n      // Remove duplicates from the selected images\r\n      const uniqueImages = response.assets.filter(\r\n        (asset, index, self) => index === self.findIndex((a) => a.uri === asset.uri)\r\n      );\r\n\r\n      // Filter out images larger than 10MB\r\n      const filteredImages = [];\r\n      const imageOrder = [];\r\n      for (let index = 0; index < uniqueImages.length; index++) {\r\n        const image = uniqueImages[index];\r\n        const file = await fetch(image.uri).then((res) => res.blob());\r\n        const fileSize = file.size;\r\n        if (fileSize / 1024 / 1024 < 10) {\r\n          filteredImages.push(image);\r\n          imageOrder.push(index);\r\n        } else {\r\n          setIsFileSizeLimitModal(true);\r\n        }\r\n      }\r\n\r\n\r\n      // Sort the filtered images based on their original order\r\n      const sortedImages = filteredImages.sort((a, b) => {\r\n        const indexA = imageOrder[filteredImages.indexOf(a)];\r\n        const indexB = imageOrder[filteredImages.indexOf(b)];\r\n        return indexA - indexB;\r\n      });\r\n\r\n\r\n\r\n      // Limit the number of selected images to 40\r\n      const limitedImages = sortedImages.slice(0, 40);\r\n\r\n      globalSelectedImages = limitedImages;\r\n      if (limitedImages.length > 0) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(true));\r\n      }\r\n\r\n      if (limitedImages.length >= 40) {\r\n        dispatch(setIsAddPhotoVisible(false));\r\n        dispatch(setAddAnotherImages(false));\r\n      }\r\n\r\n      dispatch(setSelectedImages(globalSelectedImages));\r\n\r\n    } catch (error) {\r\n      // console.log('ImagePicker Error: ', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleDeleteImagePress = useCallback((uri) => {\r\n\r\n    globalSelectedImages = globalSelectedImages.filter((item) => {\r\n      // Replace 'uriToDelete' with the URI you want to delete\r\n      return item.uri !== uri;\r\n    });\r\n\r\n    if (globalSelectedImages.length < 40) {\r\n      dispatch(setAddAnotherImages(true));\r\n    }\r\n\r\n    if (globalSelectedImages.length == 0) {\r\n      dispatch(setAddAnotherImages(false));\r\n      dispatch(setIsAddPhotoVisible(true));\r\n    }\r\n    dispatch(setSelectedImages(globalSelectedImages));\r\n    // dispatch(setSelectedImages((prevImages) => {\r\n    //   const updatedImages = prevImages.filter((image) => image.uri !== uri);\r\n\r\n    //   if (updatedImages.length < 40) {\r\n    //     dispatch(setAddAnotherImages(true));\r\n    //   }\r\n    //   if (updatedImages.length == 0) {\r\n    //    dispatch(setAddAnotherImages(false));\r\n    //     dispatch(setIsAddPhotoVisible(true));\r\n    //   }\r\n    //   return updatedImages;\r\n    // }));\r\n\r\n    // console.log(globalSelectedImages.map((item) => item.uri));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Box flex={1} flexDir={['column', 'column', 'column', 'row', 'row', 'row']}> */}\r\n\r\n\r\n      <Box flex={1} borderColor={'white'} borderWidth={1}>\r\n        <ScrollView flex={1} contentContainerStyle={{ flexGrow: 1 }}>\r\n          <Box justifyContent={'center'} alignItems={'center'} h={'full'} w={'full'}>\r\n\r\n            <ClearImagesModal\r\n              modalDeleteImagesVisible={modalDeleteImagesVisible}\r\n              setModalDeleteImagesVisible={setModalDeleteImagesVisible}\r\n              handleClearImages={handleClearImages}\r\n              selectedImages={selectedImages}\r\n              isAddPhotoVisible={isAddPhotoVisible} />\r\n\r\n            <Box justifyContent={'center'} alignSelf={'center'} alignItems={'center'} margin={3}>\r\n\r\n              <Icon display={isAddPhotoVisible ? 'block' : 'none'} onPress={handleImageSelection} as={<MaterialIcons name=\"add-photo-alternate\" />} size={100} ml=\"2\" color=\"#12293F\" />\r\n\r\n\r\n              <ScrollView\r\n                scrollEnabled={scrollEnabled}\r\n                flex={1}\r\n              >\r\n                <Box flex={1} display={deleteImageVisible ? 'flex' : 'none'} width={'full'} alignItems={'center'} justifyContent={'center'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    delayLongPress={100}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onDragStart={useCallback(() => {\r\n                      if (!isEnterEdit) {\r\n                        setisEnterEdit(true);\r\n                        setscrollEnabled(false);\r\n                      } else {\r\n                        setscrollEnabled(false);\r\n                      }\r\n                    }, [])}\r\n                    onDragEnd={useCallback(() => {\r\n                      setscrollEnabled(true);\r\n                    }, [])}\r\n                    onDataChange={useCallback((data) => {\r\n\r\n                      if (data.length !== data) {\r\n                        dispatch(setSelectedImages(data));\r\n                        globalSelectedImages = data;\r\n                      }\r\n\r\n                    }, [])}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => renderItem(item, index), [])} />\r\n\r\n                  <Center>\r\n                    <Icon display={addAnotherImages ? 'block' : 'none'} onPress={handleImageAddToSelection} as={<Entypo name=\"plus\" />} ml={'2'} size={50} color=\"#12293F\" />\r\n                  </Center>\r\n\r\n                </Box>\r\n\r\n\r\n\r\n                <Box flex={1} display={deleteImageVisible ? 'none' : 'flex'} width={'full'}>\r\n\r\n\r\n                  <DragSortableView\r\n                    sortable={false}\r\n                    ref={dragSortableViewRef}\r\n                    dataSource={selectedImages}\r\n                    parentWidth={width * 0.33}\r\n                    childrenWidth={100}\r\n                    childrenHeight={100}\r\n                    marginChildrenTop={3}\r\n                    marginChildrenBottom={0}\r\n                    marginChildrenLeft={0}\r\n                    marginChildrenRight={0}\r\n                    onClickItem={(item, index) => {\r\n                      handleImagePress(index.uri);\r\n                    }}\r\n                    keyExtractor={(item) => item.uri} // FlatList作用一样，优化\r\n                    renderItem={\r\n                      useCallback((item, index) => getImagesRenderItem(item, index), [])} />\r\n\r\n                </Box>\r\n              </ScrollView>\r\n\r\n\r\n\r\n\r\n            </Box>\r\n\r\n\r\n            <Box\r\n              position=\"absolute\"\r\n              top={0}\r\n              left={0}\r\n              borderRadius={3}\r\n              bgColor={'rgba(0, 0, 0, 0.5)'}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              display={isAddPhotoVisible ? 'none' : 'block'}>\r\n              <Text marginLeft={1} marginRight={1} color={'white'} bold italic fontSize={12}>Selected {selectedImages.length} image(s) (Maximum of 40)</Text>\r\n            </Box>\r\n          </Box>\r\n\r\n        </ScrollView>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      {/* </Box> */}\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={isFileSizeLimitModal} onClose={() => setIsFileSizeLimitModal(false)} useRNModal>\r\n        <Modal.Content bgColor={'danger.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'danger.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Failed!\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            bgColor={'danger.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'danger.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'danger.600'} bold>\r\n                Failed!\r\n              </Text>\r\n              <Text color={'danger.600'}>\r\n                Please select image(s) smaller than 10MB!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'danger.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'primary'} flex=\"1\" onPress={() => setIsFileSizeLimitModal(false)} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ImageUploadModal = ({ handleUploadImagesModalClose, screenWidth, dragSortableViewRef, handleClearImagesExtra, handleUploadImages }) => {\r\n\r\n  const uploadImagesModalVisible = useSelector((state) => state.uploadImagesModalVisible)\r\n  const uploadImagesButtonLoading = useSelector((state) => state.uploadImagesButtonLoading)\r\n  return (\r\n    <Modal isOpen={uploadImagesModalVisible} onClose={handleUploadImagesModalClose} size={'full'} useRNModal>\r\n      <Modal.Content bgColor={'white'} w={'90%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Upload Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <View style={{ flex: 1, height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n          <View style={{ borderWidth: 1, borderColor: '#12293F', width: '95%', height: '95%' }}>\r\n\r\n            <ImageUploader dragSortableViewRef={dragSortableViewRef} handleClearImagesExtra={handleClearImagesExtra} />\r\n\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <TouchableOpacity\r\n            onPress={handleUploadImagesModalClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n\r\n          <TouchableOpacity\r\n            disabled={uploadImagesButtonLoading}\r\n            onPress={handleUploadImages}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            {!uploadImagesButtonLoading ? (\r\n              <Text style={{ color: 'white' }}>Upload</Text>) : (\r\n              <Spinner color=\"white\" />\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n      </Modal.Content>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}\r\n\r\nconst UploadImagesModal = ({ fetchImageCounts }) => {\r\n\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const dragSortableViewRef = useRef();\r\n\r\n  const handleClearImagesExtra = () => {\r\n    dispatch(setSelectedImages([]));\r\n    globalSelectedImages = [];\r\n    dispatch(setIsAddPhotoVisible(true));\r\n    dispatch(setAddAnotherImages(false));\r\n    dispatch(setDeleteImageVisible(true));\r\n  };\r\n\r\n\r\n  const handleUploadImagesModalClose = () => {\r\n\r\n    dispatch(setUploadImagesModalVisible(false));\r\n    // globalCurrentStockID = '';\r\n    handleClearImagesExtra();\r\n    globalSelectedVehicle = '';\r\n  }\r\n\r\n  const uploadImages = useCallback(async () => {\r\n\r\n    const storageRef = ref(storage, `${globalCurrentStockID}`);\r\n    const ImageFormat = { jpg: 'jpg' };\r\n    const collectionRef = collection(projectExtensionFirestore, 'VehicleProducts');\r\n    const docRef = doc(collectionRef, globalCurrentStockID);\r\n\r\n\r\n\r\n    try {\r\n      // Get the names of the images to keep\r\n      const imageNamesToKeep = globalSelectedImages.map((asset, index) => index.toString());\r\n\r\n      // Delete existing files in the folder that do not match the names of the images to keep\r\n      const listResult = await listAll(storageRef);\r\n      await Promise.all(\r\n        listResult.items\r\n          .filter((itemRef) => !imageNamesToKeep.includes(itemRef.name))\r\n          .map((itemRef) => deleteObject(itemRef))\r\n      );\r\n\r\n      await Promise.all(\r\n        globalSelectedImages.map(async (asset, index) => {\r\n          const { uri } = asset;\r\n          const imagename = index.toString();\r\n\r\n          const response = await fetch(uri);\r\n          const blob = await response.blob();\r\n\r\n          // Create an offscreen canvas\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // Create a new image object\r\n          const img = new Image();\r\n          img.src = URL.createObjectURL(blob);\r\n\r\n          // Draw the image on the canvas\r\n          img.onload = async () => {\r\n            // Create a canvas element\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Calculate the desired width and height for the resized image\r\n            const maxWidth = 800; // Set your desired maximum width\r\n            const maxHeight = 600; // Set your desired maximum height\r\n            let newWidth = img.width;\r\n            let newHeight = img.height;\r\n\r\n            // Check if the image needs resizing\r\n            if (img.width > maxWidth) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height * maxWidth) / img.width;\r\n            }\r\n\r\n            if (newHeight > maxHeight) {\r\n              newWidth = (newWidth * maxHeight) / newHeight;\r\n              newHeight = maxHeight;\r\n            }\r\n\r\n            // Set the canvas dimensions to the new width and height\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n\r\n            // Draw the resized image onto the canvas\r\n            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n            // Calculate the font size as a percentage of the image width\r\n            const fontSizePercentage = 3;\r\n            const imageRes = img.height * img.width;\r\n            const fontSize = (canvas.width * fontSizePercentage) / 100;\r\n\r\n            ctx.font = `bold ${fontSize}px Arial`;\r\n            ctx.fillStyle = '#fff';\r\n            ctx.shadowColor = 'transparent';\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.lineWidth = 2;\r\n\r\n            // Calculate the position for the watermark text\r\n            const watermarkText = `Real Motor Japan ${globalSelectedVehicleReferenceNumber}`;\r\n            const textWidth = ctx.measureText(watermarkText).width;\r\n            const textHeight = fontSize; // Font size determines the text height\r\n\r\n            // Set padding around the text (adjust as needed)\r\n            const paddingX = 10;\r\n            const paddingY = 5;\r\n\r\n            // Calculate the position for the text shadow\r\n            const xShadow = (canvas.width - textWidth) / 2 + 2; // Adjust the horizontal position for the shadow\r\n            const yShadow = canvas.height - 20 + 2; // Adjust the vertical position for the shadow\r\n\r\n            // Increase the shadow thickness by adjusting the shadow blur radius\r\n            ctx.shadowBlur = 10; // Adjust this value to make the shadow thicker\r\n\r\n            // Draw the text shadow (black)\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(watermarkText, xShadow, yShadow);\r\n\r\n            // Reset the shadow blur radius for the actual text\r\n            ctx.shadowBlur = 2; // Reset the shadow blur radius to the original value\r\n\r\n            // Calculate the position for the actual text\r\n            const x = (canvas.width - textWidth) / 2;\r\n            const y = canvas.height - 20;\r\n\r\n            // Draw the actual text (white)\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fillText(watermarkText, x, y);\r\n\r\n            // Convert the canvas to a blob\r\n            const watermarkedImageBlob = await new Promise(resolve => {\r\n              canvas.toBlob(resolve, 'image/jpeg', 0.8); // You can adjust the quality (0.7 is a good compromise between size and quality)\r\n            });\r\n\r\n            // Upload the resized image to Firebase Storage\r\n            const imageRef = ref(storage, `${globalCurrentStockID}/${imagename}`);\r\n            await uploadBytes(imageRef, watermarkedImageBlob, { contentType: 'image/jpeg' });\r\n          };\r\n        })\r\n      );\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n      const year = moment(datetime).format('YYYY');\r\n      const month = moment(datetime).format('MM');\r\n      const monthWithDay = moment(datetime).format('MM/DD');\r\n      const date = moment(datetime).format('YYYY/MM/DD');\r\n      const day = moment(datetime).format('DD');\r\n      const time = moment(datetime).format('HH:mm');\r\n      const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n      const imageCount = {\r\n        imageCount: globalSelectedImages.length,\r\n      };\r\n\r\n      await updateDoc(docRef, imageCount);\r\n\r\n      const logData = {\r\n        message: `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber}\" using Vehicle List`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle Updated: \"${nameVariable.text}\" updated \"${globalSelectedCarName}\" images with a reference number of \"${globalSelectedVehicleReferenceNumber} using Vehicle List\"`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle Updated'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n\r\n      // console.log(`Images uploaded to folder ${globalCurrentStockID}`);\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleUploadImages = async () => {\r\n\r\n    dispatch(setUploadImagesButtonLoading(true));\r\n\r\n    if (globalSelectedImages.length > 0) {\r\n      toast.closeAll();\r\n      try {\r\n        await uploadImages();\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        fetchImageCounts();\r\n        handleUploadImagesModalClose();\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Images successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        dispatch(setUploadImagesButtonLoading(false));\r\n        handleUploadImagesModalClose();\r\n\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Uploaded Error: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    else {\r\n      dispatch(setUploadImagesButtonLoading(false));\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <ImageUploadModal\r\n        handleUploadImagesModalClose={handleUploadImagesModalClose}\r\n        screenWidth={screenWidth}\r\n        dragSortableViewRef={dragSortableViewRef}\r\n        handleClearImagesExtra={handleClearImagesExtra}\r\n        handleUploadImages={handleUploadImages} />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst SupplyChainsCosts = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsOpen = useCallback((data) => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n    dispatch(setVehicleListSupplyChainsCostsData(data.supplyChainsCostsData ? data.supplyChainsCostsData : []));\r\n    globalSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentSupplyChainCostsData = data.supplyChainsCostsData;\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <><TouchableOpacity\r\n      onPress={() => handleModalSupplyChainsCostsOpen(data)}\r\n      style={{\r\n        backgroundColor: '#12293F',\r\n        borderRadius: 5,\r\n        padding: 2,\r\n        // flex: 1,\r\n        width: '90%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      {/* <Text style={{ textAlign: 'center', }}>Expense</Text> */}\r\n      <MaterialIcons name=\"payments\" size={22} color=\"white\" />\r\n    </TouchableOpacity>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst AllSccModals = ({ supplyChainsCostsModalVisible, supplyChainsCostsData, expenseNameData, paidToData, currentDate, vehicleListSupplyChainsCostsData }) => {\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toast = useToast();\r\n\r\n  const [sccData, setSccData] = useState([]);\r\n\r\n  // const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible);\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const [clearModalVisible, setClearModalVisible] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(currentDate);\r\n  const [inputAmountIsError, setInputAmountIsError] = useState(false);\r\n  const [expenseNameIsError, setExpenseNameIsError] = useState(false);\r\n  const [paidToIsError, setPaidToIsError] = useState(false);\r\n  const [totalAmount, setTotalAmount] = useState(globalSupplyChainCostsAmount);\r\n  // const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  // const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n  const [selectResetKey, setSelectResetKey] = useState(nanoid());\r\n  const selectExpenseNameRef = useRef(null);\r\n  const selectPaidToRef = useRef(null);\r\n  const expenseViewRef = useRef(null);\r\n\r\n  const textAreaAddExpenseName = useRef(null);\r\n  const textAreaAddPaidTo = useRef(null);\r\n  const inputExpenseAmount = useRef(null);\r\n  const handleInputExpenseAmountChange = (text) => {\r\n    // Remove any non-numeric characters\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n\r\n    // Limit the numeric value to a maximum of 4 characters\r\n    const truncatedValue = numericValue.slice(0, 6);\r\n\r\n    // Format the truncated numeric value with comma separator\r\n    const formattedValue = Number(truncatedValue).toLocaleString();\r\n\r\n    inputExpenseAmount.current.value = formattedValue;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleModalSupplyChainsCostsClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n    inputExpenseAmount.current?.clear();\r\n    globalSelectedExpenseName = '';\r\n    setSelectResetKey(nanoid());\r\n    globalSelectedPaidTo = '';\r\n    setSelectedDate(currentDate);\r\n    globalSPCSelectedDate = currentDate;\r\n    dispatch(setSelectedExpenseName(''));\r\n    dispatch(setSelectedPaidTo(''));\r\n    setInputAmountIsError(false);\r\n    setExpenseNameIsError(false);\r\n    setPaidToIsError(false);\r\n    globalSelectedVehicle = '';\r\n  };\r\n\r\n\r\n  const handleClearModalOpen = () => {\r\n    setClearModalVisible(true);\r\n  };\r\n\r\n  const handleClearModalClose = () => {\r\n    setClearModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const amounts = vehicleListSupplyChainsCostsData.map((item) => {\r\n      const expenseName = Object.keys(item)[0];\r\n      const expenseData = item[expenseName];\r\n      return parseFloat(expenseData.amount.replace(',', '')) || 0;\r\n    });\r\n\r\n    // Use reduce to add up all the amounts\r\n    const totalAmount = amounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n    const formattedTotalAmount = totalAmount.toLocaleString();\r\n    setTotalAmount(formattedTotalAmount);\r\n    globalSupplyChainCostsAmount = formattedTotalAmount;\r\n\r\n  }, [vehicleListSupplyChainsCostsData]);\r\n\r\n  const handleSave = useCallback(() => {\r\n\r\n\r\n\r\n    if (inputExpenseAmount.current?.value == ''\r\n      || inputExpenseAmount.current?.value == 0\r\n      || globalSelectedExpenseName == ''\r\n      || globalSelectedPaidTo == ''\r\n    ) {\r\n\r\n      if (inputExpenseAmount.current?.value == '' || inputExpenseAmount.current?.value == 0) {\r\n        setInputAmountIsError(true);\r\n      }\r\n\r\n      if (globalSelectedExpenseName == '') {\r\n        setExpenseNameIsError(true);\r\n      }\r\n\r\n      if (globalSelectedPaidTo == '') {\r\n        setPaidToIsError(true);\r\n      }\r\n    }\r\n\r\n    else {\r\n      const existingIndex = globalSupplyChainCostsData.findIndex(item => item[globalSelectedExpenseName]);\r\n\r\n      if (existingIndex !== -1) {\r\n        // If an entry with the same expense name exists, update it\r\n        const updatedData = cloneDeep(globalSupplyChainCostsData);\r\n        updatedData[existingIndex][globalSelectedExpenseName] = {\r\n          expenseName: globalSelectedExpenseName,\r\n          amount: inputExpenseAmount.current?.value,\r\n          date: globalSPCSelectedDate,\r\n          paidName: globalSelectedPaidTo,\r\n        };\r\n        globalSupplyChainCostsData = updatedData;\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n\r\n      } else {\r\n        setInputAmountIsError(false);\r\n        setExpenseNameIsError(false);\r\n        setPaidToIsError(false);\r\n        // If no entry with the same expense name exists, add a new entry\r\n        const newData = {\r\n          [globalSelectedExpenseName]: {\r\n            expenseName: globalSelectedExpenseName,\r\n            amount: inputExpenseAmount.current?.value,\r\n            date: globalSPCSelectedDate,\r\n            paidName: globalSelectedPaidTo,\r\n          },\r\n        };\r\n        globalSupplyChainCostsData = [...globalSupplyChainCostsData, newData];\r\n        // console.log(globalSupplyChainCostsData);\r\n        // const updatedData = { ...supplyChainsCostsData, ...newData };\r\n        dispatch(setVehicleListSupplyChainsCostsData(globalSupplyChainCostsData));\r\n        // globalSupplyChainCostsData = [...supplyChainsCostsData, newData];\r\n        setSelectResetKey(nanoid());\r\n        inputExpenseAmount.current.clear();\r\n        globalSelectedExpenseName = '';\r\n        globalSelectedPaidTo = '';\r\n        setSelectedDate(currentDate);\r\n        globalSPCSelectedDate = currentDate;\r\n        dispatch(setSelectedExpenseName(''));\r\n        dispatch(setSelectedPaidTo(''));\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const handleEditPress = useCallback((item) => {\r\n    // console.log(item.amount);\r\n    inputExpenseAmount.current.setNativeProps({ text: item.amount });\r\n    dispatch(setSelectedExpenseName(item.expenseName));\r\n    globalSelectedExpenseName = item.expenseName;\r\n    dispatch(setSelectedPaidTo(item.paidName));\r\n    globalSelectedPaidTo = item.paidName;\r\n    globalSPCSelectedDate = item.date;\r\n    setSelectedDate(item.date);\r\n    expenseViewRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  }, [])\r\n\r\n\r\n  const handleDeleteItem = (expenseName) => {\r\n    // Find the index of the item to be deleted\r\n    const itemIndex = globalSupplyChainCostsData.findIndex((item) => Object.keys(item)[0] === expenseName);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Create a copy of the data array and remove the item at the found index\r\n      const newData = [...globalSupplyChainCostsData];\r\n      newData.splice(itemIndex, 1);\r\n\r\n      // Update the state with the new array\r\n      dispatch(setVehicleListSupplyChainsCostsData(newData));\r\n      globalSupplyChainCostsData = newData;\r\n    }\r\n  };\r\n\r\n  const handleFirstModalClose = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(false));\r\n\r\n  };\r\n  const handleFirstModalOpen = () => {\r\n    dispatch(setSupplyChainsCostsModalVisible(true));\r\n\r\n  }\r\n\r\n  const handleAddExpenseNameTextChange = () => {\r\n    const textAreaValue = textAreaAddExpenseName.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddExpenseName.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleAddPaidToTextChange = () => {\r\n    const textAreaValue = textAreaAddPaidTo.current?.value;\r\n    if (textAreaValue) {\r\n      const newText = textAreaValue\r\n        .split('\\n')\r\n        .map((line) => line.charAt(0).toUpperCase() + line.slice(1))\r\n        .join('\\n');\r\n      textAreaAddPaidTo.current.setNativeProps({ text: newText });\r\n    }\r\n  };\r\n\r\n  const handleSaveSupplyChainsCosts = async () => {\r\n\r\n    toast.closeAll();\r\n    if (globalCurrentSupplyChainCostsData == globalSupplyChainCostsData) {\r\n      // console.log('Same price, will not update')\r\n      dispatch(setSupplyChainsCostsModalVisible(false));\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), globalCurrentStockID);\r\n\r\n      try {\r\n        await updateDoc(vehicleProductRef, { supplyChainsCostsData: globalSupplyChainCostsData });\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        // console.log('Supply Chains Costs updated successfully');\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Supply Chains Costs updated successfully!</Text>\r\n            </View>;\r\n          }\r\n        })\r\n\r\n        dispatch(setSupplyChainsCostsModalVisible(false));\r\n        dispatch(setVehicleListSupplyChainsCostsData([]));\r\n        globalSupplyChainCostsData = [];\r\n        globalCurrentSupplyChainCostsData = [];\r\n        globalCurrentStockID = '';\r\n\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.show({\r\n          render: () => {\r\n            return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n              <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n            </View>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n  return (\r\n\r\n    <><Modal isOpen={supplyChainsCostsModalVisible} onClose={handleModalSupplyChainsCostsClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 960 ? '90%' : '50%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 1380 ? 'column' : 'row'} alignItems={screenWidth <= 1380 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Supply Chains Costs</Text>\r\n          <Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 1380 ? 'center' : ''}> {globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <View style={{ height: '100%' }}>\r\n            <View paddingBottom={5}>\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} ref={expenseViewRef}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Expense</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='ExpenseName'\r\n                    handleAddTextChange={handleAddExpenseNameTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Expense Name'\r\n                    dataName={'expenseName'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Expense Name\"\r\n                    data={expenseNameData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectExpenseName expenseNameIsError={expenseNameIsError} selectExpenseNameRef={selectExpenseNameRef} selectResetKey={selectResetKey} setSelectResetKey={setSelectResetKey} />\r\n              </View>\r\n\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: screenWidth <= 960 ? 8 : 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={2}>Amount</Text>\r\n                </View>\r\n                <Input\r\n                  borderColor={inputAmountIsError ? 'error.400' : 'muted.300'}\r\n                  flex={3}\r\n                  ref={inputExpenseAmount}\r\n                  onChangeText={handleInputExpenseAmountChange}\r\n                  placeholder=\"Amount\"\r\n                  bgColor={'white'}\r\n                  placeholderTextColor={'muted.400'}\r\n                  InputLeftElement={<Icon as={<FontAwesome name=\"yen\" />} size={5} ml=\"2\" color=\"muted.400\" />} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Date</Text>\r\n                </View>\r\n                <ModalCalendar setSelectedDate={setSelectedDate} selectedDate={selectedDate} />\r\n              </View>\r\n\r\n              <View style={{ flexDirection: screenWidth <= 960 ? 'column' : 'row', paddingBottom: 1, }} flexDir={'row'} paddingBottom={1}>\r\n                <View style={{\r\n                  backgroundColor: '#7B9CFF', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', borderRadius: 3,\r\n                  padding: screenWidth <= 960 ? 5 : 0,\r\n                }}\r\n                  bgColor={'#7B9CFF'} flex={1} flexDir={'row'} alignItems={'center'} justifyContent={'center'} borderRadius={3}>\r\n                  <Text color={'white'} alignSelf={'center'} marginLeft={2} flex={1}>Paid to</Text>\r\n                  <SupplyChainsCostsSortAndAddModal\r\n                    docName='PaidTo'\r\n                    handleAddTextChange={handleAddPaidToTextChange}\r\n                    textAreaAdd={textAreaAddExpenseName}\r\n                    title='Paid To'\r\n                    dataName={'paidTo'}\r\n                    databaseInit={projectExtensionFirestore}\r\n                    headerText=\"Rearrange/Add Paid To\"\r\n                    data={paidToData}\r\n                    handleFirstModalClose={handleFirstModalClose}\r\n                    handleFirstModalOpen={handleFirstModalOpen} />\r\n                </View>\r\n                <SelectPaidTo paidToIsError={paidToIsError} />\r\n              </View>\r\n\r\n              <TouchableHighlight\r\n                onPress={handleSave}\r\n                underlayColor=\"lightgreen\"\r\n                style={{\r\n                  backgroundColor: '#16A34A',\r\n                  borderRadius: 5,\r\n                  margin: 1,\r\n                  flex: 1,\r\n                  width: screenWidth <= 960 ? '80%' : '40%',\r\n                  alignSelf: 'center',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 10,\r\n                }}>\r\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                  <MaterialIcons name=\"add\" color=\"white\" size={20} />\r\n                  <Text style={{ color: 'white', marginLeft: 5 }}>ADD/EDIT</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            </View>\r\n            {screenWidth >= 1360 ? (\r\n\r\n              <View>\r\n                <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#0642F4', }}\r\n                  flexDirection=\"row\" borderBottomWidth={1} borderColor=\"gray.200\" bgColor=\"#0642F4\">\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Expense Name</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Amount</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Date</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Paid To</Text>\r\n                  <Text flex={1} color={'white'} marginLeft={1} bold>Modify</Text>\r\n                </View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n                    <View style={{ flexDirection: 'row', backgroundColor: '#D4D4D4', borderBottomColor: '#E4E4E7', borderBottomWidth: 1, justifyContent: 'center', alignItems: 'center', }} key={index}\r\n                      flexDirection=\"row\" bgColor={'muted.300'} borderBottomColor=\"gray.200\" borderBottomWidth={1}\r\n                      justifyContent={'center'} alignItems={'center'}>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      <View style={{ flex: 1, flexDirection: 'row', marginLeft: 1 }}\r\n                        flex={1} marginLeft={1} flexDir={'row'}>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleEditPress(expenseData)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#06B6D4',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        <TouchableHighlight\r\n                          onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                          underlayColor={'#005691'}\r\n                          style={{\r\n                            flex: 1,\r\n                            margin: 1,\r\n                            borderRadius: 3,\r\n                          }}>\r\n                          <View\r\n                            style={{\r\n                              flex: 1,\r\n                              backgroundColor: '#EF4444',\r\n                              borderRadius: 3,\r\n                              justifyContent: 'center',\r\n                              alignItems: 'center',\r\n                            }}>\r\n                            <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                          </View>\r\n                        </TouchableHighlight>\r\n                        {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                      </View>\r\n                    </View>\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n            ) : (\r\n\r\n              <View>\r\n                {vehicleListSupplyChainsCostsData.map((item, index) => {\r\n                  const expenseName = Object.keys(item)[0];\r\n                  const expenseData = item[expenseName];\r\n                  return (\r\n\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'center', flex: 1, margin: 3, marginBottom: 10, }} key={index}>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Expense Name</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>{expenseData.expenseName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Amount</Text>\r\n                        </View>\r\n\r\n                        <Text flex={1} marginLeft={1}>¥{expenseData.amount}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Date</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Paid To</Text>\r\n                        </View>\r\n                        <Text flex={1} marginLeft={1}>{expenseData.paidName}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderColor: '#E4E4E7', backgroundColor: '#D4D4D4' }}>\r\n                        <View style={{ backgroundColor: '#0642F4', flex: 1, borderBottomWidth: 1, borderColor: '#E4E4E7', justifyContent: 'center', width: '30%' }}>\r\n                          <Text color={'white'} bgColor={'#0642F4'} marginLeft={1} bold>Modify</Text>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: 'row', }}\r\n                          flex={1} marginLeft={1} flexDir={'row'}>\r\n\r\n                          <TouchableHighlight\r\n                            onPress={() => handleEditPress(expenseData)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#06B6D4',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Edit</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          <TouchableHighlight\r\n                            onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                            underlayColor={'#005691'}\r\n                            style={{\r\n                              flex: 1,\r\n                              margin: 1,\r\n                              borderRadius: 3,\r\n                            }}>\r\n                            <View\r\n                              style={{\r\n                                flex: 1,\r\n                                backgroundColor: '#EF4444',\r\n                                borderRadius: 3,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                              }}>\r\n                              <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                            </View>\r\n                          </TouchableHighlight>\r\n                          {/* <TouchableHighlight\r\n                        onPress={() => handleDeleteItem(expenseData.expenseName)}\r\n                        style={() => ({\r\n                          flex: 1,\r\n                          margin: 1,\r\n                          borderRadius: 3,\r\n                          backgroundColor: '#CD5C5C',\r\n                        })}>\r\n                        <View\r\n                          style={{\r\n                            flex: 1,\r\n                            borderRadius: 3,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            backgroundColor: '#CD5C5C',\r\n                          }}>\r\n                          <Text style={{ color: 'white', textAlign: 'center' }}>Delete</Text>\r\n                        </View>\r\n                      </TouchableHighlight> */}\r\n                        </View>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n\r\n                  )\r\n                })}\r\n\r\n              </View>\r\n\r\n\r\n            )}\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Body>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}>\r\n          <TouchableOpacity\r\n            onPress={handleModalSupplyChainsCostsClose}\r\n            style={{\r\n              backgroundColor: '#525252',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 4 }} />\r\n          <TouchableOpacity\r\n            onPress={handleSaveSupplyChainsCosts}\r\n            style={{\r\n              backgroundColor: '#16A34A',\r\n              borderRadius: 5,\r\n              margin: 3,\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: 8,\r\n            }}>\r\n            <Text style={{ color: 'white' }}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal.Content>\r\n    </Modal>\r\n      {/* <Modal isOpen={clearModalVisible} onClose={handleClearModalClose} useRNModal>\r\n        <Modal.Content bgColor={'amber.100'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0} bgColor={'amber.100'}>\r\n            <Text color={'#102A43'} bold>\r\n              Clear\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'amber.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'amber.600'}\r\n            margin={5}>\r\n            <View flex={1}>\r\n              <Text color={'amber.600'} bold>Warning!</Text>\r\n              <Text color={'amber.600'}>Are you sure you want to clear?</Text>\r\n            </View>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'amber.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button\r\n                onPress={handleClearModalClose}\r\n                colorScheme={'warmGray'}\r\n                flex={1}\r\n                size={'sm'}\r\n                borderRadius={5}\r\n              >\r\n                No\r\n              </Button>\r\n              <Button\r\n                onPress={() => {\r\n                }}\r\n                flex={1} size={'sm'} colorScheme={'amber'} borderRadius={5}>\r\n                Clear\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal> */}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst SelectPaidTo = ({ paidToIsError, }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const selectedPaidTo = useSelector((state) => state.selectedPaidTo);\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedPaidTo}\r\n    borderColor={paidToIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedPaidTo = value\r\n      dispatch(setSelectedPaidTo(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Paid To\"\r\n    placeholder=\"Choose Paid To\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {paidToData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n    ;\r\n};\r\n\r\nconst SupplyChainsCostsSortAndAddModal = ({ headerText, data, title, dataName, databaseInit, textAreaAdd, handleAddTextChange, docName, handleFirstModalOpen, handleFirstModalClose }) => {\r\n  const [modalSortOpen, setModalSortOpen] = useState(false);\r\n  const [modalAddOpen, setModalAddOpen] = useState(false);\r\n  const [modalAddSuccess, setModalAddSuccess] = useState(false);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [modalSaveLoading, setModalSaveLoading] = useState(false);\r\n  const [modalData, setModalData] = useState(data);\r\n  const [modalIsLoading, setModalIsLoading] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleDeleteItemPress = useCallback(\r\n    (item) => {\r\n      setModalData((prevData) => {\r\n        const updatedData = prevData.filter((value) => value !== item);\r\n        return updatedData;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n\r\n  //   fetchData();\r\n\r\n  // }, [modalSortOpen]);\r\n\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const modalDocRef = doc(collection(databaseInit, docName), docName);\r\n    const modalDocSnap = await getDoc(modalDocRef);\r\n    if (modalDocSnap.exists()) {\r\n      // setModalData(modalDocSnap.data()?.dataName || []);\r\n      setModalData(modalDocSnap.data()?.[dataName] || []);\r\n    }\r\n  }, [databaseInit, modalData]);\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = onSnapshot(doc(collection(databaseInit, docName), docName), (snapshot) => {\r\n  //     setModalData(snapshot.data()?.[dataName] || []);\r\n  //   });\r\n\r\n  //   return () => unsubscribe();\r\n  // }, [dataName, databaseInit, docName]);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    setModalSaveLoading(true);\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    try {\r\n      await updateDoc(doc(collection(databaseInit, docName), docName), { [dataName]: modalData });\r\n      setModalSaveLoading(false);\r\n      setModalSortOpen(true);\r\n      setModalSave(false);\r\n\r\n\r\n      const logData = {\r\n        message: `\"${title}\" updated: \"${nameVariable.text}\" updated \"${title}\"`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n      };\r\n\r\n      addLogToCollection(logData);\r\n\r\n    } catch (error) {\r\n      setModalSaveLoading(false);\r\n      handleModalSaveClose();\r\n      console.error(error);\r\n    }\r\n\r\n\r\n  }, [databaseInit, modalData, dataName, docName]);\r\n\r\n\r\n  const handleSortModalOpen = useCallback(() => {\r\n    setModalIsLoading(true);\r\n    fetchData();\r\n    setModalSortOpen(true);\r\n    handleFirstModalClose();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n\r\n  const handleSortModalClose = useCallback(async () => {\r\n\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(false);\r\n    handleFirstModalOpen();\r\n  }, [modalSortOpen, modalIsLoading]);\r\n  // const handleAddTextChange = () => {\r\n  //   const newText = textAreaAdd.current?.value?.toUpperCase();\r\n  //   textAreaAdd.current?.setNativeProps({ text: newText });\r\n  // };\r\n\r\n\r\n  const handleModalAddOpen = useCallback(() => {\r\n    setModalAddOpen(true);\r\n    handleSortModalClose();\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n\r\n  }, [])\r\n\r\n  const handleModalAddClose = useCallback(() => {\r\n    setModalAddOpen(false);\r\n    handleSortModalOpen();\r\n    textAreaAdd.current?.clear();\r\n  }, [modalAddOpen])\r\n\r\n  const handleModalAddSuccessClose = useCallback(() => {\r\n    setModalAddSuccess(false);\r\n    // setIsLoading(false);\r\n    handleSortModalOpen();\r\n  }, [modalAddSuccess])\r\n\r\n  const handleModalAddSuccessOpen = useCallback(() => {\r\n    setModalAddSuccess(true);\r\n    handleSortModalClose();\r\n    setModalAddOpen(false);\r\n    setModalIsLoading(true);\r\n    handleFirstModalClose();\r\n  }, [modalAddSuccess, modalAddOpen, modalIsLoading])\r\n\r\n  const handleModalSaveOpen = useCallback(() => {\r\n    setModalSave(true);\r\n    setModalSortOpen(false);\r\n    setModalIsLoading(true);\r\n  }, [modalSave, modalSortOpen, modalIsLoading])\r\n\r\n  const handleModalSaveClose = useCallback(() => {\r\n    setModalSave(false);\r\n    setModalSortOpen(true);\r\n  }, [modalSave, modalSortOpen]);\r\n\r\n  const handleAddSubmit = async () => {\r\n\r\n    const data = textAreaAdd.current?.value;\r\n    const dataArray = data.split('\\n').map((item) => item.trim());\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n\r\n    if (data !== '') {\r\n\r\n      setModalSaveLoading(true);\r\n\r\n      try {\r\n        const modalCollectionRef = collection(databaseInit, docName);\r\n        const modalDocRef = doc(modalCollectionRef, docName);\r\n        await setDoc(modalDocRef, { [dataName]: arrayUnion(...dataArray) }, { merge: true });\r\n\r\n        const logData = {\r\n          message: `\"${title}\" added: \"${nameVariable.text}\" added \"${title}\"(s).`,\r\n          timestamp: formattedTime,\r\n          colorScheme: true,\r\n        };\r\n        addLogToCollection(logData);\r\n        setModalSaveLoading(false);\r\n\r\n        handleModalAddSuccessOpen();\r\n\r\n\r\n\r\n        // console.log('Data added to Firestore');\r\n      } catch (error) {\r\n        console.error('Error adding data to Firestore:', error);\r\n        setModalSaveLoading(false);\r\n      }\r\n    }\r\n    else {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end', marginRight: 1 }}>\r\n        {!modalIsLoading ? (\r\n          <TouchableOpacity onPress={handleSortModalOpen}>\r\n            <MaterialCommunityIcons name=\"playlist-edit\" size={25} color=\"white\" />\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <Spinner color=\"white\" />\r\n        )}\r\n      </View>\r\n\r\n      <Modal isOpen={modalSortOpen} onClose={handleSortModalClose} useRNModal>\r\n        <Modal.Content>\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>{headerText}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1}>\r\n            <View style={{\r\n              width: '100%',\r\n              flexDirection: 'column',\r\n            }}>\r\n              <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableHighlight onPress={handleModalAddOpen}>\r\n                  <FontAwesome name=\"plus-circle\" size={25} color=\"#102A43\" />\r\n                </TouchableHighlight>\r\n              </View>\r\n\r\n              <View style={{\r\n                flex: 1,\r\n                borderWidth: 1,\r\n                borderColor: '#102A43',\r\n                borderRadius: 5,\r\n              }}>\r\n                <DraggableFlatList\r\n                  style={{ alignContent: 'center', flex: 1, }}\r\n                  data={modalData}\r\n                  keyExtractor={(item) => item}\r\n                  renderItem={({ item, drag }) => (\r\n                    <View\r\n                      style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(16,42,67, 0.5)',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#D3D3D3', // You can use a specific color code here\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity onPress={() => handleDeleteItemPress(item)}>\r\n                        <AntDesign name=\"minuscircle\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                      <Text style={{ flex: 1, textAlign: 'center', color: 'white' }}>{item}</Text>\r\n                      <TouchableOpacity onPressIn={drag}>\r\n                        <Entypo name=\"menu\" size={16} color=\"#102A43\" />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                  onDragEnd={useCallback(({ data }) => setModalData(data), [])} />\r\n\r\n              </View>\r\n            </View>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0}>\r\n            <View style={{ flexDirection: 'row', flex: 1 }}>\r\n              <TouchableOpacity\r\n                onPress={handleSortModalClose}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#525252',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Close</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={handleModalSaveOpen}\r\n                style={{\r\n                  flex: 1,\r\n                  borderRadius: 5,\r\n                  backgroundColor: '#0891B2',\r\n                  margin: 5,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  padding: 8,\r\n                }}\r\n              >\r\n                <Text style={{ color: 'white' }}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalSave}\r\n        onClose={handleModalSaveClose}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Save Order?</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <Text>Are you sure you want to save changes?</Text>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalSaveClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>No</Button>\r\n              <Button onPress={handleSave} flex={1} size={'sm'} borderRadius={5} isLoading={modalSaveLoading ? true : false}>Yes</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalAddOpen}\r\n        onClose={handleModalAddClose}\r\n        initialFocusRef={textAreaAdd}>\r\n        <Modal.Content >\r\n          <Modal.CloseButton />\r\n          <Modal.Header borderBottomWidth={0}>\r\n            <Text color={'#102A43'} bold>Add {title}</Text>\r\n          </Modal.Header>\r\n          <Modal.Body justifyContent={'center'} alignItems={'center'} flex={1} >\r\n\r\n            <TextArea\r\n              textAlign={'center'}\r\n              w={'full'}\r\n              ref={textAreaAdd}\r\n              multiline\r\n              onChangeText={handleAddTextChange}\r\n              totalLines={4}\r\n              placeholder=\"Enter your data, separated by new lines\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} >\r\n            <HStack space={5} flex={1}>\r\n              <Button onPress={handleModalAddClose} colorScheme={'muted'} flex={1} size={'sm'} borderRadius={5}>Close</Button>\r\n              <Button onPress={handleAddSubmit} isLoading={modalSaveLoading ? true : false} flex={1} size={'sm'} borderRadius={5}>Add</Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {/* <SuccessModal isOpen={modalAddMakeSuccess} onClose={handleModalAddMakeSuccessClose} headerText={'Added successfully!'} bodyText={'Added successfully!'}/> */}\r\n      <Modal isOpen={modalAddSuccess} onClose={handleModalAddSuccessClose} useRNModal>\r\n        <Modal.Content bgColor={'green.100'}>\r\n          <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n            <Text textAlign={'center'} color={'#102A43'} bold>\r\n              😊😎 Success! 😎😊\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body\r\n            justifyContent={'center'}\r\n            alignItems={'center'}\r\n            bgColor={'green.200'}\r\n            borderLeftWidth={4}\r\n            borderLeftColor={'green.600'}\r\n            margin={5}\r\n          >\r\n            <Box flex={1}>\r\n              <Text color={'green.600'} bold>\r\n                Added successfully!\r\n              </Text>\r\n              <Text color={'green.600'}>\r\n                Added successfully!\r\n              </Text>\r\n            </Box>\r\n          </Modal.Body>\r\n          <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n            <HStack space={5} flex={1}>\r\n              <Button colorScheme={'success'} flex=\"1\" onPress={handleModalAddSuccessClose} _text={{ color: 'white' }}>\r\n                Ok\r\n              </Button>\r\n            </HStack>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SCC_Modals = () => {\r\n\r\n  const supplyChainsCostsModalVisible = useSelector((state) => state.supplyChainsCostsModalVisible)\r\n  const supplyChainsCostsData = useSelector((state) => state.supplyChainsCostsData);\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const paidToData = useSelector((state) => state.paidToData);\r\n  const currentDate = useSelector((state) => state.currentDate);\r\n  const vehicleListSupplyChainsCostsData = useSelector((state) => state.vehicleListSupplyChainsCostsData);\r\n\r\n  return (\r\n    <AllSccModals\r\n      supplyChainsCostsModalVisible={supplyChainsCostsModalVisible}\r\n      supplyChainsCostsData={supplyChainsCostsData}\r\n      expenseNameData={expenseNameData}\r\n      paidToData={paidToData}\r\n      currentDate={currentDate}\r\n      vehicleListSupplyChainsCostsData={vehicleListSupplyChainsCostsData}\r\n    />\r\n  );\r\n}\r\n\r\nconst ModalCalendar = ({ selectedDate, setSelectedDate }) => {\r\n\r\n  const [modalCalendarVisible, setModalCalendarVisible] = useState(false);\r\n\r\n\r\n  const handleModalCalendarOpen = () => {\r\n    setModalCalendarVisible(true);\r\n  };\r\n\r\n  const handleModalCalendarClose = () => {\r\n    setModalCalendarVisible(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <TouchableOpacity onPress={handleModalCalendarOpen} style={{ flex: 3 }}>\r\n        <Input value={selectedDate} onFocus={handleModalCalendarOpen} />\r\n      </TouchableOpacity>\r\n\r\n      <Modal isOpen={modalCalendarVisible} onClose={handleModalCalendarClose} useRNModal>\r\n        <Modal.CloseButton />\r\n        <Modal.Content>\r\n          <Box height={'full'} flex={1}>\r\n\r\n            <Calendar\r\n              onDayPress={useCallback(day => {\r\n                setSelectedDate(day.dateString);\r\n                // console.log(day.dateString);\r\n                globalSPCSelectedDate = day.dateString;\r\n                handleModalCalendarClose();\r\n              }, [])}\r\n              markedDates={{\r\n                [selectedDate]: { selected: true, disableTouchEvent: true, selectedDotColor: '#7b9cff' }\r\n              }}\r\n              renderArrow={(direction) => (\r\n                direction === 'left' ? <MaterialIcons name='arrow-back-ios' color='#7b9cff' /> : <MaterialIcons name='arrow-forward-ios' color='#7b9cff' />\r\n              )}\r\n              enableSwipeMonths={true}\r\n              initialDate={selectedDate}\r\n              showSixWeeks />\r\n\r\n          </Box>\r\n\r\n        </Modal.Content>\r\n\r\n      </Modal></>\r\n\r\n  );\r\n\r\n}\r\n\r\nconst SelectExpenseName = ({ expenseNameIsError, selectExpenseNameRef, selectResetKey }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const expenseNameData = useSelector((state) => state.expenseNameData);\r\n  const selectedExpenseName = useSelector((state) => state.selectedExpenseName);\r\n  const [key, setKey] = useState(nanoid());\r\n\r\n\r\n\r\n  return <Select\r\n    selectedValue={selectedExpenseName}\r\n    borderColor={expenseNameIsError ? 'error.400' : 'muted.300'}\r\n    flex={3}\r\n    onValueChange={(value) => {\r\n      globalSelectedExpenseName = value\r\n      dispatch(setSelectedExpenseName(value));\r\n    }}\r\n    accessibilityLabel=\"Choose Expense Name\"\r\n    placeholder=\"Choose Expense Name\"\r\n    _selectedItem={{\r\n      bg: \"teal.600\",\r\n      endIcon: <CheckIcon size=\"5\" />\r\n    }}>\r\n    {expenseNameData.map((item) => (\r\n\r\n      <Select.Item key={item} label={item} value={item} />\r\n\r\n    ))}\r\n  </Select>\r\n\r\n\r\n};\r\n\r\nconst VehicleEditModal = ({ handleEditModalClose }) => {\r\n\r\n  const editVehicleModalVisible = useSelector((state) => state.editVehicleModalVisible);\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  return (\r\n    <Modal isOpen={editVehicleModalVisible} onClose={handleEditModalClose} size={'full'}>\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'100%'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n          <Text color={'white'} fontSize={20} bold>Edit Vehicle </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body >\r\n          Sit nulla est ex deserunt exercitation anim occaecat.\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n  );\r\n};\r\n\r\nconst EditVehicleModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditModalClose = () => {\r\n    dispatch(setEditVehicleModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n\r\n  }\r\n\r\n  return (\r\n    <VehicleEditModal handleEditModalClose={handleEditModalClose} />\r\n\r\n\r\n  );\r\n\r\n};\r\n\r\nconst EditVehicle = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleModalOpen = () => {\r\n\r\n    dispatch(setEditVehicleModalVisible(true));\r\n    globalCurrentStockID = data.stockID;\r\n    globalSelectedVehicle = `${data.referenceNumber} / ${data.carName}`;\r\n    globalSelectedVehicleReferenceNumber = data.referenceNumber;\r\n    globalSelectedCarName = data.carName;\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={handleModalOpen}\r\n        style={{\r\n          backgroundColor: '#7B9CFF',\r\n          marginHorizontal: 5,\r\n          borderRadius: 5,\r\n          padding: 2,\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        {/* <Text style={{ textAlign: 'center',  color: 'white', }}>Edit</Text> */}\r\n        <MaterialIcons name={\"edit\"} color='white' size={22} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst ViewImagesModal = ({ handleViewImagesModalClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const viewImagesModalVisible = useSelector((state) => state.viewImagesModalVisible);\r\n  const viewImagesData = useSelector((state) => state.viewImagesData);\r\n\r\n  const [modalImageUri, setModalImageUri] = useState('');\r\n  const [imageModalVisible, setImageModalVisible] = useState(false);\r\n\r\n  const handleImagePress = useCallback((uri) => {\r\n    // const base64Image = toString(uri);\r\n    // setIsLoading(true);\r\n    setModalImageUri(uri);\r\n    setImageModalVisible(true);\r\n    // console.log(\"URI: \", uri);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const getImagesRenderItem = useCallback((item) => {\r\n\r\n    const styles = StyleSheet.create({\r\n      dropdown: {\r\n        margin: 16,\r\n        height: 50,\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n      },\r\n      icon: {\r\n        marginRight: 5,\r\n      },\r\n      placeholderStyle: {\r\n        fontSize: 16,\r\n      },\r\n      selectedTextStyle: {\r\n        fontSize: 16,\r\n      },\r\n      iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n      inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        paddingTop: 20,\r\n\r\n      },\r\n      txt: {\r\n        fontSize: 18,\r\n        lineHeight: 24,\r\n        padding: 5\r\n      },\r\n      sort: {\r\n      },\r\n      item_children: {\r\n        width: 90,\r\n        height: 90,\r\n        backgroundColor: 'black',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      item_delete_icon: {\r\n        width: 14,\r\n        height: 14,\r\n        position: \"absolute\",\r\n        right: 1,\r\n        top: 1\r\n      },\r\n      item_icon: {\r\n        width: 90,\r\n        height: 90,\r\n        resizeMode: \"contain\",\r\n        position: \"absolute\"\r\n      }\r\n    });\r\n\r\n    return (\r\n\r\n      <Box key={item.id} style={styles.item}>\r\n        <Box style={styles.item_children}>\r\n\r\n          <FastImage\r\n            style={styles.item_icon}\r\n            source={{\r\n              uri: item.uri,\r\n              priority: FastImage.priority.normal,\r\n            }}\r\n            resizeMode={FastImage.resizeMode.contain}\r\n\r\n          />\r\n\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Modal isOpen={viewImagesModalVisible} onClose={handleViewImagesModalClose} size={'full'} useRNModal>\r\n        <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '60%'} h={'100%'}>\r\n          <Modal.CloseButton />\r\n          <Modal.Header bgColor={'#7B9CFF'} flexDir={screenWidth <= 960 ? 'column' : 'row'} alignItems={screenWidth <= 960 ? 'center' : ''}>\r\n            <Text color={'white'} fontSize={20} bold>View Images for </Text><Text color={'cyan.200'} fontSize={20} bold textAlign={screenWidth <= 960 ? 'center' : ''}>{globalSelectedVehicle}</Text>\r\n          </Modal.Header>\r\n\r\n\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', margin: '5%', marginLeft: '10%' }}>\r\n\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n              <ScrollView style={{ height: '90%' }}>\r\n                <DragSortableView\r\n                  sortable={false}\r\n                  // ref={dragSortableViewRef}\r\n                  dataSource={viewImagesData}\r\n                  parentWidth={width * 0.33}\r\n                  childrenWidth={100}\r\n                  childrenHeight={100}\r\n                  marginChildrenTop={3}\r\n                  marginChildrenBottom={0}\r\n                  marginChildrenLeft={0}\r\n                  marginChildrenRight={0}\r\n                  onClickItem={(item, index) => {\r\n                    handleImagePress(index.uri);\r\n                  }}\r\n                  keyExtractor={(item) => item.uri}\r\n                  renderItem={useCallback((item, index) => getImagesRenderItem(item, index), [])}\r\n                />\r\n              </ScrollView>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n\r\n        </Modal.Content>\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal isOpen={imageModalVisible} onClose={() => setImageModalVisible(false)} size={'100%'} useRNModal>\r\n\r\n        <Box w={'80%'} h={'80%'} bgColor={'rgba(0, 0, 0, 0.7)'} borderRadius={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" alignContent={'center'}>\r\n          <Modal.CloseButton color={'white'} />\r\n          <NativeImage\r\n            key={modalImageUri}\r\n            source={{ uri: modalImageUri }}\r\n            resizeMode='contain'\r\n            flex={1}\r\n            alt={modalImageUri}\r\n            h={720}\r\n            w={1280}\r\n          />\r\n\r\n        </Box>\r\n\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst FobPriceHistoryModal = ({ handleFobPriceHistoryClose }) => {\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const fobPriceHistoryModalVisible = useSelector((state) => state.fobPriceHistoryModalVisible);\r\n  const fobHistoryData = useSelector((state) => state.fobHistoryData);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={fobPriceHistoryModalVisible}\r\n      onClose={handleFobPriceHistoryClose}\r\n      size={'full'}\r\n      useRNModal\r\n    >\r\n      <Modal.Content bgColor={'white'} w={screenWidth <= 1100 ? '90%' : '40%'} h={'auto'}>\r\n        <Modal.CloseButton />\r\n        <Modal.Header bgColor={'#7B9CFF'} alignItems={screenWidth <= 960 ? 'center' : 'flex-start'}>\r\n          <Text color={'white'} fontSize={20} bold>FOB Price History </Text>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ScrollView style={{ width: '100%' }}>\r\n            {screenWidth >= 960 ? (\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View>\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'row',\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: '#CCCCCC',\r\n                      }}\r\n                    >\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      <Text style={{ width: '20%', fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            ) : (\r\n              // Mobile View FOB Price History\r\n              <View style={{ alignItems: 'stretch', marginTop: 10 }}>\r\n                {/* Table Header */}\r\n                {/* <View style={{\r\n                  borderRadius: 3,\r\n                  backgroundColor: '#0642F4',\r\n                  flexDirection: 'row',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#0642F4',\r\n                }}>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                  <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price</Text>\r\n                  <Text style={{ width: '20%', fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n\r\n                </View> */}\r\n\r\n                {/* Table Rows */}\r\n                {[...fobHistoryData]\r\n                  .sort((a, b) => new Date(b.date.replace(' at ', ' ')) - new Date(a.date.replace(' at ', ' ')))\r\n                  .map((data, index) => (\r\n                    <View\r\n                      key={index}\r\n                      style={{\r\n                        backgroundColor: '#BBF7D0',\r\n                        flexDirection: 'column',\r\n                        borderWidth: 1,\r\n                        borderColor: '#E4E4E7',\r\n                        margin: 3,\r\n                      }}\r\n                    >\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Date</Text>\r\n                        </View>\r\n\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.date}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>FOB Price ¥</Text>\r\n                        </View><Text style={{ flex: 1, fontSize: 16, padding: 8 }}>¥{Number(data.fobPrice).toLocaleString()}</Text>\r\n                      </View>\r\n\r\n                      <View style={{ flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                        <View style={{\r\n                          backgroundColor: '#0642F4',\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: '#0642F4',\r\n                          width: '30%',\r\n                        }}>\r\n                          <Text style={{ flex: 1, fontSize: 16, fontWeight: 'bold', padding: 8, color: 'white' }}>Changer</Text>\r\n                        </View>\r\n                        <Text style={{ flex: 1, fontSize: 16, padding: 8 }}>{data.changedBy}</Text>\r\n                      </View>\r\n                    </View>\r\n                  ))\r\n                }\r\n              </View>\r\n            )}\r\n\r\n          </ScrollView>\r\n\r\n\r\n\r\n\r\n        </Modal.Body>\r\n      </Modal.Content>\r\n    </Modal>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst FobPriceHistory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFobPriceHistoryClose = () => {\r\n\r\n    dispatch(setFobPriceHistoryModalVisible(false));\r\n    globalFobPriceHistoryData = [];\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = '';\r\n    globalSelectedVehicleReferenceNumber = '';\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <FobPriceHistoryModal handleFobPriceHistoryClose={handleFobPriceHistoryClose} />\r\n\r\n  );\r\n}\r\n\r\n\r\nconst ImageCountComponent = ({ item, handleViewImagesModalOpen, handleUploadImagesModalOpen }) => {\r\n  // State for the image count\r\n  const [imageCount, setImageCount] = useState(item.imageCount || 0);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setImageCount(data.imageCount || 0); // Update the image count with the new value from Firestore\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, [item.stockID]); // useEffect will re-run if item.stockID changes\r\n\r\n  // Function placeholders\r\n  // const handleViewImagesModalOpen = (item) => {\r\n  //   console.log('View images', item);\r\n  // };\r\n\r\n  // const handleUploadImagesModalOpen = (item) => {\r\n  //   console.log('Upload images', item);\r\n  // };\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      {imageCount > 0 ? (\r\n        <TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n          <Text style={{ textDecorationLine: 'underline' }}>\r\n            {imageCount} image/s\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <Text>{imageCount} image/s</Text>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n        {imageCount > 0 ? null : (\r\n          <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FobPriceInput = ({ item, index, }) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const [fobPrice, setFobPrice] = useState(item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : '');\r\n  const inputFobJpy = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Assume you have a collection named 'stocks' and the document ID is `item.stockID`\r\n    const unsubscribe = onSnapshot(doc(projectExtensionFirestore, 'VehicleProducts', item.stockID), (doc) => {\r\n      // console.log(`Read ${doc.size} documents from VehicleProducts`);\r\n\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        // Update the fobPrice state with the new value from Firestore\r\n        setFobPrice(data.fobPrice ? parseFloat(data.fobPrice).toLocaleString() : '');\r\n      }\r\n    });\r\n\r\n    // Clean up the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ... rest of your component\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    const currentNumericValue = fobPrice.replace(/[^0-9]/g, '');\r\n\r\n    // Update state only if the numeric value has changed\r\n    if (numericValue !== currentNumericValue) {\r\n      setFobPrice(numericValue);\r\n    }\r\n  };\r\n\r\n  // This function will format the displayed text\r\n  const handleInputFobJpyChange = (text, stockID) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    // Apply the formatted value to the input without resetting the state\r\n    if (inputFobJpy.current[stockID]) {\r\n      inputFobJpy.current[stockID].setNativeProps({ text: formattedValue });\r\n    }\r\n  };\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    //   console.log('same');\r\n    //   console.log(item.fobPrice);\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n        value={formatValueWithCommas(fobPrice)} // Display the formatted value\r\n        style={{ outlineStyle: 'none', flex: 1, padding: 5, borderRadius: 5, width: '90%' }}\r\n        key={item.id}\r\n        onChangeText={(text) => {\r\n          handleTextChange(text); // This sets the numeric value state\r\n          handleInputFobJpyChange(text, item.stockID); // This formats the display\r\n        }}\r\n        onSubmitEditing={() => handleSaveFob(item, index)} />\r\n      <TouchableHighlight\r\n        underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n        onPress={() => handleSaveFob(item, index)}\r\n        style={{\r\n          backgroundColor: '#16A34A',\r\n          borderRadius: 5,\r\n          padding: 5,\r\n          margin: 2,\r\n          alignSelf: 'center',\r\n        }}>\r\n        {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n        <MaterialIcons name='update' color='white' size={22} />\r\n      </TouchableHighlight>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst VehicleListTable = () => {\r\n  const toast = useToast();\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [data, setData] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const vehicleListData = useSelector((state) => state.vehicleListData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const searchInputRef = useRef(null);\r\n\r\n\r\n  const [stockIDs, setStockIDs] = useState([]);\r\n  const [imageCounts, setImageCounts] = useState([]);\r\n\r\n  const inputExpenseAmount = useRef(null);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const inputFobJpy = useRef([]);\r\n  const [pageClicked, setPageClicked] = useState('');\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [firstVisible, setFirstVisible] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [fobPrices, setFobPrices] = useState({});\r\n  // Memoize the filtered data using useMemo\r\n  const [sortField, setSortField] = useState('dateAdded'); // null when sorting is off\r\n  const [isSortActive, setIsSortActive] = useState(false);\r\n  const loginName = useSelector((state) => state.loginName);\r\n  nameVariable.text = loginName;\r\n\r\n  const handleSortChange = (field) => {\r\n    setCurrentPage(1);\r\n    // If the field is the same as the current sortField, toggle sorting\r\n    setSearchText('');\r\n    searchInputRef.current.clear();\r\n    if (field === sortField) {\r\n      setIsSortActive(!isSortActive); // Toggle sorting for the same field\r\n      if (!isSortActive) {\r\n        // If it was off, we turn it on and keep the same field\r\n        setSortField(field);\r\n      } else {\r\n        // If it was on, we turn it off and reset to default 'dateAdded'\r\n        setSortField('dateAdded');\r\n      }\r\n    } else {\r\n      // If the field is different, turn sorting on and change the field\r\n      setSortField(field);\r\n      setIsSortActive(true); // Always turn on sorting when a new field is clicked\r\n    }\r\n    // You might want to dispatch setLoadingModalVisible(true) when you start a new query\r\n    dispatch(setLoadingModalVisible(true));\r\n  };\r\n\r\n\r\n  const fetchWithSort = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n    let q;\r\n\r\n    if (searchText === '') {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        limit(pageSize)\r\n      );\r\n    } else {\r\n      q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        limit(pageSize)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const documents = await getDocs(q);\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      setFirstVisible(documents.docs[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle products:\", error);\r\n    } finally {\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchWithSort();\r\n  }, [sortField])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Determine the field and direction to sort by\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    // Define the query\r\n    const q = query(\r\n      collection(projectExtensionFirestore, 'VehicleProducts'),\r\n      orderBy(fieldToSortBy, sortDirection),\r\n      limit(pageSize)\r\n    );\r\n\r\n    // Fetch the data once\r\n    getDocs(q)\r\n      .then((documents) => {\r\n        const vehicleProductData = [];\r\n        documents.forEach((document) => {\r\n          vehicleProductData.push({\r\n            id: document.id,\r\n            ...document.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n        setFirstVisible(documents.docs[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching vehicle products: \", error);\r\n        // Handle the error appropriately\r\n      });\r\n\r\n    // Since this effect does not subscribe to real-time updates, there's no need to return a cleanup function\r\n  }, [projectExtensionFirestore, pageSize, sortField, isSortActive]); // Add dependencies as necessary\r\n\r\n\r\n\r\n  const fetchNextData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n\r\n    if (searchText === '') {\r\n\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        startAfter(lastVisible),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'next');\r\n\r\n\r\n\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const fetchPreviousData = async () => {\r\n    const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n    const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n    if (searchText === '') {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev')\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy(fieldToSortBy, sortDirection),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        endBefore(firstVisible),\r\n        limitToLast(pageSize)\r\n      );\r\n\r\n      const documents = await getDocs(q);\r\n      updateState(documents, 'prev');\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchFirstPage = (documents) => {\r\n\r\n\r\n    const vehicleProductData = [];\r\n\r\n    documents.forEach((document) => {\r\n      vehicleProductData.push({\r\n        id: document.id,\r\n        ...document.data(),\r\n      });\r\n    });\r\n\r\n    dispatch(setVehicleListData(vehicleProductData));\r\n\r\n    if (documents?.docs[0]) {\r\n      setFirstVisible(documents.docs[0]);\r\n    }\r\n    if (documents?.docs[documents.docs.length - 1]) {\r\n      setLastVisible(documents.docs[documents.docs.length - 1]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const updateState = async (documents, pageClicked) => {\r\n\r\n\r\n    if (!documents.empty) {\r\n      const vehicleProductData = [];\r\n      documents.forEach((document) => {\r\n        vehicleProductData.push({\r\n          id: document.id,\r\n          ...document.data(),\r\n        });\r\n      });\r\n\r\n\r\n\r\n      if (documents?.docs[0]) {\r\n        setFirstVisible(documents.docs[0]);\r\n      }\r\n      if (documents?.docs[documents.docs.length - 1]) {\r\n        setLastVisible(documents.docs[documents.docs.length - 1]);\r\n      }\r\n\r\n      if (pageClicked == 'next') {\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n      if (pageClicked == 'prev') {\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n      if (vehicleProductData.length < 1) {\r\n        dispatch(setLoadingModalVisible(false));\r\n\r\n      }\r\n\r\n      dispatch(setVehicleListData(vehicleProductData));\r\n    }\r\n\r\n    else {\r\n      const fieldToSortBy = isSortActive && sortField ? sortField : 'dateAdded';\r\n      const sortDirection = isSortActive ? 'asc' : 'desc';\r\n\r\n      if (searchText == '') {\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n      else {\r\n\r\n        setCurrentPage(1);\r\n\r\n        const q = query(\r\n          collection(projectExtensionFirestore, 'VehicleProducts'),\r\n          where('keywords', 'array-contains', searchText.toUpperCase()),\r\n          orderBy(fieldToSortBy, sortDirection),\r\n          limit(pageSize)\r\n        );\r\n        const firstPageDocuments = await getDocs(q);\r\n        fetchFirstPage(firstPageDocuments);\r\n\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleNextPage = async () => {\r\n    // setPageClicked('next');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage + 1);\r\n    await fetchNextData();\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviousPage = async () => {\r\n    // setPageClicked('previous');\r\n    dispatch(setLoadingModalVisible(true));\r\n    // setCurrentPage(currentPage - 1);\r\n    await fetchPreviousData();\r\n\r\n\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    searchData();\r\n\r\n  }, [searchText])\r\n\r\n  const searchData = async () => {\r\n\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    if (searchText === '') {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n\r\n\r\n    }\r\n\r\n    else {\r\n      setCurrentPage(1);\r\n      const q = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        where('keywords', 'array-contains', searchText.toUpperCase()),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      const firstPageDocuments = await getDocs(q);\r\n      fetchFirstPage(firstPageDocuments);\r\n      dispatch(setLoadingModalVisible(false));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const filteredData = useMemo(() => {\r\n    const sanitizedSearchQuery = searchQuery.trim().toLowerCase();\r\n\r\n    // Filter the data based on the sanitized searchQuery (removing whitespace from the beginning and end)\r\n    const filteredResults = vehicleListData.filter((item) => {\r\n      const carName = item.carName ? item.carName.trim().toLowerCase() : '';\r\n      const referenceNumber = item.referenceNumber ? item.referenceNumber.trim().toLowerCase() : '';\r\n      const chassisNumber = item.chassisNumber ? item.chassisNumber.trim().toLowerCase() : '';\r\n      const stockStatus = item.stockStatus ? item.stockStatus.trim().toLowerCase() : '';\r\n      const fobPrice = item.fobPrice ? item.fobPrice.toString().trim().toLowerCase() : '';\r\n\r\n      return (\r\n        carName.includes(sanitizedSearchQuery) ||\r\n        referenceNumber.includes(sanitizedSearchQuery) ||\r\n        chassisNumber.includes(sanitizedSearchQuery) ||\r\n        stockStatus.includes(sanitizedSearchQuery) ||\r\n        fobPrice.includes(sanitizedSearchQuery)\r\n      );\r\n    });\r\n\r\n    return filteredResults;\r\n  }, [searchQuery, vehicleListData]);\r\n\r\n\r\n\r\n  const formatValueWithCommas = (value) => {\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const truncatedValue = numericValue.slice(0, 9);\r\n    const formattedValue = truncatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return formattedValue;\r\n  };\r\n\r\n  // Function to handle input changes for each item\r\n  const handleInputFobJpyChange = (text, index) => {\r\n    const formattedValue = formatValueWithCommas(text);\r\n\r\n    if (inputFobJpy.current[index]) {\r\n      inputFobJpy.current[index].value = formattedValue;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const fetchImageCounts = async () => {\r\n\r\n    // Extract and store the stockIDs in the state\r\n    const ids = filteredData.map(item => item.stockID);\r\n    setStockIDs(ids);\r\n\r\n    // Fetch image counts\r\n    const counts = await Promise.all(\r\n      ids.map(async stockID => {\r\n        const count = await getImageCountInFolder(stockID);\r\n        return { stockID, count };\r\n      })\r\n    );\r\n\r\n    // Create an object where stockID is the index value\r\n    const imageCountsObject = counts.reduce((acc, { stockID, count }) => {\r\n      acc[stockID] = count;\r\n      return acc;\r\n    }, {});\r\n\r\n    setImageCounts(imageCountsObject);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImageCounts();\r\n  }, []);\r\n\r\n  const getImageCountInFolder = async (folderPath) => {\r\n    try {\r\n      const folderRef = ref(storage, folderPath);\r\n      const listResult = await listAll(folderRef);\r\n\r\n      return listResult.items.length;\r\n    } catch (error) {\r\n      console.error('Error getting image count:', error);\r\n      return -1; // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n\r\n  const handleTextChange = (text) => {\r\n    setSearchQuery(text);\r\n  };\r\n\r\n  const handleFobPriceHistoryOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    dispatch(setFobPriceHistoryModalVisible(true));\r\n    if (item.stockID) {\r\n      const docRef = doc(projectExtensionFirestore, 'VehicleProducts', item.stockID);\r\n      try {\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // Assuming you have an action to set the FOB history like setFobHistory\r\n          dispatch(setFobHistoryData(docSnap.data().fobHistory || []));\r\n          dispatch(setLoadingModalVisible(false));\r\n\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching document: \", error);\r\n      }\r\n    }\r\n    // globalFobPriceHistoryData = item.fobHistory ? item.fobHistory : [];\r\n    globalCurrentStockID = item.stockID ? item.stockID : '';\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n\r\n  }\r\n\r\n  const handleSaveFob = async (item, index,) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n\r\n    const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n    const { datetime } = response.data;\r\n    const formattedTime = moment(datetime).format('YYYY/MM/DD [at] HH:mm:ss');\r\n    const year = moment(datetime).format('YYYY');\r\n    const month = moment(datetime).format('MM');\r\n    const monthWithDay = moment(datetime).format('MM/DD');\r\n    const date = moment(datetime).format('YYYY/MM/DD');\r\n    const day = moment(datetime).format('DD');\r\n    const time = moment(datetime).format('HH:mm');\r\n    const timeWithMinutesSeconds = moment(datetime).format('HH:mm:ss');\r\n\r\n    const fobValue = inputFobJpy.current[item.stockID].value.replace(/,/g, ''); // Remove commas\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    toast.closeAll();\r\n    // if (item.fobPrice == fobValue || fobValue == '') {\r\n    //   dispatch(setLoadingModalVisible(false));\r\n\r\n    // }\r\n    // else {\r\n\r\n    const fobHistoryData = {\r\n      date: formattedTime,\r\n      fobPrice: fobValue,\r\n      changedBy: nameVariable.text,\r\n    };\r\n    const vehicleProductRef = doc(collection(projectExtensionFirestore, 'VehicleProducts'), item.stockID);\r\n\r\n    try {\r\n      await updateDoc(vehicleProductRef, {\r\n        fobPrice: fobValue,\r\n        fobHistory: arrayUnion(fobHistoryData)\r\n      });\r\n      const logData = {\r\n        message: `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List.`,\r\n        timestamp: formattedTime,\r\n        colorScheme: true,\r\n        keywords: [\r\n          formattedTime.toLowerCase(),\r\n          globalCurrentStockID.toLowerCase(),\r\n          `Vehicle FOB Price Updated: \"${nameVariable.text}\" updated \"${item.carName}\" FOB price with a reference number of \"${item.referenceNumber}\" using Vehicle List`.toLowerCase(),\r\n          'Vehicle List'.toLowerCase(),\r\n          'Vehicle FOB Price Updated'.toLowerCase(),\r\n          'Vehicle FOB Price'.toLowerCase(),\r\n          'Vehicle FOB'.toLowerCase(),\r\n          'Vehicle'.toLowerCase(),\r\n          'FOB Price Updated'.toLowerCase(),\r\n          'FOB Price'.toLowerCase(),\r\n          'FOB'.toLowerCase(),\r\n          'Updated'.toLowerCase(),\r\n          globalSelectedCarName.toLowerCase(),\r\n          globalSelectedVehicleReferenceNumber.toLowerCase(),\r\n          nameVariable.text.toLowerCase(),\r\n          year.toLowerCase(),\r\n          month.toLowerCase(),\r\n          monthWithDay.toLowerCase(),\r\n          date.toLowerCase(),\r\n          day.toLowerCase(),\r\n          time.toLowerCase(),\r\n          timeWithMinutesSeconds.toLowerCase(),\r\n        ],\r\n      };\r\n      addLogToCollection(logData);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n      // console.log('FOB Price updated successfully');\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#16A34A', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>FOB Price updated successfully!</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.show({\r\n        render: () => {\r\n          return <View style={{ backgroundColor: '#DC2626', padding: 5, borderRadius: 5 }}>\r\n            <Text style={{ color: 'white' }}>Error updating: {error}</Text>\r\n          </View>;\r\n        }\r\n      })\r\n    }\r\n    // }\r\n\r\n    // Reference the Firestore document and update the 'fobPrice' field\r\n\r\n  };\r\n\r\n  const handleUploadImagesModalOpen = (item) => {\r\n    dispatch(setUploadImagesModalVisible(true));\r\n    globalCurrentStockID = item.stockID;\r\n    globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n    globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n    globalSelectedCarName = item.carName;\r\n\r\n  }\r\n\r\n  const handleViewImagesModalOpen = async (item) => {\r\n    dispatch(setLoadingModalVisible(true));\r\n    try {\r\n      await getImages(item.stockID);\r\n      globalCurrentStockID = item.stockID;\r\n      globalSelectedVehicle = `${item.referenceNumber} / ${item.carName} `;\r\n      globalSelectedVehicleReferenceNumber = item.referenceNumber;\r\n      dispatch(setLoadingModalVisible(false));\r\n      dispatch(setViewImagesModalVisible(true));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setLoadingModalVisible(false));\r\n\r\n    }\r\n  }\r\n\r\n  const handleViewImagesModalClose = () => {\r\n    dispatch(setViewImagesModalVisible(false));\r\n    globalCurrentStockID = '';\r\n    globalSelectedVehicle = ``;\r\n    globalSelectedVehicleReferenceNumber = '';\r\n    globalSelectedCarName = '';\r\n    dispatch(setViewImagesData([]));\r\n  };\r\n\r\n  const getImages = useCallback(async (folderName) => {\r\n    try {\r\n\r\n      const imageRefs = await listAll(ref(storage, `${folderName}/`)); // Use the provided folderName\r\n      // selectModelRef.current.selectIndex(globalModelDataVariable.indexOf(modelVariable.text));\r\n\r\n      const urls = await Promise.all(\r\n        imageRefs.items.map(async (itemRef) => {\r\n          const uri = await getDownloadURL(itemRef);\r\n          return { uri, fileName: itemRef.name };\r\n        })\r\n      );\r\n      // Sort the URLs array in ascending order based on the fileName (which is a number)\r\n      urls.sort((a, b) => {\r\n        const fileNameA = parseInt(a.fileName);\r\n        const fileNameB = parseInt(b.fileName);\r\n        return fileNameA - fileNameB;\r\n      });\r\n\r\n      if (urls.length > 0) {\r\n        dispatch(setViewImagesData(urls));\r\n\r\n      }\r\n\r\n      else {\r\n        dispatch(setViewImagesData([]));\r\n      }\r\n\r\n      // console.log(urls);\r\n\r\n    } catch (error) {\r\n      // Handle any errors that may occur during the Firebase operations\r\n      console.error('Error getting image URLs:', error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const addStockStatusToVehicleProducts = async () => {\r\n    const vehicleProductsRef = collection(projectExtensionFirestore, \"VehicleProducts\");\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(vehicleProductsRef);\r\n      querySnapshot.forEach(async (doc) => {\r\n        const data = doc.data();\r\n\r\n        // Check if the imageCount field does not exist\r\n        if (data.stockStatus === undefined) {\r\n          try {\r\n            // If the imageCount field doesn't exist, initialize it to 0\r\n            await updateDoc(doc.ref, {\r\n              stockStatus: ''\r\n            });\r\n            console.log(`stockStatus initialized to 0 for document ID: ${doc.id}`);\r\n          } catch (error) {\r\n            console.error('Error initializing stockStatus field:', error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error reading VehicleProducts collection:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleSearchEnter = () => {\r\n    // setSortField('dateAdded');\r\n    // setIsSortActive(false)\r\n    if (searchInputRef.current?.value !== '') {\r\n      setSearchText(searchInputRef.current.value.trim());\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false);\r\n    }\r\n    else {\r\n      setSearchText('');\r\n      setSortField('dateAdded');\r\n      setIsSortActive(false)\r\n      if (searchText == '') {\r\n\r\n        searchData();\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenWidth >= 1360 ?\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View>\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '100%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                borderBottomWidth: 1,\r\n                borderBottomColor: '#E4E4E7',\r\n                backgroundColor: '#0642F4',\r\n                padding: 2,\r\n                borderRadius: 5,\r\n              }}>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n              </View>\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('imageCount')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'imageCount' ? '#FBBC04' : 'white', }} bold underline>Images</Text>\r\n                </TouchableOpacity></View>\r\n\r\n\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('stockStatus')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'stockStatus' ? '#FBBC04' : 'white', }} bold underline>Stock Status</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, padding: 2, flexDirection: 'row', alignItems: 'center' }}>\r\n                <TouchableOpacity onPress={() => handleSortChange('fobPrice')}>\r\n                  <Text style={{ color: isSortActive && sortField === 'fobPrice' ? '#FBBC04' : 'white', }} bold underline>FOB Price</Text>\r\n                </TouchableOpacity></View>\r\n\r\n              <View style={{ flex: 1, padding: 2 }}>\r\n                <Text style={{ color: 'white', alignSelf: 'center', }} bold>Operate</Text>\r\n              </View>\r\n            </View>\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  borderBottomWidth: 1,\r\n                  borderBottomColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  paddingVertical: 10,\r\n                }}>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', marginLeft: 3, }}>{item.referenceNumber}</Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.carName} </Text>\r\n                </View>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text selectable style={{ width: '90%', }}>{item.chassisNumber}</Text>\r\n                </View>\r\n                <ImageCountComponent item={item} handleViewImagesModalOpen={handleViewImagesModalOpen} handleUploadImagesModalOpen={handleUploadImagesModalOpen} />\r\n                {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n\r\n                  {item.imageCount > 0 ?\r\n                    (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                      <Text underline>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>\r\n                    </TouchableOpacity>) :\r\n                    (<Text>\r\n                      {item.imageCount ? item.imageCount : 0} image/s\r\n                    </Text>)\r\n                  }\r\n\r\n\r\n                  <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                    {item.imageCount > 0 ? null : (\r\n                      <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                <View style={{ flex: 1, }}>\r\n                  <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  {/* <Text style={{ width: '90%', }}>{item.stockStatus}</Text> */}\r\n                </View>\r\n\r\n                <View style={{ width: '90%', flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleFobPriceHistoryOpen(item)}\r\n                    style={{\r\n                      margin: 5,\r\n                      alignSelf: 'center',\r\n                    }}>\r\n                    {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                    <FontAwesome name='clock-o' color='black' size={22} />\r\n                  </TouchableOpacity>\r\n                  <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n                  {/* <TextInput\r\n                    ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                    defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                    style={{ flex: 1, padding: 5, borderRadius: 5, width: '90%', }}\r\n                    key={item.id}\r\n                    onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                    onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n\r\n                </View>\r\n                <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                  <SupplyChainsCosts data={item} />\r\n                  {/* <EditVehicle data={item} /> */}\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n            {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n              <TouchableOpacity\r\n                onPress={addStockStatusToVehicleProducts}>\r\n                <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                  <FontAwesome name='save' size={40} color={'white'} />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n\r\n          </View>\r\n        ) :\r\n\r\n\r\n\r\n        (\r\n          <View style={{ flex: 1, }}>\r\n            <View >\r\n              <TextInput ref={searchInputRef} style={{ outlineStyle: 'none', width: '98%', padding: 10, backgroundColor: 'white', borderRadius: 5, placeholderTextColor: '#ACADA3', alignSelf: 'center', marginTop: 5, }}\r\n                onSubmitEditing={handleSearchEnter}\r\n                placeholder='Search'\r\n                returnKeyType='search'\r\n                autoCapitalize='none'\r\n              />\r\n            </View>\r\n\r\n            {vehicleListData.map((item, index) => (\r\n              <View\r\n                key={item.id}\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: 'column',\r\n                  borderWidth: 1,\r\n                  borderColor: '#E4E4E7',\r\n                  backgroundColor: '#BFDBFE',\r\n                  margin: 10,\r\n                }}>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Ref #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.referenceNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Car Name</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.carName} </Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Chassis #</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text selectable style={{ marginLeft: 3 }}>{item.chassisNumber}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <Text style={{ color: 'white', }} bold>Images</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    {item.imageCount > 0 ?\r\n                      (<TouchableOpacity onPress={() => handleViewImagesModalOpen(item)}>\r\n                        <Text underline style={{ marginLeft: 3 }}>\r\n                          {item.imageCount ? item.imageCount : 0} image/s\r\n                        </Text>\r\n                      </TouchableOpacity>) :\r\n                      (<Text style={{ marginLeft: 3 }}>\r\n                        {item.imageCount ? item.imageCount : 0} image/s\r\n                      </Text>)\r\n                    }\r\n\r\n\r\n                    <TouchableOpacity onPress={() => handleUploadImagesModalOpen(item)}>\r\n                      {item.imageCount > 0 ? null : (\r\n                        <MaterialIcons name=\"add-photo-alternate\" size={22} color={'white'} />\r\n                      )}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Stock Status</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, paddingVertical: 1, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', }}>\r\n                    <SelectStockStatus key={item.stockID} selectedValue={item.stockStatus} id={item.stockID} item={item} />\r\n                  </View>\r\n                </View>\r\n\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>FOB Price ¥</Text>\r\n                  </View>\r\n                  <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', borderRadius: 5, borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <TouchableOpacity\r\n                      onPress={() => handleFobPriceHistoryOpen(item)}\r\n                      style={{\r\n                        margin: 5,\r\n                        alignSelf: 'center',\r\n                      }}>\r\n                      {/* <Text style={{ textAlign: 'center', }}>Save</Text> */}\r\n                      <FontAwesome name='clock-o' color='black' size={22} />\r\n                    </TouchableOpacity>\r\n                    <FobPriceInput item={item} index={index} handleInputFobJpyChange={handleInputFobJpyChange} handleSaveFob={handleSaveFob} />\r\n\r\n                    {/* <TextInput\r\n                      ref={(ref) => (inputFobJpy.current[item.stockID] = ref)}\r\n                      defaultValue={item.fobPrice ? parseFloat(item.fobPrice).toLocaleString() : ''}\r\n                      style={{ width: '90%', borderRadius: 5, }}\r\n                      key={item.id}\r\n                      onChangeText={(text) => handleInputFobJpyChange(text, item.stockID)}\r\n                      onSubmitEditing={() => handleSaveFob(item, index)} /> */}\r\n                    {/* <TouchableHighlight\r\n                      underlayColor={'rgba(22, 163, 74, 0.3)'}\r\n                      onPress={() => handleSaveFob(item, index)}\r\n                      style={{\r\n                        backgroundColor: '#16A34A',\r\n                        margin: 2,\r\n                        marginLeft: 2,\r\n                        alignSelf: 'center',\r\n                        borderRadius: 5,\r\n                      }}>\r\n                      <MaterialIcons name='update' color='white' size={22} />\r\n                    </TouchableHighlight> */}\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ flexDirection: 'row' }}>\r\n                  <View style={{ width: '30%', padding: 2, backgroundColor: '#0642F4', borderBottomWidth: 1, borderBottomColor: '#E4E4E7', justifyContent: 'center', }}>\r\n                    <Text style={{ color: 'white', }} bold>Operate</Text>\r\n                  </View>\r\n                  <View style={{ flexDirection: 'row', flex: 1, margin: 5, }}>\r\n                    <SupplyChainsCosts data={item} />\r\n                    {/* <EditVehicle data={item} /> */}\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={{\r\n              flexDirection: 'row', width: screenWidth < 460 ? '90%' : screenWidth < 1175 ? '40%' : '20%',\r\n              alignSelf: 'center',\r\n            }}>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                <TouchableOpacity\r\n                  style={{ display: currentPage <= 1 ? 'none' : 'flex' }}\r\n                  onPress={handlePreviousPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-before' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n\r\n              <View style={{ flex: 1, backgroundColor: 'rgba(6, 66, 244, 0.6)', borderRadius: 5, margin: 10, padding: 4, justifyContent: 'center', alignItems: 'center' }}>\r\n                <Text style={{ textAlign: 'center', color: 'white' }} bold>Page {currentPage}</Text>\r\n              </View>\r\n\r\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={handleNextPage}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <MaterialIcons name='navigate-next' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n            <TouchableOpacity\r\n              onPress={addKeywordsToVehicleProducts}>\r\n              <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                <MaterialIcons name='save' size={40} color={'white'} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View> */}\r\n              {/* <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }} >\r\n                <TouchableOpacity\r\n                  onPress={addImageCountToVehicleProducts}>\r\n                  <View style={{ backgroundColor: 'rgba(6,66,244, 0.6)', borderRadius: 5, padding: 4, margin: 10 }}>\r\n                    <FontAwesome name='dollar' size={40} color={'white'} />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View> */}\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <UploadImagesModal fetchImageCounts={fetchImageCounts} />\r\n            <ViewImagesModal handleViewImagesModalClose={handleViewImagesModalClose} />\r\n\r\n          </View>\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function VehicleList() {\r\n  const [email, setEmail] = useState('');\r\n  const logo = require('../../assets/C-Hub.png');\r\n  const logo2 = require('../../assets/C-Hub Logo Only.png');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  // const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [typeOfAccount, setTypeOfAccount] = useState('');\r\n\r\n\r\n  const loginName = useSelector((state) => state.loginName);\r\n  const [name, setName] = useState(loginName);\r\n  const [time, setTime] = useState('');\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const [widthState, setWidthState] = useState(Dimensions.get('window').width);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      const newWidth = Dimensions.get('window').width;\r\n      setScreenWidth(newWidth); // Update the screenWidth state\r\n    };\r\n\r\n    // Add event listener for window resize\r\n    Dimensions.addEventListener('change', updateWidth);\r\n\r\n    // Clean up the event listener when the component unmounts or re-renders\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateWidth);\r\n    };\r\n  }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const handleWidthChange = ({ window }) => {\r\n  //     setWidthState(window.width);\r\n  //   };\r\n\r\n  //   Dimensions.addEventListener('change', handleWidthChange);\r\n\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleWidthChange);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   reloadData();\r\n  // }, [reloadData]);\r\n\r\n\r\n  // useEffect(() => {\r\n  // }, [typeOfAccount]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = projectControlAuth.onAuthStateChanged(user => {\r\n      if (!user) {\r\n        // navigation.navigate(\"Login\")\r\n        navigate(\"/Login\");\r\n\r\n      }\r\n\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleDocumentChange = (snapshot) => {\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.data();\r\n      const isActive = data.active;\r\n\r\n      if (!isActive) {\r\n        signOut(projectControlAuth)\r\n          .then(() => {\r\n            // navigation.navigate('Login');\r\n            navigate(\"/Login\");\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error signing out:', error);\r\n          });\r\n      }\r\n    } else {\r\n      signOut(projectControlAuth)\r\n        .then(() => {\r\n          // navigation.navigate('Login');\r\n          navigate(\"/Login\");\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error signing out:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const subscribeToFieldChange = () => {\r\n    const userId = projectControlAuth.currentUser?.email;\r\n    if (userId) {\r\n      const userRef = doc(firestore, 'accounts', userId);\r\n      const unsubscribe = onSnapshot(userRef, handleDocumentChange);\r\n      return unsubscribe;\r\n    } else {\r\n      // Return a no-op function if there's no user\r\n      return () => {\r\n        navigate(\"/login\")\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToFieldChange();\r\n\r\n    return () => {\r\n      // This will now always be a function\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const currentUserEmail = getEmailOfCurrentUser();\r\n    if (currentUserEmail) {\r\n      getFieldValueByEmail(currentUserEmail);\r\n      setEmail(currentUserEmail)\r\n      const documentId = currentUserEmail;\r\n      listenForNameChange(documentId);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const listenForNameChange = (documentId) => {\r\n\r\n\r\n    // To stop listening for updates, you can call unsubscribe()\r\n    // unsubscribe();\r\n  };\r\n\r\n\r\n\r\n  const getFieldValueByEmail = async (email) => {\r\n    try {\r\n      const accountDocRef = doc(firestore, 'accounts', email);\r\n      const accountDocSnapshot = await getDoc(accountDocRef);\r\n\r\n      if (accountDocSnapshot.exists()) {\r\n        const data = accountDocSnapshot.data();\r\n        const fieldType = data.type;\r\n        const fieldName = data.name;\r\n        dispatch(setLoginName(data.name));\r\n\r\n      } else {\r\n        console.log('Document does not exist');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching field value:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSignOut = () => {\r\n\r\n    signOut(projectControlAuth).then(() => {\r\n      // navigation.navigate('Login');\r\n      navigate(\"/Login\");\r\n\r\n      setEmail('');\r\n      setName('');\r\n    }).catch(() => {\r\n      // An error happened.\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const handleScreenResize = () => {\r\n  //     const screenWidth = Dimensions.get('window').width;\r\n  //     setIsMobileView(screenWidth < 1200);\r\n  //   };\r\n\r\n  //   // Initial check on component mount\r\n  //   handleScreenResize();\r\n\r\n  //   // Listen for screen dimension changes\r\n  //   Dimensions.addEventListener('change', handleScreenResize);\r\n\r\n  //   // Cleanup event listener on component unmount\r\n  //   return () => {\r\n  //     Dimensions.removeEventListener('change', handleScreenResize);\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // const showDrawerIcon = useBreakpointValue([true, true, true, false]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const NamePopover = ({ name, handleSignOut }) => {\r\n    const [showNamePopover, setShowNamePopover] = useState(false);\r\n\r\n    const showPopover = () => {\r\n      setShowNamePopover(!showNamePopover);\r\n    };\r\n\r\n    return (\r\n      <Box w={[100, 200, 1020]} h={[10, 10, 10]} flex={1}>\r\n        <Flex direction=\"row-reverse\">\r\n          <Popover\r\n            isOpen={showNamePopover}\r\n            trigger={(triggerProps) => (\r\n              <Text color=\"white\" marginTop={[2, 2, 2]} fontSize={[17, 18, 20]} marginRight={[1, 3, 5]} {...triggerProps} onPress={showPopover}>\r\n                <MaterialCommunityIcons name=\"account\" size={[20, 25, 30]} color=\"white\" /> {name} <Ionicons name=\"caret-down\" size={16} color=\"white\" />\r\n              </Text>\r\n            )}\r\n            onClose={() => setShowNamePopover(!showNamePopover)}\r\n            placement='bottom right'\r\n            trapFocus={false}\r\n          >\r\n            <Popover.Content backgroundColor={'#0642F4'}>\r\n              {/* <Popover.Arrow bgColor={'#7B9CFF'} /> */}\r\n              <Popover.Body backgroundColor={'#0642F4'}>\r\n                <Button _hover={{ bgColor: 'blueGray.500' }} onPress={handleSignOut} leftIcon={<MaterialCommunityIcons name=\"logout\" size={20} color=\"white\" />} bgColor={'transparent'}>\r\n                  Logout\r\n                </Button>\r\n              </Popover.Body>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    image: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\n  const SuccessModal = ({ isOpen, onClose, bodyText, headerText }) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Modal isOpen={isOpen} onClose={onClose} useRNModal>\r\n          <Modal.Content bgColor={'green.100'}>\r\n            <Modal.Header borderBottomWidth={0} bgColor={'green.100'}>\r\n              <Text textAlign={'center'} color={'#102A43'} bold>\r\n                😊😎 Success! 😎😊\r\n              </Text>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              justifyContent={'center'}\r\n              alignItems={'center'}\r\n              bgColor={'green.200'}\r\n              borderLeftWidth={4}\r\n              borderLeftColor={'green.600'}\r\n              margin={5}\r\n            >\r\n              <Box flex={1}>\r\n                <Text color={'green.600'} bold>\r\n                  {headerText}\r\n                  {/* Vehicle Added! */}\r\n                </Text>\r\n                <Text color={'green.600'}>\r\n                  {bodyText}\r\n                  {/* Vehicle was successfully added! You can view it in the vehicle list. */}\r\n                </Text>\r\n              </Box>\r\n            </Modal.Body>\r\n            <Modal.Footer borderTopWidth={0} bgColor={'green.100'}>\r\n              <HStack space={5} flex={1}>\r\n                <Button colorScheme={'success'} flex=\"1\" onPress={onClose} _text={{ color: 'white' }}>\r\n                  Ok\r\n                </Button>\r\n              </HStack>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <NativeBaseProvider>\r\n      <>\r\n\r\n        <View style={{ backgroundColor: \"#A6BCFE\", height: '100%', width: '100%', flexDirection: 'column', }} bgColor=\"#A6BCFE\" h=\"100vh\" w=\"full\" flexDirection=\"column\">\r\n          {/* Header */}\r\n          <Box\r\n            px=\"3\"\r\n            bgColor='#0642f4'\r\n            height={54}\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex={999}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            borderBottomWidth={0}\r\n            borderBottomColor={'cyan.500'}\r\n          >\r\n\r\n            <SideDrawer\r\n              selectedScreen={selectedScreen} />\r\n\r\n            <Box w={screenWidth <= 960 ? 0 : 850} h={[10, 10, 10, 10]} marginBottom={1.5} marginTop={1.5} paddingLeft={5}>\r\n              <FastImage\r\n                source={{\r\n                  uri: 'https://firebasestorage.googleapis.com/v0/b/samplermj.appspot.com/o/C-HUB%20Logos%2FC-HUB%20LOGO%20FULL.png?alt=media&token=79ed34a5-f960-4154-b4e8-897b0f3248d4',\r\n                  priority: FastImage.priority.high,\r\n                }}\r\n                resizeMode={FastImage.resizeMode.stretch}\r\n                style={styles.image} />\r\n            </Box>\r\n\r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <QRCodeScanner />\r\n            </View>\r\n\r\n            <NamePopover name={name} handleSignOut={handleSignOut} />\r\n\r\n          </Box>\r\n\r\n          {/* Content */}\r\n          <View style={{ flex: 1, flexDirection: 'row' }} flex={[1]} flexDirection=\"row\">\r\n\r\n\r\n            {/* Main Content */}\r\n            {/* <Box flex={1} flexGrow={1} minHeight={0}> */}\r\n            {/* Main Content Content */}\r\n\r\n\r\n            {/* <Box px=\"3\" bgColor=\"#A6BCFE\" height=\"full\" > */}\r\n            <View style={{ flex: 1, backgroundColor: \"#A6BCFE\", height: '100%' }}>\r\n              <ScrollView style={{ flex: 1, }} keyboardShouldPersistTaps='always'>\r\n                <View style={{ flex: 1, }}>\r\n                  <VehicleListTable />\r\n\r\n\r\n                </View>\r\n              </ScrollView>\r\n              <SCC_Modals />\r\n              <EditVehicleModal />\r\n              <FobPriceHistory />\r\n              {/* <SuccessModal /> */}\r\n\r\n            </View>\r\n\r\n\r\n            {/* </Box> */}\r\n\r\n            {/* </Box> */}\r\n          </View>\r\n\r\n        </View>\r\n        <LoadingModal />\r\n\r\n      </>\r\n\r\n\r\n\r\n\r\n\r\n    </NativeBaseProvider>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n};","import { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, startAfter, limit, onSnapshot } from 'firebase/firestore';\r\nimport { useSelector } from 'react-redux';\r\nimport { setVehicleListData } from '../redux/store';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const UsePagination = (projectExtensionFirestore) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastVisible, setLastVisible] = useState(null);\r\n    // const [data, setData] = useState([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let q;\r\n                if (lastVisible) {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        startAfter(lastVisible),\r\n                        limit(pageSize)\r\n                    );\r\n                } else {\r\n                    q = query(\r\n                        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n                        orderBy('dateAdded', 'desc'),\r\n                        limit(pageSize)\r\n                    );\r\n                }\r\n\r\n                const unsubscribe = onSnapshot(q, (snapshot) => {\r\n                    const vehicleProductData = [];\r\n                    snapshot.forEach((doc) => {\r\n                        vehicleProductData.push({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        });\r\n                    });\r\n\r\n                    if (!snapshot.empty) {\r\n                        setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n                    }\r\n\r\n                    // setData(vehicleProductData);\r\n                    dispatch(setVehicleListData(vehicleProductData));\r\n                });\r\n\r\n                return unsubscribe;\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [projectExtensionFirestore, currentPage, pageSize]);\r\n\r\n    return { handleNextPage, handlePreviousPage };\r\n};","import { configureStore, createSlice, } from '@reduxjs/toolkit'\r\nimport { useEffect, useMemo } from 'react';\r\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, onSnapshot, setDoc, arrayUnion, updateDoc, query, where, orderBy, limit } from 'firebase/firestore';\r\nimport { projectControlFirestore, projectControlAuth, projectExtensionFirestore, projectExtensionFirebase, projectControlFirebase } from \"../../../crossFirebase\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet makeDataVariable = [];\r\nlet email = '';\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nconst messageTextInputHeightSlice = createSlice({\r\n  name: 'messageTextInputHeight',\r\n  initialState: 50,\r\n  reducers: {\r\n    setMessageTextInputHeight: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst messageTextInputValueSlice = createSlice({\r\n  name: 'messageTextInputValue',\r\n  initialState: '',\r\n  reducers: {\r\n    setMessageTextInputValue: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst carImageUrlSlice = createSlice({\r\n  name: 'carImageUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setCarImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedFileUrlSlice = createSlice({\r\n  name: 'selectedFileUrl',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedFileUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst pdfViewerModalVisibleSlice = createSlice({\r\n  name: 'pdfViewerModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPdfViewerModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedVehicleDataSlice = createSlice({\r\n  name: 'selectedVehicleData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedVehicleData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedCustomerDataSlice = createSlice({\r\n  name: 'selectedCustomerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedCustomerData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst previewInvoiceVisibleSlice = createSlice({\r\n  name: 'previewInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setPreviewInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst customInvoiceVisibleSlice = createSlice({\r\n  name: 'customInvoiceVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setCustomInvoiceVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst transactionModalVisibleSlice = createSlice({\r\n  name: 'transactionModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setTransactionModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst invoiceDataSlice = createSlice({\r\n  name: 'invoiceData',\r\n  initialState: {},\r\n  reducers: {\r\n    setInvoiceData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteMessageTemplateVisibleSlice = createSlice({\r\n  name: 'deleteMessageTemplateVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteMessageTemplateVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreMessagesLoadingSlice = createSlice({\r\n  name: 'loadMoreMessagesLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreMessagesLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreMessagesDataSlice = createSlice({\r\n  name: 'noMoreMessagesData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst readByListModalVisibleSlice = createSlice({\r\n  name: 'readByListModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setReadByListModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst selectedChatDataSlice = createSlice({\r\n  name: 'selectedChatData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedChatData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatMessageBoxLoadingSlice = createSlice({\r\n  name: 'chatMessageBoxLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setChatMessageBoxLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatMessagesDataSlice = createSlice({\r\n  name: 'chatMessagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatMessagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst chatListSearchTextSlice = createSlice({\r\n  name: 'chatListSearchText',\r\n  initialState: '',\r\n  reducers: {\r\n    setChatListSearchText: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst activeChatIdSlice = createSlice({\r\n  name: 'activeChatId',\r\n  initialState: '',\r\n  reducers: {\r\n    setActiveChatId: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loadMoreLoadingSlice = createSlice({\r\n  name: 'loadMoreLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadMoreLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst noMoreDataSlice = createSlice({\r\n  name: 'noMoreData',\r\n  initialState: false,\r\n  reducers: {\r\n    setNoMoreData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListLastVisibleSlice = createSlice({\r\n  name: 'chatListLastVisible',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListDataSlice = createSlice({\r\n  name: 'chatListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setChatListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst chatListImageUrlSlice = createSlice({\r\n  name: 'chatListImageUrl',\r\n  initialState: null,\r\n  reducers: {\r\n    setChatListImageUrl: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\n\r\n\r\n\r\n// =============================== Freight ========================================\r\n\r\n\r\nconst countryPortsDataSlice = createSlice({\r\n  name: 'countryPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setCountryPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addPortsForCountriesModalVisibleSlice = createSlice({\r\n  name: 'addPortsForCountriesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortsForCountriesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst methodDataSlice = createSlice({\r\n  name: 'methodData',\r\n  initialState: [],\r\n  reducers: {\r\n    setMethodData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst inspectionIsRequiredDataSlice = createSlice({\r\n  name: 'inspectionIsRequiredData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionIsRequiredData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inspectionNameDataSlice = createSlice({\r\n  name: 'inspectionNameData',\r\n  initialState: [],\r\n  reducers: {\r\n    setInspectionNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst deletePortModalVisibleSlice = createSlice({\r\n  name: 'deletePortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeletePortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst deleteCountryModalVisibleSlice = createSlice({\r\n  name: 'deleteCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setDeleteCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addPortModalVisibleSlice = createSlice({\r\n  name: 'addPortModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddPortModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst addCountryModalVisibleSlice = createSlice({\r\n  name: 'addCountryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddCountryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst selectedButtonSlice = createSlice({\r\n  name: 'selectedButton',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedButton: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightCountriesDataSlice = createSlice({\r\n  name: 'freightCountriesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightCountriesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst freightPortsDataSlice = createSlice({\r\n  name: 'freightPortsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFreightPortsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\nconst fobHistoryDataSlice = createSlice({\r\n  name: 'fobHistoryData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFobHistoryData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst inputFobSlice = createSlice({\r\n  name: 'inputFob',\r\n  initialState: '',\r\n  reducers: {\r\n    setInputFob: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst fobPriceHistoryModalVisibleSlice = createSlice({\r\n  name: 'fobPriceHistoryModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setFobPriceHistoryModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst editVehicleModalVisibleSlice = createSlice({\r\n  name: 'editVehicleModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setEditVehicleModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst vehicleListDataSlice = createSlice({\r\n  name: 'vehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst addVehicleListDataSlice = createSlice({\r\n  name: 'addVehicleListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAddVehicleListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst supplyChainsCostsModalVisibleSlice = createSlice({\r\n  name: 'supplyChainsCostsModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setSupplyChainsCostsModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesModalVisibleSlice = createSlice({\r\n  name: 'uploadImagesModalVisibleVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst vehicleListSupplyChainsCostsDataSlice = createSlice({\r\n  name: 'vehicleListSupplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setVehicleListSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst uploadImagesButtonLoadingSlice = createSlice({\r\n  name: 'uploadImagesButtonLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setUploadImagesButtonLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst viewImagesModalVisibleSlice = createSlice({\r\n  name: 'viewImagesModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setViewImagesModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst viewImagesDataSlice = createSlice({\r\n  name: 'viewImagesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setViewImagesData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\nconst lastVisibleSlice = createSlice({\r\n  name: 'lastVisible',\r\n  initialState: '',\r\n  reducers: {\r\n    setLastVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nconst accountListDataSlice = createSlice({\r\n  name: 'accountListData',\r\n  initialState: [],\r\n  reducers: {\r\n    setAccountListData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst logsDataSlice = createSlice({\r\n  name: 'logsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setLogsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// =============================== Logs ======================================== \r\n\r\n\r\nconst stockStatusDataSlice = createSlice({\r\n  name: 'stockStatusData',\r\n  initialState: [\r\n    'On-Sale',\r\n    'Reserved',\r\n    'Sold',\r\n    'Hidden',],\r\n  reducers: {\r\n    setStockStatusData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isSuccessModalOpenSlice = createSlice({\r\n  name: 'isSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isUpdateSuccessModalOpenSlice = createSlice({\r\n  name: 'isUpdateSuccessModalOpen',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsUpdateSuccessModalOpen: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loadingModalVisibleSlice = createSlice({\r\n  name: 'loadingModalVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoadingModalVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedExpenseNameSlice = createSlice({\r\n  name: 'selectedExpenseName',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedExpenseName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedPaidToSlice = createSlice({\r\n  name: 'selectedPaidTo',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedPaidTo: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst supplyChainsCostsDataSlice = createSlice({\r\n  name: 'supplyChainsCostsData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSupplyChainsCostsData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst currentDateSlice = createSlice({\r\n  name: 'currentDate',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentDate: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst loginEmailSlice = createSlice({\r\n  name: 'loginEmail',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginEmail: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginAccountTypeSlice = createSlice({\r\n  name: 'loginAccountType',\r\n  initialState: '',\r\n  reducers: {\r\n    setLoginAccountType: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nconst loginNameSlice = createSlice({\r\n  name: 'loginName',\r\n  initialState: false,\r\n  reducers: {\r\n    setLoginName: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modalDeleteImagesVisibleSlice = createSlice({\r\n  name: 'modalDeleteImages',\r\n  initialState: false,\r\n  reducers: {\r\n    setModalDeleteImagesVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst addAnotherImagesSlice = createSlice({\r\n  name: 'addAnotherImagesVisible',\r\n  initialState: false,\r\n  reducers: {\r\n    setAddAnotherImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isAddPhotoVisibleSlice = createSlice({\r\n  name: 'isAddPhotoVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setIsAddPhotoVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst jpyToUsdSlice = createSlice({\r\n  name: 'jpyToUsd',\r\n  initialState: '',\r\n  reducers: {\r\n    setJpyToUsd: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst usdToJpySlice = createSlice({\r\n  name: 'usdToJpy',\r\n  initialState: '',\r\n  reducers: {\r\n    setUsdToJpy: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst modelDataSlice = createSlice({\r\n  name: 'modelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setModelData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst makeDataSlice = createSlice({\r\n  name: 'makeData',\r\n  initialState: makeDataVariable,\r\n  reducers: {\r\n    setMakeData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst expenseNameDataSlice = createSlice({\r\n  name: 'expenseName',\r\n  initialState: [],\r\n  reducers: {\r\n    setExpenseNameData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst paidToDataSlice = createSlice({\r\n  name: 'paidTo',\r\n  initialState: [],\r\n  reducers: {\r\n    setPaidToData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedMakeSlice = createSlice({\r\n  name: 'selectedMake',\r\n  initialState: '',\r\n  reducers: {\r\n    setSelectedMake: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst isLoadingSlice = createSlice({\r\n  name: 'isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst selectedImagesSlice = createSlice({\r\n  name: 'selectedImages',\r\n  initialState: [],\r\n  reducers: {\r\n    setSelectedImages: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst portDataSlice = createSlice({\r\n  name: 'portData',\r\n  initialState: [],\r\n  reducers: {\r\n    setPortData: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\nconst transmissionDataSlice = createSlice({\r\n  name: 'transmissionData',\r\n  initialState: [],\r\n  reducers: {\r\n    setTransmissionData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst fuelDataSlice = createSlice({\r\n  name: 'fuelData',\r\n  initialState: [],\r\n  reducers: {\r\n    setFuelData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst buyerDataSlice = createSlice({\r\n  name: 'buyerData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBuyerData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst salesDataSlice = createSlice({\r\n  name: 'salesData',\r\n  initialState: [],\r\n  reducers: {\r\n    setSalesData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst driveTypeDataSlice = createSlice({\r\n  name: 'driveTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setDriveTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst bodyTypeDataSlice = createSlice({\r\n  name: 'bodyTypeData',\r\n  initialState: [],\r\n  reducers: {\r\n    setBodyTypeData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst exteriorColorDataSlice = createSlice({\r\n  name: 'exteriorColorData',\r\n  initialState: [],\r\n  reducers: {\r\n    setExteriorColorData: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nconst currentYearSlice = createSlice({\r\n  name: 'currentYear',\r\n  initialState: '',\r\n  reducers: {\r\n    setCurrentYear: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst deleteImageVisibleSlice = createSlice({\r\n  name: 'deleteImageVisible',\r\n  initialState: true,\r\n  reducers: {\r\n    setDeleteImageVisible: (state, action) => {\r\n      return action.payload\r\n    },\r\n  },\r\n});\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const { setMessageTextInputHeight } = messageTextInputHeightSlice.actions\r\nexport const { setMessageTextInputValue } = messageTextInputValueSlice.actions\r\nexport const { setCustomInvoiceVisible } = customInvoiceVisibleSlice.actions\r\nexport const { setSelectedVehicleData } = selectedVehicleDataSlice.actions\r\nexport const { setCarImageUrl } = carImageUrlSlice.actions\r\nexport const { setSelectedFileUrl } = selectedFileUrlSlice.actions\r\nexport const { setPdfViewerModalVisible } = pdfViewerModalVisibleSlice.actions\r\nexport const { setSelectedCustomerData } = selectedCustomerDataSlice.actions\r\nexport const { setPreviewInvoiceVisible } = previewInvoiceVisibleSlice.actions\r\nexport const { setInvoiceData } = invoiceDataSlice.actions\r\nexport const { setTransactionModalVisible } = transactionModalVisibleSlice.actions\r\nexport const { setDeleteMessageTemplateVisible } = deleteMessageTemplateVisibleSlice.actions\r\nexport const { setLoadMoreMessagesLoading } = loadMoreMessagesLoadingSlice.actions\r\nexport const { setNoMoreMessagesData } = noMoreMessagesDataSlice.actions\r\nexport const { setReadByListModalVisible } = readByListModalVisibleSlice.actions\r\nexport const { setSelectedChatData } = selectedChatDataSlice.actions\r\nexport const { setChatMessageBoxLoading } = chatMessageBoxLoadingSlice.actions\r\nexport const { setChatMessagesData } = chatMessagesDataSlice.actions\r\nexport const { setActiveChatId } = activeChatIdSlice.actions\r\nexport const { setChatListSearchText } = chatListSearchTextSlice.actions\r\nexport const { setLoadMoreLoading } = loadMoreLoadingSlice.actions\r\nexport const { setNoMoreData } = noMoreDataSlice.actions\r\nexport const { setChatListLastVisible } = chatListLastVisibleSlice.actions\r\nexport const { setChatListData } = chatListDataSlice.actions\r\nexport const { setChatListImageUrl } = chatListImageUrlSlice.actions\r\n// =============================== Chat Messages ========================================\r\n\r\n// =============================== Freight ========================================\r\nexport const { setDeletePortModalVisible } = deletePortModalVisibleSlice.actions\r\nexport const { setDeleteCountryModalVisible } = deleteCountryModalVisibleSlice.actions\r\nexport const { setCountryPortsData } = countryPortsDataSlice.actions\r\nexport const { setAddPortsForCountriesModalVisible } = addPortsForCountriesModalVisibleSlice.actions\r\nexport const { setInspectionIsRequiredData } = inspectionIsRequiredDataSlice.actions\r\nexport const { setMethodData } = methodDataSlice.actions\r\nexport const { setInspectionNameData } = inspectionNameDataSlice.actions\r\nexport const { setSelectedButton } = selectedButtonSlice.actions\r\nexport const { setAddCountryModalVisible } = addCountryModalVisibleSlice.actions\r\nexport const { setAddPortModalVisible } = addPortModalVisibleSlice.actions\r\nexport const { setFreightPortsData } = freightPortsDataSlice.actions\r\nexport const { setFreightCountriesData } = freightCountriesDataSlice.actions\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Vehicle List ========================================\r\nexport const { setInputFob } = inputFobSlice.actions\r\nexport const { setFobHistoryData } = fobHistoryDataSlice.actions\r\nexport const { setFobPriceHistoryModalVisible } = fobPriceHistoryModalVisibleSlice.actions\r\nexport const { setEditVehicleModalVisible } = editVehicleModalVisibleSlice.actions\r\nexport const { setVehicleListData } = vehicleListDataSlice.actions\r\nexport const { setAddVehicleListData } = addVehicleListDataSlice.actions\r\nexport const { setSupplyChainsCostsModalVisible } = supplyChainsCostsModalVisibleSlice.actions\r\nexport const { setVehicleListSupplyChainsCostsData } = vehicleListSupplyChainsCostsDataSlice.actions\r\nexport const { setUploadImagesModalVisible } = uploadImagesModalVisibleSlice.actions\r\nexport const { setUploadImagesButtonLoading } = uploadImagesButtonLoadingSlice.actions\r\nexport const { setViewImagesModalVisible } = viewImagesModalVisibleSlice.actions\r\nexport const { setViewImagesData } = viewImagesDataSlice.actions\r\nexport const { setLastVisible } = lastVisibleSlice.actions\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Account List ========================================\r\nexport const { setAccountListData } = accountListDataSlice.actions\r\n\r\n// =============================== Account List ========================================\r\n\r\n// =============================== Logs ======================================== \r\nexport const { setLogsData } = logsDataSlice.actions\r\n// =============================== Logs ======================================== \r\n\r\nexport const { setStockStatusData } = stockStatusDataSlice.actions\r\nexport const { setIsSuccessModalOpen } = isSuccessModalOpenSlice.actions\r\nexport const { setIsUpdateSuccessModalOpen } = isUpdateSuccessModalOpenSlice.actions\r\nexport const { setLoadingModalVisible } = loadingModalVisibleSlice.actions\r\nexport const { setSelectedPaidTo } = selectedPaidToSlice.actions\r\nexport const { setSelectedExpenseName } = selectedExpenseNameSlice.actions\r\nexport const { setSupplyChainsCostsData } = supplyChainsCostsDataSlice.actions\r\nexport const { setCurrentDate } = currentDateSlice.actions\r\nexport const { setPaidToData } = paidToDataSlice.actions\r\nexport const { setDeleteImageVisible } = deleteImageVisibleSlice.actions\r\nexport const { setExpenseNameData } = expenseNameDataSlice.actions\r\nexport const { setLoginEmail } = loginEmailSlice.actions\r\nexport const { setLoginName } = loginNameSlice.actions\r\nexport const { setLoginAccountType } = loginAccountTypeSlice.actions\r\nexport const { setIsAddPhotoVisible } = isAddPhotoVisibleSlice.actions\r\nexport const { setAddAnotherImages } = addAnotherImagesSlice.actions\r\nexport const { setModalDeleteImagesVisible } = modalDeleteImagesVisibleSlice.actions\r\nexport const { setMakeData } = makeDataSlice.actions\r\nexport const { setSelectedMake } = selectedMakeSlice.actions\r\nexport const { setIsLoading } = isLoadingSlice.actions\r\nexport const { setSelectedImages } = selectedImagesSlice.actions\r\nexport const { setPortData } = portDataSlice.actions\r\nexport const { setTransmissionData } = transmissionDataSlice.actions;\r\nexport const { setFuelData } = fuelDataSlice.actions;\r\nexport const { setBuyerData } = buyerDataSlice.actions;\r\nexport const { setSalesData } = salesDataSlice.actions;\r\nexport const { setDriveTypeData } = driveTypeDataSlice.actions;\r\nexport const { setBodyTypeData } = bodyTypeDataSlice.actions;\r\nexport const { setExteriorColorData } = exteriorColorDataSlice.actions;\r\nexport const { setJpyToUsd } = jpyToUsdSlice.actions;\r\nexport const { setUsdToJpy } = usdToJpySlice.actions;\r\nexport const { setCurrentYear } = currentYearSlice.actions;\r\nexport const { setModelData } = modelDataSlice.actions\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\r\n    // =============================== Chat Messages ========================================     \r\n    messageTextInputHeight: messageTextInputHeightSlice.reducer,\r\n    customInvoiceVisible: customInvoiceVisibleSlice.reducer,\r\n    messageTextInputValue: messageTextInputValueSlice.reducer,\r\n    selectedVehicleData: selectedVehicleDataSlice.reducer,\r\n    carImageUrl: carImageUrlSlice.reducer,\r\n    selectedFileUrl: selectedFileUrlSlice.reducer,\r\n    pdfViewerModalVisible: pdfViewerModalVisibleSlice.reducer,\r\n    selectedCustomerData: selectedCustomerDataSlice.reducer,\r\n    previewInvoiceVisible: previewInvoiceVisibleSlice.reducer,\r\n    invoiceData: invoiceDataSlice.reducer,\r\n    transactionModalVisible: transactionModalVisibleSlice.reducer,\r\n    deleteMessageTemplateVisible: deleteMessageTemplateVisibleSlice.reducer,\r\n    loadMoreMessagesLoading: loadMoreMessagesLoadingSlice.reducer,\r\n    noMoreMessagesData: noMoreMessagesDataSlice.reducer,\r\n    readByListModalVisible: readByListModalVisibleSlice.reducer,\r\n    selectedChatData: selectedChatDataSlice.reducer,\r\n    chatMessageBoxLoading: chatMessageBoxLoadingSlice.reducer,\r\n    chatMessagesData: chatMessagesDataSlice.reducer,\r\n    chatListSearchText: chatListSearchTextSlice.reducer,\r\n    activeChatId: activeChatIdSlice.reducer,\r\n    loadMoreLoading: loadMoreLoadingSlice.reducer,\r\n    noMoreData: noMoreDataSlice.reducer,\r\n    chatListLastVisible: chatListLastVisibleSlice.reducer,\r\n    chatListData: chatListDataSlice.reducer,\r\n    chatListImageUrl: chatListImageUrlSlice.reducer,\r\n    // =============================== Chat Messages ======================================== \r\n\r\n    // =============================== Freight ======================================== \r\n    deletePortModalVisible: deletePortModalVisibleSlice.reducer,\r\n    deleteCountryModalVisible: deleteCountryModalVisibleSlice.reducer,\r\n    countryPortsData: countryPortsDataSlice.reducer,\r\n    addPortsForCountriesModalVisible: addPortsForCountriesModalVisibleSlice.reducer,\r\n    inspectionIsRequiredData: inspectionIsRequiredDataSlice.reducer,\r\n    methodData: methodDataSlice.reducer,\r\n    freightPortsData: freightPortsDataSlice.reducer,\r\n    inspectionNameData: inspectionNameDataSlice.reducer,\r\n    addCountryModalVisible: addCountryModalVisibleSlice.reducer,\r\n    addPortModalVisible: addPortModalVisibleSlice.reducer,\r\n    freightCountriesData: freightCountriesDataSlice.reducer,\r\n    selectedButton: selectedButtonSlice.reducer,\r\n    // =============================== Freight ========================================\r\n\r\n    // =============================== Vehicle List ========================================\r\n    inputFob: inputFobSlice.reducer,\r\n    fobHistoryData: fobHistoryDataSlice.reducer,\r\n    fobPriceHistoryModalVisible: fobPriceHistoryModalVisibleSlice.reducer,\r\n    editVehicleModalVisible: editVehicleModalVisibleSlice.reducer,\r\n    vehicleListData: vehicleListDataSlice.reducer,\r\n    addVehicleListData: addVehicleListDataSlice.reducer,\r\n    supplyChainsCostsModalVisible: supplyChainsCostsModalVisibleSlice.reducer,\r\n    uploadImagesModalVisible: uploadImagesModalVisibleSlice.reducer,\r\n    uploadImagesButtonLoading: uploadImagesButtonLoadingSlice.reducer,\r\n    viewImagesModalVisible: viewImagesModalVisibleSlice.reducer,\r\n    viewImagesData: viewImagesDataSlice.reducer,\r\n    lastVisible: lastVisibleSlice.reducer,\r\n    // =============================== Vehicle List ========================================\r\n\r\n\r\n    // =============================== Account List ========================================\r\n    accountListData: accountListDataSlice.reducer,\r\n    // =============================== Account List ========================================\r\n\r\n\r\n    // =============================== Logs ======================================== \r\n    logsData: logsDataSlice.reducer,\r\n    // =============================== Logs ======================================== \r\n    stockStatusData: stockStatusDataSlice.reducer,\r\n    isUpdateSuccessModalOpen: isUpdateSuccessModalOpenSlice.reducer,\r\n    loadingModalVisible: loadingModalVisibleSlice.reducer,\r\n    selectedPaidTo: selectedPaidToSlice.reducer,\r\n    selectedExpenseName: selectedExpenseNameSlice.reducer,\r\n    supplyChainsCostsData: supplyChainsCostsDataSlice.reducer,\r\n    vehicleListSupplyChainsCostsData: vehicleListSupplyChainsCostsDataSlice.reducer,\r\n    currentDate: currentDateSlice.reducer,\r\n    paidToData: paidToDataSlice.reducer,\r\n    expenseNameData: expenseNameDataSlice.reducer,\r\n    modelData: modelDataSlice.reducer,\r\n    makeData: makeDataSlice.reducer,\r\n    selectedMake: selectedMakeSlice.reducer,\r\n    isLoading: isLoadingSlice.reducer,\r\n    selectedImages: selectedImagesSlice.reducer,\r\n    portData: portDataSlice.reducer,\r\n    transmissionData: transmissionDataSlice.reducer,\r\n    fuelData: fuelDataSlice.reducer,\r\n    buyerData: buyerDataSlice.reducer,\r\n    salesData: salesDataSlice.reducer,\r\n    driveTypeData: driveTypeDataSlice.reducer,\r\n    bodyTypeData: bodyTypeDataSlice.reducer,\r\n    exteriorColorData: exteriorColorDataSlice.reducer,\r\n    jpyToUsd: jpyToUsdSlice.reducer,\r\n    usdToJpy: usdToJpySlice.reducer,\r\n    currentYear: currentYearSlice.reducer,\r\n    isAddPhotoVisible: isAddPhotoVisibleSlice.reducer,\r\n    addAnotherImages: addAnotherImagesSlice.reducer,\r\n    modalDeleteImagesVisible: modalDeleteImagesVisibleSlice.reducer,\r\n    loginName: loginNameSlice.reducer,\r\n    loginAccountType: loginAccountTypeSlice.reducer,\r\n    loginEmail: loginEmailSlice.reducer,\r\n    deleteImageVisible: deleteImageVisibleSlice.reducer,\r\n  },\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['chatMessagesData/setChatMessagesData'],\r\n        ignoredPaths: ['chatMessagesData.somePathToTimestamp'],\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(projectControlFirestore, 'currency', 'currency');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const jpyToUsd = snapshot.data()?.jpyToUsd || [];\r\n        const usdToJpy = snapshot.data()?.usdToJpy || [];\r\n        dispatch(setJpyToUsd(jpyToUsd));\r\n        dispatch(setUsdToJpy(usdToJpy));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExpenseNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExpenseName'), 'ExpenseName');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const expenseNameData = snapshot.data()?.expenseName || [];\r\n        dispatch(setExpenseNameData(expenseNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchPaidToData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'PaidTo'), 'PaidTo');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const paidToData = snapshot.data()?.paidTo || [];\r\n        dispatch(setPaidToData(paidToData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchMakeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Make'), 'Make');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const makeData = snapshot.data()?.make || [];\r\n        dispatch(setMakeData(makeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPortData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Port'), 'Port');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const portData = snapshot.data()?.port || [];\r\n        dispatch(setPortData(portData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// Dispatch the fetchMakeData action when your app starts or as needed\r\n\r\nexport const fetchTransmissionData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Transmission'), 'Transmission');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const transmissionData = snapshot.data()?.transmission || [];\r\n        dispatch(setTransmissionData(transmissionData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchFuelData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Fuel'), 'Fuel');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const fuelData = snapshot.data()?.fuel || [];\r\n        dispatch(setFuelData(fuelData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBuyerData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Buyer'), 'Buyer');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const buyerData = snapshot.data()?.buyer || [];\r\n        dispatch(setBuyerData(buyerData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchSalesData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'Sales'), 'Sales');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const salesData = snapshot.data()?.sales || [];\r\n        dispatch(setSalesData(salesData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'DriveType'), 'DriveType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const driveTypeData = snapshot.data()?.driveType || [];\r\n        dispatch(setDriveTypeData(driveTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchBodyTypeData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'BodyType'), 'BodyType');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const bodyTypeData = snapshot.data()?.bodyType || [];\r\n        dispatch(setBodyTypeData(bodyTypeData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchExteriorColorData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'ExteriorColor'), 'ExteriorColor');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const exteriorColorData = snapshot.data()?.exteriorColor || [];\r\n        dispatch(setExteriorColorData(exteriorColorData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchYear = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY');\r\n      dispatch(setCurrentYear(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentDate = () => {\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get('https://worldtimeapi.org/api/timezone/Asia/Tokyo');\r\n      const { datetime } = response.data;\r\n      const formattedTime = moment(datetime).format('YYYY-MM-DD');\r\n      dispatch(setCurrentDate(formattedTime));\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n\r\nexport const fetchVehicleListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'VehicleProducts'),\r\n        orderBy('dateAdded', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const vehicleProductData = [];\r\n        snapshot.forEach((doc) => {\r\n          vehicleProductData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setVehicleListData(vehicleProductData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\n// =============================== Vehicle List ========================================\r\n\r\n// =============================== Logs ========================================\r\n// export const fetchLogsData = () => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n\r\n//       const queryRef = query(\r\n//         collection(projectControlFirestore, 'logs'),\r\n//         orderBy('timestamp', 'desc'),\r\n//         limit(10)\r\n//       );\r\n\r\n//       const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n//         const logsDatabaseData = [];\r\n//         snapshot.forEach((doc) => {\r\n//           logsDatabaseData.push({\r\n//             id: doc.id,\r\n//             ...doc.data(),\r\n//           });\r\n//         });\r\n//         dispatch(setLogsData(logsDatabaseData));\r\n//       });\r\n\r\n//       // Return the unsubscribe function to stop listening when necessary\r\n//       return unsubscribe;\r\n//     } catch (error) {\r\n//       // Handle errors here\r\n//       console.error('Error fetching data from Firebase:', error);\r\n//     }\r\n//   };\r\n// };\r\n\r\n// =============================== Logs ========================================\r\n\r\n// =============================== Freight ========================================\r\n\r\nexport const fetchMethodData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'MethodDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const methodData = snapshot.data()?.methodData || [];\r\n        dispatch(setMethodData(methodData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionIsRequiredData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionIsRequiredDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionIsRequiredData = snapshot.data()?.inspectionIsRequiredData || [];\r\n        dispatch(setInspectionIsRequiredData(inspectionIsRequiredData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchInspectionNameData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const docRef = doc(collection(projectExtensionFirestore, 'CustomerCountryPort'), 'InspectionNameDoc');\r\n      const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n        const inspectionNameData = snapshot.data()?.inspectionNameData || [];\r\n        dispatch(setInspectionNameData(inspectionNameData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Freight ========================================\r\n\r\n\r\n// =============================== Chat Messages ========================================\r\nexport const fetchChatListData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const queryRef = query(\r\n        collection(projectExtensionFirestore, 'chats'),\r\n        orderBy('lastMessageDate', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(queryRef, (snapshot) => {\r\n        const chatsData = [];\r\n        snapshot.forEach((doc) => {\r\n          chatsData.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(setChatListData(chatsData));\r\n      });\r\n\r\n      // Return the unsubscribe function to stop listening when necessary\r\n      return unsubscribe;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error('Error fetching data from Firebase:', error);\r\n    }\r\n  };\r\n};\r\n// =============================== Chat Messages ========================================\r\n// To stop listening for updates, you can call unsubscribe()\r\n// unsubscribe();\r\n\r\nstore.dispatch(fetchCurrentDate());\r\nstore.dispatch(fetchPaidToData());\r\nstore.dispatch(fetchExpenseNameData());\r\nstore.dispatch(fetchMakeData());\r\nstore.dispatch(fetchPortData());\r\nstore.dispatch(fetchTransmissionData());\r\nstore.dispatch(fetchFuelData());\r\nstore.dispatch(fetchBuyerData());\r\nstore.dispatch(fetchSalesData());\r\nstore.dispatch(fetchDriveTypeData());\r\nstore.dispatch(fetchBodyTypeData());\r\nstore.dispatch(fetchExteriorColorData());\r\nstore.dispatch(fetchCurrency());\r\nstore.dispatch(fetchYear());\r\n\r\n\r\n\r\n// store.dispatch(fetchVehicleListData());\r\n\r\nstore.dispatch(fetchMethodData());\r\nstore.dispatch(fetchInspectionIsRequiredData());\r\nstore.dispatch(fetchInspectionNameData());\r\n\r\n// store.dispatch(fetchChatListData());\r\n\r\n\r\nexport default store","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport {\r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID\r\n} from '@env';\r\n\r\nimport {\r\n  REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID\r\n} from '@env';\r\n\r\n// Configuration for Firebase project 1\r\nconst firebaseConfigControl = {\r\n  apiKey: REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL: REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId: REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n};\r\n\r\n// Configuration for Firebase project 2\r\nconst firebaseConfigExtension = {\r\n  // Replace with your project 2 configuration\r\n  apiKey: REACT_NATIVE_FIREBASE_EXTENSION_API_KEY,\r\n  authDomain: REACT_NATIVE_FIREBASE_EXTENSION_AUTH_DOMAIN,\r\n  projectId: REACT_NATIVE_FIREBASE_EXTENSION_PROJECT_ID,\r\n  storageBucket: REACT_NATIVE_FIREBASE_EXTENSION_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_NATIVE_FIREBASE_EXTENSION_MESSAGING_SENDER_ID,\r\n  appId: REACT_NATIVE_FIREBASE_EXTENSION_APP_ID,\r\n  measurementId: REACT_NATIVE_FIREBASE_EXTENSION_MEASUREMENT_ID,\r\n\r\n};\r\n\r\n// Initialize Firebase for project 1\r\nexport const projectControlFirebase = initializeApp(firebaseConfigControl);\r\nexport const projectControlAuth = getAuth(projectControlFirebase);\r\nexport const projectControlFirestore = getFirestore(projectControlFirebase);\r\n\r\n// Initialize Firebase for project 2\r\nexport const projectExtensionFirebase = initializeApp(firebaseConfigExtension, 'projectExtension');\r\nexport const projectExtensionAuth = getAuth(projectExtensionFirebase);\r\nexport const projectExtensionFirestore = getFirestore(projectExtensionFirebase);\r\n","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc, getDocs, orderBy, deleteDoc, startAfter, limit } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseControlConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst db = getFirestore (app);\r\n// export default app\r\nexport {app, db, auth, getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, getAuth, signInWithEmailAndPassword, updateDoc, getDocs, orderBy, deleteDoc, limit, startAfter };","\r\n\r\nimport { getFirestore, collection, addDoc, doc, setDoc, getDoc, query, where, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { \r\n  REACT_NATIVE_FIREBASE_CONTROL_API_KEY, \r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL, \r\n  REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET, \r\n  REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID, \r\n  REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID } from '@env';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseControlCreateUserConfig = {\r\n  apiKey:REACT_NATIVE_FIREBASE_CONTROL_API_KEY,\r\n  authDomain:REACT_NATIVE_FIREBASE_CONTROL_AUTH_DOMAIN,\r\n  databaseURL:REACT_NATIVE_FIREBASE_CONTROL_AUTH_URL,\r\n  projectId:REACT_NATIVE_FIREBASE_CONTROL_PROJECT_ID,\r\n  storageBucket:REACT_NATIVE_FIREBASE_CONTROL_STORAGE_BUCKET,\r\n  messagingSenderId:REACT_NATIVE_FIREBASE_CONTROL_MESSAGING_SENDER_ID,\r\n  appId:REACT_NATIVE_FIREBASE_CONTROL_APP_ID,\r\n  measurementId:REACT_NATIVE_FIREBASE_CONTROL_MEASUREMENT_ID,\r\n  };\r\n\r\n// Initialize Firebase\r\n\r\n\r\nrequire('firebase/auth');\r\n// export const auth = app.auth()\r\nconst firebaseAppForCreateUser = initializeApp(firebaseControlCreateUserConfig, 'Secondary' );\r\nconst authForCreateUser = getAuth(firebaseAppForCreateUser);\r\n// export default app\r\nexport {authForCreateUser};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"162\":\"da88e0a0\",\"245\":\"704124dc\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/samplecontrolhub/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [389], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_Dimensions$get","Dimensions","get","width","height","LoginPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","_useState5","_useState6","password","setPassword","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","errorShow","setErrorShow","_React$useState5","_React$useState6","_React$useState7","_React$useState8","errorTitle","setErrorTitle","_React$useState9","_React$useState10","errorMessage","setErrorMessage","logo","require","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isDisabled","setIsDisabled","navigate","useNavigate","useEffect","auth","onAuthStateChanged","user","ErrorLoginShow","_jsx","Box","w","alignItems","children","PresenceTransition","visible","initial","opacity","scale","animate","transition","duration","Alert","maxW","status","_jsxs","VStack","space","flexShrink","HStack","justifyContent","Icon","Text","fontSize","fontWeight","_dark","color","pl","_text","updateFieldData","_ref","_asyncToGenerator","documentId","fieldName","newValue","userRef","doc","db","updateDoc","_defineProperty","error","console","_x","_x2","_x3","apply","arguments","handleSignIn","setTimeout","signInWithEmailAndPassword","trim","then","re","catch","errorCode","message","log","length","NativeBaseProvider","bgColor","h","Center","flex","px","Image","source","uri","resizeMode","alt","style","Stack","Input","base","md","sm","value","onSubmitEditing","onChangeText","text","InputLeftElement","as","MaterialIcons","name","size","ml","placeholder","placeholderTextColor","type","InputRightElement","Pressable","onPress","mr","Button","_hover","_pressed","_focus","borderWidth","borderColor","disabled","Spinner","StyleSheet","create","container","paddingHorizontal","input","borderRadius","marginBottom","loginButton","backgroundColor","paddingVertical","loginButtonText","textAlign","Loading","loadingContainer","props","LazyComponent","lazy","importFunc","Suspense","fallback","_objectSpread","csvData","setCsvData","data","handleFileChange","event","file","target","files","reader","FileReader","onload","codes","Uint8Array","result","unicodeString","Encoding","Papa","header","dynamicTyping","complete","_complete","results","forEach","_ref2","row","response","fetch","method","headers","body","JSON","stringify","documentData","ok","readAsArrayBuffer","sendData","_ref5","_ref6","_x4","_ref7","action_cd","stock_id","reference_no","m_as_maker_id","m_as_model_id","grade_name","model_code","frame_number","model_number","devision_number","registration_year","registration_month","manufacture_year","manufacture_month","m_as_bodytype_id","m_bodystyle_sub_id","displacement","mileage_odometer_cd","mileage","m_as_fueltype_id","m_as_transmission_id","m_as_steering_id","m_as_drivetype_id","number_of_passengers","door_cnt","exterior_color_cd","interior_color_cd","option_cds","condition_cd","accident_flg","sales_person_charge_id","storage_yard_cd","site_sales_pr_text","fob_ask_flg","fob_regular_price","fob_price","display_site_cds","tcv_flg","m_tcv_maker_id","m_tcv_model_id","memo","stock_no","stock_price","car_condition_file","responseData","json","errorResponse","callApiR02","_ref8","json_data","msg","exec_time","parse","ret_text","replace","ret","_x5","_x6","_x7","jsonData","appendDataToCSV","_ref9","_ref10","username","stock_system_id","appendClientsDataToCSV","_ref11","client_name","handleClearCsv","_ref12","handleClearClientsCsv","_ref13","View","accept","onChange","index","title","FlatList","keyExtractor","item","toString","renderItem","_ref14","columnName","createNativeStackNavigator","firestore","getFirestore","getEmailOfCurrentUser","currentUser","Top","navigation","setDrawerVisible","setType","dispatch","useSelector","state","loginAccountType","createDrawerNavigator","useDispatch","handleDocumentChange","snapshot","exists","active","signOut","unsubscribe","_auth$currentUser","userId","onSnapshot","subscribeToFieldChange","currentUserEmail","getFieldValueByEmail","accountDocRef","docSnapshot","fieldType","setLoginAccountType","setLoginName","Math","floor","random","document","createElement","textContent","head","append","Routes","Route","path","element","Navigate","to","ParseCSV","ChatMessages","LazyScreen","Checkpoint","loginEmail","loginName","delay","App","initializing","setInitializing","setUser","Provider","store","Router","selectedScreen","AccountList","_searchInput$current","setEmailError","logo2","_useState11","_useState12","_useState13","_useState14","setName","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","isSelectedLogs","_useState21","_useState22","isSelectedAddAccount","_useState23","_useState24","isSelectedAccountList","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","setAccountTypeSpAd","_useState31","_useState32","setAccountTypeDevAd","_useState33","_useState34","setAccountTypeAd","_useState35","_useState36","setAccountType3","_useState37","_useState38","setAccountType4","_useState39","_useState40","inputName","setInputName","_useState41","_useState42","_useState43","_useState44","inputEmail","setInputEmail","_useState45","_useState46","inputPassword","setInputPassword","_useState47","_useState48","setInputConfirmPassword","_useState49","_useState50","typeOfAccount","setTypeOfAccount","_useState51","_useState52","setTypeOfAccountDisplay","showSuccessModal","setShowSuccessModal","showDisableModal","setShowDisableModal","showEnableModal","setShowEnableModal","_React$useState11","_React$useState12","showDeleteModal","setShowDeleteModal","_React$useState13","_React$useState14","_useState53","useRef","_useState54","selectedItem","setSelectedItem","_useState55","_useState56","modalVisible","setModalVisible","_useState57","_useState58","_useState59","_useState60","setTime","_useState61","_useState62","selectedType","setSelectedType","_useState63","_useState64","selectedTypeDisplay","setSelectedTypeDisplay","_useState65","_useState66","selectedItemType","setSelectedItemType","_useState67","_useState68","isEmailDuplicate","setIsEmailDuplicate","_useState69","_useState70","authEmail","setAuthEmail","_useState71","_useState72","authPassword","setAuthPassword","_useState73","_useState74","isYesLoading","setIsYesLoading","_useState75","_useState76","isSaveLoading","setIsSaveLoading","inputEmailRef","inputNameRef","inputPassRef","_useState77","_useState78","page","setPage","optionsPerPage","_useState79","_useState80","itemsPerPage","setItemsPerPage","_useState81","_useState82","setData","_useState83","_useState84","searchQuery","setSearchQuery","_useState85","_useState86","filteredData","setFilteredData","_useState87","_useState88","_useState89","_useState90","ref0","ref1","ref2","ref3","searchInput","searchInputValue","current","_useState91","_useState92","pageSize","_useState93","_useState94","lastVisible","setLastVisible","_useState95","_useState96","firstVisible","setFirstVisible","_useState97","_useState98","searchText","_useState99","_useState100","currentPage","setCurrentPage","q","query","collection","orderBy","limit","documents","logsDatabaseData","push","setAccountListData","docs","fetchNextData","collectionGroup","projectControlFirestore","startAfter","getDocs","updateState","setLoadingModalVisible","where","toLowerCase","fetchPreviousData","endBefore","limitToLast","fetchFirstPage","accountListDatabaseData","_ref3","pageClicked","empty","firstPageDocuments","_ref4","searchData","handleToggleAccountTypeAd","useCallback","handleToggleAccountTypeDevAd","handleToggleAccountType3","handleToggleAccountType4","handleToggleAccountTypeSpAd","fetchData","updatedData","listenForNameChange","_auth$currentUser2","getEmailFromDocument","collectionPath","documentRef","documentSnapshot","getDoc","pass","accountDocSnapshot","validateEmail","test","handleEdit","find","typeDisplay","setNativeProps","handleInputEmailChange","debounce","handleInputNameChange","handleInputPassChange","handleCloseModal","handleCloseDisableModal","handleCloseDeleteModal","handleCloseEnableModal","addLogToCollection","logsCollectionRef","addDoc","handleEnable","itemDocRef","datetime","axios","formattedTime","moment","format","year","month","monthWithDay","date","day","time","timeWithMinutesSeconds","applySearchFilter","logData","keywords","timestamp","colorScheme","deleteDocument","customId","deleteDoc","_x8","_x9","handleDelete","deleteUser","_x10","handleDisable","_searchInput$current2","_x11","filter","includes","handleSave","_ref15","isPasswordLengthLabel","updatedFields","lastUpdatedDate","_searchInput$current3","updatePassword","userDocRef","dateOfCreation","setDoc","oldDocumentRef","newDocumentRef","createUserWithEmailAndPassword","updatedItem","fetchSignInMethodsForEmail","_x12","_ref16","filtered","useMemo","paginatedData","startIndex","endIndex","slice","handleSearch","min","styles","image","flexDirection","position","top","zIndex","borderBottomWidth","borderBottomColor","SideDrawer","marginTop","paddingLeft","FastImage","priority","high","stretch","marginLeft","QRCodeScanner","_ref17","handleSignOut","_useState101","_useState102","showNamePopover","setShowNamePopover","showPopover","Flex","direction","Popover","isOpen","trigger","triggerProps","marginRight","MaterialCommunityIcons","Ionicons","onClose","placement","trapFocus","Content","Body","leftIcon","flexGrow","minHeight","ref","ScrollView","contentContainerStyle","DataTable","margin","overflow","display","padding","paddingBottom","handleOpenDisableModal","handleOpenEnableModal","handleOpenDeleteModal","Pagination","numberOfPages","ceil","onPageChange","label","showFastPagination","optionsLabel","Modal","CloseButton","Header","defaultValue","bold","FontAwesome","Footer","borderTopWidth","maxWidth","variant","AddAccount","show2","setShow2","typeOfAccountDisplay","showModal","setShowModal","inputConfirmPassword","passwordMatch","setPasswordMatch","passwordMatchLabel","setPasswordMatchLabel","passwordLengthLabel","setPasswordLengthLabel","isNameEmpty","setIsNameEmpty","setIsIntervalActive","closeModal","handleAddAccount","_inputEmail$current","authForCreateUser","userCredential","_inputName$current","_inputName$current2","_inputEmail$current2","_inputName$current3","_inputPassword$curren","customID","docRef","handleClear","handlePasswordStatus","_inputPassword$curren3","_inputConfirmPassword2","inputPasswordValue","inputConfirmPasswordValue","inputPasswordValueLength","_inputEmail$current3","emailValue","handleEmailSubmit","_inputName$current4","AntDesign","_inputPassword$curren2","_inputConfirmPassword","wrap","flexDir","globalSupplyChainCostsData","globalSelectedExpenseName","globalSupplyChainCostsAmount","globalSelectedPaidTo","globalModelDataVariable","globalRegYearDataVariable","globalSelectedImages","globalVehicleFolderName","globalReferenceNumber","globalSPCSelectedDate","globalFobPrice","UpdateSuccessModal","bodyText","headerText","isUpdateSuccessModalOpen","borderLeftWidth","borderLeftColor","UploadSuccessModal","isSuccessModalOpen","LoadingModal","loadingModalVisible","bottom","left","right","selectable","SelectExpenseName","expenseNameIsError","selectExpenseNameRef","selectResetKey","expenseNameData","selectedExpenseName","nanoid","Select","selectedValue","onValueChange","setSelectedExpenseName","accessibilityLabel","_selectedItem","bg","endIcon","CheckIcon","Item","SelectPaidTo","paidToIsError","paidToData","selectedPaidTo","setSelectedPaidTo","ModalCalendar","selectedDate","setSelectedDate","modalCalendarVisible","setModalCalendarVisible","handleModalCalendarOpen","handleModalCalendarClose","_Fragment","onFocus","useRNModal","Calendar","onDayPress","dateString","markedDates","selected","disableTouchEvent","selectedDotColor","renderArrow","enableSwipeMonths","initialDate","showSixWeeks","SupplyChainsCosts","handleAddExpenseNameTextChange","textAreaAddExpenseName","inputExpenseAmount","handleInputExpenseAmountChange","handleAddPaidToTextChange","inputCarNotes","supplyChainsCostsData","currentDate","supplyChainsCostsModalVisible","setSupplyChainsCostsModalVisible","clearModalVisible","setClearModalVisible","inputAmountIsError","setInputAmountIsError","setExpenseNameIsError","setPaidToIsError","totalAmount","setTotalAmount","setSelectResetKey","handleModalSupplyChainsCostsClose","_inputExpenseAmount$c","clear","handleClearModalClose","formattedTotalAmount","expenseData","parseFloat","amount","reduce","accumulator","currentValue","toLocaleString","_inputExpenseAmount$c2","_inputExpenseAmount$c3","_inputExpenseAmount$c4","_inputExpenseAmount$c5","existingIndex","findIndex","_inputExpenseAmount$c6","cloneDeep","expenseName","paidName","setSupplyChainsCostsData","_inputExpenseAmount$c7","newData","concat","_toConsumableArray","handleEditPress","handleFirstModalClose","handleFirstModalOpen","alignSelf","SupplyChainsCostsSortAndAddModal","docName","handleAddTextChange","textAreaAdd","dataName","databaseInit","projectExtensionFirestore","isHovered","isFocused","isPressed","itemIndex","splice","handleDeleteItem","projectControlAuth","storage","getStorage","projectExtensionFirebase","ClearImagesModal","modalDeleteImagesVisible","setModalDeleteImagesVisible","handleClearImages","selectedImages","isAddPhotoVisible","handleModalDeleteClose","cursor","ImageUploader","dragSortableViewRef","handleClearImagesExtra","deleteImageVisible","boolean","addAnotherImages","scrollEnabled","setscrollEnabled","isEnterEdit","setisEnterEdit","widthState","setWidthState","setIsCursorLoading","modalImageUri","setModalImageUri","imageModalVisible","setImageModalVisible","isFileSizeLimitModal","setIsFileSizeLimitModal","handleImagePress","dropdown","icon","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle","paddingTop","txt","lineHeight","sort","item_children","item_delete_icon","item_icon","handleImageAddToSelection","setDeleteImageVisible","options","mediaType","maxHeight","selectionLimit","storageOptions","skipBackup","launchImageLibrary","didCancel","assets","newImages","promises","asset","res","blob","some","Promise","all","limitedImages","setSelectedImages","setAddAnotherImages","reloadData","updatedSelectedImages","handleWidthChange","window","addEventListener","removeEventListener","normal","contain","handleDeleteImagePress","Entypo","getImagesRenderItem","handleImageSelection","uniqueImages","self","a","filteredImages","imageOrder","b","indexOf","setIsAddPhotoVisible","DragSortableView","dataSource","delayLongPress","parentWidth","childrenWidth","childrenHeight","marginChildrenTop","marginChildrenBottom","marginChildrenLeft","marginChildrenRight","onDragStart","onDragEnd","onDataChange","onClickItem","sortable","italic","alignContent","NativeImage","SuccessFailModal","isSuccessOpen","isFailedOpen","handleFailModalClose","inputStockIDNumber","handleSuccessModalClose","okSuccessButtonRef","okFailButtonRef","initialFocusRef","finalFocusRef","StockIDAndMakeAndModel","selectStockStatus","handleSetBordersWhite","inputFobUsd","handleClearIfError","monthNumbers","steeringData","selectPort","selectSales","selectBuyer","inputRefNum","inputChassis","inputModelCode","inputEngineCode","inputEngineDis","selectSteering","inputMileage","selectTransmission","selectExteriorColor","inputNumOfSeats","inputDoors","inputPurchasedPrice","selectFuel","inputDimensionLength","inputDimensionWidth","inputDimensionHeight","inputDimensionCubicMeters","selectDriveType","inputWeight","selectBodyType","inputCarName","inputCarDesc","inputFobJpy","selectRegYear","selectRegMonth","setRefNumFromSelects","stockIDNumError","selectMakeForModelRef","textAreaAddModel","selectMakeForAddModelRef","handleAddMakeTextChange","textAreaAddMake","makeError","modelError","selectMakeBoxRef","selectMakeRef","selectModelRef","selectModelBoxRef","setCarNameFromSelects","setCarNameFromSelectsModel","inputCarMemo","purchasedPriceError","handleInputPurchasedPriceChange","makeData","stockStatusData","portData","transmissionData","fuelData","buyerData","salesData","driveTypeData","bodyTypeData","exteriorColorData","jpyToUsd","modelData","setModelData","isSearchLoading","setIsSearchLoading","setIsSuccessOpen","setIsFailedOpen","getImages","_ref18","folderName","imageRefs","listAll","urls","items","_ref19","itemRef","getDownloadURL","fileName","parseInt","handleSearchPress","_inputStockIDNumber$c","_inputStockIDNumber$c2","querySnapshot","_ref21","_fetchDataAndSelectIndex","collectionRef","make","selectIndex","modelVariable","reset","modelsDataFromFirebase","model","fetchDataAndSelectIndex","stockStatus","regYear","regMonth","portID","salesID","buyerID","referenceNumber","chassisNumber","modelCode","engineCode","engineDisplacement","steering","transmission","exteriorColor","numberOfSeats","doors","purchasedPrice","fuel","dimensionLength","dimensionWidth","dimensionHeight","dimensionCubicMeters","driveType","weight","bodyType","carName","carDescription","fobPrice","numericValue","startsWith","truncatedValue","formattedValue","multipliedValue","isNaN","formattedMultipliedValue","toFixed","handleInputFobJpyChange","undefined","notes","featuresState","SafetySystemAnBrSy","SafetySystemDrAi","SafetySystemPaAi","SafetySystemSiAi","ComfortAiCoFr","ComfortAiCoRe","ComfortAMFMRa","ComfortAMFMSt","ComfortCDPl","ComfortCDCh","ComfortCrSpCo","ComfortDiSp","ComfortDVDPl","ComfortHDD","ComfortNaSyGPS","ComfortPoSt","ComfortPrAuSy","ComfortReKeSy","ComfortTiStWh","InteriorLeSe","InteriorPoDoLo","InteriorPoMi","InteriorPoSe","InteriorPoWi","InteriorReWiDe","InteriorReWiWi","InteriorThRoSe","InteriorTiGl","ExteriorAlWh","ExteriorPoSlDo","ExteriorSuRo","SellingPointsCuWh","SellingPointsFuLo","SellingPointsMaHiAv","SellingPointsBrNeTi","SellingPointsNoAcHi","SellingPointsNoSmPrOw","SellingPointsOnOwHi","SellingPointsPeRaTi","SellingPointsReBo","SellingPointsTuEn","SellingPointsUpAuSy","resetKey","stockStatusVariable","makeVariable","regYearVariable","regMonthVariable","portVariable","port","salesVariable","sales","buyerVariable","buyer","referenceNumberVariable","stockID","steeringVariable","transmissionVariable","exteriorColorVariable","fuelVariable","driveTypeVariable","bodyTypeVariable","handleModelChange","handleMakeChange","_ref22","handleInputStockIDNumberChange","handleModelOnFocus","isLoadingText","keyboardType","SortAndAddModal","SelectDropdown","buttonStyle","buttonTextStyle","dropdownStyle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","rowStyle","rowTextStyle","onSelect","defaultButtonText","buttonTextAfterSelection","renderDropdownIcon","isOpened","rowTextForSelection","searchPlaceHolder","searchInputStyle","disableAutoScroll","search","ModelSortAndAddModal","_ref23","modalSortOpen","setModalSortOpen","modalAddOpen","setModalAddOpen","modalAddSuccess","setModalAddSuccess","modalSave","setModalSave","modalSaveLoading","setModalSaveLoading","modalData","setModalData","modalIsLoading","setModalIsLoading","handleDeleteItemPress","prevData","_ref24","_modalDocSnap$data","modalDocRef","modalDocSnap","nameVariable","handleModalSaveClose","handleSortModalOpen","handleSortModalClose","handleModalAddOpen","handleModalAddClose","_textAreaAdd$current","handleModalAddSuccessClose","handleModalAddSuccessOpen","handleModalSaveOpen","handleAddSubmit","_ref28","_textAreaAdd$current2","dataArray","split","modalCollectionRef","arrayUnion","merge","TouchableOpacity","focusable","DraggableFlatList","_ref29","drag","onPressIn","_ref30","TextArea","multiline","totalLines","_ref31","_ref32","_modalDocSnap$data2","_textAreaAdd$current3","_ref36","_textAreaAdd$current4","_ref37","_ref38","PSBSortAndAddModal","_ref39","textAreaAddCode","handleAddCodeTextChange","_ref40","_modalDocSnap$data3","_ref44","_textAreaAdd$current5","_textAreaAddCode$curr","dataCode","dataCodeArray","dataToUpdate","updateObject","_ref45","_ref46","_ref47","modalAddModel","setModalAddModel","_useState103","_useState104","modalSaveModel","setModalSaveModel","_useState105","_useState106","modalModel","setModalModel","_useState107","_useState108","modalAddModelSuccess","setModalAddModelSuccess","_useState109","_useState110","keySelectMakeForModel","setKeySelectMakeForModel","_useState111","_useState112","keySelectMakeForAddModel","setKeySelectMakeForAddModel","_useState113","_useState114","modelSortData","setModelSortData","_useState115","_useState116","isAddModelDisabled","setIsAddModelDisabled","_useState117","_useState118","modalSaveModelLoading","setModalSaveModelLoading","_useState119","_useState120","_useState121","_useState122","_useState123","_useState124","_useState125","_useState126","_useState127","_useState128","fetchModelSortData","_ref48","_selectMakeForModelRe","_selectMakeForModelRe2","_modelSortDocSnap$dat","modelSortDocRef","modelSortDocSnap","handleDeleteModelPress","prevModelData","_ref49","handleSaveModel","_selectMakeForModelRe3","_selectMakeForModelRe4","_selectMakeForModelRe5","_selectMakeForModelRe6","_selectMakeForModelRe7","handleModalSaveModelClose","handleMakeForModelChange","_selectMakeForAddMode","makeForAddModelVariable","handleMakeForAddModelChange","handleModalModelOpen","handleModalModelClose","prevKey","handleModalAddModelOpen","handleModalAddModelClose","handleModalAddModelSuccessOpen","handleModalAddModelSuccessClose","handleModalSaveModelOpen","_selectMakeForModelRe8","handleAddModelSubmit","_ref51","_textAreaAddModel$cur4","_selectMakeForAddMode2","_selectMakeForAddMode3","_selectMakeForAddMode4","makeCollectionRef","makeDocRef","_ref52","_ref53","_textAreaAddModel$cur","_textAreaAddModel$cur2","_textAreaAddModel$cur3","newText","toUpperCase","CheckBoxButton","_ref54","variable","_useState129","_useState130","checked","setChecked","noOfLines","AddVehicle","screenWidth","_useState131","_useState132","_useState133","_useState134","_useState135","_useState136","_useState137","_useState138","_useState139","_useState140","inputRegYear","inputRegMonth","inputFuel","inputDriveType","textAreaAddTransmission","textAreaAddExteriorColor","textAreaAddFuel","textAreaAddPort","textAreaAddPortCode","textAreaAddSales","textAreaAddBuyer","textAreaAddSalesCode","textAreaAddBuyerCode","textAreaAddDriveType","textAreaAddBodyType","textAreaAddPaidTo","currentYear","years","Array","from","_","_useState141","_useState142","isNoFeaturesSelected","setIsNoFeaturesSelected","_useState143","_useState144","carNameError","setCarNameError","_useState145","_useState146","setMakeError","_useState147","_useState148","setModelError","_useState149","_useState150","regYearError","setRegYearError","_useState151","_useState152","regMonthError","setRegMonthError","_useState153","_useState154","refNumError","setRefNumError","_useState155","_useState156","setStockIDNumError","_useState157","_useState158","chassisError","setChassisError","_useState159","_useState160","modelCodeError","setModelCodeError","_useState161","_useState162","engineDisError","setEngineDisError","_useState163","_useState164","steeringError","setSteeringError","_useState165","_useState166","mileageError","setMileageError","_useState167","_useState168","transmissionError","setTransmissionError","_useState169","_useState170","exteriorColoError","setExteriorColoError","_useState171","_useState172","numOfSeatsError","setNumOfSeatsError","_useState173","_useState174","doorsError","setDoorsError","_useState175","_useState176","setPurchasedPriceError","_useState177","_useState178","fuelError","setFuelError","_useState179","_useState180","portError","setPortError","_useState181","_useState182","buyerError","setBuyerError","_useState183","_useState184","salesError","setSalesError","_useState185","_useState186","dimensionLengthError","setDimensionLengthError","_useState187","_useState188","dimensionWidthError","setDimensionWidthError","_useState189","_useState190","dimensionHeightError","setDimensionHeightError","_useState191","_useState192","driveTypeError","setDriveTypeError","_useState193","_useState194","weightError","setWeightError","_useState195","_useState196","bodyTypeError","setBodyTypeError","_useState197","_useState198","stockStatusError","setStockStatusError","inputVehicleBoxRef","selectRegYearBoxRef","selectRegMonthBoxRef","selectSteeringBoxRef","selectTransmissionBoxRef","selectExteriorColorBoxRef","selectFuelBoxRef","selectPortBoxRef","selectBuyerBoxRef","selectSalesBoxRef","selectDriveTypeBoxRef","selectBodyTypeBoxRef","selectStockStatusBoxRef","property","_ref55","_inputCarName$current","_inputCarDesc$current","_inputFobJpy$current","_inputFobUsd$current","_inputRegYear$current","_inputRegMonth$curren","_inputRefNum$current","_inputChassis$current","_inputModelCode$curre","_inputEngineCode$curr","_inputEngineDis$curre","_inputMileage$current","_inputNumOfSeats$curr","_inputDoors$current","_inputPurchasedPrice$","_inputFuel$current","_inputDimensionLength","_inputDimensionWidth$","_inputDimensionHeight","_inputDriveType$curre","_inputWeight$current","handleClearToggleButton","clearSelect","uploadImages","storageRef","imageNamesToKeep","listResult","deleteObject","_ref57","imagename","img","getContext","src","URL","createObjectURL","canvas","ctx","newWidth","newHeight","drawImage","font","fillStyle","imageSmoothingEnabled","lineWidth","watermarkText","textWidth","measureText","xShadow","yShadow","shadowBlur","fillText","x","y","watermarkedImageBlob","toBlob","imageRef","uploadBytes","contentType","handleUpload","_inputStockIDNumber$c3","_inputRefNum$current2","_inputChassis$current2","_inputModelCode$curre2","_inputEngineDis$curre2","_inputEngineDis$curre3","_inputMileage$current2","_inputMileage$current3","_inputNumOfSeats$curr2","_inputDoors$current2","_inputNumOfSeats$curr3","_inputDoors$current3","_inputPurchasedPrice$2","_inputPurchasedPrice$3","_inputDimensionLength2","_inputDimensionWidth$2","_inputDimensionHeight2","_inputDimensionCubicM","_inputDimensionLength3","_inputDimensionWidth$3","_inputDimensionHeight3","_inputDimensionCubicM2","_inputWeight$current2","_inputCarName$current2","selectIsEmpty","inputIsEmpty","allValuesAreFalse","values","every","_inputCarName$current3","_inputDimensionHeight4","_inputDimensionHeight5","_inputDimensionWidth$4","_inputDimensionWidth$5","_inputDimensionLength4","_inputDimensionLength5","_inputDoors$current4","_inputDoors$current5","_inputPurchasedPrice$4","_inputPurchasedPrice$5","_inputNumOfSeats$curr4","_inputMileage$current4","_inputMileage$current5","_inputEngineDis$curre4","_inputEngineDis$curre5","_inputModelCode$curre3","_inputChassis$current3","_inputRefNum$current3","_inputStockIDNumber$c4","scrollIntoView","behavior","_inputStockIDNumber$c5","_inputRefNum$current4","_inputStockIDNumber$c6","_inputRefNum$current5","_inputCarName$current4","_inputStockIDNumber$c7","_inputChassis$current4","_inputFobJpy$current2","_inputStockIDNumber$c8","_inputRefNum$current6","_inputChassis$current5","_inputModelCode$curre4","_inputEngineCode$curr2","_inputNumOfSeats$curr5","_inputDoors$current6","_inputCarName$current5","_inputCarDesc$current2","_inputCarNotes$curren","_inputCarMemo$current","stockCollectionRef","docQuery","docSnap","fobHistoryValue","keywordsData","fobHistoryData","changedBy","inputFobValue","imageCount","fobHistory","photos","comfort","safetySystem","interior","exterior","sellingPoints","_inputCarName$current6","_inputRefNum$current7","_inputCarName$current7","_inputRefNum$current8","setIsUpdateSuccessModalOpen","dataDoc","updates","updatedDate","dateAdded","dataWithDateAdded","_inputCarName$current8","_inputRefNum$current9","_inputCarName$current9","_inputRefNum$current10","setIsSuccessModalOpen","_ref62","_x13","_inputStockIDNumber$c9","_inputCarName$current10","_inputCarDesc$current3","_inputFobJpy$current3","_inputFobUsd$current2","_inputRegYear$current2","_inputRegMonth$curren2","_inputRefNum$current11","_inputChassis$current6","_inputModelCode$curre5","_inputEngineCode$curr3","_inputEngineDis$curre6","_inputMileage$current6","_inputNumOfSeats$curr6","_inputDoors$current7","_inputPurchasedPrice$6","_inputFuel$current2","_inputDimensionLength6","_inputDimensionWidth$6","_inputDimensionHeight6","_inputDriveType$curre2","_inputWeight$current3","_inputCarNotes$curren2","_inputCarMemo$current2","_inputFobJpy$current4","calculateCubicMeters","_inputDimensionLength7","_inputDimensionLength8","_inputDimensionWidth$7","_inputDimensionWidth$8","_inputDimensionHeight7","_inputDimensionHeight8","resultFormatted","_inputStockIDNumber$c10","_useState199","_useState200","handleUpdateSuccessModalClose","_ref66","_useState211","_useState212","_textAreaAddMake$curr","_textAreaAddMake$curr2","_textAreaAddMake$curr3","Number","outlineStyle","_textAreaAddPort$curr","textAreaValue","line","charAt","join","_textAreaAddPortCode$","_textAreaAddPortCode$2","_textAreaAddPortCode$3","_textAreaAddSales$cur","_textAreaAddSalesCode","_textAreaAddSalesCode2","_textAreaAddSalesCode3","_textAreaAddBuyer$cur","_inputRefNum$current12","_inputRefNum$current13","_inputRefNum$current14","_inputChassis$current7","_inputChassis$current8","_inputChassis$current9","_inputModelCode$curre6","_inputModelCode$curre7","_inputModelCode$curre8","_inputEngineCode$curr4","_inputEngineCode$curr5","_inputEngineCode$curr6","InputGroup","InputRightAddon","_textAreaAddTransmiss","_textAreaAddExteriorC","_textAreaAddFuel$curr","dotIndex","editable","_textAreaAddDriveType","_textAreaAddBodyType$","borderTopColor","_textAreaAddExpenseNa","_textAreaAddPaidTo$cu","_useState203","_useState204","featuresModalVisible","setFeaturesModalVisible","_useState205","_useState206","featuresClearModalVisible","_useState207","_useState208","setKey","handleModalSelectFeaturesClose","pressDuration","InputLeftAddon","_ref63","_useState201","_useState202","modalClearVisible","setModalClearVisible","handleModalClearOpen","handleModalClearClose","_ref64","_useState209","_useState210","modalUploadVisible","setModalUploadVisible","handleModalUploadClose","globalLastVisible","globalMessagesLastVisible","globalSearchText","globalCustomerId","globalImageUrl","globalCustomerFirstName","globalCustomerLastName","globalAdditionalPriceArray","globalMessageTemplateSelectedTitle","formattedIssuingDate","formattedDueDate","transactionModalTitle","transactionModalContentValue","ip","ipCountry","globalInvoiceVariable","carData","selectedCurrencyExchange","cfs","placeOfDelivery","departureCountry","departurePort","salesPerson","discharge","country","consignee","sameAsBuyer","address","contactNumber","fax","notifyParty","sameAsConsignee","paymentDetails","incoterms","inspectionIsChecked","inspectionName","warrantyIsCheck","warrantyAmount","freightPrice","insurancePrice","inspectionPrice","additionalName","additionalPrice","bankInformations","dueDate","issuingDate","bankAccount","paymentTerms","salesAgreement","mobileViewBreakpoint","globalSelectedPDFUrl","globalSelectedFileType","encryptData","secretKey","AES","encrypt","decryptData","ciphertext","decrypt","enc","Utf8","TimelineStatus","selectedChatData","stepIndicator","Tooltip","tintColor","statusData","HeaderButton","isActive","headerCount","activeStyle","setIsHovered","onHoverIn","onHoverOut","marginVertical","FilterButton","iconActive","iconNotActive","SkeletonChatListLayout","subIndex","DeleteMessageTemplateYesNo","handleDeleteMessageTemplateClose","deleteMessageTemplateVisible","selectedTitle","isDeleteLoading","setIsDeleteLoading","handleClose","deleteMessageTemplate","titleToDelete","updatedTemplates","messageTemplate","template","Group","MessageTemplateItem","setOriginalTitle","titleInputRef","addVisible","valueInputRef","setAddVisible","textInputRef","setPopoverOpen","isTemplateItemHovered","setIsTemplateItemHovered","isTemplateMenuHovered","setIsTemplateMenuHovered","isTemplateEditHovered","setIsTemplateEditHovered","isTemplateDeleteHovered","setIsTemplateDeleteHovered","templateMenuOpen","setTemplateMenuOpen","setIsAddVisible","setMessageTextInputValue","numberOfLines","ellipsizeMode","focus","onEditPress","setDeleteMessageTemplateVisible","MessageTemplate","isTemplateHovered","setIsTemplateHovered","isAddHovered","setIsAddHovered","popoverOpen","setSearchText","isCancelHovered","setIsCancelHovered","isSaveHovered","setIsSaveHovered","originalTitle","saveLoading","setSaveLoading","templateData","setTemplateData","searchInputRef","saveMessageTemplate","_titleInputRef$curren","_valueInputRef$curren","messageTemplates","newTitle","handleCancelPressed","arrayFieldData","titleA","titleB","pressed","Arrow","TextInput","underlineColorAndroid","marginHorizontal","animating","textDecorationLine","borderBottomLeftRadius","FileDisplay","onRemove","cover","MessageTextInput","handleSendMessage","messageTextInputHeight","messageTextInputValue","updatedHeight","max","scrollHeight","setMessageTextInputHeight","onContentSizeChange","_event$nativeEvent$co","nativeEvent","contentSize","onKeyPress","key","shiftKey","preventDefault","ChatInputText","activeChatId","isSendHovered","setIsSendHovered","selectedFile","setSelectedFile","selectedFilePreview","setSelectedFilePreview","selectedImage","setSelectedImage","imageUri","setImageUri","fileUri","setFileUri","setFileName","isSendImageHovered","setIsSendImageHovered","isSendAttachmentHovered","setIsSendAttachmentHovered","sendIsLoading","setSendIsLoading","removeImage","removeFile","selectFile","maxFileSize","Platform","OS","reject","onchange","alert","onerror","readAsDataURL","click","fileSize","selectedImageUri","selectImage","dataUrl","addFileMessage","_textInputRef$current","formattedTimeForFile","inputValue","fileUrl","fileRef","uploadResult","sender","url","lastMessageSender","lastMessage","lastMessageDate","customerRead","read","readBy","addImageMessage","_textInputRef$current2","imageUrl","resizedImage","File","lastModified","Date","now","addMessage","_ref20","CancelledView","ChatListItem","onPressNewTab","messageUnread","formattedDate","chatListData","setImageUrl","textFirst","setTextFirst","textLast","setTextLast","isUnreadHovered","setIsUnreadHovered","isOpenNewTabHovered","setIsOpenNewTabHovered","setCustomerData","vehicle","updateChatToUnread","setActiveChatId","setChatMessagesData","setSelectedChatData","carId","docId","participants","customer","loadingCondition","chatStepIconOn","chatStepIconOff","borderRightColor","borderRightWidth","setCarImageUrl","isCancelled","paddingRight","invoiceNumber","openDelay","ChatList","unreadButtonValue","activeButtonValue","selectedCustomerData","chatListLastVisible","loadMoreLoading","noMoreData","chatId","useParams","updateChatToRead","decodedChatId","decodeURIComponent","parts","stockIdPart","emailPart","_selectedChatData$par","docRefVehicle","unsubscribeVehicle","setSelectedVehicleData","setSelectedCustomerData","setChatMessageBoxLoading","messagesRef","messagesQuery","unsubscribeDoc","dataWithId","invoiceDocRef","unsubscribeInvoice","invoiceDocSnapshot","invoiceDataWithId","setInvoiceData","unsubscribeMessages","messages","fetchChatMessages","decryptedChatId","handleChatPress","_ref25","customerId","encryptedChatId","encodedChatId","encodeURIComponent","handleChatPressNewTab","_ref26","fullPath","location","origin","pathname","open","_ref27","formattedTimestamp","givenDate","currentFormattedDate","getFullYear","getMonth","getDate","getTime","startOfWeek","setDate","getDay","setHours","toLocaleDateString","weekday","formatDate","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","removeClippedSubviews","ListFooterComponent","onEndReached","nextQuery","setLoadMoreLoading","setNoMoreData","chatsData","setChatListData","SearchChat","clearVisible","setClearVisible","_searchInputRef$curre","_objectDestructuringEmpty","searchValue","setChatListSearchText","_searchInputRef$curre2","hovered","ModalAddBank","modalAddBankVisible","setModalAddBankVisible","setCancelHovered","setAddHovered","handleModalAddBankClose","bankNameRef","branchNameRef","swiftcodeRef","addressRef","accountHolderRef","accountNumberRef","addBankAccount","_bankNameRef$current","_branchNameRef$curren","_swiftcodeRef$current","_addressRef$current","_accountHolderRef$cur","_accountNumberRef$cur","bankNameValue","elementToAdd","bankName","branchName","swiftCode","accountHolder","accountNumberValue","BankInformation","invoiceData","selectedDueDate","setSelectedDueDate","bankAccountsData","setBankAccountsData","selectedBank","setSelectedBank","paymentTermsRef","_paymentTermsRef$curr","dayOfWeek","adjustedDate","toISOString","bankAccounts","entries","_ref33","_ref34","subscribeToBankAccounts","_ref35","selectedBankName","selectedBankObj","PaymentDetails","fobPriceInput","freightInput","inspectionInput","insuranceInput","totalAmountCalculated","setTotalAmountCalculated","insurance","selectedIncoterms","setSelectedIncoterms","inspection","setInspectionIsChecked","warranty","warrantyIsChecked","additionalNameRef","warrantyPrice","additionalPriceRef","safelyParseNumber","number","CurrencySign","convertedCurrency","baseValue","currency","usdToEur","usdToAud","usdToGbp","usdToCad","calculateTotalAmount","_fobPriceInput$curren","_freightInput$current","_inspectionInput$curr","_insuranceInput$curre","freight","additionalPricesTotal","sum","incotermsCondition","total","round","_insuranceInput$curre2","price","fobPriceDollars","freightCalculation","m3","usdToJpy","jpyToEur","jpyToAud","jpyToGbp","cadToJpy","Checkbox","isChecked","filteredText","lines","filteredLines","filteredLine","SelectPortOfDischarge","countriesDischarge","portsData","setPortsData","nearestPorts","setNearestPorts","selectedPortCountry","setSelectedPortCountry","selectedCountry","selectedPort","setSelectedPort","fetchPorts","sortedPorts","portName","sortOrder","fetchPortsData","selectedCountryData","SelectSalesPerson","selectedSales","setSelectedSales","SelectPortOfDeparture","NotifyPartyInput","accountData","setAccountData","setIsChecked","notifyPartyName","notifyPartyAddress","notifyPartyCity","notifyPartyCountry","notifyPartyContactNumber","notifyPartyFax","notifyPartyEmail","_notifyPartyName$curr","_notifyPartyAddress$c","_notifyPartyCity$curr","_notifyPartyCountry$c","_notifyPartyContactNu","_notifyPartyFax$curre","_notifyPartyEmail$cur","city","ConsigneeInput","consigneeName","consigneeAddress","consigneeCity","consigneeCountry","consigneeContactNumber","consigneeFax","consigneeEmail","fetchAccountData","textStreet","textZip","textPhoneNumber","textEmail","appendSalesInfoDataToCSV","_ref43","_ref42","sales_date","fob","cost_name1","cost1","cost_name2","cost2","cost_name3","cost3","cost_name4","cost4","cost_name5","cost5","coupon_discount","price_discount","subtotal","clients","InputPaymentModalContent","historyModalVisible","setHistoryModalVisible","isConfirmLoading","setIsConfirmLoading","totalAmountString","totalAmountNumber","inputAmountRef","numberFormatOptions","minimumFractionDigits","maximumFractionDigits","useGrouping","totalValue","payments","payment","totalPriceCalculated","_invoiceData$paymentD","_invoiceData$paymentD2","_invoiceData$paymentD3","_invoiceData$paymentD4","_invoiceData$currency","_invoiceData$currency2","_invoiceData$currency3","_invoiceData$currency4","_invoiceData$currency5","_invoiceData$paymentD5","additionalPrices","baseTotal","numericPart","totalUsd","totalEur","totalAud","totalGbp","totalCad","parseDollars","eurToUsd","audToUsd","gbpToUsd","cadToUsd","CurrencySymbol","fullPaymentMessage","messageType","overBalanceMessage","paymentMessage","transactionDate","confirmPayment","amountNeeded","docRefCustomer","formattedSalesDate","newPayments","newPaymentsAccount","vehicleRef","vehicleName","inputAmountFormatOptions","inputAmount","numericInputAmount","formattedInputAmount","ms","salesDataToSubmit","jackall_id","j_id","i","prepareSalesData","overBalance","formattedOverbalanceAmount","increment","paymentsHistory","setTransactionModalVisible","cleanedDateString","padStart","hours","getHours","getMinutes","displayedAmount","Progress","shadow","_filledTrack","underline","handleHistoryModalClose","sortedPayments","dateA","IssueProformaInvoiceModalContent","isConfirmHovered","cfsInputRef","placeOfDeliveryInputRef","invoiceMessage","confirmInvoice","_ref50","yearSuffix","maxNumber","substring","docRefChatId","hashedData","hash","HmacSHA256","Hex","createHmacSha256Hash","updateDocRef","customerEmail","cryptoNumber","_cfsInputRef$current","_placeOfDeliveryInput","ProfitCalculator","totalSCCAmount","setTotalSCCAmount","formattedTotalSCCAmount","setFormattedTotalSCCAmount","totalProfitAmountDollars","setTotalProfitAmountDollars","inputPriceRef","lastFetchedPort","setLastFetchedPort","currentPort","freightOrigPrice","_data$currentPort","kobePrice","nagoyaPrice","yokohamaPrice","kyushuPrice","fee","formattedPurchasedPrice","auctionFee","formattedAuctionFee","transportFee","formattedTransportFee","shippingAgentFee","formattedShippingAgentFee","cubicMeter","costPerCubicMeter","formattedCostPerCubicMeter","totalCubicMeterCostDollars","formattedTotalCubicMeterCostDollars","totalCubicMeterCostYen","formattedTotalCubicMeterCostYen","realTotalPriceYen","formattedRealTotalPriceYen","realTotalPriceDollars","formattedRealTotalPriceDollars","totalPriceCalculation","defaultInputPrice","_inputPriceRef$curren","inputPrice","totalAmountDollars","GenerateCustomInvoice","additionalPriceLocal","additionalNameLocal","invoiceNameExtension","divideInvoice","customInvoiceVisible","invoiceRef","qrCodeRef","capturedImageUri","setCapturedImageUri","setInvoiceNumber","invoiceViewKey","setSelectedCurrencyExchange","issuingDateRef","setIssuingDate","dueDateRef","setDueDate","shippedFromRef","shippedFrom","setShippedFrom","shippedToRef","shippedTo","setShippedTo","placeOfDeliveryRef","setPlaceOfDelivery","cfsRef","setCfs","consigneeNameRef","setConsigneeName","consigneeAddressRef","setConsigneeAddress","consigneeEmailRef","setConsigneeEmail","consigneeContactRef","consigneeContact","setConsigneeContact","consigneeFaxRef","setConsigneeFax","notifyPartyNameRef","setNotifyPartyName","notifyPartyAddressRef","setNotifyPartyAddress","notifyPartyEmailRef","setNotifyPartyEmail","notifyPartyContactRef","notifyPartyContact","setNotifyPartyContact","notifyPartyFaxRef","setNotifyPartyFax","carNameRef","setCarName","specificationsRef","specifications","setSpecifications","itemNoteRef","_useState213","_useState214","itemNote","setItemNote","fobTextRef","_useState215","_useState216","fobText","setFobText","fobPriceRef","_useState217","_useState218","setFobPrice","freightTextRef","_useState219","_useState220","freightText","setFreightText","freightPriceRef","_useState221","_useState222","setFreightPrice","inspectionTextRef","_useState223","_useState224","inspectionText","setInspectionText","inspectionPriceRef","_useState225","_useState226","setInspectionPrice","insuranceTextRef","_useState227","_useState228","insuranceText","setInsuranceText","insurancePriceRef","_useState229","_useState230","setInsurancePrice","totalPriceRef","_useState231","_useState232","totalPrice","setTotalPrice","_useState233","_useState234","setAdditionalName","_useState235","_useState236","setAdditionalPrice","dividedByRef","_useState237","_useState238","dividedBy","setDividedBy","convertedCurrencyCustomInvoice","captureImage","captureRef","quality","createPDF","imageData","html2canvas","toDataURL","pdf","jsPDF","orientation","unit","imgProps","getImageProperties","pdfHeightFit","addImage","imageCompression","imageQuality","save","handleCaptureAndCreatePDF","handleAdditionalNameTextChange","handleAdditionalPriceTextChange","issuingDateString","dueDateString","issuingDateObject","dueDateObject","handleFreightTextChange","handleInspectionTextChange","handleInsuranceTextChange","handleFobTextChange","handleDividedByTextChange","CurrencyPopover","NativePressable","totalAdditionalPrice","setCustomInvoiceVisible","setPreviewInvoiceVisible","QRCode","PreviewInvoice","previewInvoiceVisible","_useState239","_useState240","isPreviewHovered","setIsPreviewHovered","_useState241","_useState242","_useState243","_useState244","_useState245","_useState246","_useState247","_useState248","_useState249","_useState250","setFeaturesTrueCount","_useState251","_useState252","rerenderState","setRerenderState","_useState253","_useState254","imagePreviewKey","captureImageAsync","trueCount","count","field","countTrueValuesInCarData","_ref56","_ref58","write","RNImage","ReopenTransaction","_useState255","_useState256","_useState257","_useState258","isModalVisible","setIsModalVisible","_useState259","_useState260","isYesHovered","setIsYesHovered","_useState261","_useState262","isNoHovered","setIsNoHovered","_useState263","_useState264","handleModalClose","reopenTransactionMessage","_ref59","handleReopenTransaction","_ref60","CancelTransaction","_useState265","_useState266","_useState267","_useState268","_useState269","_useState270","_useState271","_useState272","_useState273","_useState274","sendEmail","_ref61","subject","htmlContent","cancelTransactionMessage","handleCancelTransaction","formattedTimeEmail","ExtendDueDateButton","_useState275","_useState276","_useState277","_useState278","setIsConfirmHovered","_useState279","_useState280","_useState281","_useState282","_useState283","_useState284","_useState285","_useState286","handleConfirm","confirmExtendDueDate","extendDueDateMessage","_ref65","_ref67","_useState287","_useState288","TransactionModal","transactionModalVisible","TransactionButton","_ref69","buttonValue","transactionValue","colorHoverIn","colorHoverOut","_useState289","_useState290","TransactionList","_ref70","displayedTransactions","isArray","transactions","transaction","_useState291","_useState292","stockId","onMouseEnter","onMouseLeave","TransactionHistoryModal","_useState293","_useState294","transactionHistoryVisible","setTransactionHistoryVisible","_useState295","_useState296","setDisplayedTransactions","_useState297","_useState298","loadingMore","setLoadingMore","_useState299","_useState300","onScroll","_ref72","_ref71","layoutMeasurement","contentOffset","isCloseToBottom","nextItems","loadMorePayments","scrollEventThrottle","PaymentHistoryModal","_useState301","_useState302","paymentHistoryVisible","setPaymentHistoryVisible","_useState303","_useState304","displayedPayments","setDisplayedPayments","_useState305","_useState306","_ref74","_ref73","CustomerProfileModal","_useState307","_useState308","customerModalVisible","setCustomerModalVisible","totalPaymentValue","background","Hyperlink","linkDefault","linkStyle","ChatMessageHeader","chatMessagesData","selectedVehicleData","carImageUrl","_useState309","_useState310","reRenderKey","setReRenderKey","_useState311","_useState312","inspectionPriceCondition","insurancePriceCondition","freightPriceYen","UpdateCurrency","_ref75","currencyValue","oldSelectedCurrency","_x14","_invoiceData$paymentD6","_invoiceData$paymentD7","_invoiceData$paymentD8","_invoiceData$paymentD9","_invoiceData$currency6","_invoiceData$currency7","_invoiceData$currency8","_invoiceData$currency9","_invoiceData$currency10","_invoiceData$paymentD10","reservedTo","FontAwesome5","ReadByListModal","_ref76","userEmail","handleReadByListModalClose","readByListModalVisible","flexWrap","ImagePreviewModal","_ref77","isVisible","HoverablePressable","_ref78","_useState313","printComponent","_useState314","isHoveredDownload","setIsHoveredDownload","_useState315","_useState316","Linking","openURL","DocumentPreviewModal","selectedFileUrl","pdfViewerModalVisible","_useState317","_useState318","iframeKey","setIframeKey","_useState319","_useState320","setLoading","handleIframeLoad","printIframe","printWindow","print","timeout","setSelectedFileUrl","clearTimeout","setPdfViewerModalVisible","onLoad","ChatMessageBox","_ref80","loadMoreMessagesLoading","noMoreMessagesData","_useState321","_useState322","isEyeHovered","setIsEyeHovered","flatListRef","_useState323","_useState324","hoveredImageIndex","setHoveredImageIndex","_useState325","_useState326","selectedImageIndex","setSelectedImageIndex","_useState327","_useState328","isPreviewVisible","setIsPreviewVisible","useLocation","handlePopState","handleImageMessageMouseLeave","_useState329","_useState330","handleReadByListModalOpen","setReadByListModalVisible","animatedValue","Animated","Value","loop","sequence","timing","toValue","useNativeDriver","start","interpolate","inputRange","outputRange","handleLoadMoreMessages","_ref81","setLoadMoreMessagesLoading","setNoMoreMessagesData","_ref82","handlePreviewInvoiceModalOpen","match","formattedHours","amPm","substr","extractUsernameFromEmail","_email$split","renderItemText","isGlobalCustomerSender","urlPattern","RegExp","segments","segment","segmentWithBreaks","str","n","insertBreaks","isUrlForText","canOpenURL","supported","getFileIcon","iconSize","lowerFileName","endsWith","_ref83","isLastMessage","textFontSize","handleImageMessageMouseEnter","openPreview","absoluteFillObject","inverted","ReservedStatusViewForHeader","CancelledViewForHeader","_useState331","_useState332","chatMessageBoxLoading","chatListSearchText","_useState333","_useState334","_useState335","_useState336","activeButton","setActiveButton","_useState337","_useState338","setActiveButtonValue","_useState339","_useState340","activeFilterButton","setActiveFilterButton","_useState341","_useState342","setUnreadButtonValue","_useState343","_useState344","readButtonValue","setReadButtonValue","_useState345","_useState346","_useState347","_useState348","unreadCount","setUnreadCount","_useState349","_useState350","setScreenWidth","updateWidth","fetchIpAndCountry","_ref84","fetchedIp","fetchedIpCountry","country_name","unrepliedQuery","handlePress","buttonTitle","buttonTitleValue","queryRef","buildQuery","_projectControlAuth$c","_ref85","_x15","slideAnim","easing","Easing","bezier","_ref86","_useState351","_useState352","horizontal","minWidth","prevState","transform","translateX","defaultSelectedButton","selectedPortForCountry","SearchablePortDropdown","setQuery","isDropdownVisible","setIsDropdownVisible","searchRef","formattedData","ports","collectionName","FreightNavigation","selectedButtonState","setSelectedButtonState","button","setSelectedButton","SelectMethod","portCode","selectedMethod","setSelectedMethod","methodData","toast","useToast","updatePortMethod","methodField","render","formattedPortCode","TouchableHighlight","underlayColor","SelectInspectionIsRequired","countryCode","selectedInspectionIsRequired","setSelectedInspectionIsRequired","inspectionIsRequiredData","updateCountryInspection","inspectionIsRequiredField","formattedCountryCode","countryData","inspectionIsRequired","SelectInspectionName","selectedInspectionName","setSelectedInspectionName","inspectionNameData","updateCountryInspectionName","inspectionNameField","addPort","newCountryData","addCountry","countryName","AddCountryModal","handleAddCountryModalClose","addCountryModalVisible","inputCountryText","addButtonLoading","setAddButtonLoading","handleAddButton","_inputCountryText$cur","_inputCountryText$cur2","setAddCountryModalVisible","inputRef","filteredValue","filterInput","borderBottomRightRadius","NavigatePage","selectedButton","CountriesTable","PortsTable","AddPortsForCountriesModal","handleAddPortsForCountriesModalClose","addPortsForCountriesModalVisible","handleAddPortsForCountriesModalOpen","countryPortsData","setAddPortsForCountriesModalVisible","addPortForCountryField","nearestPortsField","_docSnap$data$formatt","updateCountryPortsField","_x16","DeleteCountryModal","handleDeleteCountryModalClose","deleteCountryModalVisible","buttonLoading","setButtonLoading","handleDeleteCountry","formattedFieldCode","deleteField","inputSearchRef","inputSortOrder","textAreaAddInspectionIsRequired","textAreaAddInspectionName","_inputSearchRef$curre","handleAddCountryModalOpen","setCountryPortsData","updateCountrySortOrder","sortOrderField","_x17","_x18","_x19","handleSortOrderTextChange","handleDeleteCountryModalOpen","setDeleteCountryModalVisible","handleUpdateInsurance","insuranceField","_x20","_x21","_x22","returnKeyType","autoCapitalize","_textAreaAddInspectio4","_textAreaAddInspectio3","borderTopLeftRadius","borderTopRightRadius","BouncyCheckbox","fillColor","unfillColor","innerIconStyle","textStyle","fontFamily","AddPortModal","handleAddPortModalClose","addPortModalVisible","inputPortText","_inputPortText$curren","_inputCountryText$cur3","_inputCountryText$cur4","_inputPortText$curren2","_inputCountryText$cur5","setAddPortModalVisible","DeletePortModal","handleDeletePortModalClose","deletePortModalVisible","handleDeletePort","textAreaAddMethod","inputProfitPrice","inputNagoyaPrice","inputYokohamaPrice","inputKyushuPrice","inputKobePrice","inputMemo","handleProfitPriceTextChange","updatePortsField","_x23","_x24","_x25","_x26","_x27","_inputSearchRef$curre2","profitPrice","handleAddPortModalOpen","handleDeletePortModalOpen","setDeletePortModalVisible","_textAreaAddMethod$cu","Freight","_x28","keyboardShouldPersistTaps","NamePopover","MobileViewDrawer","LogsTable","logsData","setLogsData","handleNextPage","handlePreviousPage","CurrencyConverterComponent","successModalVisible","setSuccessModalVisible","todayCurrency","setTodayCurrency","timestampCurrency","setTimestampCurrency","setExchangeRate","setLastUpdate","CurrencyConverter","rates","JPY","JpyToUsd","yenToDollar","dollarToYen","EUR","GBP","AUD","CAD","yenToEuro","euroToYen","yenToGbp","gbpToYen","yenToAud","audToYen","yenToCad","cadToYen","lastUpdateDate","formattedLastUpdate","hour","minute","second","timeZoneName","newTodayCurrency","currencyRef","eurToJpy","gbpToJpy","audToJpy","jpyToCad","logDataCurrency","handleCloseCurrencyModal","handleCloseSuccessModal","MyBarChart","VictoryChart","theme","VictoryTheme","material","domainPadding","parent","VictoryAxis","axis","stroke","ticks","tickLabels","fill","dependentAxis","VictoryBar","datum","barRatio","Logs","cameraContainer","translateY","cameraView","webcamRef","qrCode","setQrCode","isScanning","setIsScanning","intervalId","setInterval","video","videoWidth","videoHeight","getImageData","jsQR","clearInterval","fetchInvoiceData","smallWidth","smallHeight","smallWidthScaleFactor","smallHeightScaleFactor","Webcam","videoConstraints","facingMode","setIsOpen","useNavigation","handleOpen","handleToggleLogs","handleToggleAddAccount","handleToggleAccountList","handleToggleAddVehicle","handleVehicleList","handleFreight","handleChatMessages","slideAnimation","inOut","ease","onPressOut","onHover","setOnHover","globalCurrentSupplyChainCostsData","globalCurrentStockID","globalSelectedVehicle","globalSelectedVehicleReferenceNumber","globalSelectedCarName","SelectStockStatus","selectedStockStatusValue","setSelectedStockStatusValue","handleSaveStockStatus","stockStatusHistoryData","vehicleProductRef","stockStatusHistory","ImageUploadModal","handleUploadImagesModalClose","handleUploadImages","uploadImagesModalVisible","uploadImagesButtonLoading","UploadImagesModal","fetchImageCounts","setUploadImagesModalVisible","setUploadImagesButtonLoading","closeAll","handleModalSupplyChainsCostsOpen","setVehicleListSupplyChainsCostsData","AllSccModals","vehicleListSupplyChainsCostsData","expenseViewRef","handleSaveSupplyChainsCosts","SCC_Modals","VehicleEditModal","handleEditModalClose","editVehicleModalVisible","EditVehicleModal","setEditVehicleModalVisible","ViewImagesModal","handleViewImagesModalClose","viewImagesModalVisible","viewImagesData","FobPriceHistoryModal","handleFobPriceHistoryClose","fobPriceHistoryModalVisible","FobPriceHistory","setFobPriceHistoryModalVisible","ImageCountComponent","handleViewImagesModalOpen","handleUploadImagesModalOpen","setImageCount","FobPriceInput","formatValueWithCommas","handleSaveFob","fobValue","handleTextChange","VehicleListTable","vehicleListData","setStockIDs","setImageCounts","sortField","setSortField","isSortActive","setIsSortActive","handleSortChange","fetchWithSort","fieldToSortBy","sortDirection","vehicleProductData","setVehicleListData","_ref41","sanitizedSearchQuery","ids","counts","getImageCountInFolder","imageCountsObject","acc","folderPath","folderRef","handleFobPriceHistoryOpen","setFobHistoryData","setViewImagesModalVisible","setViewImagesData","handleSearchEnter","vehicleProductsRef","VehicleList","UsePagination","messageTextInputHeightSlice","createSlice","initialState","reducers","action","payload","messageTextInputValueSlice","carImageUrlSlice","selectedFileUrlSlice","pdfViewerModalVisibleSlice","selectedVehicleDataSlice","selectedCustomerDataSlice","previewInvoiceVisibleSlice","customInvoiceVisibleSlice","transactionModalVisibleSlice","invoiceDataSlice","deleteMessageTemplateVisibleSlice","loadMoreMessagesLoadingSlice","noMoreMessagesDataSlice","readByListModalVisibleSlice","selectedChatDataSlice","chatMessageBoxLoadingSlice","chatMessagesDataSlice","chatListSearchTextSlice","activeChatIdSlice","loadMoreLoadingSlice","noMoreDataSlice","chatListLastVisibleSlice","setChatListLastVisible","chatListDataSlice","chatListImageUrlSlice","setChatListImageUrl","countryPortsDataSlice","addPortsForCountriesModalVisibleSlice","methodDataSlice","setMethodData","inspectionIsRequiredDataSlice","setInspectionIsRequiredData","inspectionNameDataSlice","setInspectionNameData","deletePortModalVisibleSlice","deleteCountryModalVisibleSlice","addPortModalVisibleSlice","addCountryModalVisibleSlice","selectedButtonSlice","freightCountriesDataSlice","setFreightCountriesData","freightPortsDataSlice","setFreightPortsData","fobHistoryDataSlice","inputFobSlice","setInputFob","fobPriceHistoryModalVisibleSlice","editVehicleModalVisibleSlice","vehicleListDataSlice","addVehicleListDataSlice","setAddVehicleListData","supplyChainsCostsModalVisibleSlice","uploadImagesModalVisibleSlice","vehicleListSupplyChainsCostsDataSlice","uploadImagesButtonLoadingSlice","viewImagesModalVisibleSlice","viewImagesDataSlice","lastVisibleSlice","accountListDataSlice","logsDataSlice","stockStatusDataSlice","setStockStatusData","isSuccessModalOpenSlice","isUpdateSuccessModalOpenSlice","loadingModalVisibleSlice","selectedExpenseNameSlice","selectedPaidToSlice","supplyChainsCostsDataSlice","currentDateSlice","setCurrentDate","loginEmailSlice","setLoginEmail","loginAccountTypeSlice","loginNameSlice","modalDeleteImagesVisibleSlice","addAnotherImagesSlice","isAddPhotoVisibleSlice","jpyToUsdSlice","setJpyToUsd","usdToJpySlice","setUsdToJpy","modelDataSlice","makeDataSlice","setMakeData","expenseNameDataSlice","setExpenseNameData","paidToDataSlice","setPaidToData","selectedMakeSlice","setSelectedMake","isLoadingSlice","selectedImagesSlice","portDataSlice","setPortData","transmissionDataSlice","setTransmissionData","fuelDataSlice","setFuelData","buyerDataSlice","setBuyerData","salesDataSlice","setSalesData","driveTypeDataSlice","setDriveTypeData","bodyTypeDataSlice","setBodyTypeData","exteriorColorDataSlice","setExteriorColorData","currentYearSlice","setCurrentYear","deleteImageVisibleSlice","actions","configureStore","reducer","chatListImageUrl","freightPortsData","freightCountriesData","inputFob","addVehicleListData","accountListData","selectedMake","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","fetchCurrency","_snapshot$data","_snapshot$data2","fetchExpenseNameData","_snapshot$data3","fetchPaidToData","_snapshot$data4","paidTo","fetchMakeData","_snapshot$data5","fetchPortData","_snapshot$data6","fetchTransmissionData","_snapshot$data7","fetchFuelData","_snapshot$data8","fetchBuyerData","_snapshot$data9","fetchSalesData","_snapshot$data10","fetchDriveTypeData","_snapshot$data11","fetchBodyTypeData","_snapshot$data12","fetchExteriorColorData","_snapshot$data13","fetchYear","fetchCurrentDate","fetchVehicleListData","fetchMethodData","_snapshot$data14","fetchInspectionIsRequiredData","_snapshot$data15","fetchInspectionNameData","_snapshot$data16","fetchChatListData","projectControlFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","projectExtensionAuth","app","getAnalytics","firebaseAppForCreateUser","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}